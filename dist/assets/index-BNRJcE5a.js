var UA=Object.defineProperty;var GA=Object.getPrototypeOf;var HA=Reflect.get;var sv=n=>{throw TypeError(n)};var jA=(n,e,t)=>e in n?UA(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t;var gt=(n,e,t)=>jA(n,typeof e!="symbol"?e+"":e,t),Qg=(n,e,t)=>e.has(n)||sv("Cannot "+t);var Q=(n,e,t)=>(Qg(n,e,"read from private field"),t?t.call(n):e.get(n)),xe=(n,e,t)=>e.has(n)?sv("Cannot add the same private member more than once"):e instanceof WeakSet?e.add(n):e.set(n,t),Dn=(n,e,t,s)=>(Qg(n,e,"write to private field"),s?s.call(n,t):e.set(n,t),t),Da=(n,e,t)=>(Qg(n,e,"access private method"),t);var rv=(n,e,t)=>HA(GA(n),t,e);function Wb(n,e){for(var t=0;t<e.length;t++){const s=e[t];if(typeof s!="string"&&!Array.isArray(s)){for(const r in s)if(r!=="default"&&!(r in n)){const a=Object.getOwnPropertyDescriptor(s,r);a&&Object.defineProperty(n,r,a.get?a:{enumerable:!0,get:()=>s[r]})}}}return Object.freeze(Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}))}(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))s(r);new MutationObserver(r=>{for(const a of r)if(a.type==="childList")for(const o of a.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&s(o)}).observe(document,{childList:!0,subtree:!0});function t(r){const a={};return r.integrity&&(a.integrity=r.integrity),r.referrerPolicy&&(a.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?a.credentials="include":r.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function s(r){if(r.ep)return;r.ep=!0;const a=t(r);fetch(r.href,a)}})();const av=!1;var om=Array.isArray,qA=Array.prototype.indexOf,Ub=Array.from,KA=Object.defineProperty,Ha=Object.getOwnPropertyDescriptor,XA=Object.getOwnPropertyDescriptors,YA=Object.prototype,ZA=Array.prototype,WI=Object.getPrototypeOf,ov=Object.isExtensible;function fc(n){return typeof n=="function"}const jt=()=>{};function UI(n){for(var e=0;e<n.length;e++)n[e]()}const gr=2,GI=4,im=8,Gb=16,Ta=32,ci=64,rf=128,Rs=256,af=512,xs=1024,Hr=2048,di=4096,ma=8192,um=16384,JA=32768,Eu=65536,QA=1<<19,HI=1<<20,Ry=1<<21,Yi=Symbol("$state"),jI=Symbol("legacy props"),eD=Symbol("");function qI(n){return n===this.v}function tD(n,e){return n!=n?e==e:n!==e||n!==null&&typeof n=="object"||typeof n=="function"}function nD(n,e){return n!==e}function Hb(n){return!tD(n,this.v)}function sD(n){throw new Error("https://svelte.dev/e/effect_in_teardown")}function rD(){throw new Error("https://svelte.dev/e/effect_in_unowned_derived")}function aD(n){throw new Error("https://svelte.dev/e/effect_orphan")}function oD(){throw new Error("https://svelte.dev/e/effect_update_depth_exceeded")}function iD(n){throw new Error("https://svelte.dev/e/props_invalid_value")}function uD(){throw new Error("https://svelte.dev/e/state_descriptors_fixed")}function lD(){throw new Error("https://svelte.dev/e/state_prototype_fixed")}function cD(){throw new Error("https://svelte.dev/e/state_unsafe_mutation")}let dD=!1;const jb=1,qb=2,KI=4,hD=8,pD=16,fD=1,mD=4,gD=8,yD=16,bD=1,xD=2,Zn=Symbol(),wD="http://www.w3.org/1999/xhtml",vD="http://www.w3.org/2000/svg",ID="@attach";function Kb(n){throw new Error("https://svelte.dev/e/lifecycle_outside_component")}let on=null;function iv(n){on=n}function uv(n){return lm().get(n)}function SD(n,e){return lm().set(n,e),e}function kD(n){return lm().has(n)}function ND(){return lm()}function qt(n,e=!1,t){var s=on={p:on,c:null,d:!1,e:null,m:!1,s:n,x:null,l:null};aS(()=>{s.d=!0})}function Kt(n){const e=on;if(e!==null){const o=e.e;if(o!==null){var t=$t,s=St;e.e=null;try{for(var r=0;r<o.length;r++){var a=o[r];Za(a.effect),qr(a.reaction),pm(a.fn)}}finally{Za(t),qr(s)}}on=e.p,e.m=!0}return{}}function XI(){return!0}function lm(n){return on===null&&Kb(),on.c??(on.c=new Map(CD(on)||void 0))}function CD(n){let e=n.p;for(;e!==null;){const t=e.c;if(t!==null)return t;e=e.p}return null}function ts(n){if(typeof n!="object"||n===null||Yi in n)return n;const e=WI(n);if(e!==YA&&e!==ZA)return n;var t=new Map,s=om(n),r=je(0),a=St,o=i=>{var u=St;qr(a);var c=i();return qr(u),c};return s&&t.set("length",je(n.length)),new Proxy(n,{defineProperty(i,u,c){(!("value"in c)||c.configurable===!1||c.enumerable===!1||c.writable===!1)&&uD();var l=t.get(u);return l===void 0?(l=o(()=>je(c.value)),t.set(u,l)):de(l,o(()=>ts(c.value))),!0},deleteProperty(i,u){var c=t.get(u);if(c===void 0)u in i&&(t.set(u,o(()=>je(Zn))),ey(r));else{if(s&&typeof u=="string"){var l=t.get("length"),d=Number(u);Number.isInteger(d)&&d<l.v&&de(l,d)}de(c,Zn),ey(r)}return!0},get(i,u,c){var p;if(u===Yi)return n;var l=t.get(u),d=u in i;if(l===void 0&&(!d||(p=Ha(i,u))!=null&&p.writable)&&(l=o(()=>je(ts(d?i[u]:Zn))),t.set(u,l)),l!==void 0){var h=K(l);return h===Zn?void 0:h}return Reflect.get(i,u,c)},getOwnPropertyDescriptor(i,u){var c=Reflect.getOwnPropertyDescriptor(i,u);if(c&&"value"in c){var l=t.get(u);l&&(c.value=K(l))}else if(c===void 0){var d=t.get(u),h=d==null?void 0:d.v;if(d!==void 0&&h!==Zn)return{enumerable:!0,configurable:!0,value:h,writable:!0}}return c},has(i,u){var h;if(u===Yi)return!0;var c=t.get(u),l=c!==void 0&&c.v!==Zn||Reflect.has(i,u);if(c!==void 0||$t!==null&&(!l||(h=Ha(i,u))!=null&&h.writable)){c===void 0&&(c=o(()=>je(l?ts(i[u]):Zn)),t.set(u,c));var d=K(c);if(d===Zn)return!1}return l},set(i,u,c,l){var b;var d=t.get(u),h=u in i;if(s&&u==="length")for(var p=c;p<d.v;p+=1){var f=t.get(p+"");f!==void 0?de(f,Zn):p in i&&(f=o(()=>je(Zn)),t.set(p+"",f))}d===void 0?(!h||(b=Ha(i,u))!=null&&b.writable)&&(d=o(()=>je(void 0)),de(d,o(()=>ts(c))),t.set(u,d)):(h=d.v!==Zn,de(d,o(()=>ts(c))));var m=Reflect.getOwnPropertyDescriptor(i,u);if(m!=null&&m.set&&m.set.call(l,c),!h){if(s&&typeof u=="string"){var g=t.get("length"),y=Number(u);Number.isInteger(y)&&y>=g.v&&de(g,y+1)}ey(r)}return!0},ownKeys(i){K(r);var u=Reflect.ownKeys(i).filter(d=>{var h=t.get(d);return h===void 0||h.v!==Zn});for(var[c,l]of t)l.v!==Zn&&!(c in i)&&u.push(c);return u},setPrototypeOf(){lD()}})}function ey(n,e=1){de(n,n.v+e)}function cm(n){var e=gr|Hr,t=St!==null&&(St.f&gr)!==0?St:null;return $t===null||t!==null&&(t.f&Rs)!==0?e|=Rs:$t.f|=HI,{ctx:on,deps:null,effects:null,equals:qI,f:e,fn:n,reactions:null,rv:0,v:null,wv:0,parent:t??$t}}function Ue(n){const e=cm(n);return hS(e),e}function of(n){const e=cm(n);return e.equals=Hb,e}function YI(n){var e=n.effects;if(e!==null){n.effects=null;for(var t=0;t<e.length;t+=1)tr(e[t])}}function TD(n){for(var e=n.parent;e!==null;){if((e.f&gr)===0)return e;e=e.parent}return null}function ZI(n){var e,t=$t;Za(TD(n));try{YI(n),e=gS(n)}finally{Za(t)}return e}function JI(n){var e=ZI(n),t=(za||(n.f&Rs)!==0)&&n.deps!==null?di:xs;yr(n,t),n.equals(e)||(n.v=e,n.wv=fS())}const Fc=new Map;function dr(n,e){var t={f:0,v:n,reactions:null,equals:qI,rv:0,wv:0};return t}function je(n,e){const t=dr(n);return hS(t),t}function QI(n,e=!1){const t=dr(n);return e||(t.equals=Hb),t}function de(n,e,t=!1){St!==null&&!fr&&XI()&&(St.f&(gr|Gb))!==0&&!(rs!=null&&rs.includes(n))&&cD();let s=t?ts(e):e;return Oy(n,s)}function Oy(n,e){if(!n.equals(e)){var t=n.v;Ud?Fc.set(n,e):Fc.set(n,t),n.v=e,(n.f&gr)!==0&&((n.f&Hr)!==0&&ZI(n),yr(n,(n.f&Rs)===0?xs:di)),n.wv=fS(),eS(n,Hr),$t!==null&&($t.f&xs)!==0&&($t.f&(Ta|ci))===0&&(Hs===null?zD([n]):Hs.push(n))}return e}function eS(n,e){var t=n.reactions;if(t!==null)for(var s=t.length,r=0;r<s;r++){var a=t[r],o=a.f;(o&Hr)===0&&(yr(a,e),(o&(xs|Rs))!==0&&((o&gr)!==0?eS(a,di):ym(a)))}}let $D=!1;var Fy,tS,nS,sS;function _D(){if(Fy===void 0){Fy=window,tS=/Firefox/.test(navigator.userAgent);var n=Element.prototype,e=Node.prototype,t=Text.prototype;nS=Ha(e,"firstChild").get,sS=Ha(e,"nextSibling").get,ov(n)&&(n.__click=void 0,n.__className=void 0,n.__attributes=null,n.__style=void 0,n.__e=void 0),ov(t)&&(t.__t=void 0)}}function dm(n=""){return document.createTextNode(n)}function du(n){return nS.call(n)}function hm(n){return sS.call(n)}function yt(n,e){return du(n)}function Je(n,e){{var t=du(n);return t instanceof Comment&&t.data===""?hm(t):t}}function vn(n,e=1,t=!1){let s=n;for(;e--;)s=hm(s);return s}function ED(n){n.textContent=""}function rS(n){$t===null&&St===null&&aD(),St!==null&&(St.f&Rs)!==0&&$t===null&&rD(),Ud&&sD()}function AD(n,e){var t=e.last;t===null?e.last=e.first=n:(t.next=n,n.prev=t,e.last=n)}function hi(n,e,t,s=!0){var r=$t,a={ctx:on,deps:null,nodes_start:null,nodes_end:null,f:n|Hr,first:null,fn:e,last:null,next:null,parent:r,prev:null,teardown:null,transitions:null,wv:0};if(t)try{Yb(a),a.f|=JA}catch(u){throw tr(a),u}else e!==null&&ym(a);var o=t&&a.deps===null&&a.first===null&&a.nodes_start===null&&a.teardown===null&&(a.f&(HI|rf))===0;if(!o&&s&&(r!==null&&AD(a,r),St!==null&&(St.f&gr)!==0)){var i=St;(i.effects??(i.effects=[])).push(a)}return a}function DD(){return St!==null&&!fr}function aS(n){const e=hi(im,null,!1);return yr(e,xs),e.teardown=n,e}function Nn(n){rS();var e=$t!==null&&($t.f&Ta)!==0&&on!==null&&!on.m;if(e){var t=on;(t.e??(t.e=[])).push({fn:n,effect:$t,reaction:St})}else{var s=pm(n);return s}}function RD(n){return rS(),fm(n)}function OD(n){const e=hi(ci,n,!0);return()=>{tr(e)}}function FD(n){const e=hi(ci,n,!0);return(t={})=>new Promise(s=>{t.outro?qo(e,()=>{tr(e),s(void 0)}):(tr(e),s(void 0))})}function pm(n){return hi(GI,n,!1)}function fm(n){return hi(im,n,!0)}function Jn(n,e=[],t=cm){const s=e.map(t);return fo(()=>n(...s.map(K)))}function fo(n,e=0){return hi(im|Gb|e,n,!0)}function jr(n,e=!0){return hi(im|Ta,n,!0,e)}function oS(n){var e=n.teardown;if(e!==null){const t=Ud,s=St;lv(!0),qr(null);try{e.call(null)}finally{lv(t),qr(s)}}}function iS(n,e=!1){var t=n.first;for(n.first=n.last=null;t!==null;){var s=t.next;(t.f&ci)!==0?t.parent=null:tr(t,e),t=s}}function PD(n){for(var e=n.first;e!==null;){var t=e.next;(e.f&Ta)===0&&tr(e),e=t}}function tr(n,e=!0){var t=!1;(e||(n.f&QA)!==0)&&n.nodes_start!==null&&(LD(n.nodes_start,n.nodes_end),t=!0),iS(n,e&&!t),df(n,0),yr(n,um);var s=n.transitions;if(s!==null)for(const a of s)a.stop();oS(n);var r=n.parent;r!==null&&r.first!==null&&uS(n),n.next=n.prev=n.teardown=n.ctx=n.deps=n.fn=n.nodes_start=n.nodes_end=null}function LD(n,e){for(;n!==null;){var t=n===e?null:hm(n);n.remove(),n=t}}function uS(n){var e=n.parent,t=n.prev,s=n.next;t!==null&&(t.next=s),s!==null&&(s.prev=t),e!==null&&(e.first===n&&(e.first=s),e.last===n&&(e.last=t))}function qo(n,e){var t=[];Xb(n,t,!0),lS(t,()=>{tr(n),e&&e()})}function lS(n,e){var t=n.length;if(t>0){var s=()=>--t||e();for(var r of n)r.out(s)}else e()}function Xb(n,e,t){if((n.f&ma)===0){if(n.f^=ma,n.transitions!==null)for(const o of n.transitions)(o.is_global||t)&&e.push(o);for(var s=n.first;s!==null;){var r=s.next,a=(s.f&Eu)!==0||(s.f&Ta)!==0;Xb(s,e,a?t:!1),s=r}}}function Pc(n){cS(n,!0)}function cS(n,e){if((n.f&ma)!==0){n.f^=ma,(n.f&xs)===0&&(n.f^=xs),Gd(n)&&(yr(n,Hr),ym(n));for(var t=n.first;t!==null;){var s=t.next,r=(t.f&Eu)!==0||(t.f&Ta)!==0;cS(t,r?e:!1),t=s}if(n.transitions!==null)for(const a of n.transitions)(a.is_global||e)&&a.in()}}let Lc=[],Py=[];function dS(){var n=Lc;Lc=[],UI(n)}function MD(){var n=Py;Py=[],UI(n)}function mm(n){Lc.length===0&&queueMicrotask(dS),Lc.push(n)}function BD(){Lc.length>0&&dS(),Py.length>0&&MD()}let Gp=!1,uf=!1,lf=null,Vo=!1,Ud=!1;function lv(n){Ud=n}let Ac=[];let St=null,fr=!1;function qr(n){St=n}let $t=null;function Za(n){$t=n}let rs=null;function hS(n){St!==null&&St.f&Ry&&(rs===null?rs=[n]:rs.push(n))}let Qn=null,_s=0,Hs=null;function zD(n){Hs=n}let pS=1,cf=0,za=!1;function fS(){return++pS}function Gd(n){var d;var e=n.f;if((e&Hr)!==0)return!0;if((e&di)!==0){var t=n.deps,s=(e&Rs)!==0;if(t!==null){var r,a,o=(e&af)!==0,i=s&&$t!==null&&!za,u=t.length;if(o||i){var c=n,l=c.parent;for(r=0;r<u;r++)a=t[r],(o||!((d=a==null?void 0:a.reactions)!=null&&d.includes(c)))&&(a.reactions??(a.reactions=[])).push(c);o&&(c.f^=af),i&&l!==null&&(l.f&Rs)===0&&(c.f^=Rs)}for(r=0;r<u;r++)if(a=t[r],Gd(a)&&JI(a),a.wv>n.wv)return!0}(!s||$t!==null&&!za)&&yr(n,xs)}return!1}function VD(n,e){for(var t=e;t!==null;){if((t.f&rf)!==0)try{t.fn(n);return}catch{t.f^=rf}t=t.parent}throw Gp=!1,n}function cv(n){return(n.f&um)===0&&(n.parent===null||(n.parent.f&rf)===0)}function gm(n,e,t,s){if(Gp){if(t===null&&(Gp=!1),cv(e))throw n;return}if(t!==null&&(Gp=!0),VD(n,e),cv(e))throw n}function mS(n,e,t=!0){var s=n.reactions;if(s!==null)for(var r=0;r<s.length;r++){var a=s[r];rs!=null&&rs.includes(n)||((a.f&gr)!==0?mS(a,e,!1):e===a&&(t?yr(a,Hr):(a.f&xs)!==0&&yr(a,di),ym(a)))}}function gS(n){var p;var e=Qn,t=_s,s=Hs,r=St,a=za,o=rs,i=on,u=fr,c=n.f;Qn=null,_s=0,Hs=null,za=(c&Rs)!==0&&(fr||!Vo||St===null),St=(c&(Ta|ci))===0?n:null,rs=null,iv(n.ctx),fr=!1,cf++,n.f|=Ry;try{var l=(0,n.fn)(),d=n.deps;if(Qn!==null){var h;if(df(n,_s),d!==null&&_s>0)for(d.length=_s+Qn.length,h=0;h<Qn.length;h++)d[_s+h]=Qn[h];else n.deps=d=Qn;if(!za)for(h=_s;h<d.length;h++)((p=d[h]).reactions??(p.reactions=[])).push(n)}else d!==null&&_s<d.length&&(df(n,_s),d.length=_s);if(XI()&&Hs!==null&&!fr&&d!==null&&(n.f&(gr|di|Hr))===0)for(h=0;h<Hs.length;h++)mS(Hs[h],n);return r!==null&&r!==n&&(cf++,Hs!==null&&(s===null?s=Hs:s.push(...Hs))),l}finally{Qn=e,_s=t,Hs=s,St=r,za=a,rs=o,iv(i),fr=u,n.f^=Ry}}function WD(n,e){let t=e.reactions;if(t!==null){var s=qA.call(t,n);if(s!==-1){var r=t.length-1;r===0?t=e.reactions=null:(t[s]=t[r],t.pop())}}t===null&&(e.f&gr)!==0&&(Qn===null||!Qn.includes(e))&&(yr(e,di),(e.f&(Rs|af))===0&&(e.f^=af),YI(e),df(e,0))}function df(n,e){var t=n.deps;if(t!==null)for(var s=e;s<t.length;s++)WD(n,t[s])}function Yb(n){var e=n.f;if((e&um)===0){yr(n,xs);var t=$t,s=on,r=Vo;$t=n,Vo=!0;try{(e&Gb)!==0?PD(n):iS(n),oS(n);var a=gS(n);n.teardown=typeof a=="function"?a:null,n.wv=pS;var o=n.deps,i;av&&dD&&n.f&Hr}catch(u){gm(u,n,t,s||n.ctx)}finally{Vo=r,$t=t}}}function UD(){try{oD()}catch(n){if(lf!==null)gm(n,lf,null);else throw n}}function yS(){var n=Vo;try{var e=0;for(Vo=!0;Ac.length>0;){e++>1e3&&UD();var t=Ac,s=t.length;Ac=[];for(var r=0;r<s;r++){var a=HD(t[r]);GD(a)}Fc.clear()}}finally{uf=!1,Vo=n,lf=null}}function GD(n){var e=n.length;if(e!==0)for(var t=0;t<e;t++){var s=n[t];if((s.f&(um|ma))===0)try{Gd(s)&&(Yb(s),s.deps===null&&s.first===null&&s.nodes_start===null&&(s.teardown===null?uS(s):s.fn=null))}catch(r){gm(r,s,null,s.ctx)}}}function ym(n){uf||(uf=!0,queueMicrotask(yS));for(var e=lf=n;e.parent!==null;){e=e.parent;var t=e.f;if((t&(ci|Ta))!==0){if((t&xs)===0)return;e.f^=xs}}Ac.push(e)}function HD(n){for(var e=[],t=n;t!==null;){var s=t.f,r=(s&(Ta|ci))!==0,a=r&&(s&xs)!==0;if(!a&&(s&ma)===0){if((s&GI)!==0)e.push(t);else if(r)t.f^=xs;else try{Gd(t)&&Yb(t)}catch(u){gm(u,t,null,t.ctx)}var o=t.first;if(o!==null){t=o;continue}}var i=t.parent;for(t=t.next;t===null&&i!==null;)t=i.next,i=i.parent}return e}function jD(n){for(var e;;){if(BD(),Ac.length===0)return e;uf=!0,yS()}}async function bS(){await Promise.resolve(),jD()}function K(n){var e=n.f,t=(e&gr)!==0;if(St!==null&&!fr){if(!(rs!=null&&rs.includes(n))){var s=St.deps;n.rv<cf&&(n.rv=cf,Qn===null&&s!==null&&s[_s]===n?_s++:Qn===null?Qn=[n]:(!za||!Qn.includes(n))&&Qn.push(n))}}else if(t&&n.deps===null&&n.effects===null){var r=n,a=r.parent;a!==null&&(a.f&Rs)===0&&(r.f^=Rs)}return t&&(r=n,Gd(r)&&JI(r)),Ud&&Fc.has(n)?Fc.get(n):n.v}function Ja(n){var e=fr;try{return fr=!0,n()}finally{fr=e}}const qD=-7169;function yr(n,e){n.f=n.f&qD|e}function KD(n){return n.endsWith("capture")&&n!=="gotpointercapture"&&n!=="lostpointercapture"}const XD=["beforeinput","click","change","dblclick","contextmenu","focusin","focusout","input","keydown","keyup","mousedown","mousemove","mouseout","mouseover","mouseup","pointerdown","pointermove","pointerout","pointerover","pointerup","touchend","touchmove","touchstart"];function YD(n){return XD.includes(n)}const ZD={formnovalidate:"formNoValidate",ismap:"isMap",nomodule:"noModule",playsinline:"playsInline",readonly:"readOnly",defaultvalue:"defaultValue",defaultchecked:"defaultChecked",srcobject:"srcObject",novalidate:"noValidate",allowfullscreen:"allowFullscreen",disablepictureinpicture:"disablePictureInPicture",disableremoteplayback:"disableRemotePlayback"};function JD(n){return n=n.toLowerCase(),ZD[n]??n}const QD=["touchstart","touchmove"];function eR(n){return QD.includes(n)}function tR(n,e){if(e){const t=document.body;n.autofocus=!0,mm(()=>{document.activeElement===t&&n.focus()})}}let dv=!1;function nR(){dv||(dv=!0,document.addEventListener("reset",n=>{Promise.resolve().then(()=>{var e;if(!n.defaultPrevented)for(const t of n.target.elements)(e=t.__on_r)==null||e.call(t)})},{capture:!0}))}function xS(n){var e=St,t=$t;qr(null),Za(null);try{return n()}finally{qr(e),Za(t)}}function sR(n,e,t,s=t){n.addEventListener(e,()=>xS(t));const r=n.__on_r;r?n.__on_r=()=>{r(),s(!0)}:n.__on_r=()=>s(!0),nR()}const wS=new Set,Ly=new Set;function Zb(n,e,t,s={}){function r(a){if(s.capture||Sc.call(e,a),!a.cancelBubble)return xS(()=>t==null?void 0:t.call(this,a))}return n.startsWith("pointer")||n.startsWith("touch")||n==="wheel"?mm(()=>{e.addEventListener(n,r,s)}):e.addEventListener(n,r,s),r}function ys(n,e,t,s={}){var r=Zb(e,n,t,s);return()=>{n.removeEventListener(e,r,s)}}function rR(n,e,t,s,r){var a={capture:s,passive:r},o=Zb(n,e,t,a);(e===document.body||e===window||e===document)&&aS(()=>{e.removeEventListener(n,o,a)})}function vS(n){for(var e=0;e<n.length;e++)wS.add(n[e]);for(var t of Ly)t(n)}function Sc(n){var b;var e=this,t=e.ownerDocument,s=n.type,r=((b=n.composedPath)==null?void 0:b.call(n))||[],a=r[0]||n.target,o=0,i=n.__root;if(i){var u=r.indexOf(i);if(u!==-1&&(e===document||e===window)){n.__root=e;return}var c=r.indexOf(e);if(c===-1)return;u<=c&&(o=u)}if(a=r[o]||n.target,a!==e){KA(n,"currentTarget",{configurable:!0,get(){return a||t}});var l=St,d=$t;qr(null),Za(null);try{for(var h,p=[];a!==null;){var f=a.assignedSlot||a.parentNode||a.host||null;try{var m=a["__"+s];if(m!=null&&(!a.disabled||n.target===a))if(om(m)){var[g,...y]=m;g.apply(a,[n,...y])}else m.call(a,n)}catch(x){h?p.push(x):h=x}if(n.cancelBubble||f===e||f===null)break;a=f}if(h){for(let x of p)queueMicrotask(()=>{throw x});throw h}}finally{n.__root=e,delete n.currentTarget,qr(l),Za(d)}}}function IS(n){var e=document.createElement("template");return e.innerHTML=n.replaceAll("<!>","<!---->"),e.content}function Mc(n,e){var t=$t;t.nodes_start===null&&(t.nodes_start=n,t.nodes_end=e)}function mn(n,e){var t=(e&bD)!==0,s=(e&xD)!==0,r,a=!n.startsWith("<!>");return()=>{r===void 0&&(r=IS(a?n:"<!>"+n),t||(r=du(r)));var o=s||tS?document.importNode(r,!0):r.cloneNode(!0);if(t){var i=du(o),u=o.lastChild;Mc(i,u)}else Mc(o,o);return o}}function aR(n,e,t="svg"){var s=!n.startsWith("<!>"),r=`<${t}>${s?n:"<!>"+n}</${t}>`,a;return()=>{if(!a){var o=IS(r),i=du(o);a=du(i)}var u=a.cloneNode(!0);return Mc(u,u),u}}function oR(n,e){return aR(n,e,"svg")}function pt(){var n=document.createDocumentFragment(),e=document.createComment(""),t=dm();return n.append(e,t),Mc(e,t),n}function De(n,e){n!==null&&n.before(e)}function Dr(n,e){var t=e==null?"":typeof e=="object"?e+"":e;t!==(n.__t??(n.__t=n.nodeValue))&&(n.__t=t,n.nodeValue=t+"")}function SS(n,e){return iR(n,e)}const Mi=new Map;function iR(n,{target:e,anchor:t,props:s={},events:r,context:a,intro:o=!0}){_D();var i=new Set,u=d=>{for(var h=0;h<d.length;h++){var p=d[h];if(!i.has(p)){i.add(p);var f=eR(p);e.addEventListener(p,Sc,{passive:f});var m=Mi.get(p);m===void 0?(document.addEventListener(p,Sc,{passive:f}),Mi.set(p,1)):Mi.set(p,m+1)}}};u(Ub(wS)),Ly.add(u);var c=void 0,l=FD(()=>{var d=t??e.appendChild(dm());return jr(()=>{if(a){qt({});var h=on;h.c=a}r&&(s.$$events=r),c=n(d,s)||{},a&&Kt()}),()=>{var f;for(var h of i){e.removeEventListener(h,Sc);var p=Mi.get(h);--p===0?(document.removeEventListener(h,Sc),Mi.delete(h)):Mi.set(h,p)}Ly.delete(u),d!==t&&((f=d.parentNode)==null||f.removeChild(d))}});return My.set(c,l),c}let My=new WeakMap;function uR(n,e){const t=My.get(n);return t?(My.delete(n),t(e)):Promise.resolve()}function In(n,e,[t,s]=[0,0]){var r=n,a=null,o=null,i=Zn,u=t>0?Eu:0,c=!1;const l=(h,p=!0)=>{c=!0,d(p,h)},d=(h,p)=>{i!==(i=h)&&(i?(a?Pc(a):p&&(a=jr(()=>p(r))),o&&qo(o,()=>{o=null})):(o?Pc(o):p&&(o=jr(()=>p(r,[t+1,s]))),a&&qo(a,()=>{a=null})))};fo(()=>{c=!1,e(l),c||d(null,null)},u)}function lR(n,e,t){var s=n,r=Zn,a,o=nD;fo(()=>{o(r,r=e())&&(a&&qo(a),a=jr(()=>t(s)))})}function Ui(n,e){return e}function cR(n,e,t,s){for(var r=[],a=e.length,o=0;o<a;o++)Xb(e[o].e,r,!0);var i=a>0&&r.length===0&&t!==null;if(i){var u=t.parentNode;ED(u),u.append(t),s.clear(),Fa(n,e[0].prev,e[a-1].next)}lS(r,()=>{for(var c=0;c<a;c++){var l=e[c];i||(s.delete(l.k),Fa(n,l.prev,l.next)),tr(l.e,!i)}})}function Gi(n,e,t,s,r,a=null){var o=n,i={flags:e,items:new Map,first:null},u=(e&KI)!==0;if(u){var c=n;o=c.appendChild(dm())}var l=null,d=!1,h=of(()=>{var p=t();return om(p)?p:p==null?[]:Ub(p)});fo(()=>{var p=K(h),f=p.length;d&&f===0||(d=f===0,dR(p,i,o,r,e,s,t),a!==null&&(f===0?l?Pc(l):l=jr(()=>a(o)):l!==null&&qo(l,()=>{l=null})),K(h))})}function dR(n,e,t,s,r,a,o){var R,F,z,H;var i=(r&hD)!==0,u=(r&(jb|qb))!==0,c=n.length,l=e.items,d=e.first,h=d,p,f=null,m,g=[],y=[],b,x,w,v;if(i)for(v=0;v<c;v+=1)b=n[v],x=a(b,v),w=l.get(x),w!==void 0&&((R=w.a)==null||R.measure(),(m??(m=new Set)).add(w));for(v=0;v<c;v+=1){if(b=n[v],x=a(b,v),w=l.get(x),w===void 0){var S=h?h.e.nodes_start:t;f=pR(S,e,f,f===null?e.first:f.next,b,x,v,s,r,o),l.set(x,f),g=[],y=[],h=f.next;continue}if(u&&hR(w,b,v,r),(w.e.f&ma)!==0&&(Pc(w.e),i&&((F=w.a)==null||F.unfix(),(m??(m=new Set)).delete(w))),w!==h){if(p!==void 0&&p.has(w)){if(g.length<y.length){var N=y[0],$;f=N.prev;var T=g[0],C=g[g.length-1];for($=0;$<g.length;$+=1)hv(g[$],N,t);for($=0;$<y.length;$+=1)p.delete(y[$]);Fa(e,T.prev,C.next),Fa(e,f,T),Fa(e,C,N),h=N,f=C,v-=1,g=[],y=[]}else p.delete(w),hv(w,h,t),Fa(e,w.prev,w.next),Fa(e,w,f===null?e.first:f.next),Fa(e,f,w),f=w;continue}for(g=[],y=[];h!==null&&h.k!==x;)(h.e.f&ma)===0&&(p??(p=new Set)).add(h),y.push(h),h=h.next;if(h===null)continue;w=h}g.push(w),f=w,h=w.next}if(h!==null||p!==void 0){for(var k=p===void 0?[]:Ub(p);h!==null;)(h.e.f&ma)===0&&k.push(h),h=h.next;var A=k.length;if(A>0){var D=(r&KI)!==0&&c===0?t:null;if(i){for(v=0;v<A;v+=1)(z=k[v].a)==null||z.measure();for(v=0;v<A;v+=1)(H=k[v].a)==null||H.fix()}cR(e,k,D,l)}}i&&mm(()=>{var P;if(m!==void 0)for(w of m)(P=w.a)==null||P.apply()}),$t.first=e.first&&e.first.e,$t.last=f&&f.e}function hR(n,e,t,s){(s&jb)!==0&&Oy(n.v,e),(s&qb)!==0?Oy(n.i,t):n.i=t}function pR(n,e,t,s,r,a,o,i,u,c){var l=(u&jb)!==0,d=(u&pD)===0,h=l?d?QI(r):dr(r):r,p=(u&qb)===0?o:dr(o),f={i:p,v:h,k:a,a:null,e:null,prev:t,next:s};try{return f.e=jr(()=>i(n,h,p,c),$D),f.e.prev=t&&t.e,f.e.next=s&&s.e,t===null?e.first=f:(t.next=f,t.e.next=f.e),s!==null&&(s.prev=f,s.e.prev=f.e),f}finally{}}function hv(n,e,t){for(var s=n.next?n.next.e.nodes_start:t,r=e?e.e.nodes_start:t,a=n.e.nodes_start;a!==s;){var o=hm(a);r.before(a),a=o}}function Fa(n,e,t){e===null?n.first=t:(e.next=t,e.e.next=t&&t.e),t!==null&&(t.prev=e,t.e.prev=e&&e.e)}function Ot(n,e,...t){var s=n,r=jt,a;fo(()=>{r!==(r=e())&&(a&&(tr(a),a=null),a=jr(()=>r(s,...t)))},Eu)}function mc(n,e,t){var s=n,r,a;fo(()=>{r!==(r=e())&&(a&&(qo(a),a=null),r&&(a=jr(()=>t(s,r))))},Eu)}function fR(n,e,t,s,r,a){var o,i,u=null,c=n,l;fo(()=>{const d=e()||null;var h=vD;d!==o&&(l&&(d===null?qo(l,()=>{l=null,i=null}):d===i?Pc(l):tr(l)),d&&d!==i&&(l=jr(()=>{if(u=document.createElementNS(h,d),Mc(u,u),s){var p=u.appendChild(dm());s(u,p)}$t.nodes_end=u,c.before(u)})),o=d,o&&(i=o))},Eu)}function mR(n,e){var t=void 0,s;fo(()=>{t!==(t=e())&&(s&&(tr(s),s=null),t&&(s=jr(()=>{pm(()=>t(n))})))})}function kS(n){var e,t,s="";if(typeof n=="string"||typeof n=="number")s+=n;else if(typeof n=="object")if(Array.isArray(n)){var r=n.length;for(e=0;e<r;e++)n[e]&&(t=kS(n[e]))&&(s&&(s+=" "),s+=t)}else for(t in n)n[t]&&(s&&(s+=" "),s+=t);return s}function Hp(){for(var n,e,t=0,s="",r=arguments.length;t<r;t++)(n=arguments[t])&&(e=kS(n))&&(s&&(s+=" "),s+=e);return s}function gR(n){return typeof n=="object"?Hp(n):n??""}const pv=[...` 	
\r\f \v\uFEFF`];function yR(n,e,t){var s=n==null?"":""+n;if(t){for(var r in t)if(t[r])s=s?s+" "+r:r;else if(s.length)for(var a=r.length,o=0;(o=s.indexOf(r,o))>=0;){var i=o+a;(o===0||pv.includes(s[o-1]))&&(i===s.length||pv.includes(s[i]))?s=(o===0?"":s.substring(0,o))+s.substring(i+1):o=i}}return s===""?null:s}function fv(n,e=!1){var t=e?" !important;":";",s="";for(var r in n){var a=n[r];a!=null&&a!==""&&(s+=" "+r+": "+a+t)}return s}function ty(n){return n[0]!=="-"||n[1]!=="-"?n.toLowerCase():n}function bR(n,e){if(e){var t="",s,r;if(Array.isArray(e)?(s=e[0],r=e[1]):s=e,n){n=String(n).replaceAll(/\s*\/\*.*?\*\/\s*/g,"").trim();var a=!1,o=0,i=!1,u=[];s&&u.push(...Object.keys(s).map(ty)),r&&u.push(...Object.keys(r).map(ty));var c=0,l=-1;const m=n.length;for(var d=0;d<m;d++){var h=n[d];if(i?h==="/"&&n[d-1]==="*"&&(i=!1):a?a===h&&(a=!1):h==="/"&&n[d+1]==="*"?i=!0:h==='"'||h==="'"?a=h:h==="("?o++:h===")"&&o--,!i&&a===!1&&o===0){if(h===":"&&l===-1)l=d;else if(h===";"||d===m-1){if(l!==-1){var p=ty(n.substring(c,l).trim());if(!u.includes(p)){h!==";"&&d++;var f=n.substring(c,d).trim();t+=" "+f+";"}}c=d+1,l=-1}}}}return s&&(t+=fv(s)),r&&(t+=fv(r,!0)),t=t.trim(),t===""?null:t}return n==null?null:String(n)}function NS(n,e,t,s,r,a){var o=n.__className;if(o!==t||o===void 0){var i=yR(t,s,a);i==null?n.removeAttribute("class"):e?n.className=i:n.setAttribute("class",i),n.__className=t}else if(a&&r!==a)for(var u in a){var c=!!a[u];(r==null||c!==!!r[u])&&n.classList.toggle(u,c)}return a}function ny(n,e={},t,s){for(var r in t){var a=t[r];e[r]!==a&&(t[r]==null?n.style.removeProperty(r):n.style.setProperty(r,a,s))}}function xR(n,e,t,s){var r=n.__style;if(r!==e){var a=bR(e,s);a==null?n.removeAttribute("style"):n.style.cssText=a,n.__style=e}else s&&(Array.isArray(s)?(ny(n,t==null?void 0:t[0],s[0]),ny(n,t==null?void 0:t[1],s[1],"important")):ny(n,t,s));return s}const gc=Symbol("class"),yc=Symbol("style"),CS=Symbol("is custom element"),TS=Symbol("is html");function wR(n,e){e?n.hasAttribute("selected")||n.setAttribute("selected",""):n.removeAttribute("selected")}function hf(n,e,t,s){var r=$S(n);r[e]!==(r[e]=t)&&(e==="loading"&&(n[eD]=t),t==null?n.removeAttribute(e):typeof t!="string"&&_S(n).includes(e)?n[e]=t:n.setAttribute(e,t))}function Va(n,e,t,s,r=!1){var a=$S(n),o=a[CS],i=!a[TS],u=e||{},c=n.tagName==="OPTION";for(var l in e)l in t||(t[l]=null);t.class?t.class=gR(t.class):t[gc]&&(t.class=null),t[yc]&&(t.style??(t.style=null));var d=_S(n);for(const x in t){let w=t[x];if(c&&x==="value"&&w==null){n.value=n.__value="",u[x]=w;continue}if(x==="class"){var h=n.namespaceURI==="http://www.w3.org/1999/xhtml";NS(n,h,w,s,e==null?void 0:e[gc],t[gc]),u[x]=w,u[gc]=t[gc];continue}if(x==="style"){xR(n,w,e==null?void 0:e[yc],t[yc]),u[x]=w,u[yc]=t[yc];continue}var p=u[x];if(w!==p){u[x]=w;var f=x[0]+x[1];if(f!=="$$")if(f==="on"){const v={},S="$$"+x;let N=x.slice(2);var m=YD(N);if(KD(N)&&(N=N.slice(0,-7),v.capture=!0),!m&&p){if(w!=null)continue;n.removeEventListener(N,u[S],v),u[S]=null}if(w!=null)if(m)n[`__${N}`]=w,vS([N]);else{let $=function(T){u[x].call(this,T)};var b=$;u[S]=Zb(N,n,$,v)}else m&&(n[`__${N}`]=void 0)}else if(x==="style")hf(n,x,w);else if(x==="autofocus")tR(n,!!w);else if(!o&&(x==="__value"||x==="value"&&w!=null))n.value=n.__value=w;else if(x==="selected"&&c)wR(n,w);else{var g=x;i||(g=JD(g));var y=g==="defaultValue"||g==="defaultChecked";if(w==null&&!o&&!y)if(a[x]=null,g==="value"||g==="checked"){let v=n;const S=e===void 0;if(g==="value"){let N=v.defaultValue;v.removeAttribute(g),v.defaultValue=N,v.value=v.__value=S?N:null}else{let N=v.defaultChecked;v.removeAttribute(g),v.defaultChecked=N,v.checked=S?N:!1}}else n.removeAttribute(x);else y||d.includes(g)&&(o||typeof w!="string")?n[g]=w:typeof w!="function"&&hf(n,g,w)}}}for(let x of Object.getOwnPropertySymbols(t))x.description===ID&&mR(n,()=>t[x]);return u}function $S(n){return n.__attributes??(n.__attributes={[CS]:n.nodeName.includes("-"),[TS]:n.namespaceURI===wD})}var mv=new Map;function _S(n){var e=mv.get(n.nodeName);if(e)return e;mv.set(n.nodeName,e=[]);for(var t,s=n,r=Element.prototype;r!==s;){t=XA(s);for(var a in t)t[a].set&&e.push(a);s=WI(s)}return e}function vR(n,e,t=e){sR(n,"input",s=>{var r=s?n.defaultValue:n.value;if(r=sy(n)?ry(r):r,t(r),r!==(r=e())){var a=n.selectionStart,o=n.selectionEnd;n.value=r??"",o!==null&&(n.selectionStart=a,n.selectionEnd=Math.min(o,n.value.length))}}),Ja(e)==null&&n.value&&t(sy(n)?ry(n.value):n.value),fm(()=>{var s=e();sy(n)&&s===ry(n.value)||n.type==="date"&&!s&&!n.value||s!==n.value&&(n.value=s??"")})}function sy(n){var e=n.type;return e==="number"||e==="range"}function ry(n){return n===""?null:+n}function gv(n,e){return n===e||(n==null?void 0:n[Yi])===e}function IR(n={},e,t,s){return pm(()=>{var r,a;return fm(()=>{r=a,a=[],Ja(()=>{n!==t(...a)&&(e(n,...a),r&&gv(t(...r),n)&&e(null,...r))})}),()=>{mm(()=>{a&&gv(t(...a),n)&&e(null,...a)})}}),n}let kp=!1;function SR(n){var e=kp;try{return kp=!1,[n(),kp]}finally{kp=e}}const kR={get(n,e){if(!n.exclude.includes(e))return n.props[e]},set(n,e){return!1},getOwnPropertyDescriptor(n,e){if(!n.exclude.includes(e)&&e in n.props)return{enumerable:!0,configurable:!0,value:n.props[e]}},has(n,e){return n.exclude.includes(e)?!1:e in n.props},ownKeys(n){return Reflect.ownKeys(n.props).filter(e=>!n.exclude.includes(e))}};function kr(n,e,t){return new Proxy({props:n,exclude:e},kR)}const NR={get(n,e){let t=n.props.length;for(;t--;){let s=n.props[t];if(fc(s)&&(s=s()),typeof s=="object"&&s!==null&&e in s)return s[e]}},set(n,e,t){let s=n.props.length;for(;s--;){let r=n.props[s];fc(r)&&(r=r());const a=Ha(r,e);if(a&&a.set)return a.set(t),!0}return!1},getOwnPropertyDescriptor(n,e){let t=n.props.length;for(;t--;){let s=n.props[t];if(fc(s)&&(s=s()),typeof s=="object"&&s!==null&&e in s){const r=Ha(s,e);return r&&!r.configurable&&(r.configurable=!0),r}}},has(n,e){if(e===Yi||e===jI)return!1;for(let t of n.props)if(fc(t)&&(t=t()),t!=null&&e in t)return!0;return!1},ownKeys(n){const e=[];for(let t of n.props)if(fc(t)&&(t=t()),!!t){for(const s in t)e.includes(s)||e.push(s);for(const s of Object.getOwnPropertySymbols(t))e.includes(s)||e.push(s)}return e}};function xa(...n){return new Proxy({props:n},NR)}function yv(n){var e;return((e=n.ctx)==null?void 0:e.d)??!1}function ye(n,e,t,s){var v;var r=(t&fD)!==0,a=!0,o=(t&gD)!==0,i=(t&yD)!==0,u=!1,c;o?[c,u]=SR(()=>n[e]):c=n[e];var l=Yi in n||jI in n,d=o&&(((v=Ha(n,e))==null?void 0:v.set)??(l&&e in n&&(S=>n[e]=S)))||void 0,h=s,p=!0,f=!1,m=()=>(f=!0,p&&(p=!1,i?h=Ja(s):h=s),h);c===void 0&&s!==void 0&&(d&&a&&iD(),c=m(),d&&d(c));var g;if(g=()=>{var S=n[e];return S===void 0?m():(p=!0,f=!1,S)},(t&mD)===0)return g;if(d){var y=n.$$legacy;return function(S,N){return arguments.length>0?((!N||y||u)&&d(N?g():S),S):g()}}var b=!1,x=QI(c),w=cm(()=>{var S=g(),N=K(x);return b?(b=!1,N):x.v=S});return o&&K(w),r||(w.equals=Hb),function(S,N){if(arguments.length>0){const $=N?K(w):o?ts(S):S;if(!w.equals($)){if(b=!0,de(x,$),f&&h!==void 0&&(h=$),yv(w))return S;Ja(()=>K(w))}return S}return yv(w)?w.v:K(w)}}function ES(n){on===null&&Kb(),Nn(()=>{const e=Ja(n);if(typeof e=="function")return e})}function CR(n,e,{bubbles:t=!1,cancelable:s=!1}={}){return new CustomEvent(n,{detail:e,bubbles:t,cancelable:s})}function TR(){const n=on;return n===null&&Kb(),(e,t,s)=>{var a;const r=(a=n.s.$$events)==null?void 0:a[e];if(r){const o=om(r)?r.slice():[r],i=CR(e,t,s);for(const u of o)u.call(n.x,i);return!i.defaultPrevented}return!0}}const $R="5";var VI;typeof window<"u"&&((VI=window.__svelte??(window.__svelte={})).v??(VI.v=new Set)).add($R);function _R(n){return typeof n=="function"}function ER(n){return n!==null&&typeof n=="object"}const AR=["string","number","bigint","boolean"];function By(n){return n==null||AR.includes(typeof n)?!0:Array.isArray(n)?n.every(e=>By(e)):typeof n=="object"?Object.getPrototypeOf(n)===Object.prototype:!1}const Bc=Symbol("box"),Jb=Symbol("is-writable");function DR(n){return ER(n)&&Bc in n}function RR(n){return ce.isBox(n)&&Jb in n}function ce(n){let e=je(ts(n));return{[Bc]:!0,[Jb]:!0,get current(){return K(e)},set current(t){de(e,t,!0)}}}function OR(n,e){const t=Ue(n);return e?{[Bc]:!0,[Jb]:!0,get current(){return K(t)},set current(s){e(s)}}:{[Bc]:!0,get current(){return n()}}}function FR(n){return ce.isBox(n)?n:_R(n)?ce.with(n):ce(n)}function PR(n){return Object.entries(n).reduce((e,[t,s])=>ce.isBox(s)?(ce.isWritableBox(s)?Object.defineProperty(e,t,{get(){return s.current},set(r){s.current=r}}):Object.defineProperty(e,t,{get(){return s.current}}),e):Object.assign(e,{[t]:s}),{})}function LR(n){return ce.isWritableBox(n)?{[Bc]:!0,get current(){return n.current}}:n}ce.from=FR;ce.with=OR;ce.flatten=PR;ce.readonly=LR;ce.isBox=DR;ce.isWritableBox=RR;function AS(...n){return function(e){var t;for(const s of n)if(s){if(e.defaultPrevented)return;typeof s=="function"?s.call(this,e):(t=s.current)==null||t.call(this,e)}}}var bv=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function bm(n){return n&&n.__esModule&&Object.prototype.hasOwnProperty.call(n,"default")?n.default:n}function MR(n){if(Object.prototype.hasOwnProperty.call(n,"__esModule"))return n;var e=n.default;if(typeof e=="function"){var t=function s(){return this instanceof s?Reflect.construct(e,arguments,this.constructor):e.apply(this,arguments)};t.prototype=e.prototype}else t={};return Object.defineProperty(t,"__esModule",{value:!0}),Object.keys(n).forEach(function(s){var r=Object.getOwnPropertyDescriptor(n,s);Object.defineProperty(t,s,r.get?r:{enumerable:!0,get:function(){return n[s]}})}),t}var Bi={},ay,xv;function BR(){if(xv)return ay;xv=1;var n=/\/\*[^*]*\*+([^/*][^*]*\*+)*\//g,e=/\n/g,t=/^\s*/,s=/^(\*?[-#/*\\\w]+(\[[0-9a-z_-]+\])?)\s*/,r=/^:\s*/,a=/^((?:'(?:\\'|.)*?'|"(?:\\"|.)*?"|\([^)]*?\)|[^};])+)/,o=/^[;\s]*/,i=/^\s+|\s+$/g,u=`
`,c="/",l="*",d="",h="comment",p="declaration";ay=function(m,g){if(typeof m!="string")throw new TypeError("First argument must be a string");if(!m)return[];g=g||{};var y=1,b=1;function x(D){var R=D.match(e);R&&(y+=R.length);var F=D.lastIndexOf(u);b=~F?D.length-F:b+D.length}function w(){var D={line:y,column:b};return function(R){return R.position=new v(D),$(),R}}function v(D){this.start=D,this.end={line:y,column:b},this.source=g.source}v.prototype.content=m;function S(D){var R=new Error(g.source+":"+y+":"+b+": "+D);if(R.reason=D,R.filename=g.source,R.line=y,R.column=b,R.source=m,!g.silent)throw R}function N(D){var R=D.exec(m);if(R){var F=R[0];return x(F),m=m.slice(F.length),R}}function $(){N(t)}function T(D){var R;for(D=D||[];R=C();)R!==!1&&D.push(R);return D}function C(){var D=w();if(!(c!=m.charAt(0)||l!=m.charAt(1))){for(var R=2;d!=m.charAt(R)&&(l!=m.charAt(R)||c!=m.charAt(R+1));)++R;if(R+=2,d===m.charAt(R-1))return S("End of comment missing");var F=m.slice(2,R-2);return b+=2,x(F),m=m.slice(R),b+=2,D({type:h,comment:F})}}function k(){var D=w(),R=N(s);if(R){if(C(),!N(r))return S("property missing ':'");var F=N(a),z=D({type:p,property:f(R[0].replace(n,d)),value:F?f(F[0].replace(n,d)):d});return N(o),z}}function A(){var D=[];T(D);for(var R;R=k();)R!==!1&&(D.push(R),T(D));return D}return $(),A()};function f(m){return m?m.replace(i,d):d}return ay}var wv;function zR(){if(wv)return Bi;wv=1;var n=Bi&&Bi.__importDefault||function(s){return s&&s.__esModule?s:{default:s}};Object.defineProperty(Bi,"__esModule",{value:!0}),Bi.default=t;var e=n(BR());function t(s,r){var a=null;if(!s||typeof s!="string")return a;var o=(0,e.default)(s),i=typeof r=="function";return o.forEach(function(u){if(u.type==="declaration"){var c=u.property,l=u.value;i?r(c,l,u):l&&(a=a||{},a[c]=l)}}),a}return Bi}var VR=zR();const vv=bm(VR),WR=vv.default||vv,UR=/\d/,GR=["-","_","/","."];function HR(n=""){if(!UR.test(n))return n!==n.toLowerCase()}function jR(n){const e=[];let t="",s,r;for(const a of n){const o=GR.includes(a);if(o===!0){e.push(t),t="",s=void 0;continue}const i=HR(a);if(r===!1){if(s===!1&&i===!0){e.push(t),t=a,s=i;continue}if(s===!0&&i===!1&&t.length>1){const u=t.at(-1);e.push(t.slice(0,Math.max(0,t.length-1))),t=u+a,s=i;continue}}t+=a,s=i,r=o}return e.push(t),e}function DS(n){return n?jR(n).map(e=>KR(e)).join(""):""}function qR(n){return XR(DS(n||""))}function KR(n){return n?n[0].toUpperCase()+n.slice(1):""}function XR(n){return n?n[0].toLowerCase()+n.slice(1):""}function kc(n){if(!n)return{};const e={};function t(s,r){if(s.startsWith("-moz-")||s.startsWith("-webkit-")||s.startsWith("-ms-")||s.startsWith("-o-")){e[DS(s)]=r;return}if(s.startsWith("--")){e[s]=r;return}e[qR(s)]=r}return WR(n,t),e}function Wo(...n){return(...e)=>{for(const t of n)typeof t=="function"&&t(...e)}}function YR(n,e){const t=RegExp(n,"g");return s=>{if(typeof s!="string")throw new TypeError(`expected an argument of type string, but got ${typeof s}`);return s.match(t)?s.replace(t,e):s}}const ZR=YR(/[A-Z]/,n=>`-${n.toLowerCase()}`);function JR(n){if(!n||typeof n!="object"||Array.isArray(n))throw new TypeError(`expected an argument of type object, but got ${typeof n}`);return Object.keys(n).map(e=>`${ZR(e)}: ${n[e]};`).join(`
`)}function Qb(n={}){return JR(n).replace(`
`," ")}const QR={position:"absolute",width:"1px",height:"1px",padding:"0",margin:"-1px",overflow:"hidden",clip:"rect(0, 0, 0, 0)",whiteSpace:"nowrap",borderWidth:"0",transform:"translateX(-100%)"};Qb(QR);function eO(n){var e;return n.length>2&&n.startsWith("on")&&n[2]===((e=n[2])==null?void 0:e.toLowerCase())}function Uo(...n){const e={...n[0]};for(let t=1;t<n.length;t++){const s=n[t];for(const r in s){const a=e[r],o=s[r],i=typeof a=="function",u=typeof o=="function";if(i&&eO(r)){const c=a,l=o;e[r]=AS(c,l)}else if(i&&u)e[r]=Wo(a,o);else if(r==="class"){const c=By(a),l=By(o);c&&l?e[r]=Hp(a,o):c?e[r]=Hp(a):l&&(e[r]=Hp(o))}else if(r==="style"){const c=typeof a=="object",l=typeof o=="object",d=typeof a=="string",h=typeof o=="string";if(c&&l)e[r]={...a,...o};else if(c&&h){const p=kc(o);e[r]={...a,...p}}else if(d&&l){const p=kc(a);e[r]={...p,...o}}else if(d&&h){const p=kc(a),f=kc(o);e[r]={...p,...f}}else c?e[r]=a:l?e[r]=o:d?e[r]=a:h&&(e[r]=o)}else e[r]=o!==void 0?o:a}}return typeof e.style=="object"&&(e.style=Qb(e.style).replaceAll(`
`," ")),e.hidden!==!0&&(e.hidden=void 0,delete e.hidden),e.disabled!==!0&&(e.disabled=void 0,delete e.disabled),e}const RS=typeof window<"u"?window:void 0;function tO(n){let e=n.activeElement;for(;e!=null&&e.shadowRoot;){const t=e.shadowRoot.activeElement;if(t===e)break;e=t}return e}function Hi(n){de(n,n.v+1)}var Rr,Or,ca,ru,jp;const W0=class W0 extends Map{constructor(t){super();xe(this,ru);xe(this,Rr,new Map);xe(this,Or,dr(0));xe(this,ca,dr(0));if(t){for(var[s,r]of t)super.set(s,r);Q(this,ca).v=super.size}}has(t){var s=Q(this,Rr),r=s.get(t);if(r===void 0){var a=super.get(t);if(a!==void 0)r=dr(0),s.set(t,r);else return K(Q(this,Or)),!1}return K(r),!0}forEach(t,s){Da(this,ru,jp).call(this),super.forEach(t,s)}get(t){var s=Q(this,Rr),r=s.get(t);if(r===void 0){var a=super.get(t);if(a!==void 0)r=dr(0),s.set(t,r);else{K(Q(this,Or));return}}return K(r),super.get(t)}set(t,s){var d;var r=Q(this,Rr),a=r.get(t),o=super.get(t),i=super.set(t,s),u=Q(this,Or);if(a===void 0)r.set(t,dr(0)),de(Q(this,ca),super.size),Hi(u);else if(o!==s){Hi(a);var c=u.reactions===null?null:new Set(u.reactions),l=c===null||!((d=a.reactions)!=null&&d.every(h=>c.has(h)));l&&Hi(u)}return i}delete(t){var s=Q(this,Rr),r=s.get(t),a=super.delete(t);return r!==void 0&&(s.delete(t),de(Q(this,ca),super.size),de(r,-1),Hi(Q(this,Or))),a}clear(){if(super.size!==0){super.clear();var t=Q(this,Rr);de(Q(this,ca),0);for(var s of t.values())de(s,-1);Hi(Q(this,Or)),t.clear()}}keys(){return K(Q(this,Or)),super.keys()}values(){return Da(this,ru,jp).call(this),super.values()}entries(){return Da(this,ru,jp).call(this),super.entries()}[Symbol.iterator](){return this.entries()}get size(){return K(Q(this,ca)),super.size}};Rr=new WeakMap,Or=new WeakMap,ca=new WeakMap,ru=new WeakSet,jp=function(){K(Q(this,Or));var t=Q(this,Rr);if(Q(this,ca).v!==t.size)for(var s of rv(W0.prototype,this,"keys").call(this))t.has(s)||t.set(s,dr(0));for(var[,r]of Q(this,Rr))K(r)};let zy=W0;function nO(n){let e=0,t=dr(0),s;return()=>{DD()&&(K(t),fm(()=>(e===0&&(s=Ja(()=>n(()=>Hi(t)))),e+=1,()=>{bS().then(()=>{e-=1,e===0&&(s==null||s(),s=void 0)})})))}}var au,id;class sO{constructor(e={}){xe(this,au);xe(this,id);const{window:t=RS,document:s=t==null?void 0:t.document}=e;t!==void 0&&(Dn(this,au,s),Dn(this,id,nO(r=>{const a=ys(t,"focusin",r),o=ys(t,"focusout",r);return()=>{a(),o()}})))}get current(){var e;return(e=Q(this,id))==null||e.call(this),Q(this,au)?tO(Q(this,au)):null}}au=new WeakMap,id=new WeakMap;new sO;function rO(n){return typeof n=="function"}function aO(n,e){switch(n){case"post":Nn(e);break;case"pre":RD(e);break}}function OS(n,e,t,s={}){const{lazy:r=!1}=s;let a=!r,o=Array.isArray(n)?[]:void 0;aO(e,()=>{const i=Array.isArray(n)?n.map(c=>c()):n();if(!a){a=!0,o=i;return}const u=Ja(()=>t(i,o));return o=i,u})}function ss(n,e,t){OS(n,"post",e,t)}function oO(n,e,t){OS(n,"pre",e,t)}ss.pre=oO;function iO(n){return rO(n)?n():n}var da;class uO{constructor(e,t={box:"border-box"}){xe(this,da,je(ts({width:0,height:0})));var r,a;const s=t.window??RS;de(Q(this,da),{width:((r=t.initialSize)==null?void 0:r.width)??0,height:((a=t.initialSize)==null?void 0:a.height)??0},!0),Nn(()=>{if(!s)return;const o=iO(e);if(!o)return;const i=new s.ResizeObserver(u=>{for(const c of u){const l=t.box==="content-box"?c.contentBoxSize:c.borderBoxSize,d=Array.isArray(l)?l:[l];K(Q(this,da)).width=d.reduce((h,p)=>Math.max(h,p.inlineSize),0),K(Q(this,da)).height=d.reduce((h,p)=>Math.max(h,p.blockSize),0)}});return i.observe(o),()=>{i.disconnect()}})}get current(){return K(Q(this,da))}get width(){return K(Q(this,da)).width}get height(){return K(Q(this,da)).height}}da=new WeakMap;var ud,ld;class lO{constructor(e){xe(this,ud,je(void 0));xe(this,ld);Nn(()=>{de(Q(this,ud),Q(this,ld),!0),Dn(this,ld,e())})}get current(){return K(Q(this,ud))}}ud=new WeakMap,ld=new WeakMap;var cd,ha;class xm{constructor(e){xe(this,cd);xe(this,ha);Dn(this,cd,e),Dn(this,ha,Symbol(e))}get key(){return Q(this,ha)}exists(){return kD(Q(this,ha))}get(){const e=uv(Q(this,ha));if(e===void 0)throw new Error(`Context "${Q(this,cd)}" not found`);return e}getOr(e){const t=uv(Q(this,ha));return t===void 0?e:t}set(e){return SD(Q(this,ha),e)}}cd=new WeakMap,ha=new WeakMap;function FS(n){Nn(()=>()=>{n()})}function wa({id:n,ref:e,deps:t=()=>!0,onRefChange:s,getRootNode:r}){ss([()=>n.current,t],([a])=>{const o=(r==null?void 0:r())??document,i=o==null?void 0:o.getElementById(a);i?e.current=i:e.current=null,s==null||s(e.current)}),FS(()=>{e.current=null,s==null||s(null)})}function ex(n,e){return setTimeout(e,n)}function wm(n){bS().then(n)}function PS(n){return n?"open":"closed"}function cO(n){return n?"true":"false"}function dO(n){return n?"true":void 0}const hO="Enter",pO="Escape",fO=" ",mO="Tab",tx=typeof document<"u",Iv=gO();function gO(){var n,e;return tx&&((n=window==null?void 0:window.navigator)==null?void 0:n.userAgent)&&(/iP(ad|hone|od)/.test(window.navigator.userAgent)||((e=window==null?void 0:window.navigator)==null?void 0:e.maxTouchPoints)>2&&/iPad|Macintosh/.test(window==null?void 0:window.navigator.userAgent))}function Vy(n){return n instanceof HTMLElement}function LS(n){return n instanceof Element}function yO(n){return n!==null}function bO(n){return n instanceof HTMLInputElement&&"select"in n}function xO(n,e){if(getComputedStyle(n).visibility==="hidden")return!0;for(;n;){if(e!==void 0&&n===e)return!1;if(getComputedStyle(n).display==="none")return!0;n=n.parentElement}return!1}globalThis.bitsIdCounter??(globalThis.bitsIdCounter={current:0});function pi(n="bits"){return globalThis.bitsIdCounter.current++,`${n}-${globalThis.bitsIdCounter.current}`}function Fn(){}function wO(n,e){const t=ce(n);function s(a){return e[t.current][a]??t.current}return{state:t,dispatch:a=>{t.current=s(a)}}}function vO(n,e){let t=je(ts({})),s=je("none");const r=n.current?"mounted":"unmounted";let a=je(null);const o=new lO(()=>n.current);ss([()=>e.current,()=>n.current],([h,p])=>{!h||!p||wm(()=>{de(a,document.getElementById(h),!0)})});const{state:i,dispatch:u}=wO(r,{mounted:{UNMOUNT:"unmounted",ANIMATION_OUT:"unmountSuspended"},unmountSuspended:{MOUNT:"mounted",ANIMATION_END:"unmounted"},unmounted:{MOUNT:"mounted"}});ss(()=>n.current,h=>{if(K(a)||de(a,document.getElementById(e.current),!0),!K(a)||!(h!==o.current))return;const f=K(s),m=Np(K(a));h?u("MOUNT"):m==="none"||K(t).display==="none"?u("UNMOUNT"):u(o&&f!==m?"ANIMATION_OUT":"UNMOUNT")});function c(h){if(K(a)||de(a,document.getElementById(e.current),!0),!K(a))return;const p=Np(K(a)),f=p.includes(h.animationName)||p==="none";h.target===K(a)&&f&&u("ANIMATION_END")}function l(h){K(a)||de(a,document.getElementById(e.current),!0),K(a)&&h.target===K(a)&&de(s,Np(K(a)),!0)}ss(()=>i.current,()=>{if(K(a)||de(a,document.getElementById(e.current),!0),!K(a))return;const h=Np(K(a));de(s,i.current==="mounted"?h:"none",!0)}),ss(()=>K(a),h=>{if(h)return de(t,getComputedStyle(h),!0),Wo(ys(h,"animationstart",l),ys(h,"animationcancel",c),ys(h,"animationend",c))});const d=Ue(()=>["mounted","unmountSuspended"].includes(i.current));return{get current(){return K(d)}}}function Np(n){return n&&getComputedStyle(n).animationName||"none"}function IO(n,e){qt(e,!0);const t=vO(ce.with(()=>e.present),ce.with(()=>e.id));var s=pt(),r=Je(s);{var a=o=>{var i=pt(),u=Je(i);Ot(u,()=>e.presence??jt,()=>({present:t})),De(o,i)};In(r,o=>{(e.forceMount||e.present||t.current)&&o(a)})}De(n,s),Kt()}function SO(n,e){var t=pt(),s=Je(t);lR(s,()=>e.children,r=>{var a=pt(),o=Je(a);Ot(o,()=>e.children??jt),De(r,a)}),De(n,t)}function kO(n,e){qt(e,!0);let t=ye(e,"to",3,"body");const s=ND();let r=Ue(a);function a(){if(!tx||e.disabled)return null;let d=null;return typeof t()=="string"?d=document.querySelector(t()):(t()instanceof HTMLElement||t()instanceof DocumentFragment)&&(d=t()),d}let o;function i(){o&&(uR(o),o=null)}ss([()=>K(r),()=>e.disabled],([d,h])=>{if(!d||h){i();return}return o=SS(SO,{target:d,props:{children:e.children},context:s}),()=>{i()}});var u=pt(),c=Je(u);{var l=d=>{var h=pt(),p=Je(h);Ot(p,()=>e.children??jt),De(d,h)};In(c,d=>{e.disabled&&d(l)})}De(n,u),Kt()}function MS(n,e,t,s){const r=Array.isArray(e)?e:[e];return r.forEach(a=>n.addEventListener(a,t,s)),()=>{r.forEach(a=>n.removeEventListener(a,t,s))}}class BS{constructor(e,t={bubbles:!0,cancelable:!0}){gt(this,"eventName");gt(this,"options");this.eventName=e,this.options=t}createEvent(e){return new CustomEvent(this.eventName,{...this.options,detail:e})}dispatch(e,t){const s=this.createEvent(t);return e.dispatchEvent(s),s}listen(e,t,s){const r=a=>{t(a)};return ys(e,this.eventName,r,s)}}function Sv(n,e=500){let t=null;const s=(...r)=>{t!==null&&clearTimeout(t),t=setTimeout(()=>{n(...r)},e)};return s.destroy=()=>{t!==null&&(clearTimeout(t),t=null)},s}function nx(n,e){return n===e||n.contains(e)}function zS(n){return(n==null?void 0:n.ownerDocument)??document}function NO(n,e){const{clientX:t,clientY:s}=n,r=e.getBoundingClientRect();return t<r.left||t>r.right||s<r.top||s>r.bottom}globalThis.bitsDismissableLayers??(globalThis.bitsDismissableLayers=new Map);var ou,zo,Ma,iu,uu,Ba,dd,hd,pa,Gf,_u,VS,Hf,lu,jf,qf,Kf,Xf,pd,WS,Yf,Zf;class CO{constructor(e){xe(this,_u);gt(this,"opts");xe(this,ou);xe(this,zo);xe(this,Ma,{pointerdown:!1});xe(this,iu,!1);xe(this,uu,!1);gt(this,"node",ce(null));xe(this,Ba);xe(this,dd);xe(this,hd,je(null));xe(this,pa,Fn);xe(this,Gf,e=>{e.defaultPrevented||this.currNode&&wm(()=>{var t,s;!this.currNode||Q(this,Xf).call(this,e.target)||e.target&&!Q(this,uu)&&((s=(t=Q(this,dd)).current)==null||s.call(t,e))})});xe(this,Hf,e=>{let t=e;t.defaultPrevented&&(t=kv(e)),Q(this,ou).current(e)});xe(this,lu,Sv(e=>{if(!this.currNode){Q(this,pa).call(this);return}const t=this.opts.isValidEvent.current(e,this.currNode)||EO(e,this.currNode);if(!Q(this,iu)||Da(this,_u,WS).call(this)||!t){Q(this,pa).call(this);return}let s=e;if(s.defaultPrevented&&(s=kv(s)),Q(this,zo).current!=="close"&&Q(this,zo).current!=="defer-otherwise-close"){Q(this,pa).call(this);return}e.pointerType==="touch"?(Q(this,pa).call(this),Dn(this,pa,MS(Q(this,Ba),"click",Q(this,Hf),{once:!0}))):Q(this,ou).current(s)},10));xe(this,jf,e=>{Q(this,Ma)[e.type]=!0});xe(this,qf,e=>{Q(this,Ma)[e.type]=!1});xe(this,Kf,()=>{this.node.current&&Dn(this,iu,_O(this.node.current))});xe(this,Xf,e=>this.node.current?nx(this.node.current,e):!1);xe(this,pd,Sv(()=>{for(const e in Q(this,Ma))Q(this,Ma)[e]=!1;Dn(this,iu,!1)},20));xe(this,Yf,()=>{Dn(this,uu,!0)});xe(this,Zf,()=>{Dn(this,uu,!1)});gt(this,"props",{onfocuscapture:Q(this,Yf),onblurcapture:Q(this,Zf)});this.opts=e,wa({id:e.id,ref:this.node,deps:()=>e.enabled.current,onRefChange:r=>{this.currNode=r}}),Dn(this,zo,e.interactOutsideBehavior),Dn(this,ou,e.onInteractOutside),Dn(this,dd,e.onFocusOutside),Nn(()=>{Dn(this,Ba,zS(this.currNode))});let t=Fn;const s=()=>{Q(this,pd).call(this),globalThis.bitsDismissableLayers.delete(this),Q(this,lu).destroy(),t()};ss([()=>this.opts.enabled.current,()=>this.currNode],([r,a])=>{if(!(!r||!a))return ex(1,()=>{this.currNode&&(globalThis.bitsDismissableLayers.set(this,Q(this,zo)),t(),t=Da(this,_u,VS).call(this))}),s}),FS(()=>{Q(this,pd).destroy(),globalThis.bitsDismissableLayers.delete(this),Q(this,lu).destroy(),Q(this,pa).call(this),t()})}get currNode(){return K(Q(this,hd))}set currNode(e){de(Q(this,hd),e,!0)}}ou=new WeakMap,zo=new WeakMap,Ma=new WeakMap,iu=new WeakMap,uu=new WeakMap,Ba=new WeakMap,dd=new WeakMap,hd=new WeakMap,pa=new WeakMap,Gf=new WeakMap,_u=new WeakSet,VS=function(){return Wo(ys(Q(this,Ba),"pointerdown",Wo(Q(this,jf),Q(this,Kf)),{capture:!0}),ys(Q(this,Ba),"pointerdown",Wo(Q(this,qf),Q(this,lu))),ys(Q(this,Ba),"focusin",Q(this,Gf)))},Hf=new WeakMap,lu=new WeakMap,jf=new WeakMap,qf=new WeakMap,Kf=new WeakMap,Xf=new WeakMap,pd=new WeakMap,WS=function(){return Object.values(Q(this,Ma)).some(Boolean)},Yf=new WeakMap,Zf=new WeakMap;function TO(n){return new CO(n)}function $O(n){return n.findLast(([e,{current:t}])=>t==="close"||t==="ignore")}function _O(n){const e=[...globalThis.bitsDismissableLayers],t=$O(e);if(t)return t[0].node.current===n;const[s]=e[0];return s.node.current===n}function EO(n,e){if("button"in n&&n.button>0)return!1;const t=n.target;return LS(t)?zS(t).documentElement.contains(t)&&!nx(e,t)&&NO(n,e):!1}function kv(n){const e=n.currentTarget,t=n.target;let s;n instanceof PointerEvent?s=new PointerEvent(n.type,n):s=new PointerEvent("pointerdown",n);let r=!1;return new Proxy(s,{get:(o,i)=>i==="currentTarget"?e:i==="target"?t:i==="preventDefault"?()=>{r=!0,typeof o.preventDefault=="function"&&o.preventDefault()}:i==="defaultPrevented"?r:i in o?o[i]:n[i]})}function AO(n,e){qt(e,!0);let t=ye(e,"interactOutsideBehavior",3,"close"),s=ye(e,"onInteractOutside",3,Fn),r=ye(e,"onFocusOutside",3,Fn),a=ye(e,"isValidEvent",3,()=>!1);const o=TO({id:ce.with(()=>e.id),interactOutsideBehavior:ce.with(()=>t()),onInteractOutside:ce.with(()=>s()),enabled:ce.with(()=>e.enabled),onFocusOutside:ce.with(()=>r()),isValidEvent:ce.with(()=>a())});var i=pt(),u=Je(i);Ot(u,()=>e.children??jt,()=>({props:o.props})),De(n,i),Kt()}globalThis.bitsEscapeLayers??(globalThis.bitsEscapeLayers=new Map);var Jf,Qf;class DO{constructor(e){gt(this,"opts");xe(this,Jf,()=>ys(document,"keydown",Q(this,Qf),{passive:!1}));xe(this,Qf,e=>{if(e.key!==pO||!OO(this))return;const t=new KeyboardEvent(e.type,e);e.preventDefault();const s=this.opts.escapeKeydownBehavior.current;s!=="close"&&s!=="defer-otherwise-close"||this.opts.onEscapeKeydown.current(t)});this.opts=e;let t=Fn;ss(()=>e.enabled.current,s=>(s&&(globalThis.bitsEscapeLayers.set(this,e.escapeKeydownBehavior),t=Q(this,Jf).call(this)),()=>{t(),globalThis.bitsEscapeLayers.delete(this)}))}}Jf=new WeakMap,Qf=new WeakMap;function RO(n){return new DO(n)}function OO(n){const e=[...globalThis.bitsEscapeLayers],t=e.findLast(([r,{current:a}])=>a==="close"||a==="ignore");if(t)return t[0]===n;const[s]=e[0];return s===n}function FO(n,e){qt(e,!0);let t=ye(e,"escapeKeydownBehavior",3,"close"),s=ye(e,"onEscapeKeydown",3,Fn);RO({escapeKeydownBehavior:ce.with(()=>t()),onEscapeKeydown:ce.with(()=>s()),enabled:ce.with(()=>e.enabled)});var r=pt(),a=Je(r);Ot(a,()=>e.children??jt),De(n,r),Kt()}const Ra=ce([]);function PO(){return{add(n){const e=Ra.current[0];e&&n.id!==e.id&&e.pause(),Ra.current=Nv(Ra.current,n),Ra.current.unshift(n)},remove(n){var e;Ra.current=Nv(Ra.current,n),(e=Ra.current[0])==null||e.resume()},get current(){return Ra.current}}}function LO(){let n=je(!1),e=je(!1);return{id:pi(),get paused(){return K(n)},get isHandlingFocus(){return K(e)},set isHandlingFocus(t){de(e,t,!0)},pause(){de(n,!0)},resume(){de(n,!1)}}}function Nv(n,e){return[...n].filter(t=>t.id!==e.id)}function MO(n){return n.filter(e=>e.tagName!=="A")}function Oa(n,{select:e=!1}={}){if(!(n&&n.focus)||document.activeElement===n)return;const t=document.activeElement;n.focus({preventScroll:!0}),n!==t&&bO(n)&&e&&n.select()}function BO(n,{select:e=!1}={}){const t=document.activeElement;for(const s of n)if(Oa(s,{select:e}),document.activeElement!==t)return!0}function Cv(n,e){for(const t of n)if(!xO(t,e))return t}function US(n){const e=[],t=document.createTreeWalker(n,NodeFilter.SHOW_ELEMENT,{acceptNode:s=>{const r=s.tagName==="INPUT"&&s.type==="hidden";return s.disabled||s.hidden||r?NodeFilter.FILTER_SKIP:s.tabIndex>=0?NodeFilter.FILTER_ACCEPT:NodeFilter.FILTER_SKIP}});for(;t.nextNode();)e.push(t.currentNode);return e}function zO(n){const e=US(n),t=Cv(e,n),s=Cv(e.reverse(),n);return[t,s]}/*!
* tabbable 6.2.0
* @license MIT, https://github.com/focus-trap/tabbable/blob/master/LICENSE
*/var VO=["input:not([inert])","select:not([inert])","textarea:not([inert])","a[href]:not([inert])","button:not([inert])","[tabindex]:not(slot):not([inert])","audio[controls]:not([inert])","video[controls]:not([inert])",'[contenteditable]:not([contenteditable="false"]):not([inert])',"details>summary:first-of-type:not([inert])","details:not([inert])"],WO=VO.join(","),GS=typeof Element>"u",pf=GS?function(){}:Element.prototype.matches||Element.prototype.msMatchesSelector||Element.prototype.webkitMatchesSelector,ff=!GS&&Element.prototype.getRootNode?function(n){var e;return n==null||(e=n.getRootNode)===null||e===void 0?void 0:e.call(n)}:function(n){return n==null?void 0:n.ownerDocument},UO=function n(e,t){var s;t===void 0&&(t=!0);var r=e==null||(s=e.getAttribute)===null||s===void 0?void 0:s.call(e,"inert"),a=r===""||r==="true",o=a||t&&e&&n(e.parentNode);return o},GO=function(e){var t,s=e==null||(t=e.getAttribute)===null||t===void 0?void 0:t.call(e,"contenteditable");return s===""||s==="true"},HO=function(e){return!isNaN(parseInt(e.getAttribute("tabindex"),10))},jO=function(e){if(!e)throw new Error("No node provided");return e.tabIndex<0&&(/^(AUDIO|VIDEO|DETAILS)$/.test(e.tagName)||GO(e))&&!HO(e)?0:e.tabIndex},HS=function(e){return e.tagName==="INPUT"},qO=function(e){return HS(e)&&e.type==="hidden"},KO=function(e){var t=e.tagName==="DETAILS"&&Array.prototype.slice.apply(e.children).some(function(s){return s.tagName==="SUMMARY"});return t},XO=function(e,t){for(var s=0;s<e.length;s++)if(e[s].checked&&e[s].form===t)return e[s]},YO=function(e){if(!e.name)return!0;var t=e.form||ff(e),s=function(i){return t.querySelectorAll('input[type="radio"][name="'+i+'"]')},r;if(typeof window<"u"&&typeof window.CSS<"u"&&typeof window.CSS.escape=="function")r=s(window.CSS.escape(e.name));else try{r=s(e.name)}catch(o){return console.error("Looks like you have a radio button with a name attribute containing invalid CSS selector characters and need the CSS.escape polyfill: %s",o.message),!1}var a=XO(r,e.form);return!a||a===e},ZO=function(e){return HS(e)&&e.type==="radio"},JO=function(e){return ZO(e)&&!YO(e)},QO=function(e){var t,s=e&&ff(e),r=(t=s)===null||t===void 0?void 0:t.host,a=!1;if(s&&s!==e){var o,i,u;for(a=!!((o=r)!==null&&o!==void 0&&(i=o.ownerDocument)!==null&&i!==void 0&&i.contains(r)||e!=null&&(u=e.ownerDocument)!==null&&u!==void 0&&u.contains(e));!a&&r;){var c,l,d;s=ff(r),r=(c=s)===null||c===void 0?void 0:c.host,a=!!((l=r)!==null&&l!==void 0&&(d=l.ownerDocument)!==null&&d!==void 0&&d.contains(r))}}return a},Tv=function(e){var t=e.getBoundingClientRect(),s=t.width,r=t.height;return s===0&&r===0},eF=function(e,t){var s=t.displayCheck,r=t.getShadowRoot;if(getComputedStyle(e).visibility==="hidden")return!0;var a=pf.call(e,"details>summary:first-of-type"),o=a?e.parentElement:e;if(pf.call(o,"details:not([open]) *"))return!0;if(!s||s==="full"||s==="legacy-full"){if(typeof r=="function"){for(var i=e;e;){var u=e.parentElement,c=ff(e);if(u&&!u.shadowRoot&&r(u)===!0)return Tv(e);e.assignedSlot?e=e.assignedSlot:!u&&c!==e.ownerDocument?e=c.host:e=u}e=i}if(QO(e))return!e.getClientRects().length;if(s!=="legacy-full")return!0}else if(s==="non-zero-area")return Tv(e);return!1},tF=function(e){if(/^(INPUT|BUTTON|SELECT|TEXTAREA)$/.test(e.tagName))for(var t=e.parentElement;t;){if(t.tagName==="FIELDSET"&&t.disabled){for(var s=0;s<t.children.length;s++){var r=t.children.item(s);if(r.tagName==="LEGEND")return pf.call(t,"fieldset[disabled] *")?!0:!r.contains(e)}return!0}t=t.parentElement}return!1},nF=function(e,t){return!(t.disabled||UO(t)||qO(t)||eF(t,e)||KO(t)||tF(t))},sF=function(e,t){return!(JO(t)||jO(t)<0||!nF(e,t))},rF=function(e,t){if(t=t||{},!e)throw new Error("No node provided");return pf.call(e,WO)===!1?!1:sF(t,e)};const aF=new BS("focusScope.autoFocusOnMount",{bubbles:!1,cancelable:!0}),oF=new BS("focusScope.autoFocusOnDestroy",{bubbles:!1,cancelable:!0}),iF=new xm("FocusScope");function uF({id:n,loop:e,enabled:t,onOpenAutoFocus:s,onCloseAutoFocus:r,forceMount:a}){const o=PO(),i=LO(),u=ce(null),c=iF.getOr({ignoreCloseAutoFocus:!1});let l=null;wa({id:n,ref:u,deps:()=>t.current});function d(y){if(!(i.paused||!u.current||i.isHandlingFocus)){i.isHandlingFocus=!0;try{const b=y.target;if(!Vy(b))return;const x=u.current.contains(b);if(y.type==="focusin")if(x)l=b;else{if(c.ignoreCloseAutoFocus)return;Oa(l,{select:!0})}else y.type==="focusout"&&!x&&!c.ignoreCloseAutoFocus&&Oa(l,{select:!0})}finally{i.isHandlingFocus=!1}}}function h(y){if(!l||!u.current)return;let b=!1;for(const x of y){if(x.type==="childList"&&x.removedNodes.length>0)for(const w of x.removedNodes){if(w===l){b=!0;break}if(w.nodeType===Node.ELEMENT_NODE&&w.contains(l)){b=!0;break}}if(b)break}b&&u.current&&!u.current.contains(document.activeElement)&&Oa(u.current)}ss([()=>u.current,()=>t.current],([y,b])=>{if(!y||!b)return;const x=Wo(ys(document,"focusin",d),ys(document,"focusout",d)),w=new MutationObserver(h);return w.observe(y,{childList:!0,subtree:!0,attributes:!1}),()=>{x(),w.disconnect()}}),ss([()=>a.current,()=>u.current],([y,b])=>{if(y)return;const x=document.activeElement;return p(b,x),()=>{b&&f(x)}}),ss([()=>a.current,()=>u.current,()=>t.current],([y,b])=>{if(!y)return;const x=document.activeElement;return p(b,x),()=>{b&&f(x)}});function p(y,b){if(y||(y=document.getElementById(n.current)),!y||!t.current)return;if(o.add(i),!y.contains(b)){const w=aF.createEvent();s.current(w),w.defaultPrevented||wm(()=>{if(!y)return;BO(MO(US(y)),{select:!0})||Oa(y)})}}function f(y){var w;const b=oF.createEvent();(w=r.current)==null||w.call(r,b);const x=c.ignoreCloseAutoFocus;ex(0,()=>{!b.defaultPrevented&&y&&!x&&Oa(rF(y)?y:document.body,{select:!0}),o.remove(i)})}function m(y){if(!t.current||!e.current&&!t.current||i.paused)return;const b=y.key===mO&&!y.ctrlKey&&!y.altKey&&!y.metaKey,x=document.activeElement;if(!(b&&x))return;const w=u.current;if(!w)return;const[v,S]=zO(w);v&&S?!y.shiftKey&&x===S?(y.preventDefault(),e.current&&Oa(v,{select:!0})):y.shiftKey&&x===v&&(y.preventDefault(),e.current&&Oa(S,{select:!0})):x===w&&y.preventDefault()}const g=Ue(()=>({id:n.current,tabindex:-1,onkeydown:m}));return{get props(){return K(g)}}}function lF(n,e){qt(e,!0);let t=ye(e,"trapFocus",3,!1),s=ye(e,"loop",3,!1),r=ye(e,"onCloseAutoFocus",3,Fn),a=ye(e,"onOpenAutoFocus",3,Fn),o=ye(e,"forceMount",3,!1);const i=uF({enabled:ce.with(()=>t()),loop:ce.with(()=>s()),onCloseAutoFocus:ce.with(()=>r()),onOpenAutoFocus:ce.with(()=>a()),id:ce.with(()=>e.id),forceMount:ce.with(()=>o())});var u=pt(),c=Je(u);Ot(c,()=>e.focusScope??jt,()=>({props:i.props})),De(n,u),Kt()}globalThis.bitsTextSelectionLayers??(globalThis.bitsTextSelectionLayers=new Map);var cu,fd,em,jS,tm,md;class cF{constructor(e){xe(this,em);gt(this,"opts");xe(this,cu,Fn);xe(this,fd,ce(null));xe(this,tm,e=>{const t=Q(this,fd).current,s=e.target;!Vy(t)||!Vy(s)||!this.opts.enabled.current||!pF(this)||!nx(t,s)||(this.opts.onPointerDown.current(e),!e.defaultPrevented&&Dn(this,cu,hF(t)))});xe(this,md,()=>{Q(this,cu).call(this),Dn(this,cu,Fn)});this.opts=e,wa({id:e.id,ref:Q(this,fd),deps:()=>this.opts.enabled.current});let t=Fn;ss(()=>this.opts.enabled.current,s=>(s&&(globalThis.bitsTextSelectionLayers.set(this,this.opts.enabled),t(),t=Da(this,em,jS).call(this)),()=>{t(),Q(this,md).call(this),globalThis.bitsTextSelectionLayers.delete(this)}))}}cu=new WeakMap,fd=new WeakMap,em=new WeakSet,jS=function(){return Wo(ys(document,"pointerdown",Q(this,tm)),ys(document,"pointerup",AS(Q(this,md),this.opts.onPointerUp.current)))},tm=new WeakMap,md=new WeakMap;function dF(n){return new cF(n)}const $v=n=>n.style.userSelect||n.style.webkitUserSelect;function hF(n){const e=document.body,t=$v(e),s=$v(n);return Cp(e,"none"),Cp(n,"text"),()=>{Cp(e,t),Cp(n,s)}}function Cp(n,e){n.style.userSelect=e,n.style.webkitUserSelect=e}function pF(n){const e=[...globalThis.bitsTextSelectionLayers];if(!e.length)return!1;const t=e.at(-1);return t?t[0]===n:!1}function fF(n,e){qt(e,!0);let t=ye(e,"preventOverflowTextSelection",3,!0),s=ye(e,"onPointerDown",3,Fn),r=ye(e,"onPointerUp",3,Fn);dF({id:ce.with(()=>e.id),onPointerDown:ce.with(()=>s()),onPointerUp:ce.with(()=>r()),enabled:ce.with(()=>e.enabled&&t())});var a=pt(),o=Je(a);Ot(o,()=>e.children??jt),De(n,a),Kt()}function mF(n){let e=0,t=je(void 0),s;function r(){e-=1,s&&e<=0&&(s(),de(t,void 0),s=void 0)}return(...a)=>(e+=1,K(t)===void 0&&(s=OD(()=>{de(t,n(...a),!0)})),Nn(()=>()=>{r()}),K(t))}const gF=mF(()=>{const n=new zy,e=Ue(()=>{for(const a of n.values())if(a)return!0;return!1});let t=je(null),s=null;function r(){tx&&(document.body.setAttribute("style",K(t)??""),document.body.style.removeProperty("--scrollbar-width"),Iv&&(s==null||s()))}return Nn(()=>{const a=K(e);return Ja(()=>{if(!a)return;de(t,document.body.getAttribute("style"),!0);const o=getComputedStyle(document.body),i=window.innerWidth-document.documentElement.clientWidth,c={padding:Number.parseInt(o.paddingRight??"0",10)+i,margin:Number.parseInt(o.marginRight??"0",10)};i>0&&(document.body.style.paddingRight=`${c.padding}px`,document.body.style.marginRight=`${c.margin}px`,document.body.style.setProperty("--scrollbar-width",`${i}px`),document.body.style.overflow="hidden"),Iv&&(s=MS(document,"touchmove",l=>{l.target===document.documentElement&&(l.touches.length>1||l.preventDefault())},{passive:!1})),wm(()=>{document.body.style.pointerEvents="none",document.body.style.overflow="hidden"})})}),Nn(()=>()=>{s==null||s()}),{get map(){return n},resetBodyStyle:r}});function yF(n,e=()=>null){const t=pi(),s=gF();if(!s)return;const r=Ue(e);s.map.set(t,n??!1);const a=ce.with(()=>s.map.get(t)??!1,o=>s.map.set(t,o));return Nn(()=>()=>{s.map.delete(t),!bF(s.map)&&(K(r)===null?requestAnimationFrame(()=>s.resetBodyStyle()):ex(K(r),()=>s.resetBodyStyle()))}),a}function bF(n){for(const[e,t]of n)if(t)return!0;return!1}function _v(n,e){qt(e,!0);let t=ye(e,"preventScroll",3,!0),s=ye(e,"restoreScrollDelay",3,null);yF(t(),()=>s()),Kt()}const xF=["top","right","bottom","left"],Qa=Math.min,Es=Math.max,mf=Math.round,Tp=Math.floor,zr=n=>({x:n,y:n}),wF={left:"right",right:"left",bottom:"top",top:"bottom"},vF={start:"end",end:"start"};function Wy(n,e,t){return Es(n,Qa(e,t))}function va(n,e){return typeof n=="function"?n(e):n}function Ia(n){return n.split("-")[0]}function Au(n){return n.split("-")[1]}function sx(n){return n==="x"?"y":"x"}function rx(n){return n==="y"?"height":"width"}function ga(n){return["top","bottom"].includes(Ia(n))?"y":"x"}function ax(n){return sx(ga(n))}function IF(n,e,t){t===void 0&&(t=!1);const s=Au(n),r=ax(n),a=rx(r);let o=r==="x"?s===(t?"end":"start")?"right":"left":s==="start"?"bottom":"top";return e.reference[a]>e.floating[a]&&(o=gf(o)),[o,gf(o)]}function SF(n){const e=gf(n);return[Uy(n),e,Uy(e)]}function Uy(n){return n.replace(/start|end/g,e=>vF[e])}function kF(n,e,t){const s=["left","right"],r=["right","left"],a=["top","bottom"],o=["bottom","top"];switch(n){case"top":case"bottom":return t?e?r:s:e?s:r;case"left":case"right":return e?a:o;default:return[]}}function NF(n,e,t,s){const r=Au(n);let a=kF(Ia(n),t==="start",s);return r&&(a=a.map(o=>o+"-"+r),e&&(a=a.concat(a.map(Uy)))),a}function gf(n){return n.replace(/left|right|bottom|top/g,e=>wF[e])}function CF(n){return{top:0,right:0,bottom:0,left:0,...n}}function qS(n){return typeof n!="number"?CF(n):{top:n,right:n,bottom:n,left:n}}function yf(n){const{x:e,y:t,width:s,height:r}=n;return{width:s,height:r,top:t,left:e,right:e+s,bottom:t+r,x:e,y:t}}function Ev(n,e,t){let{reference:s,floating:r}=n;const a=ga(e),o=ax(e),i=rx(o),u=Ia(e),c=a==="y",l=s.x+s.width/2-r.width/2,d=s.y+s.height/2-r.height/2,h=s[i]/2-r[i]/2;let p;switch(u){case"top":p={x:l,y:s.y-r.height};break;case"bottom":p={x:l,y:s.y+s.height};break;case"right":p={x:s.x+s.width,y:d};break;case"left":p={x:s.x-r.width,y:d};break;default:p={x:s.x,y:s.y}}switch(Au(e)){case"start":p[o]-=h*(t&&c?-1:1);break;case"end":p[o]+=h*(t&&c?-1:1);break}return p}const TF=async(n,e,t)=>{const{placement:s="bottom",strategy:r="absolute",middleware:a=[],platform:o}=t,i=a.filter(Boolean),u=await(o.isRTL==null?void 0:o.isRTL(e));let c=await o.getElementRects({reference:n,floating:e,strategy:r}),{x:l,y:d}=Ev(c,s,u),h=s,p={},f=0;for(let m=0;m<i.length;m++){const{name:g,fn:y}=i[m],{x:b,y:x,data:w,reset:v}=await y({x:l,y:d,initialPlacement:s,placement:h,strategy:r,middlewareData:p,rects:c,platform:o,elements:{reference:n,floating:e}});l=b??l,d=x??d,p={...p,[g]:{...p[g],...w}},v&&f<=50&&(f++,typeof v=="object"&&(v.placement&&(h=v.placement),v.rects&&(c=v.rects===!0?await o.getElementRects({reference:n,floating:e,strategy:r}):v.rects),{x:l,y:d}=Ev(c,h,u)),m=-1)}return{x:l,y:d,placement:h,strategy:r,middlewareData:p}};async function zc(n,e){var t;e===void 0&&(e={});const{x:s,y:r,platform:a,rects:o,elements:i,strategy:u}=n,{boundary:c="clippingAncestors",rootBoundary:l="viewport",elementContext:d="floating",altBoundary:h=!1,padding:p=0}=va(e,n),f=qS(p),g=i[h?d==="floating"?"reference":"floating":d],y=yf(await a.getClippingRect({element:(t=await(a.isElement==null?void 0:a.isElement(g)))==null||t?g:g.contextElement||await(a.getDocumentElement==null?void 0:a.getDocumentElement(i.floating)),boundary:c,rootBoundary:l,strategy:u})),b=d==="floating"?{x:s,y:r,width:o.floating.width,height:o.floating.height}:o.reference,x=await(a.getOffsetParent==null?void 0:a.getOffsetParent(i.floating)),w=await(a.isElement==null?void 0:a.isElement(x))?await(a.getScale==null?void 0:a.getScale(x))||{x:1,y:1}:{x:1,y:1},v=yf(a.convertOffsetParentRelativeRectToViewportRelativeRect?await a.convertOffsetParentRelativeRectToViewportRelativeRect({elements:i,rect:b,offsetParent:x,strategy:u}):b);return{top:(y.top-v.top+f.top)/w.y,bottom:(v.bottom-y.bottom+f.bottom)/w.y,left:(y.left-v.left+f.left)/w.x,right:(v.right-y.right+f.right)/w.x}}const $F=n=>({name:"arrow",options:n,async fn(e){const{x:t,y:s,placement:r,rects:a,platform:o,elements:i,middlewareData:u}=e,{element:c,padding:l=0}=va(n,e)||{};if(c==null)return{};const d=qS(l),h={x:t,y:s},p=ax(r),f=rx(p),m=await o.getDimensions(c),g=p==="y",y=g?"top":"left",b=g?"bottom":"right",x=g?"clientHeight":"clientWidth",w=a.reference[f]+a.reference[p]-h[p]-a.floating[f],v=h[p]-a.reference[p],S=await(o.getOffsetParent==null?void 0:o.getOffsetParent(c));let N=S?S[x]:0;(!N||!await(o.isElement==null?void 0:o.isElement(S)))&&(N=i.floating[x]||a.floating[f]);const $=w/2-v/2,T=N/2-m[f]/2-1,C=Qa(d[y],T),k=Qa(d[b],T),A=C,D=N-m[f]-k,R=N/2-m[f]/2+$,F=Wy(A,R,D),z=!u.arrow&&Au(r)!=null&&R!==F&&a.reference[f]/2-(R<A?C:k)-m[f]/2<0,H=z?R<A?R-A:R-D:0;return{[p]:h[p]+H,data:{[p]:F,centerOffset:R-F-H,...z&&{alignmentOffset:H}},reset:z}}}),_F=function(n){return n===void 0&&(n={}),{name:"flip",options:n,async fn(e){var t,s;const{placement:r,middlewareData:a,rects:o,initialPlacement:i,platform:u,elements:c}=e,{mainAxis:l=!0,crossAxis:d=!0,fallbackPlacements:h,fallbackStrategy:p="bestFit",fallbackAxisSideDirection:f="none",flipAlignment:m=!0,...g}=va(n,e);if((t=a.arrow)!=null&&t.alignmentOffset)return{};const y=Ia(r),b=ga(i),x=Ia(i)===i,w=await(u.isRTL==null?void 0:u.isRTL(c.floating)),v=h||(x||!m?[gf(i)]:SF(i)),S=f!=="none";!h&&S&&v.push(...NF(i,m,f,w));const N=[i,...v],$=await zc(e,g),T=[];let C=((s=a.flip)==null?void 0:s.overflows)||[];if(l&&T.push($[y]),d){const F=IF(r,o,w);T.push($[F[0]],$[F[1]])}if(C=[...C,{placement:r,overflows:T}],!T.every(F=>F<=0)){var k,A;const F=(((k=a.flip)==null?void 0:k.index)||0)+1,z=N[F];if(z){var D;const P=d==="alignment"?b!==ga(z):!1,G=((D=C[0])==null?void 0:D.overflows[0])>0;if(!P||G)return{data:{index:F,overflows:C},reset:{placement:z}}}let H=(A=C.filter(P=>P.overflows[0]<=0).sort((P,G)=>P.overflows[1]-G.overflows[1])[0])==null?void 0:A.placement;if(!H)switch(p){case"bestFit":{var R;const P=(R=C.filter(G=>{if(S){const X=ga(G.placement);return X===b||X==="y"}return!0}).map(G=>[G.placement,G.overflows.filter(X=>X>0).reduce((X,Z)=>X+Z,0)]).sort((G,X)=>G[1]-X[1])[0])==null?void 0:R[0];P&&(H=P);break}case"initialPlacement":H=i;break}if(r!==H)return{reset:{placement:H}}}return{}}}};function Av(n,e){return{top:n.top-e.height,right:n.right-e.width,bottom:n.bottom-e.height,left:n.left-e.width}}function Dv(n){return xF.some(e=>n[e]>=0)}const EF=function(n){return n===void 0&&(n={}),{name:"hide",options:n,async fn(e){const{rects:t}=e,{strategy:s="referenceHidden",...r}=va(n,e);switch(s){case"referenceHidden":{const a=await zc(e,{...r,elementContext:"reference"}),o=Av(a,t.reference);return{data:{referenceHiddenOffsets:o,referenceHidden:Dv(o)}}}case"escaped":{const a=await zc(e,{...r,altBoundary:!0}),o=Av(a,t.floating);return{data:{escapedOffsets:o,escaped:Dv(o)}}}default:return{}}}}};async function AF(n,e){const{placement:t,platform:s,elements:r}=n,a=await(s.isRTL==null?void 0:s.isRTL(r.floating)),o=Ia(t),i=Au(t),u=ga(t)==="y",c=["left","top"].includes(o)?-1:1,l=a&&u?-1:1,d=va(e,n);let{mainAxis:h,crossAxis:p,alignmentAxis:f}=typeof d=="number"?{mainAxis:d,crossAxis:0,alignmentAxis:null}:{mainAxis:d.mainAxis||0,crossAxis:d.crossAxis||0,alignmentAxis:d.alignmentAxis};return i&&typeof f=="number"&&(p=i==="end"?f*-1:f),u?{x:p*l,y:h*c}:{x:h*c,y:p*l}}const DF=function(n){return n===void 0&&(n=0),{name:"offset",options:n,async fn(e){var t,s;const{x:r,y:a,placement:o,middlewareData:i}=e,u=await AF(e,n);return o===((t=i.offset)==null?void 0:t.placement)&&(s=i.arrow)!=null&&s.alignmentOffset?{}:{x:r+u.x,y:a+u.y,data:{...u,placement:o}}}}},RF=function(n){return n===void 0&&(n={}),{name:"shift",options:n,async fn(e){const{x:t,y:s,placement:r}=e,{mainAxis:a=!0,crossAxis:o=!1,limiter:i={fn:g=>{let{x:y,y:b}=g;return{x:y,y:b}}},...u}=va(n,e),c={x:t,y:s},l=await zc(e,u),d=ga(Ia(r)),h=sx(d);let p=c[h],f=c[d];if(a){const g=h==="y"?"top":"left",y=h==="y"?"bottom":"right",b=p+l[g],x=p-l[y];p=Wy(b,p,x)}if(o){const g=d==="y"?"top":"left",y=d==="y"?"bottom":"right",b=f+l[g],x=f-l[y];f=Wy(b,f,x)}const m=i.fn({...e,[h]:p,[d]:f});return{...m,data:{x:m.x-t,y:m.y-s,enabled:{[h]:a,[d]:o}}}}}},OF=function(n){return n===void 0&&(n={}),{options:n,fn(e){const{x:t,y:s,placement:r,rects:a,middlewareData:o}=e,{offset:i=0,mainAxis:u=!0,crossAxis:c=!0}=va(n,e),l={x:t,y:s},d=ga(r),h=sx(d);let p=l[h],f=l[d];const m=va(i,e),g=typeof m=="number"?{mainAxis:m,crossAxis:0}:{mainAxis:0,crossAxis:0,...m};if(u){const x=h==="y"?"height":"width",w=a.reference[h]-a.floating[x]+g.mainAxis,v=a.reference[h]+a.reference[x]-g.mainAxis;p<w?p=w:p>v&&(p=v)}if(c){var y,b;const x=h==="y"?"width":"height",w=["top","left"].includes(Ia(r)),v=a.reference[d]-a.floating[x]+(w&&((y=o.offset)==null?void 0:y[d])||0)+(w?0:g.crossAxis),S=a.reference[d]+a.reference[x]+(w?0:((b=o.offset)==null?void 0:b[d])||0)-(w?g.crossAxis:0);f<v?f=v:f>S&&(f=S)}return{[h]:p,[d]:f}}}},FF=function(n){return n===void 0&&(n={}),{name:"size",options:n,async fn(e){var t,s;const{placement:r,rects:a,platform:o,elements:i}=e,{apply:u=()=>{},...c}=va(n,e),l=await zc(e,c),d=Ia(r),h=Au(r),p=ga(r)==="y",{width:f,height:m}=a.floating;let g,y;d==="top"||d==="bottom"?(g=d,y=h===(await(o.isRTL==null?void 0:o.isRTL(i.floating))?"start":"end")?"left":"right"):(y=d,g=h==="end"?"top":"bottom");const b=m-l.top-l.bottom,x=f-l.left-l.right,w=Qa(m-l[g],b),v=Qa(f-l[y],x),S=!e.middlewareData.shift;let N=w,$=v;if((t=e.middlewareData.shift)!=null&&t.enabled.x&&($=x),(s=e.middlewareData.shift)!=null&&s.enabled.y&&(N=b),S&&!h){const C=Es(l.left,0),k=Es(l.right,0),A=Es(l.top,0),D=Es(l.bottom,0);p?$=f-2*(C!==0||k!==0?C+k:Es(l.left,l.right)):N=m-2*(A!==0||D!==0?A+D:Es(l.top,l.bottom))}await u({...e,availableWidth:$,availableHeight:N});const T=await o.getDimensions(i.floating);return f!==T.width||m!==T.height?{reset:{rects:!0}}:{}}}};function vm(){return typeof window<"u"}function Du(n){return KS(n)?(n.nodeName||"").toLowerCase():"#document"}function Os(n){var e;return(n==null||(e=n.ownerDocument)==null?void 0:e.defaultView)||window}function Jr(n){var e;return(e=(KS(n)?n.ownerDocument:n.document)||window.document)==null?void 0:e.documentElement}function KS(n){return vm()?n instanceof Node||n instanceof Os(n).Node:!1}function br(n){return vm()?n instanceof Element||n instanceof Os(n).Element:!1}function Kr(n){return vm()?n instanceof HTMLElement||n instanceof Os(n).HTMLElement:!1}function Rv(n){return!vm()||typeof ShadowRoot>"u"?!1:n instanceof ShadowRoot||n instanceof Os(n).ShadowRoot}function Hd(n){const{overflow:e,overflowX:t,overflowY:s,display:r}=xr(n);return/auto|scroll|overlay|hidden|clip/.test(e+s+t)&&!["inline","contents"].includes(r)}function PF(n){return["table","td","th"].includes(Du(n))}function Im(n){return[":popover-open",":modal"].some(e=>{try{return n.matches(e)}catch{return!1}})}function ox(n){const e=ix(),t=br(n)?xr(n):n;return["transform","translate","scale","rotate","perspective"].some(s=>t[s]?t[s]!=="none":!1)||(t.containerType?t.containerType!=="normal":!1)||!e&&(t.backdropFilter?t.backdropFilter!=="none":!1)||!e&&(t.filter?t.filter!=="none":!1)||["transform","translate","scale","rotate","perspective","filter"].some(s=>(t.willChange||"").includes(s))||["paint","layout","strict","content"].some(s=>(t.contain||"").includes(s))}function LF(n){let e=eo(n);for(;Kr(e)&&!hu(e);){if(ox(e))return e;if(Im(e))return null;e=eo(e)}return null}function ix(){return typeof CSS>"u"||!CSS.supports?!1:CSS.supports("-webkit-backdrop-filter","none")}function hu(n){return["html","body","#document"].includes(Du(n))}function xr(n){return Os(n).getComputedStyle(n)}function Sm(n){return br(n)?{scrollLeft:n.scrollLeft,scrollTop:n.scrollTop}:{scrollLeft:n.scrollX,scrollTop:n.scrollY}}function eo(n){if(Du(n)==="html")return n;const e=n.assignedSlot||n.parentNode||Rv(n)&&n.host||Jr(n);return Rv(e)?e.host:e}function XS(n){const e=eo(n);return hu(e)?n.ownerDocument?n.ownerDocument.body:n.body:Kr(e)&&Hd(e)?e:XS(e)}function Vc(n,e,t){var s;e===void 0&&(e=[]),t===void 0&&(t=!0);const r=XS(n),a=r===((s=n.ownerDocument)==null?void 0:s.body),o=Os(r);if(a){const i=Gy(o);return e.concat(o,o.visualViewport||[],Hd(r)?r:[],i&&t?Vc(i):[])}return e.concat(r,Vc(r,[],t))}function Gy(n){return n.parent&&Object.getPrototypeOf(n.parent)?n.frameElement:null}function YS(n){const e=xr(n);let t=parseFloat(e.width)||0,s=parseFloat(e.height)||0;const r=Kr(n),a=r?n.offsetWidth:t,o=r?n.offsetHeight:s,i=mf(t)!==a||mf(s)!==o;return i&&(t=a,s=o),{width:t,height:s,$:i}}function ux(n){return br(n)?n:n.contextElement}function Zi(n){const e=ux(n);if(!Kr(e))return zr(1);const t=e.getBoundingClientRect(),{width:s,height:r,$:a}=YS(e);let o=(a?mf(t.width):t.width)/s,i=(a?mf(t.height):t.height)/r;return(!o||!Number.isFinite(o))&&(o=1),(!i||!Number.isFinite(i))&&(i=1),{x:o,y:i}}const MF=zr(0);function ZS(n){const e=Os(n);return!ix()||!e.visualViewport?MF:{x:e.visualViewport.offsetLeft,y:e.visualViewport.offsetTop}}function BF(n,e,t){return e===void 0&&(e=!1),!t||e&&t!==Os(n)?!1:e}function Ko(n,e,t,s){e===void 0&&(e=!1),t===void 0&&(t=!1);const r=n.getBoundingClientRect(),a=ux(n);let o=zr(1);e&&(s?br(s)&&(o=Zi(s)):o=Zi(n));const i=BF(a,t,s)?ZS(a):zr(0);let u=(r.left+i.x)/o.x,c=(r.top+i.y)/o.y,l=r.width/o.x,d=r.height/o.y;if(a){const h=Os(a),p=s&&br(s)?Os(s):s;let f=h,m=Gy(f);for(;m&&s&&p!==f;){const g=Zi(m),y=m.getBoundingClientRect(),b=xr(m),x=y.left+(m.clientLeft+parseFloat(b.paddingLeft))*g.x,w=y.top+(m.clientTop+parseFloat(b.paddingTop))*g.y;u*=g.x,c*=g.y,l*=g.x,d*=g.y,u+=x,c+=w,f=Os(m),m=Gy(f)}}return yf({width:l,height:d,x:u,y:c})}function lx(n,e){const t=Sm(n).scrollLeft;return e?e.left+t:Ko(Jr(n)).left+t}function JS(n,e,t){t===void 0&&(t=!1);const s=n.getBoundingClientRect(),r=s.left+e.scrollLeft-(t?0:lx(n,s)),a=s.top+e.scrollTop;return{x:r,y:a}}function zF(n){let{elements:e,rect:t,offsetParent:s,strategy:r}=n;const a=r==="fixed",o=Jr(s),i=e?Im(e.floating):!1;if(s===o||i&&a)return t;let u={scrollLeft:0,scrollTop:0},c=zr(1);const l=zr(0),d=Kr(s);if((d||!d&&!a)&&((Du(s)!=="body"||Hd(o))&&(u=Sm(s)),Kr(s))){const p=Ko(s);c=Zi(s),l.x=p.x+s.clientLeft,l.y=p.y+s.clientTop}const h=o&&!d&&!a?JS(o,u,!0):zr(0);return{width:t.width*c.x,height:t.height*c.y,x:t.x*c.x-u.scrollLeft*c.x+l.x+h.x,y:t.y*c.y-u.scrollTop*c.y+l.y+h.y}}function VF(n){return Array.from(n.getClientRects())}function WF(n){const e=Jr(n),t=Sm(n),s=n.ownerDocument.body,r=Es(e.scrollWidth,e.clientWidth,s.scrollWidth,s.clientWidth),a=Es(e.scrollHeight,e.clientHeight,s.scrollHeight,s.clientHeight);let o=-t.scrollLeft+lx(n);const i=-t.scrollTop;return xr(s).direction==="rtl"&&(o+=Es(e.clientWidth,s.clientWidth)-r),{width:r,height:a,x:o,y:i}}function UF(n,e){const t=Os(n),s=Jr(n),r=t.visualViewport;let a=s.clientWidth,o=s.clientHeight,i=0,u=0;if(r){a=r.width,o=r.height;const c=ix();(!c||c&&e==="fixed")&&(i=r.offsetLeft,u=r.offsetTop)}return{width:a,height:o,x:i,y:u}}function GF(n,e){const t=Ko(n,!0,e==="fixed"),s=t.top+n.clientTop,r=t.left+n.clientLeft,a=Kr(n)?Zi(n):zr(1),o=n.clientWidth*a.x,i=n.clientHeight*a.y,u=r*a.x,c=s*a.y;return{width:o,height:i,x:u,y:c}}function Ov(n,e,t){let s;if(e==="viewport")s=UF(n,t);else if(e==="document")s=WF(Jr(n));else if(br(e))s=GF(e,t);else{const r=ZS(n);s={x:e.x-r.x,y:e.y-r.y,width:e.width,height:e.height}}return yf(s)}function QS(n,e){const t=eo(n);return t===e||!br(t)||hu(t)?!1:xr(t).position==="fixed"||QS(t,e)}function HF(n,e){const t=e.get(n);if(t)return t;let s=Vc(n,[],!1).filter(i=>br(i)&&Du(i)!=="body"),r=null;const a=xr(n).position==="fixed";let o=a?eo(n):n;for(;br(o)&&!hu(o);){const i=xr(o),u=ox(o);!u&&i.position==="fixed"&&(r=null),(a?!u&&!r:!u&&i.position==="static"&&!!r&&["absolute","fixed"].includes(r.position)||Hd(o)&&!u&&QS(n,o))?s=s.filter(l=>l!==o):r=i,o=eo(o)}return e.set(n,s),s}function jF(n){let{element:e,boundary:t,rootBoundary:s,strategy:r}=n;const o=[...t==="clippingAncestors"?Im(e)?[]:HF(e,this._c):[].concat(t),s],i=o[0],u=o.reduce((c,l)=>{const d=Ov(e,l,r);return c.top=Es(d.top,c.top),c.right=Qa(d.right,c.right),c.bottom=Qa(d.bottom,c.bottom),c.left=Es(d.left,c.left),c},Ov(e,i,r));return{width:u.right-u.left,height:u.bottom-u.top,x:u.left,y:u.top}}function qF(n){const{width:e,height:t}=YS(n);return{width:e,height:t}}function KF(n,e,t){const s=Kr(e),r=Jr(e),a=t==="fixed",o=Ko(n,!0,a,e);let i={scrollLeft:0,scrollTop:0};const u=zr(0);function c(){u.x=lx(r)}if(s||!s&&!a)if((Du(e)!=="body"||Hd(r))&&(i=Sm(e)),s){const p=Ko(e,!0,a,e);u.x=p.x+e.clientLeft,u.y=p.y+e.clientTop}else r&&c();a&&!s&&r&&c();const l=r&&!s&&!a?JS(r,i):zr(0),d=o.left+i.scrollLeft-u.x-l.x,h=o.top+i.scrollTop-u.y-l.y;return{x:d,y:h,width:o.width,height:o.height}}function oy(n){return xr(n).position==="static"}function Fv(n,e){if(!Kr(n)||xr(n).position==="fixed")return null;if(e)return e(n);let t=n.offsetParent;return Jr(n)===t&&(t=t.ownerDocument.body),t}function ek(n,e){const t=Os(n);if(Im(n))return t;if(!Kr(n)){let r=eo(n);for(;r&&!hu(r);){if(br(r)&&!oy(r))return r;r=eo(r)}return t}let s=Fv(n,e);for(;s&&PF(s)&&oy(s);)s=Fv(s,e);return s&&hu(s)&&oy(s)&&!ox(s)?t:s||LF(n)||t}const XF=async function(n){const e=this.getOffsetParent||ek,t=this.getDimensions,s=await t(n.floating);return{reference:KF(n.reference,await e(n.floating),n.strategy),floating:{x:0,y:0,width:s.width,height:s.height}}};function YF(n){return xr(n).direction==="rtl"}const ZF={convertOffsetParentRelativeRectToViewportRelativeRect:zF,getDocumentElement:Jr,getClippingRect:jF,getOffsetParent:ek,getElementRects:XF,getClientRects:VF,getDimensions:qF,getScale:Zi,isElement:br,isRTL:YF};function tk(n,e){return n.x===e.x&&n.y===e.y&&n.width===e.width&&n.height===e.height}function JF(n,e){let t=null,s;const r=Jr(n);function a(){var i;clearTimeout(s),(i=t)==null||i.disconnect(),t=null}function o(i,u){i===void 0&&(i=!1),u===void 0&&(u=1),a();const c=n.getBoundingClientRect(),{left:l,top:d,width:h,height:p}=c;if(i||e(),!h||!p)return;const f=Tp(d),m=Tp(r.clientWidth-(l+h)),g=Tp(r.clientHeight-(d+p)),y=Tp(l),x={rootMargin:-f+"px "+-m+"px "+-g+"px "+-y+"px",threshold:Es(0,Qa(1,u))||1};let w=!0;function v(S){const N=S[0].intersectionRatio;if(N!==u){if(!w)return o();N?o(!1,N):s=setTimeout(()=>{o(!1,1e-7)},1e3)}N===1&&!tk(c,n.getBoundingClientRect())&&o(),w=!1}try{t=new IntersectionObserver(v,{...x,root:r.ownerDocument})}catch{t=new IntersectionObserver(v,x)}t.observe(n)}return o(!0),a}function QF(n,e,t,s){s===void 0&&(s={});const{ancestorScroll:r=!0,ancestorResize:a=!0,elementResize:o=typeof ResizeObserver=="function",layoutShift:i=typeof IntersectionObserver=="function",animationFrame:u=!1}=s,c=ux(n),l=r||a?[...c?Vc(c):[],...Vc(e)]:[];l.forEach(y=>{r&&y.addEventListener("scroll",t,{passive:!0}),a&&y.addEventListener("resize",t)});const d=c&&i?JF(c,t):null;let h=-1,p=null;o&&(p=new ResizeObserver(y=>{let[b]=y;b&&b.target===c&&p&&(p.unobserve(e),cancelAnimationFrame(h),h=requestAnimationFrame(()=>{var x;(x=p)==null||x.observe(e)})),t()}),c&&!u&&p.observe(c),p.observe(e));let f,m=u?Ko(n):null;u&&g();function g(){const y=Ko(n);m&&!tk(m,y)&&t(),m=y,f=requestAnimationFrame(g)}return t(),()=>{var y;l.forEach(b=>{r&&b.removeEventListener("scroll",t),a&&b.removeEventListener("resize",t)}),d==null||d(),(y=p)==null||y.disconnect(),p=null,u&&cancelAnimationFrame(f)}}const eP=DF,tP=RF,nP=_F,sP=FF,rP=EF,aP=$F,oP=OF,iP=(n,e,t)=>{const s=new Map,r={platform:ZF,...t},a={...r.platform,_c:s};return TF(n,e,{...r,platform:a})};function bc(n){return typeof n=="function"?n():n}function nk(n){return typeof window>"u"?1:(n.ownerDocument.defaultView||window).devicePixelRatio||1}function Pv(n,e){const t=nk(n);return Math.round(e*t)/t}function Lv(n){return{[`--bits-${n}-content-transform-origin`]:"var(--bits-floating-transform-origin)",[`--bits-${n}-content-available-width`]:"var(--bits-floating-available-width)",[`--bits-${n}-content-available-height`]:"var(--bits-floating-available-height)",[`--bits-${n}-anchor-width`]:"var(--bits-floating-anchor-width)",[`--bits-${n}-anchor-height`]:"var(--bits-floating-anchor-height)"}}function uP(n){const e=n.whileElementsMounted,t=Ue(()=>bc(n.open)??!0),s=Ue(()=>bc(n.middleware)),r=Ue(()=>bc(n.transform)??!0),a=Ue(()=>bc(n.placement)??"bottom"),o=Ue(()=>bc(n.strategy)??"absolute"),i=n.reference;let u=je(0),c=je(0);const l=ce(null);let d=je(ts(K(o))),h=je(ts(K(a))),p=je(ts({})),f=je(!1);const m=Ue(()=>{const v={position:K(d),left:"0",top:"0"};if(!l.current)return v;const S=Pv(l.current,K(u)),N=Pv(l.current,K(c));return K(r)?{...v,transform:`translate(${S}px, ${N}px)`,...nk(l.current)>=1.5&&{willChange:"transform"}}:{position:K(d),left:`${S}px`,top:`${N}px`}});let g;function y(){i.current===null||l.current===null||iP(i.current,l.current,{middleware:K(s),placement:K(a),strategy:K(o)}).then(v=>{de(u,v.x,!0),de(c,v.y,!0),de(d,v.strategy,!0),de(h,v.placement,!0),de(p,v.middlewareData,!0),de(f,!0)})}function b(){typeof g=="function"&&(g(),g=void 0)}function x(){if(b(),e===void 0){y();return}i.current===null||l.current===null||(g=e(i.current,l.current,y))}function w(){K(t)||de(f,!1)}return Nn(y),Nn(x),Nn(w),Nn(()=>b),{floating:l,reference:i,get strategy(){return K(d)},get placement(){return K(h)},get middlewareData(){return K(p)},get isPositioned(){return K(f)},get floatingStyles(){return K(m)},get update(){return y}}}const lP={top:"bottom",right:"left",bottom:"top",left:"right"};class cP{constructor(){gt(this,"anchorNode",ce(null));gt(this,"customAnchorNode",ce(null));gt(this,"triggerNode",ce(null));Nn(()=>{this.customAnchorNode.current?typeof this.customAnchorNode.current=="string"?this.anchorNode.current=document.querySelector(this.customAnchorNode.current):this.anchorNode.current=this.customAnchorNode.current:this.anchorNode.current=this.triggerNode.current})}}var gd,nm,yd,sm,bd,rm,xd,wd,vd,Id,Sd,kd,Nd,Cd,Td,$d,_d,Ed,Ad,Dd,Rd,Od,Fd,Pd;class dP{constructor(e,t){gt(this,"opts");gt(this,"root");gt(this,"contentRef",ce(null));gt(this,"wrapperRef",ce(null));gt(this,"arrowRef",ce(null));gt(this,"arrowId",ce(pi()));xe(this,gd,Ue(()=>{if(typeof this.opts.style=="string")return kc(this.opts.style);if(!this.opts.style)return{}}));xe(this,nm);xe(this,yd,new uO(()=>this.arrowRef.current??void 0));xe(this,sm,Ue(()=>{var e;return((e=Q(this,yd))==null?void 0:e.width)??0}));xe(this,bd,Ue(()=>{var e;return((e=Q(this,yd))==null?void 0:e.height)??0}));xe(this,rm,Ue(()=>{var e;return((e=this.opts.side)==null?void 0:e.current)+(this.opts.align.current!=="center"?`-${this.opts.align.current}`:"")}));xe(this,xd,Ue(()=>Array.isArray(this.opts.collisionBoundary.current)?this.opts.collisionBoundary.current:[this.opts.collisionBoundary.current]));xe(this,wd,Ue(()=>K(Q(this,xd)).length>0));xe(this,vd,Ue(()=>({padding:this.opts.collisionPadding.current,boundary:K(Q(this,xd)).filter(yO),altBoundary:this.hasExplicitBoundaries})));xe(this,Id,je(void 0));xe(this,Sd,je(void 0));xe(this,kd,je(void 0));xe(this,Nd,je(void 0));xe(this,Cd,Ue(()=>[eP({mainAxis:this.opts.sideOffset.current+K(Q(this,bd)),alignmentAxis:this.opts.alignOffset.current}),this.opts.avoidCollisions.current&&tP({mainAxis:!0,crossAxis:!1,limiter:this.opts.sticky.current==="partial"?oP():void 0,...this.detectOverflowOptions}),this.opts.avoidCollisions.current&&nP({...this.detectOverflowOptions}),sP({...this.detectOverflowOptions,apply:({rects:e,availableWidth:t,availableHeight:s})=>{const{width:r,height:a}=e.reference;de(Q(this,Id),t,!0),de(Q(this,Sd),s,!0),de(Q(this,kd),r,!0),de(Q(this,Nd),a,!0)}}),this.arrowRef.current&&aP({element:this.arrowRef.current,padding:this.opts.arrowPadding.current}),yP({arrowWidth:K(Q(this,sm)),arrowHeight:K(Q(this,bd))}),this.opts.hideWhenDetached.current&&rP({strategy:"referenceHidden",...this.detectOverflowOptions})].filter(Boolean)));gt(this,"floating");xe(this,Td,Ue(()=>bP(this.floating.placement)));xe(this,$d,Ue(()=>xP(this.floating.placement)));xe(this,_d,Ue(()=>{var e;return((e=this.floating.middlewareData.arrow)==null?void 0:e.x)??0}));xe(this,Ed,Ue(()=>{var e;return((e=this.floating.middlewareData.arrow)==null?void 0:e.y)??0}));xe(this,Ad,Ue(()=>{var e;return((e=this.floating.middlewareData.arrow)==null?void 0:e.centerOffset)!==0}));xe(this,Dd,je());xe(this,Rd,Ue(()=>lP[this.placedSide]));xe(this,Od,Ue(()=>{var e,t,s;return{id:this.opts.wrapperId.current,"data-bits-floating-content-wrapper":"",style:{...this.floating.floatingStyles,transform:this.floating.isPositioned?this.floating.floatingStyles.transform:"translate(0, -200%)",minWidth:"max-content",zIndex:this.contentZIndex,"--bits-floating-transform-origin":`${(e=this.floating.middlewareData.transformOrigin)==null?void 0:e.x} ${(t=this.floating.middlewareData.transformOrigin)==null?void 0:t.y}`,"--bits-floating-available-width":`${K(Q(this,Id))}px`,"--bits-floating-available-height":`${K(Q(this,Sd))}px`,"--bits-floating-anchor-width":`${K(Q(this,kd))}px`,"--bits-floating-anchor-height":`${K(Q(this,Nd))}px`,...((s=this.floating.middlewareData.hide)==null?void 0:s.referenceHidden)&&{visibility:"hidden","pointer-events":"none"},...K(Q(this,gd))},dir:this.opts.dir.current}}));xe(this,Fd,Ue(()=>({"data-side":this.placedSide,"data-align":this.placedAlign,style:Qb({...K(Q(this,gd))})})));xe(this,Pd,Ue(()=>({position:"absolute",left:this.arrowX?`${this.arrowX}px`:void 0,top:this.arrowY?`${this.arrowY}px`:void 0,[this.arrowBaseSide]:0,"transform-origin":{top:"",right:"0 0",bottom:"center 0",left:"100% 0"}[this.placedSide],transform:{top:"translateY(100%)",right:"translateY(50%) rotate(90deg) translateX(-50%)",bottom:"rotate(180deg)",left:"translateY(50%) rotate(-90deg) translateX(50%)"}[this.placedSide],visibility:this.cannotCenterArrow?"hidden":void 0})));this.opts=e,this.root=t,e.customAnchor&&(this.root.customAnchorNode.current=e.customAnchor.current),ss(()=>e.customAnchor.current,s=>{this.root.customAnchorNode.current=s}),wa({id:this.opts.wrapperId,ref:this.wrapperRef,deps:()=>this.opts.enabled.current}),wa({id:this.opts.id,ref:this.contentRef,deps:()=>this.opts.enabled.current}),this.floating=uP({strategy:()=>this.opts.strategy.current,placement:()=>K(Q(this,rm)),middleware:()=>this.middleware,reference:this.root.anchorNode,whileElementsMounted:(...s)=>{var a;return QF(...s,{animationFrame:((a=Q(this,nm))==null?void 0:a.current)==="always"})},open:()=>this.opts.enabled.current}),Nn(()=>{var s;this.floating.isPositioned&&((s=this.opts.onPlaced)==null||s.current())}),ss(()=>this.contentRef.current,s=>{s&&(this.contentZIndex=window.getComputedStyle(s).zIndex)}),Nn(()=>{this.floating.floating.current=this.wrapperRef.current})}get hasExplicitBoundaries(){return K(Q(this,wd))}set hasExplicitBoundaries(e){de(Q(this,wd),e)}get detectOverflowOptions(){return K(Q(this,vd))}set detectOverflowOptions(e){de(Q(this,vd),e)}get middleware(){return K(Q(this,Cd))}set middleware(e){de(Q(this,Cd),e)}get placedSide(){return K(Q(this,Td))}set placedSide(e){de(Q(this,Td),e)}get placedAlign(){return K(Q(this,$d))}set placedAlign(e){de(Q(this,$d),e)}get arrowX(){return K(Q(this,_d))}set arrowX(e){de(Q(this,_d),e)}get arrowY(){return K(Q(this,Ed))}set arrowY(e){de(Q(this,Ed),e)}get cannotCenterArrow(){return K(Q(this,Ad))}set cannotCenterArrow(e){de(Q(this,Ad),e)}get contentZIndex(){return K(Q(this,Dd))}set contentZIndex(e){de(Q(this,Dd),e,!0)}get arrowBaseSide(){return K(Q(this,Rd))}set arrowBaseSide(e){de(Q(this,Rd),e)}get wrapperProps(){return K(Q(this,Od))}set wrapperProps(e){de(Q(this,Od),e)}get props(){return K(Q(this,Fd))}set props(e){de(Q(this,Fd),e)}get arrowStyle(){return K(Q(this,Pd))}set arrowStyle(e){de(Q(this,Pd),e)}}gd=new WeakMap,nm=new WeakMap,yd=new WeakMap,sm=new WeakMap,bd=new WeakMap,rm=new WeakMap,xd=new WeakMap,wd=new WeakMap,vd=new WeakMap,Id=new WeakMap,Sd=new WeakMap,kd=new WeakMap,Nd=new WeakMap,Cd=new WeakMap,Td=new WeakMap,$d=new WeakMap,_d=new WeakMap,Ed=new WeakMap,Ad=new WeakMap,Dd=new WeakMap,Rd=new WeakMap,Od=new WeakMap,Fd=new WeakMap,Pd=new WeakMap;class hP{constructor(e,t){gt(this,"opts");gt(this,"root");gt(this,"ref",ce(null));this.opts=e,this.root=t,e.virtualEl&&e.virtualEl.current?t.triggerNode=ce.from(e.virtualEl.current):wa({id:e.id,ref:this.ref,onRefChange:s=>{t.triggerNode.current=s}})}}const cx=new xm("Floating.Root"),pP=new xm("Floating.Content");function fP(){return cx.set(new cP)}function mP(n){return pP.set(new dP(n,cx.get()))}function gP(n){return new hP(n,cx.get())}function yP(n){return{name:"transformOrigin",options:n,fn(e){var g,y,b;const{placement:t,rects:s,middlewareData:r}=e,o=((g=r.arrow)==null?void 0:g.centerOffset)!==0,i=o?0:n.arrowWidth,u=o?0:n.arrowHeight,[c,l]=dx(t),d={start:"0%",center:"50%",end:"100%"}[l],h=(((y=r.arrow)==null?void 0:y.x)??0)+i/2,p=(((b=r.arrow)==null?void 0:b.y)??0)+u/2;let f="",m="";return c==="bottom"?(f=o?d:`${h}px`,m=`${-u}px`):c==="top"?(f=o?d:`${h}px`,m=`${s.floating.height+u}px`):c==="right"?(f=`${-u}px`,m=o?d:`${p}px`):c==="left"&&(f=`${s.floating.width+u}px`,m=o?d:`${p}px`),{data:{x:f,y:m}}}}}function dx(n){const[e,t="center"]=n.split("-");return[e,t]}function bP(n){return dx(n)[0]}function xP(n){return dx(n)[1]}function wP(n,e){qt(e,!0),fP();var t=pt(),s=Je(t);Ot(s,()=>e.children??jt),De(n,t),Kt()}function vP(n,e){qt(e,!0),gP({id:ce.with(()=>e.id),virtualEl:ce.with(()=>e.virtualEl)});var t=pt(),s=Je(t);Ot(s,()=>e.children??jt),De(n,t),Kt()}function IP(n,e){qt(e,!0);let t=ye(e,"side",3,"bottom"),s=ye(e,"sideOffset",3,0),r=ye(e,"align",3,"center"),a=ye(e,"alignOffset",3,0),o=ye(e,"arrowPadding",3,0),i=ye(e,"avoidCollisions",3,!0),u=ye(e,"collisionBoundary",19,()=>[]),c=ye(e,"collisionPadding",3,0),l=ye(e,"hideWhenDetached",3,!1),d=ye(e,"onPlaced",3,()=>{}),h=ye(e,"sticky",3,"partial"),p=ye(e,"updatePositionStrategy",3,"optimized"),f=ye(e,"strategy",3,"fixed"),m=ye(e,"dir",3,"ltr"),g=ye(e,"style",19,()=>({})),y=ye(e,"wrapperId",19,pi),b=ye(e,"customAnchor",3,null);const x=mP({side:ce.with(()=>t()),sideOffset:ce.with(()=>s()),align:ce.with(()=>r()),alignOffset:ce.with(()=>a()),id:ce.with(()=>e.id),arrowPadding:ce.with(()=>o()),avoidCollisions:ce.with(()=>i()),collisionBoundary:ce.with(()=>u()),collisionPadding:ce.with(()=>c()),hideWhenDetached:ce.with(()=>l()),onPlaced:ce.with(()=>d()),sticky:ce.with(()=>h()),updatePositionStrategy:ce.with(()=>p()),strategy:ce.with(()=>f()),dir:ce.with(()=>m()),style:ce.with(()=>g()),enabled:ce.with(()=>e.enabled),wrapperId:ce.with(()=>y()),customAnchor:ce.with(()=>b())}),w=Ue(()=>Uo(x.wrapperProps,{style:{pointerEvents:"auto"}}));var v=pt(),S=Je(v);Ot(S,()=>e.content??jt,()=>({props:x.props,wrapperProps:K(w)})),De(n,v),Kt()}function SP(n,e){qt(e,!0),ES(()=>{var r;(r=e.onPlaced)==null||r.call(e)});var t=pt(),s=Je(t);Ot(s,()=>e.content??jt,()=>({props:{},wrapperProps:{}})),De(n,t),Kt()}const kP="data-separator-root";var Ld;class NP{constructor(e){gt(this,"opts");xe(this,Ld,Ue(()=>({id:this.opts.id.current,role:this.opts.decorative.current?"none":"separator","aria-orientation":this.opts.orientation.current,"aria-hidden":dO(this.opts.decorative.current),"data-orientation":this.opts.orientation.current,[kP]:""})));this.opts=e,wa(e)}get props(){return K(Q(this,Ld))}set props(e){de(Q(this,Ld),e)}}Ld=new WeakMap;function CP(n){return new NP(n)}var TP=mn("<div><!></div>");function $P(n,e){qt(e,!0);let t=ye(e,"id",19,pi),s=ye(e,"ref",15,null),r=ye(e,"decorative",3,!1),a=ye(e,"orientation",3,"horizontal"),o=kr(e,["$$slots","$$events","$$legacy","id","ref","child","children","decorative","orientation"]);const i=CP({ref:ce.with(()=>s(),p=>s(p)),id:ce.with(()=>t()),decorative:ce.with(()=>r()),orientation:ce.with(()=>a())}),u=Ue(()=>Uo(o,i.props));var c=pt(),l=Je(c);{var d=p=>{var f=pt(),m=Je(f);Ot(m,()=>e.child,()=>({props:K(u)})),De(p,f)},h=p=>{var f=TP();let m;var g=yt(f);Ot(g,()=>e.children??jt),Jn(()=>m=Va(f,m,{...K(u)})),De(p,f)};In(l,p=>{e.child?p(d):p(h,!1)})}De(n,c),Kt()}function _P(n,e){let t=ye(e,"isStatic",3,!1),s=kr(e,["$$slots","$$events","$$legacy","content","isStatic","onPlaced"]);var r=pt(),a=Je(r);{var o=u=>{SP(u,{get content(){return e.content},get onPlaced(){return e.onPlaced}})},i=u=>{IP(u,xa({get content(){return e.content},get onPlaced(){return e.onPlaced}},()=>s))};In(a,u=>{t()?u(o):u(i,!1)})}De(n,r)}var EP=mn("<!> <!>",1);function sk(n,e){qt(e,!0);let t=ye(e,"interactOutsideBehavior",3,"close"),s=ye(e,"trapFocus",3,!0),r=ye(e,"isValidEvent",3,()=>!1),a=ye(e,"customAnchor",3,null),o=ye(e,"isStatic",3,!1),i=kr(e,["$$slots","$$events","$$legacy","popper","onEscapeKeydown","escapeKeydownBehavior","preventOverflowTextSelection","id","onPointerDown","onPointerUp","side","sideOffset","align","alignOffset","arrowPadding","avoidCollisions","collisionBoundary","collisionPadding","sticky","hideWhenDetached","updatePositionStrategy","strategy","dir","preventScroll","wrapperId","style","onPlaced","onInteractOutside","onCloseAutoFocus","onOpenAutoFocus","onFocusOutside","interactOutsideBehavior","loop","trapFocus","isValidEvent","customAnchor","isStatic","enabled"]);_P(n,{get isStatic(){return o()},get id(){return e.id},get side(){return e.side},get sideOffset(){return e.sideOffset},get align(){return e.align},get alignOffset(){return e.alignOffset},get arrowPadding(){return e.arrowPadding},get avoidCollisions(){return e.avoidCollisions},get collisionBoundary(){return e.collisionBoundary},get collisionPadding(){return e.collisionPadding},get sticky(){return e.sticky},get hideWhenDetached(){return e.hideWhenDetached},get updatePositionStrategy(){return e.updatePositionStrategy},get strategy(){return e.strategy},get dir(){return e.dir},get wrapperId(){return e.wrapperId},get style(){return e.style},get onPlaced(){return e.onPlaced},get customAnchor(){return a()},get enabled(){return e.enabled},content:(c,l)=>{let d=()=>l==null?void 0:l().props,h=()=>l==null?void 0:l().wrapperProps;var p=EP(),f=Je(p);{var m=x=>{_v(x,{get preventScroll(){return e.preventScroll}})},g=(x,w)=>{{var v=S=>{_v(S,{get preventScroll(){return e.preventScroll}})};In(x,S=>{e.forceMount||S(v)},w)}};In(f,x=>{e.forceMount&&e.enabled?x(m):x(g,!1)})}var y=vn(f,2);const b=Ue(()=>e.enabled&&s());lF(y,{get id(){return e.id},get onOpenAutoFocus(){return e.onOpenAutoFocus},get onCloseAutoFocus(){return e.onCloseAutoFocus},get loop(){return e.loop},get trapFocus(){return K(b)},get forceMount(){return e.forceMount},focusScope:(w,v)=>{let S=()=>v==null?void 0:v().props;FO(w,{get onEscapeKeydown(){return e.onEscapeKeydown},get escapeKeydownBehavior(){return e.escapeKeydownBehavior},get enabled(){return e.enabled},children:(N,$)=>{AO(N,{get id(){return e.id},get onInteractOutside(){return e.onInteractOutside},get onFocusOutside(){return e.onFocusOutside},get interactOutsideBehavior(){return t()},get isValidEvent(){return r()},get enabled(){return e.enabled},children:(C,k)=>{let A=()=>k==null?void 0:k().props;fF(C,{get id(){return e.id},get preventOverflowTextSelection(){return e.preventOverflowTextSelection},get onPointerDown(){return e.onPointerDown},get onPointerUp(){return e.onPointerUp},get enabled(){return e.enabled},children:(D,R)=>{var F=pt(),z=Je(F),H=of(()=>({props:Uo(i,d(),A(),S(),{style:{pointerEvents:"auto"}}),wrapperProps:h()}));Ot(z,()=>e.popper??jt,()=>K(H)),De(D,F)},$$slots:{default:!0}})},$$slots:{default:!0}})},$$slots:{default:!0}})},$$slots:{focusScope:!0}}),De(c,p)},$$slots:{content:!0}}),Kt()}function AP(n,e){let t=ye(e,"interactOutsideBehavior",3,"close"),s=ye(e,"trapFocus",3,!0),r=ye(e,"isValidEvent",3,()=>!1),a=ye(e,"customAnchor",3,null),o=ye(e,"isStatic",3,!1),i=kr(e,["$$slots","$$events","$$legacy","popper","present","onEscapeKeydown","escapeKeydownBehavior","preventOverflowTextSelection","id","onPointerDown","onPointerUp","side","sideOffset","align","alignOffset","arrowPadding","avoidCollisions","collisionBoundary","collisionPadding","sticky","hideWhenDetached","updatePositionStrategy","strategy","dir","preventScroll","wrapperId","style","onPlaced","onInteractOutside","onCloseAutoFocus","onOpenAutoFocus","onFocusOutside","interactOutsideBehavior","loop","trapFocus","isValidEvent","customAnchor","isStatic"]);IO(n,xa({get id(){return e.id},get present(){return e.present}},()=>i,{presence:c=>{sk(c,xa({get popper(){return e.popper},get onEscapeKeydown(){return e.onEscapeKeydown},get escapeKeydownBehavior(){return e.escapeKeydownBehavior},get preventOverflowTextSelection(){return e.preventOverflowTextSelection},get id(){return e.id},get onPointerDown(){return e.onPointerDown},get onPointerUp(){return e.onPointerUp},get side(){return e.side},get sideOffset(){return e.sideOffset},get align(){return e.align},get alignOffset(){return e.alignOffset},get arrowPadding(){return e.arrowPadding},get avoidCollisions(){return e.avoidCollisions},get collisionBoundary(){return e.collisionBoundary},get collisionPadding(){return e.collisionPadding},get sticky(){return e.sticky},get hideWhenDetached(){return e.hideWhenDetached},get updatePositionStrategy(){return e.updatePositionStrategy},get strategy(){return e.strategy},get dir(){return e.dir},get preventScroll(){return e.preventScroll},get wrapperId(){return e.wrapperId},get style(){return e.style},get onPlaced(){return e.onPlaced},get customAnchor(){return a()},get isStatic(){return o()},get enabled(){return e.present},get onInteractOutside(){return e.onInteractOutside},get onCloseAutoFocus(){return e.onCloseAutoFocus},get onOpenAutoFocus(){return e.onOpenAutoFocus},get interactOutsideBehavior(){return t()},get loop(){return e.loop},get trapFocus(){return s()},get isValidEvent(){return r()},get onFocusOutside(){return e.onFocusOutside},forceMount:!1},()=>i))},$$slots:{presence:!0}}))}function DP(n,e){let t=ye(e,"interactOutsideBehavior",3,"close"),s=ye(e,"trapFocus",3,!0),r=ye(e,"isValidEvent",3,()=>!1),a=ye(e,"customAnchor",3,null),o=ye(e,"isStatic",3,!1),i=kr(e,["$$slots","$$events","$$legacy","popper","onEscapeKeydown","escapeKeydownBehavior","preventOverflowTextSelection","id","onPointerDown","onPointerUp","side","sideOffset","align","alignOffset","arrowPadding","avoidCollisions","collisionBoundary","collisionPadding","sticky","hideWhenDetached","updatePositionStrategy","strategy","dir","preventScroll","wrapperId","style","onPlaced","onInteractOutside","onCloseAutoFocus","onOpenAutoFocus","onFocusOutside","interactOutsideBehavior","loop","trapFocus","isValidEvent","customAnchor","isStatic","enabled"]);sk(n,xa({get popper(){return e.popper},get onEscapeKeydown(){return e.onEscapeKeydown},get escapeKeydownBehavior(){return e.escapeKeydownBehavior},get preventOverflowTextSelection(){return e.preventOverflowTextSelection},get id(){return e.id},get onPointerDown(){return e.onPointerDown},get onPointerUp(){return e.onPointerUp},get side(){return e.side},get sideOffset(){return e.sideOffset},get align(){return e.align},get alignOffset(){return e.alignOffset},get arrowPadding(){return e.arrowPadding},get avoidCollisions(){return e.avoidCollisions},get collisionBoundary(){return e.collisionBoundary},get collisionPadding(){return e.collisionPadding},get sticky(){return e.sticky},get hideWhenDetached(){return e.hideWhenDetached},get updatePositionStrategy(){return e.updatePositionStrategy},get strategy(){return e.strategy},get dir(){return e.dir},get preventScroll(){return e.preventScroll},get wrapperId(){return e.wrapperId},get style(){return e.style},get onPlaced(){return e.onPlaced},get customAnchor(){return a()},get isStatic(){return o()},get enabled(){return e.enabled},get onInteractOutside(){return e.onInteractOutside},get onCloseAutoFocus(){return e.onCloseAutoFocus},get onOpenAutoFocus(){return e.onOpenAutoFocus},get interactOutsideBehavior(){return t()},get loop(){return e.loop},get trapFocus(){return s()},get isValidEvent(){return r()},get onFocusOutside(){return e.onFocusOutside}},()=>i,{forceMount:!0}))}var Md,Bd;class RP{constructor(e){gt(this,"opts");xe(this,Md,je(null));xe(this,Bd,je(null));this.opts=e}get contentNode(){return K(Q(this,Md))}set contentNode(e){de(Q(this,Md),e,!0)}get triggerNode(){return K(Q(this,Bd))}set triggerNode(e){de(Q(this,Bd),e,!0)}toggleOpen(){this.opts.open.current=!this.opts.open.current}handleClose(){this.opts.open.current&&(this.opts.open.current=!1)}}Md=new WeakMap,Bd=new WeakMap;var am,rk,zd;class OP{constructor(e,t){xe(this,am);gt(this,"opts");gt(this,"root");xe(this,zd,Ue(()=>({id:this.opts.id.current,"aria-haspopup":"dialog","aria-expanded":cO(this.root.opts.open.current),"data-state":PS(this.root.opts.open.current),"aria-controls":Da(this,am,rk).call(this),"data-popover-trigger":"",disabled:this.opts.disabled.current,onkeydown:this.onkeydown,onclick:this.onclick})));this.opts=e,this.root=t,wa({...e,onRefChange:s=>{this.root.triggerNode=s}}),this.onclick=this.onclick.bind(this),this.onkeydown=this.onkeydown.bind(this)}onclick(e){this.opts.disabled.current||e.button===0&&this.root.toggleOpen()}onkeydown(e){this.opts.disabled.current||(e.key===hO||e.key===fO)&&(e.preventDefault(),this.root.toggleOpen())}get props(){return K(Q(this,zd))}set props(e){de(Q(this,zd),e)}}am=new WeakSet,rk=function(){var e,t;if(this.root.opts.open.current&&((e=this.root.contentNode)!=null&&e.id))return(t=this.root.contentNode)==null?void 0:t.id},zd=new WeakMap;var Vd,Wd;class FP{constructor(e,t){gt(this,"opts");gt(this,"root");gt(this,"onInteractOutside",e=>{this.opts.onInteractOutside.current(e),!(e.defaultPrevented||!LS(e.target)||e.target.closest("[data-popover-trigger]")===this.root.triggerNode)&&this.root.handleClose()});gt(this,"onEscapeKeydown",e=>{this.opts.onEscapeKeydown.current(e),!e.defaultPrevented&&this.root.handleClose()});gt(this,"onCloseAutoFocus",e=>{var t;this.opts.onCloseAutoFocus.current(e),!e.defaultPrevented&&(e.preventDefault(),(t=this.root.triggerNode)==null||t.focus())});xe(this,Vd,Ue(()=>({open:this.root.opts.open.current})));xe(this,Wd,Ue(()=>({id:this.opts.id.current,tabindex:-1,"data-state":PS(this.root.opts.open.current),"data-popover-content":"",style:{pointerEvents:"auto"}})));gt(this,"popperProps",{onInteractOutside:this.onInteractOutside,onEscapeKeydown:this.onEscapeKeydown,onCloseAutoFocus:this.onCloseAutoFocus});this.opts=e,this.root=t,wa({...e,deps:()=>this.root.opts.open.current,onRefChange:s=>{this.root.contentNode=s}})}get snippetProps(){return K(Q(this,Vd))}set snippetProps(e){de(Q(this,Vd),e)}get props(){return K(Q(this,Wd))}set props(e){de(Q(this,Wd),e)}}Vd=new WeakMap,Wd=new WeakMap;const hx=new xm("Popover.Root");function PP(n){return hx.set(new RP(n))}function LP(n){return new OP(n,hx.get())}function MP(n){return new FP(n,hx.get())}var BP=mn("<div><div><!></div></div>"),zP=mn("<div><div><!></div></div>");function VP(n,e){qt(e,!0);let t=ye(e,"ref",15,null),s=ye(e,"id",19,pi),r=ye(e,"forceMount",3,!1),a=ye(e,"onCloseAutoFocus",3,Fn),o=ye(e,"onEscapeKeydown",3,Fn),i=ye(e,"onInteractOutside",3,Fn),u=ye(e,"trapFocus",3,!0),c=ye(e,"preventScroll",3,!1),l=kr(e,["$$slots","$$events","$$legacy","child","children","ref","id","forceMount","onCloseAutoFocus","onEscapeKeydown","onInteractOutside","trapFocus","preventScroll"]);const d=MP({id:ce.with(()=>s()),ref:ce.with(()=>t(),y=>t(y)),onInteractOutside:ce.with(()=>i()),onEscapeKeydown:ce.with(()=>o()),onCloseAutoFocus:ce.with(()=>a())}),h=Ue(()=>Uo(l,d.props));var p=pt(),f=Je(p);{var m=y=>{DP(y,xa(()=>K(h),()=>d.popperProps,{get enabled(){return d.root.opts.open.current},get id(){return s()},get trapFocus(){return u()},get preventScroll(){return c()},loop:!0,forceMount:!0,popper:(x,w)=>{let v=()=>w==null?void 0:w().props,S=()=>w==null?void 0:w().wrapperProps;var N=pt();const $=Ue(()=>Uo(v(),{style:Lv("popover")}));var T=Je(N);{var C=A=>{var D=pt(),R=Je(D),F=of(()=>({props:K($),wrapperProps:S(),...d.snippetProps}));Ot(R,()=>e.child,()=>K(F)),De(A,D)},k=A=>{var D=BP();let R;var F=yt(D);let z;var H=yt(F);Ot(H,()=>e.children??jt),Jn(()=>{R=Va(D,R,{...S()}),z=Va(F,z,{...K($)})}),De(A,D)};In(T,A=>{e.child?A(C):A(k,!1)})}De(x,N)},$$slots:{popper:!0}}))},g=(y,b)=>{{var x=w=>{AP(w,xa(()=>K(h),()=>d.popperProps,{get present(){return d.root.opts.open.current},get id(){return s()},get trapFocus(){return u()},get preventScroll(){return c()},loop:!0,forceMount:!1,popper:(S,N)=>{let $=()=>N==null?void 0:N().props,T=()=>N==null?void 0:N().wrapperProps;var C=pt();const k=Ue(()=>Uo($(),{style:Lv("popover")}));var A=Je(C);{var D=F=>{var z=pt(),H=Je(z),P=of(()=>({props:K(k),wrapperProps:T(),...d.snippetProps}));Ot(H,()=>e.child,()=>K(P)),De(F,z)},R=F=>{var z=zP();let H;var P=yt(z);let G;var X=yt(P);Ot(X,()=>e.children??jt),Jn(()=>{H=Va(z,H,{...T()}),G=Va(P,G,{...K(k)})}),De(F,z)};In(A,F=>{e.child?F(D):F(R,!1)})}De(S,C)},$$slots:{popper:!0}}))};In(y,w=>{r()||w(x)},b)}};In(f,y=>{r()?y(m):y(g,!1)})}De(n,p),Kt()}var WP=mn("<button><!></button>");function UP(n,e){qt(e,!0);let t=ye(e,"id",19,pi),s=ye(e,"ref",15,null),r=ye(e,"type",3,"button"),a=ye(e,"disabled",3,!1),o=kr(e,["$$slots","$$events","$$legacy","children","child","id","ref","type","disabled"]);const i=LP({id:ce.with(()=>t()),ref:ce.with(()=>s(),c=>s(c)),disabled:ce.with(()=>!!a())}),u=Ue(()=>Uo(o,i.props,{type:r()}));vP(n,{get id(){return t()},children:(c,l)=>{var d=pt(),h=Je(d);{var p=m=>{var g=pt(),y=Je(g);Ot(y,()=>e.child,()=>({props:K(u)})),De(m,g)},f=m=>{var g=WP();let y;var b=yt(g);Ot(b,()=>e.children??jt),Jn(()=>y=Va(g,y,{...K(u)})),De(m,g)};In(h,m=>{e.child?m(p):m(f,!1)})}De(c,d)},$$slots:{default:!0}}),Kt()}function GP(n,e){qt(e,!0);let t=ye(e,"open",15,!1),s=ye(e,"onOpenChange",3,Fn);PP({open:ce.with(()=>t(),r=>{t(r),s()(r)})}),wP(n,{children:(r,a)=>{var o=pt(),i=Je(o);Ot(i,()=>e.children??jt),De(r,o)},$$slots:{default:!0}}),Kt()}/**
 * @license @lucide/svelte v0.511.0 - ISC
 *
 * ISC License
 * 
 * Copyright (c) for portions of Lucide are held by Cole Bemis 2013-2022 as part of Feather (MIT). All other copyright (c) for Lucide are held by Lucide Contributors 2022.
 * 
 * Permission to use, copy, modify, and/or distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 * 
 */const HP={xmlns:"http://www.w3.org/2000/svg",width:24,height:24,viewBox:"0 0 24 24",fill:"none",stroke:"currentColor","stroke-width":2,"stroke-linecap":"round","stroke-linejoin":"round"};var jP=oR("<svg><!><!></svg>");function px(n,e){qt(e,!0);const t=ye(e,"color",3,"currentColor"),s=ye(e,"size",3,24),r=ye(e,"strokeWidth",3,2),a=ye(e,"absoluteStrokeWidth",3,!1),o=ye(e,"iconNode",19,()=>[]),i=kr(e,["$$slots","$$events","$$legacy","name","color","size","strokeWidth","absoluteStrokeWidth","iconNode","children"]);var u=jP();let c;var l=yt(u);Gi(l,17,o,Ui,(h,p)=>{let f=()=>K(p)[0],m=()=>K(p)[1];var g=pt(),y=Je(g);fR(y,f,!0,(b,x)=>{let w;Jn(()=>w=Va(b,w,{...m()}))}),De(h,g)});var d=vn(l);Ot(d,()=>e.children??jt),Jn(h=>c=Va(u,c,{...HP,...i,width:s(),height:s(),stroke:t(),"stroke-width":h,class:["lucide-icon lucide",e.name&&`lucide-${e.name}`,e.class]}),[()=>a()?Number(r())*24/Number(s()):r()]),De(n,u),Kt()}function qP(n,e){qt(e,!0);let t=kr(e,["$$slots","$$events","$$legacy"]);px(n,xa({name:"search"},()=>t,{iconNode:[["path",{d:"m21 21-4.34-4.34"}],["circle",{cx:"11",cy:"11",r:"8"}]],children:(r,a)=>{var o=pt(),i=Je(o);Ot(i,()=>e.children??jt),De(r,o)},$$slots:{default:!0}})),Kt()}function Mv(n,e){qt(e,!0);let t=kr(e,["$$slots","$$events","$$legacy"]);px(n,xa({name:"smile"},()=>t,{iconNode:[["circle",{cx:"12",cy:"12",r:"10"}],["path",{d:"M8 14s1.5 2 4 2 4-2 4-2"}],["line",{x1:"9",x2:"9.01",y1:"9",y2:"9"}],["line",{x1:"15",x2:"15.01",y1:"9",y2:"9"}]],children:(r,a)=>{var o=pt(),i=Je(o);Ot(i,()=>e.children??jt),De(r,o)},$$slots:{default:!0}})),Kt()}function KP(n,e){qt(e,!0);let t=kr(e,["$$slots","$$events","$$legacy"]);px(n,xa({name:"x"},()=>t,{iconNode:[["path",{d:"M18 6 6 18"}],["path",{d:"m6 6 12 12"}]],children:(r,a)=>{var o=pt(),i=Je(o);Ot(i,()=>e.children??jt),De(r,o)},$$slots:{default:!0}})),Kt()}const $p={"Smileys & People":["😀","😃","😄","😁","😆","😅","🤣","😂","🙂","🙃","😉","😊","😇","🥰","😍","🤩","😘","😗","☺️","😚","😙","😋","😛","😜","🤪","😝","🤑","🤗","🤭","🤫","🤔","🤐","🤨","😐","😑","😶","😏","😒","🙄","😬","🤥","😔","😪","🤤","😴","😷","🤒","🤕","🤢","🤮","🤧","🥵","🥶","🥴","😵","🤯","🤠","🥳","😎","🤓","🧐","😕","😟","🙁","☹️","😮","😯","😲","😳","🥺","😦","😧","😨","😰","😥","😢","😭","😱","😖","😣","😞","😓","😩","😫","🥱","😤","😡","😠","🤬","😈","👿","💀","☠️","💩","🤡","👹","👺","👻","👽","👾","🤖","😺","😸","😹","😻","😼","😽","🙀","😿","😾"],"Animals & Nature":["🐶","🐱","🐭","🐹","🐰","🦊","🐻","🐼","🐨","🐯","🦁","🐮","🐷","🐽","🐸","🐵","🙈","🙉","🙊","🐒","🐔","🐧","🐦","🐤","🐣","🐥","🦆","🦅","🦉","🦇","🐺","🐗","🐴","🦄","🐝","🐛","🦋","🐌","🐞","🐜","🦟","🦗","🕷️","🕸️","🦂","🐢","🐍","🦎","🦖","🦕","🐙","🦑","🦐","🦞","🦀","🐡","🐠","🐟","🐬","🐳","🐋","🦈","🐊","🐅","🐆","🦓","🦍","🦧","🐘","🦛","🦏","🐪","🐫","🦒","🦘","🐃","🐂","🐄","🐎","🐖","🐏","🐑","🦙","🐐","🦌","🐕","🐩","🦮","🐕‍🦺","🐈","🐓","🦃","🦚","🦜","🦢","🦩","🕊️","🐇","🦝","🦨","🦡","🦦","🦥","🐁","🐀","🐿️","🦔"],"Food & Drink":["🍏","🍎","🍐","🍊","🍋","🍌","🍉","🍇","🍓","🫐","🍈","🍒","🍑","🥭","🍍","🥥","🥝","🍅","🍆","🥑","🥦","🥬","🥒","🌶️","🫑","🌽","🥕","🫒","🧄","🧅","🥔","🍠","🥐","🥯","🍞","🥖","🥨","🧀","🥚","🍳","🧈","🥞","🧇","🥓","🥩","🍗","🍖","🦴","🌭","🍔","🍟","🍕","🫓","🥪","🥙","🧆","🌮","🌯","🫔","🥗","🥘","🫕","🍝","🍜","🍲","🍛","🍣","🍱","🥟","🦪","🍤","🍙","🍚","🍘","🍥","🥠","🥮","🍢","🍡","🍧","🍨","🍦","🥧","🧁","🍰","🎂","🍮","🍭","🍬","🍫","🍿","🍩","🍪","🌰","🥜","🍯","🥛","🍼","☕","🫖","🍵","🧃","🥤","🧋","🍶","🍺","🍻","🥂","🍷","🥃","🍸","🍹","🧉","🍾"],Activity:["⚽","🏀","🏈","⚾","🥎","🎾","🏐","🏉","🥏","🎱","🪀","🏓","🏸","🏒","🏑","🥍","🏏","🪃","🥅","⛳","🪁","🏹","🎣","🤿","🥊","🥋","🎽","🛹","🛷","⛸️","🥌","🎿","⛷️","🏂","🪂","🏋️‍♀️","🏋️","🏋️‍♂️","🤼‍♀️","🤼","🤼‍♂️","🤸‍♀️","🤸","🤸‍♂️","⛹️‍♀️","⛹️","⛹️‍♂️","🤺","🤾‍♀️","🤾","🤾‍♂️","🏌️‍♀️","🏌️","🏌️‍♂️","🧘‍♀️","🧘","🧘‍♂️","🏄‍♀️","🏄","🏄‍♂️","🏊‍♀️","🏊","🏊‍♂️","🤽‍♀️","🤽","🤽‍♂️","🚣‍♀️","🚣","🚣‍♂️","🧗‍♀️","🧗","🧗‍♂️","🚵‍♀️","🚵","🚵‍♂️","🚴‍♀️","🚴","🚴‍♂️","🏆","🥇","🥈","🥉","🏅","🎖️","🏵️","🎗️","🎫","🎟️","🎪","🤹","🤹‍♀️","🤹‍♂️","🎭","🩰","🎨","🎬","🎤","🎧","🎼","🎵","🎶","🥁","🪘","🎹","🎷","🎺","🎸","🪕","🎻"],"Travel & Places":["🚗","🚕","🚙","🚌","🚎","🏎️","🚓","🚑","🚒","🚐","🛻","🚚","🚛","🚜","🏍️","🛵","🚲","🛴","🛹","🛼","🚁","🛸","✈️","🛩️","🛫","🛬","🪂","💺","🚀","🛰️","🚉","🚞","🚝","🚄","🚅","🚈","🚂","🚆","🚇","🚊","🚟","🚠","🚡","🛤️","🛣️","🛑","🚥","🚦","🚧","⚓","⛵","🛶","🚤","🛥️","🛳️","⛴️","🚢","🏗️","🏭","🏠","🏡","🏘️","🏚️","🏗️","🏢","🏬","🏣","🏤","🏥","🏦","🏨","🏪","🏫","🏩","💒","🏛️","⛪","🕌","🛕","🕍","⛩️","🕋","⛲","⛺","🌁","🌃","🏙️","🌄","🌅","🌆","🌇","🌉","♨️","🎠","🎡","🎢","💈","🎪","🚂","🚃","🚄","🚅","🚆","🚇","🚈","🚉","🚊","🚝","🚞","🚋","🚃","🚟","🚠","🚡","⛴️","🛥️","🚤","⛵","🛶","🚁","🛸","✈️","🛩️","🛫","🛬","🪂","💺","🚀","🛰️"],Objects:["⌚","📱","📲","💻","⌨️","🖥️","🖨️","🖱️","🖲️","🕹️","🗜️","💽","💾","💿","📀","📼","📷","📸","📹","🎥","📽️","🎞️","📞","☎️","📟","📠","📺","📻","🎙️","🎚️","🎛️","🧭","⏱️","⏲️","⏰","🕰️","⌛","⏳","📡","🔋","🔌","💡","🔦","🕯️","🪔","🧯","🛢️","💸","💵","💴","💶","💷","🪙","💰","💳","💎","⚖️","🪜","🧰","🔧","🔨","⚒️","🛠️","⛏️","🔩","⚙️","🪚","🔫","🧨","💣","🔪","🗡️","⚔️","🛡️","🚬","⚰️","🪦","⚱️","🏺","🔮","📿","🧿","💈","⚗️","🔭","🔬","🕳️","🩹","🩺","💊","💉","🩸","🧬","🦠","🧫","🧪","🌡️","🧹","🪣","🧽","🧴","🛎️","🔑","🗝️","🚪","🪑","🛋️","🛏️","🛌","🧸","🖼️","🛍️","🛒","🎁","🎈","🎏","🎀","🎊","🎉","🎎","🏮","🎐","🧧","✉️","📩","📨","📧","💌","📥"],Symbols:["❤️","🧡","💛","💚","💙","💜","🖤","🤍","🤎","💔","❣️","💕","💞","💓","💗","💖","💘","💝","💟","☮️","✝️","☪️","🕉️","☸️","✡️","🔯","🕎","☯️","☦️","🛐","⛎","♈","♉","♊","♋","♌","♍","♎","♏","♐","♑","♒","♓","🆔","⚛️","🉑","☢️","☣️","📴","📳","🈶","🈚","🈸","🈺","🈷️","✴️","🆚","💮","🉐","㊙️","㊗️","🈴","🈵","🈹","🈲","🅰️","🅱️","🆎","🆑","🅾️","🆘","❌","⭕","🛑","⛔","📛","🚫","💯","💢","♨️","🚷","🚯","🚳","🚱","🔞","📵","🚭","❗","❕","❓","❔","‼️","⁉️","🔅","🔆","〽️","⚠️","🚸","🔱","⚜️","🔰","♻️","✅","🈯","💹","❇️","✳️","❎","🌐","💠","Ⓜ️","🌀","💤","🏧","🚾","♿","🅿️","🈳","🈂️","🛂","🛃","🛄","🛅","🚹","🚺","🚼","⚧️","🚻","🚮","🎦","📶"],Flags:["🏁","🚩","🎌","🏴","🏳️","🏳️‍🌈","🏳️‍⚧️","🏴‍☠️","🇦🇫","🇦🇽","🇦🇱","🇩🇿","🇦🇸","🇦🇩","🇦🇴","🇦🇮","🇦🇶","🇦🇬","🇦🇷","🇦🇲","🇦🇼","🇦🇺","🇦🇹","🇦🇿","🇧🇸","🇧🇭","🇧🇩","🇧🇧","🇧🇾","🇧🇪","🇧🇿","🇧🇯","🇧🇲","🇧🇹","🇧🇴","🇧🇦","🇧🇼","🇧🇷","🇮🇴","🇻🇬","🇧🇳","🇧🇬","🇧🇫","🇧🇮","🇰🇭","🇨🇲","🇨🇦","🇮🇨","🇨🇻","🇧🇶","🇰🇾","🇨🇫","🇹🇩","🇨🇱","🇨🇳","🇨🇽","🇨🇨","🇨🇴","🇰🇲","🇨🇬","🇨🇩","🇨🇰","🇨🇷","🇨🇮","🇭🇷","🇨🇺","🇨🇼","🇨🇾","🇨🇿","🇩🇰","🇩🇯","🇩🇲","🇩🇴","🇪🇨","🇪🇬","🇸🇻","🇬🇶","🇪🇷","🇪🇪","🇸🇿","🇪🇹","🇪🇺","🇫🇰","🇫🇴","🇫🇯","🇫🇮","🇫🇷","🇬🇫","🇵🇫","🇹🇫","🇬🇦","🇬🇲","🇬🇪","🇩🇪","🇬🇭","🇬🇮","🇬🇷","🇬🇱","🇬🇩","🇬🇵","🇬🇺","🇬🇹","🇬🇬","🇬🇳","🇬🇼","🇬🇾","🇭🇹","🇭🇳","🇭🇰","🇭🇺","🇮🇸","🇮🇳","🇮🇩","🇮🇷","🇮🇶","🇮🇪","🇮🇲","🇮🇱","🇮🇹","🇯🇲","🇯🇵","🇯🇪","🇯🇴","🇰🇿","🇰🇪","🇰🇮","🇽🇰","🇰🇼","🇰🇬","🇱🇦","🇱🇻","🇱🇧","🇱🇸","🇱🇷","🇱🇾","🇱🇮","🇱🇹","🇱🇺","🇲🇴","🇲🇬","🇲🇼","🇲🇾","🇲🇻","🇲🇱","🇲🇹","🇲🇭","🇲🇶","🇲🇷","🇲🇺","🇾🇹","🇲🇽","🇫🇲","🇲🇩","🇲🇨","🇲🇳","🇲🇪","🇲🇸","🇲🇦","🇲🇿","🇲🇲","🇳🇦","🇳🇷","🇳🇵","🇳🇱","🇳🇨","🇳🇿","🇳🇮","🇳🇪","🇳🇬","🇳🇺","🇳🇫","🇰🇵","🇲🇰","🇲🇵","🇳🇴","🇴🇲","🇵🇰","🇵🇼","🇵🇸","🇵🇦","🇵🇬","🇵🇾","🇵🇪","🇵🇭","🇵🇳","🇵🇱","🇵🇹","🇵🇷","🇶🇦","🇷🇪","🇷🇴","🇷🇺","🇷🇼","🇼🇸","🇸🇲","🇸🇹","🇸🇦","🇸🇳","🇷🇸","🇸🇨","🇸🇱","🇸🇬","🇸🇽","🇸🇰","🇸🇮","🇬🇸","🇸🇧","🇸🇴","🇿🇦","🇰🇷","🇸🇸","🇪🇸","🇱🇰","🇧🇱","🇸🇭","🇰🇳","🇱🇨","🇵🇲","🇻🇨","🇸🇩","🇸🇷","🇸🇪","🇨🇭","🇸🇾","🇹🇼","🇹🇯","🇹🇿","🇹🇭","🇹🇱","🇹🇬","🇹🇰","🇹🇴","🇹🇹","🇹🇳","🇹🇷","🇹🇲","🇹🇨","🇹🇻","🇺🇬","🇺🇦","🇦🇪","🇬🇧","🏴󠁧󠁢󠁥󠁮󠁧󠁿","🏴󠁧󠁢󠁳󠁣󠁴󠁿","🏴󠁧󠁢󠁷󠁬󠁳󠁿","🇺🇸","🇻🇮","🇺🇾","🇺🇿","🇻🇺","🇻🇦","🇻🇪","🇻🇳","🇼🇫","🇪🇭","🇾🇪","🇿🇲","🇿🇼"]},XP={"Smileys & People":["😀","😃","😄","😁","😆","😅","🤣","😂","🙂","🙃","😉","😊","😇","🥰","😍","🤩","😘","😗","☺️","😚","😙","😋","😛","😜","🤪","😝","🤑","🤗","🤭","🤫","🤔","🤐","🤨","😐","😑","😶","😏","😒","🙄","😬","🤥","😔","😪","🤤","😴","😷","🤒","🤕","🤢","🤮","🤧","🥵","🥶","🥴","😵","🤯","🤠","🥳","😎","🤓","🧐","😕","😟","🙁","☹️","😮","😯","😲","😳","🥺","😦","😧","😨","😰","😥","😢","😭","😱","😖","😣","😞","😓","😩","😫","🥱","😤","😡","😠","🤬","😈","👿","💀","☠️","💩","🤡","👹","👺","👻","👽","👾","🤖","😺","😸","😹","😻","😼","😽","🙀","😿","😾"],"Animals & Nature":["🐶","🐱","🐭","🐹","🐰","🦊","🐻","🐼","🐨","🐯","🦁","🐮","🐷","🐽","🐸","🐵","🙈","🙉","🙊","🐒","🐔","🐧","🐦","🐤","🐣","🐥","🦆","🦅","🦉","🦇","🐺","🐗","🐴","🦄","🐝","🐛","🦋","🐌","🐞","🐜","🦟","🦗","🕷️","🕸️","🦂","🐢","🐍","🦎","🦖","🦕","🐙","🦑","🦐","🦞","🦀","🐡","🐠","🐟","🐬","🐳","🐋","🦈","🐊","🐅","🐆","🦓","🦍","🦧","🐘","🦛","🦏","🐪","🐫","🦒","🦘","🐃","🐂","🐄","🐎","🐖","🐏","🐑","🦙","🐐","🦌","🐕","🐩","🦮","🐕‍🦺","🐈","🐓","🦃","🦚","🦜","🦢","🦩","🕊️","🐇","🦝","🦨","🦡","🦦","🦥","🐁","🐀","🐿️","🦔"],"Food & Drink":["🍏","🍎","🍐","🍊","🍋","🍌","🍉","🍇","🍓","🫐","🍈","🍒","🍑","🥭","🍍","🥥","🥝","🍅","🍆","🥑","🥦","🥬","🥒","🌶️","🫑","🌽","🥕","🫒","🧄","🧅","🥔","🍠","🥐","🥯","🍞","🥖","🥨","🧀","🥚","🍳","🧈","🥞","🧇","🥓","🥩","🍗","🍖","🦴","🌭","🍔","🍟","🍕","🫓","🥪","🥙","🧆","🌮","🌯","🫔","🥗","🥘","🫕","🍝","🍜","🍲","🍛","🍣","🍱","🥟","🦪","🍤","🍙","🍚","🍘","🍥","🥠","🥮","🍢","🍡","🍧","🍨","🍦","🥧","🧁","🍰","🎂","🍮","🍭","🍬","🍫","🍿","🍩","🍪","🌰","🥜","🍯","🥛","🍼","☕","🫖","🍵","🧃","🥤","🧋","🍶","🍺","🍻","🥂","🍷","🥃","🍸","🍹","🧉","🍾"],Activity:["⚽","🏀","🏈","⚾","🥎","🎾","🏐","🏉","🥏","🎱","🪀","🏓","🏸","🏒","🏑","🥍","🏏","🪃","🥅","⛳","🪁","🏹","🎣","🤿","🥊","🥋","🎽","🛹","🛷","⛸️","🥌","🎿","⛷️","🏂","🪂","🏋️‍♀️","🏋️","🏋️‍♂️","🤼‍♀️","🤼","🤼‍♂️","🤸‍♀️","🤸","🤸‍♂️","⛹️‍♀️","⛹️","⛹️‍♂️","🤺","🤾‍♀️","🤾","🤾‍♂️","🏌️‍♀️","🏌️","🏌️‍♂️","🧘‍♀️","🧘","🧘‍♂️","🏄‍♀️","🏄","🏄‍♂️","🏊‍♀️","🏊","🏊‍♂️","🤽‍♀️","🤽","🤽‍♂️","🚣‍♀️","🚣","🚣‍♂️","🧗‍♀️","🧗","🧗‍♂️","🚵‍♀️","🚵","🚵‍♂️","🚴‍♀️","🚴","🚴‍♂️","🏆","🥇","🥈","🥉","🏅","🎖️","🏵️","🎗️","🎫","🎟️","🎪","🤹","🤹‍♀️","🤹‍♂️","🎭","🩰","🎨","🎬","🎤","🎧","🎼","🎵","🎶","🥁","🪘","🎹","🎷","🎺","🎸","🪕","🎻"],"Travel & Places":["🚗","🚕","🚙","🚌","🚎","🏎️","🚓","🚑","🚒","🚐","🛻","🚚","🚛","🚜","🏍️","🛵","🚲","🛴","🛹","🛼","🚁","🛸","✈️","🛩️","🛫","🛬","🪂","💺","🚀","🛰️","🚉","🚞","🚝","🚄","🚅","🚈","🚂","🚆","🚇","🚊","🚟","🚠","🚡","🛤️","🛣️","🛑","🚥","🚦","🚧","⚓","⛵","🛶","🚤","🛥️","🛳️","⛴️","🚢","🏗️","🏭","🏠","🏡","🏘️","🏚️","🏗️","🏢","🏬","🏣","🏤","🏥","🏦","🏨","🏪","🏫","🏩","💒","🏛️","⛪","🕌","🛕","🕍","⛩️","🕋","⛲","⛺","🌁","🌃","🏙️","🌄","🌅","🌆","🌇","🌉","♨️","🎠","🎡","🎢","💈","🎪","🚂","🚃","🚄","🚅","🚆","🚇","🚈","🚉","🚊","🚝","🚞","🚋","🚃","🚟","🚠","🚡","⛴️","🛥️","🚤","⛵","🛶","🚁","🛸","✈️","🛩️","🛫","🛬","🪂","💺","🚀","🛰️"],Objects:["⌚","📱","📲","💻","⌨️","🖥️","🖨️","🖱️","🖲️","🕹️","🗜️","💽","💾","💿","📀","📼","📷","📸","📹","🎥","📽️","🎞️","📞","☎️","📟","📠","📺","📻","🎙️","🎚️","🎛️","🧭","⏱️","⏲️","⏰","🕰️","⌛","⏳","📡","🔋","🔌","💡","🔦","🕯️","🪔","🧯","🛢️","💸","💵","💴","💶","💷","🪙","💰","💳","💎","⚖️","🪜","🧰","🔧","🔨","⚒️","🛠️","⛏️","🔩","⚙️","🪚","🔫","🧨","💣","🔪","🗡️","⚔️","🛡️","🚬","⚰️","🪦","⚱️","🏺","🔮","📿","🧿","💈","⚗️","🔭","🔬","🕳️","🩹","🩺","💊","💉","🩸","🧬","🦠","🧫","🧪","🌡️","🧹","🪣","🧽","🧴","🛎️","🔑","🗝️","🚪","🪑","🛋️","🛏️","🛌","🧸","🖼️","🛍️","🛒","🎁","🎈","🎏","🎀","🎊","🎉","🎎","🏮","🎐","🧧","✉️","📩","📨","📧","💌","📥"],Symbols:["❤️","🧡","💛","💚","💙","💜","🖤","🤍","🤎","💔","❣️","💕","💞","💓","💗","💖","💘","💝","💟","☮️","✝️","☪️","🕉️","☸️","✡️","🔯","🕎","☯️","☦️","🛐","⛎","♈","♉","♊","♋","♌","♍","♎","♏","♐","♑","♒","♓","🆔","⚛️","🉑","☢️","☣️","📴","📳","🈶","🈚","🈸","🈺","🈷️","✴️","🆚","💮","🉐","㊙️","㊗️","🈴","🈵","🈹","🈲","🅰️","🅱️","🆎","🆑","🅾️","🆘","❌","⭕","🛑","⛔","📛","🚫","💯","💢","♨️","🚷","🚯","🚳","🚱","🔞","📵","🚭","❗","❕","❓","❔","‼️","⁉️","🔅","🔆","〽️","⚠️","🚸","🔱","⚜️","🔰","♻️","✅","🈯","💹","❇️","✳️","❎","🌐","💠","Ⓜ️","🌀","💤","🏧","🚾","♿","🅿️","🈳","🈂️","🛂","🛃","🛄","🛅","🚹","🚺","🚼","⚧️","🚻","🚮","🎦","📶"],Flags:["🏁","🚩","🎌","🏴","🏳️","🏳️‍🌈","🏳️‍⚧️","🏴‍☠️","🇦🇫","🇦🇽","🇦🇱","🇩🇿","🇦🇸","🇦🇩","🇦🇴","🇦🇮","🇦🇶","🇦🇬","🇦🇷","🇦🇲","🇦🇼","🇦🇺","🇦🇹","🇦🇿","🇧🇸","🇧🇭","🇧🇩","🇧🇧","🇧🇾","🇧🇪","🇧🇿","🇧🇯","🇧🇲","🇧🇹","🇧🇴","🇧🇦","🇧🇼","🇧🇷","🇮🇴","🇻🇬","🇧🇳","🇧🇬","🇧🇫","🇧🇮","🇰🇭","🇨🇲","🇨🇦","🇮🇨","🇨🇻","🇧🇶","🇰🇾","🇨🇫","🇹🇩","🇨🇱","🇨🇳","🇨🇽","🇨🇨","🇨🇴","🇰🇲","🇨🇬","🇨🇩","🇨🇰","🇨🇷","🇨🇮","🇭🇷","🇨🇺","🇨🇼","🇨🇾","🇨🇿","🇩🇰","🇩🇯","🇩🇲","🇩🇴","🇪🇨","🇪🇬","🇸🇻","🇬🇶","🇪🇷","🇪🇪","🇸🇿","🇪🇹","🇪🇺","🇫🇰","🇫🇴","🇫🇯","🇫🇮","🇫🇷","🇬🇫","🇵🇫","🇹🇫","🇬🇦","🇬🇲","🇬🇪","🇩🇪","🇬🇭","🇬🇮","🇬🇷","🇬🇱","🇬🇩","🇬🇵","🇬🇺","🇬🇹","🇬🇬","🇬🇳","🇬🇼","🇬🇾","🇭🇹","🇭🇳","🇭🇰","🇭🇺","🇮🇸","🇮🇳","🇮🇩","🇮🇷","🇮🇶","🇮🇪","🇮🇲","🇮🇱","🇮🇹","🇯🇲","🇯🇵","🇯🇪","🇯🇴","🇰🇿","🇰🇪","🇰🇮","🇽🇰","🇰🇼","🇰🇬","🇱🇦","🇱🇻","🇱🇧","🇱🇸","🇱🇷","🇱🇾","🇱🇮","🇱🇹","🇱🇺","🇲🇴","🇲🇬","🇲🇼","🇲🇾","🇲🇻","🇲🇱","🇲🇹","🇲🇭","🇲🇶","🇲🇷","🇲🇺","🇾🇹","🇲🇽","🇫🇲","🇲🇩","🇲🇨","🇲🇳","🇲🇪","🇲🇸","🇲🇦","🇲🇿","🇲🇲","🇳🇦","🇳🇷","🇳🇵","🇳🇱","🇳🇨","🇳🇿","🇳🇮","🇳🇪","🇳🇬","🇳🇺","🇳🇫","🇰🇵","🇲🇰","🇲🇵","🇳🇴","🇴🇲","🇵🇰","🇵🇼","🇵🇸","🇵🇦","🇵🇬","🇵🇾","🇵🇪","🇵🇭","🇵🇳","🇵🇱","🇵🇹","🇵🇷","🇶🇦","🇷🇪","🇷🇴","🇷🇺","🇷🇼","🇼🇸","🇸🇲","🇸🇹","🇸🇦","🇸🇳","🇷🇸","🇸🇨","🇸🇱","🇸🇬","🇸🇽","🇸🇰","🇸🇮","🇬🇸","🇸🇧","🇸🇴","🇿🇦","🇰🇷","🇸🇸","🇪🇸","🇱🇰","🇧🇱","🇸🇭","🇰🇳","🇱🇨","🇵🇲","🇻🇨","🇸🇩","🇸🇷","🇸🇪","🇨🇭","🇸🇾","🇹🇼","🇹🇯","🇹🇿","🇹🇭","🇹🇱","🇹🇬","🇹🇰","🇹🇴","🇹🇹","🇹🇳","🇹🇷","🇹🇲","🇹🇨","🇹🇻","🇺🇬","🇺🇦","🇦🇪","🇬🇧","🏴󠁧󠁢󠁥󠁮󠁧󠁿","🏴󠁧󠁢󠁳󠁣󠁴󠁿","🏴󠁧󠁢󠁷󠁬󠁳󠁿","🇺🇸","🇻🇮","🇺🇾","🇺🇿","🇻🇺","🇻🇦","🇻🇪","🇻🇳","🇼🇫","🇪🇭","🇾🇪","🇿🇲","🇿🇼"]};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YP=1e-7,ZP=1e-4;class fx{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class km{refCount(e){return hs("refCount")}incRef(e){return hs("incRef")}timerAvailable(){return!0}time(e){return hs("time")}read(e){return hs("read")}readSync(e){return hs("readSync")}readToGPU(e,t){return hs("readToGPU")}numDataIds(){return hs("numDataIds")}disposeData(e,t){return hs("disposeData")}write(e,t,s){return hs("write")}move(e,t,s,r,a){return hs("move")}createTensorFromGPUData(e,t,s){return hs("createTensorFromGPUData")}memory(){return hs("memory")}floatPrecision(){return hs("floatPrecision")}epsilon(){return this.floatPrecision()===32?YP:ZP}dispose(){return hs("dispose")}}function hs(n){throw new Error(`'${n}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JP(n){let e=n.length,t=0;for(;e>0;)t=Math.random()*e|0,e--,ji(n,e,t)}function Xo(n,e,t){return Math.max(n,Math.min(e,t))}function mx(n){return n%2===0?n:n+1}function ji(n,e,t){const s=n[e];n[e]=n[t],n[t]=s}function QP(n){let e=0;for(let t=0;t<n.length;t++)e+=n[t];return e}function _(n,e){if(!n)throw new Error(typeof e=="string"?e:e())}function us(n,e,t=""){_(Qe(n,e),()=>t+` Shapes ${n} and ${e} must match`)}function Ru(n){_(n!=null,()=>"The input to the tensor constructor must be a non-null value.")}function U(n){if(n.length===0)return 1;let e=n[0];for(let t=1;t<n.length;t++)e*=n[t];return e}function eL(n,e){if(n===e)return!0;if(n==null||e==null||n.length!==e.length)return!1;for(let t=0;t<n.length;t++)if(n[t]!==null&&e[t]!==null&&n[t]!==e[t])return!1;return!0}function Qe(n,e){if(n===e)return!0;if(n==null||e==null||n.length!==e.length)return!1;for(let t=0;t<n.length;t++)if(n[t]!==e[t])return!1;return!0}function pu(n){return n%1===0}function Hy(n){const e=Math.ceil(Math.sqrt(n));return[e,Math.ceil(n/e)]}function Ji(n,e){return e<=n.length?n:n+" ".repeat(e-n.length)}function Bv(n,e=r=>0,t,s){return new Promise((r,a)=>{let o=0;const i=()=>{if(n()){r();return}o++;const u=e(o);if(t!=null&&o>=t){a();return}s!=null?s(i,u):setTimeout(i,u)};i()})}function gx(n,e){let t=1,s=-1;for(let a=0;a<n.length;++a)if(n[a]>=0)t*=n[a];else if(n[a]===-1){if(s!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${a}`);s=a}else if(n[a]<0)throw Error(`Shapes can not be < 0. Found ${n[a]} at dim ${a}`);if(s===-1){if(e>0&&e!==t)throw Error(`Size(${e}) must match the product of shape ${n}`);return n}if(t===0)throw Error(`Cannot infer the missing size in [${n}] when there are 0 elements`);if(e%t!==0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${t}`);const r=n.slice();return r[s]=e/t,r}function ze(n,e){const t=e.length;return n=n==null?e.map((s,r)=>r):[].concat(n),_(n.every(s=>s>=-t&&s<t),()=>`All values in axis param must be in range [-${t}, ${t}) but got axis ${n}`),_(n.every(s=>pu(s)),()=>`All values in axis param must be integers but got axis ${n}`),n.map(s=>s<0?t+s:s)}function mo(n,e){const t=[],s=[],r=e!=null&&Array.isArray(e)&&e.length===0,a=e==null||r?null:ze(e,n).sort();let o=0;for(let i=0;i<n.length;++i){if(a!=null){if(a[o]===i&&n[i]!==1)throw new Error(`Can't squeeze axis ${i} since its dim '${n[i]}' is not 1`);(a[o]==null||a[o]>i)&&n[i]===1&&(t.push(n[i]),s.push(i)),a[o]<=i&&o++}n[i]!==1&&(t.push(n[i]),s.push(i))}return{newShape:t,keptDims:s}}function Cn(n,e){return Ht(n,e)}function Ht(n,e){let t=null;if(n==null||n==="float32")t=new Float32Array(e);else if(n==="int32")t=new Int32Array(e);else if(n==="bool")t=new Uint8Array(e);else if(n==="string")t=new Array(e);else throw new Error(`Unknown data type ${n}`);return t}function tL(n,e){for(let t=0;t<n.length;t++){const s=n[t];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${e} being uploaded contains ${s}.`)}}function nL(n){return n==="bool"||n==="complex64"||n==="float32"||n==="int32"||n==="string"}function ak(n,e){return!(e==="complex64"||e==="float32"&&n!=="complex64"||e==="int32"&&n!=="float32"&&n!=="complex64"||e==="bool"&&n==="bool")}function fu(n){if(n==="float32"||n==="int32")return 4;if(n==="complex64")return 8;if(n==="bool")return 1;throw new Error(`Unknown dtype ${n}`)}function sL(n){if(n==null)return 0;let e=0;return n.forEach(t=>e+=t.length),e}function jd(n){return typeof n=="string"||n instanceof String}function rL(n){return typeof n=="boolean"}function jy(n){return typeof n=="number"}function fi(n){return Array.isArray(n)?fi(n[0]):n instanceof Float32Array?"float32":n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray?"int32":jy(n)?"float32":jd(n)?"string":rL(n)?"bool":"float32"}function qy(n){return!!(n&&n.constructor&&n.call&&n.apply)}function Ky(n,e){for(let t=e;t<n;++t)if(n%t===0)return t;return n}function ve(n){const e=n.length;if(e<2)return[];const t=new Array(e-1);t[e-2]=n[e-1];for(let s=e-3;s>=0;--s)t[s]=t[s+1]*n[s+1];return t}function ok(n,e,t,s=!1){const r=new Array;if(e.length===1){const a=e[0]*(s?2:1);for(let o=0;o<a;o++)r[o]=t[n+o]}else{const a=e[0],o=e.slice(1),i=o.reduce((u,c)=>u*c)*(s?2:1);for(let u=0;u<a;u++)r[u]=ok(n+u*i,o,t,s)}return r}function Js(n,e,t=!1){if(n.length===0)return e[0];const s=n.reduce((r,a)=>r*a)*(t?2:1);if(s===0)return[];if(s!==e.length)throw new Error(`[${n}] does not match the input size ${e.length}${t?" for a complex tensor":""}.`);return ok(0,n,e,t)}function aL(n,e){if(Array.isArray(n))return n;if(e==="float32")return n instanceof Float32Array?n:new Float32Array(n);if(e==="int32")return n instanceof Int32Array?n:new Int32Array(n);if(e==="bool"||e==="string")return Uint8Array.from(new Int32Array(n));throw new Error(`Unknown dtype ${e}`)}function yx(n,e){const t=Ln(n,e);for(let s=0;s<t.length;s++)t[s]=1;return t}function Ln(n,e){if(e==null||e==="float32"||e==="complex64")return new Float32Array(n);if(e==="int32")return new Int32Array(n);if(e==="bool")return new Uint8Array(n);throw new Error(`Unknown data type ${e}`)}function ik(n,e){const t=n.reduce((s,r)=>s*r,1);if(e==null||e==="float32")return Js(n,new Float32Array(t));if(e==="int32")return Js(n,new Int32Array(t));if(e==="bool")return Js(n,new Uint8Array(t));throw new Error(`Unknown data type ${e}`)}function Ms(n){n.forEach(e=>{_(Number.isInteger(e)&&e>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${n}].`)})}function Vr(n,e,t){if(e===0)return 0;if(e===1)return n[0];let s=n[n.length-1];for(let r=0;r<n.length-1;++r)s+=t[r]*n[r];return s}function Ou(n,e,t){if(e===0)return[];if(e===1)return[n];const s=new Array(e);for(let r=0;r<s.length-1;++r)s[r]=Math.floor(n/t[r]),n-=s[r]*t[r];return s[s.length-1]=n,s}function Yo(n){return n&&n.then&&typeof n.then=="function"}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zv="tfjsflags";class oL{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=iL,this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&(Y().getBool("IS_TEST")||Y().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,s){if(this.flagRegistry[e]={evaluationFn:t,setHook:s},this.urlFlags[e]!=null){const r=this.urlFlags[e];Y().getBool("IS_TEST")||Y().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${r}.`),this.set(e,r)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(Yo(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;const e=this.getQueryParams(this.global.location.search);zv in e&&e[zv].split(",").forEach(s=>{const[r,a]=s.split(":");this.urlFlags[r]=lL(r,a)})}}function iL(n){const e={};return n.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(t,...s)=>(uL(e,s[0],s[1]),s.join("="))),e}function uL(n,e,t){n[decodeURIComponent(e)]=decodeURIComponent(t||"")}function lL(n,e){const t=e.toLowerCase();return t==="true"||t==="false"?t==="true":`${+t}`===t?+t:e}function Y(){return uk}let uk=null;function cL(n){uk=n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let iy;function lk(){if(iy==null){let n;if(typeof window<"u")n=window;else if(typeof global<"u")n=global;else if(typeof process<"u")n=process;else if(typeof self<"u")n=self;else throw new Error("Could not find a global object");iy=n}return iy}function dL(){const n=lk();return n._tfGlobals==null&&(n._tfGlobals=new Map),n._tfGlobals}function bx(n,e){const t=dL();if(t.has(n))return t.get(n);{const s=e();return t.set(n,s),t.get(n)}}const qd="Abs",Fu="Acos",Pu="Acosh",mi="Add",Lu="AddN",Kd="All",Xd="Any",Yd="ArgMax",Zd="ArgMin",Mu="Asin",Bu="Asinh",zu="Atan",Vu="Atanh",Wu="Atan2",Uu="AvgPool",Nm="AvgPoolGrad",Jd="AvgPool3D",Cm="AvgPool3DGrad",Gu="BatchMatMul",Qd="BatchToSpaceND",eh="Bincount",th="BitwiseAnd",hL="BroadcastTo",Tm="BroadcastArgs",Hu="Cast",ju="Ceil",gi="ClipByValue",xx="Complex",$m="ComplexAbs",nh="Concat",qu="Conv2D",wx="Conv2DBackpropFilter",Ku="Conv2DBackpropInput",Xu="Conv3D",sh="Conv3DBackpropFilterV2",rh="Conv3DBackpropInputV2",Yu="Cos",Zu="Cosh",ah="Cumprod",Ju="Cumsum",oh="CropAndResize",_m="DenseBincount",ih="DepthToSpace",Qu="DepthwiseConv2dNative",vx="DepthwiseConv2dNativeBackpropFilter",Ix="DepthwiseConv2dNativeBackpropInput",Em="Diag",el="Dilation2D",Wc="Dilation2DBackpropInput",Uc="Dilation2DBackpropFilter",pL="Draw",tl="RealDiv",Sx="Einsum",nl="Elu",uh="EluGrad",sl="Erf",lh="Equal",rl="Exp",ch="ExpandDims",al="Expm1",kx="FFT",Am="Fill",dh="FlipLeftRight",ol="Floor",il="FloorDiv",ul="FusedBatchNorm",hh="GatherV2",ph="GatherNd",fh="Greater",ll="GreaterEqual",cl="Identity",Nx="IFFT",Cx="Imag",dl="IsFinite",hl="IsInf",pl="IsNan",fl="LeakyRelu",mh="Less",gh="LessEqual",yh="LinSpace",ml="Log",gl="Log1p",bh="LogicalAnd",xh="LogicalNot",wh="LogicalOr",fL="LogicalXor",mL="LogSoftmax",yl="LRN",vh="LRNGrad",bl="Max",xl="Maximum",wl="MaxPool",Dm="MaxPoolGrad",Ih="MaxPool3D",Rm="MaxPool3DGrad",Om="MaxPoolWithArgmax",vl="Mean",Il="Min",Sl="Minimum",kl="MirrorPad",Nl="Mod",Sh="Multinomial",Cl="Multiply",kh="Neg",Nh="NotEqual",Ch="NonMaxSuppressionV3",Th="NonMaxSuppressionV4",$h="NonMaxSuppressionV5",_h="OnesLike",Tl="OneHot",Eh="Pack",$l="PadV2",_l="Pow",El="Prelu",Al="Prod",Tx="RaggedGather",$x="RaggedRange",_x="RaggedTensorToTensor",Fm="Range",Ex="Real",Dl="Reciprocal",Rl="Relu",Ah="Reshape",Ol="ResizeNearestNeighbor",Dh="ResizeNearestNeighborGrad",Fl="ResizeBilinear",Rh="ResizeBilinearGrad",Pl="Relu6",Ll="Reverse",Ml="Round",Bl="Rsqrt",Oh="ScatterNd",Fh="TensorScatterUpdate",Ph="SearchSorted",Lh="Select",zl="Selu",Mh="Slice",Vl="Sin",Wl="Sinh",Ul="Sign",Gl="Sigmoid",Hl="Softplus",jl="Sqrt",ql="Sum",Bh="SpaceToBatchND",zh="SplitV",Kl="Softmax",Pm="SparseFillEmptyRows",Vh="SparseReshape",Lm="SparseSegmentMean",Mm="SparseSegmentSum",Wh="SparseToDense",Xl="SquaredDifference",Bm="Square",zm="StaticRegexReplace",Uh="StridedSlice",Vm="StringNGrams",Wm="StringSplit",Um="StringToHashBucketFast",Yl="Sub",Zl="Tan",Jl="Tanh",yi="Tile",Gh="TopK",Hh="Transform",ja="Transpose",Gm="Unique",jh="Unpack",Hm="UnsortedSegmentSum",qh="ZerosLike",bi="Step",gL="FromPixels",Kh="RotateWithOffset",mu="_FusedMatMul",gu="FusedConv2D",yu="FusedDepthwiseConv2D";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function As(...n){Y().getBool("IS_TEST")||Y().getBool("PROD")||console.warn(...n)}function yL(...n){Y().getBool("IS_TEST")||Y().getBool("PROD")||console.log(...n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bf=bx("kernelRegistry",()=>new Map),Xy=bx("gradRegistry",()=>new Map);function Vv(n,e){const t=ck(n,e);return bf.get(t)}function Wv(n){return Xy.get(n)}function Uv(n){const e=bf.entries(),t=[];for(;;){const{done:s,value:r}=e.next();if(s)break;const[a,o]=r,[i]=a.split("_");i===n&&t.push(o)}return t}function Ax(n){const{kernelName:e,backendName:t}=n,s=ck(e,t);bf.has(s)&&As(`The kernel '${e}' for backend '${t}' is already registered`),bf.set(s,n)}function bL(n){const{kernelName:e}=n;Xy.has(e)&&Y().getBool("DEBUG")&&As(`Overriding the gradient for '${e}'`),Xy.set(e,n)}function ck(n,e){return`${e}_${n}`}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dk(n){return n instanceof Float32Array||n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray}var uy,Gv;function xL(){if(Gv)return uy;Gv=1,uy=e;var n=null;try{n=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function e(C,k,A){this.low=C|0,this.high=k|0,this.unsigned=!!A}e.prototype.__isLong__,Object.defineProperty(e.prototype,"__isLong__",{value:!0});function t(C){return(C&&C.__isLong__)===!0}e.isLong=t;var s={},r={};function a(C,k){var A,D,R;return k?(C>>>=0,(R=0<=C&&C<256)&&(D=r[C],D)?D:(A=i(C,(C|0)<0?-1:0,!0),R&&(r[C]=A),A)):(C|=0,(R=-128<=C&&C<128)&&(D=s[C],D)?D:(A=i(C,C<0?-1:0,!1),R&&(s[C]=A),A))}e.fromInt=a;function o(C,k){if(isNaN(C))return k?b:y;if(k){if(C<0)return b;if(C>=f)return N}else{if(C<=-9223372036854776e3)return $;if(C+1>=m)return S}return C<0?o(-C,k).neg():i(C%p|0,C/p|0,k)}e.fromNumber=o;function i(C,k,A){return new e(C,k,A)}e.fromBits=i;var u=Math.pow;function c(C,k,A){if(C.length===0)throw Error("empty string");if(C==="NaN"||C==="Infinity"||C==="+Infinity"||C==="-Infinity")return y;if(typeof k=="number"?(A=k,k=!1):k=!!k,A=A||10,A<2||36<A)throw RangeError("radix");var D;if((D=C.indexOf("-"))>0)throw Error("interior hyphen");if(D===0)return c(C.substring(1),k,A).neg();for(var R=o(u(A,8)),F=y,z=0;z<C.length;z+=8){var H=Math.min(8,C.length-z),P=parseInt(C.substring(z,z+H),A);if(H<8){var G=o(u(A,H));F=F.mul(G).add(o(P))}else F=F.mul(R),F=F.add(o(P))}return F.unsigned=k,F}e.fromString=c;function l(C,k){return typeof C=="number"?o(C,k):typeof C=="string"?c(C,k):i(C.low,C.high,typeof k=="boolean"?k:C.unsigned)}e.fromValue=l;var d=65536,h=1<<24,p=d*d,f=p*p,m=f/2,g=a(h),y=a(0);e.ZERO=y;var b=a(0,!0);e.UZERO=b;var x=a(1);e.ONE=x;var w=a(1,!0);e.UONE=w;var v=a(-1);e.NEG_ONE=v;var S=i(-1,2147483647,!1);e.MAX_VALUE=S;var N=i(-1,-1,!0);e.MAX_UNSIGNED_VALUE=N;var $=i(0,-2147483648,!1);e.MIN_VALUE=$;var T=e.prototype;return T.toInt=function(){return this.unsigned?this.low>>>0:this.low},T.toNumber=function(){return this.unsigned?(this.high>>>0)*p+(this.low>>>0):this.high*p+(this.low>>>0)},T.toString=function(k){if(k=k||10,k<2||36<k)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq($)){var A=o(k),D=this.div(A),R=D.mul(A).sub(this);return D.toString(k)+R.toInt().toString(k)}else return"-"+this.neg().toString(k);for(var F=o(u(k,6),this.unsigned),z=this,H="";;){var P=z.div(F),G=z.sub(P.mul(F)).toInt()>>>0,X=G.toString(k);if(z=P,z.isZero())return X+H;for(;X.length<6;)X="0"+X;H=""+X+H}},T.getHighBits=function(){return this.high},T.getHighBitsUnsigned=function(){return this.high>>>0},T.getLowBits=function(){return this.low},T.getLowBitsUnsigned=function(){return this.low>>>0},T.getNumBitsAbs=function(){if(this.isNegative())return this.eq($)?64:this.neg().getNumBitsAbs();for(var k=this.high!=0?this.high:this.low,A=31;A>0&&(k&1<<A)==0;A--);return this.high!=0?A+33:A+1},T.isZero=function(){return this.high===0&&this.low===0},T.eqz=T.isZero,T.isNegative=function(){return!this.unsigned&&this.high<0},T.isPositive=function(){return this.unsigned||this.high>=0},T.isOdd=function(){return(this.low&1)===1},T.isEven=function(){return(this.low&1)===0},T.equals=function(k){return t(k)||(k=l(k)),this.unsigned!==k.unsigned&&this.high>>>31===1&&k.high>>>31===1?!1:this.high===k.high&&this.low===k.low},T.eq=T.equals,T.notEquals=function(k){return!this.eq(k)},T.neq=T.notEquals,T.ne=T.notEquals,T.lessThan=function(k){return this.comp(k)<0},T.lt=T.lessThan,T.lessThanOrEqual=function(k){return this.comp(k)<=0},T.lte=T.lessThanOrEqual,T.le=T.lessThanOrEqual,T.greaterThan=function(k){return this.comp(k)>0},T.gt=T.greaterThan,T.greaterThanOrEqual=function(k){return this.comp(k)>=0},T.gte=T.greaterThanOrEqual,T.ge=T.greaterThanOrEqual,T.compare=function(k){if(t(k)||(k=l(k)),this.eq(k))return 0;var A=this.isNegative(),D=k.isNegative();return A&&!D?-1:!A&&D?1:this.unsigned?k.high>>>0>this.high>>>0||k.high===this.high&&k.low>>>0>this.low>>>0?-1:1:this.sub(k).isNegative()?-1:1},T.comp=T.compare,T.negate=function(){return!this.unsigned&&this.eq($)?$:this.not().add(x)},T.neg=T.negate,T.add=function(k){t(k)||(k=l(k));var A=this.high>>>16,D=this.high&65535,R=this.low>>>16,F=this.low&65535,z=k.high>>>16,H=k.high&65535,P=k.low>>>16,G=k.low&65535,X=0,Z=0,ne=0,te=0;return te+=F+G,ne+=te>>>16,te&=65535,ne+=R+P,Z+=ne>>>16,ne&=65535,Z+=D+H,X+=Z>>>16,Z&=65535,X+=A+z,X&=65535,i(ne<<16|te,X<<16|Z,this.unsigned)},T.subtract=function(k){return t(k)||(k=l(k)),this.add(k.neg())},T.sub=T.subtract,T.multiply=function(k){if(this.isZero())return y;if(t(k)||(k=l(k)),n){var A=n.mul(this.low,this.high,k.low,k.high);return i(A,n.get_high(),this.unsigned)}if(k.isZero())return y;if(this.eq($))return k.isOdd()?$:y;if(k.eq($))return this.isOdd()?$:y;if(this.isNegative())return k.isNegative()?this.neg().mul(k.neg()):this.neg().mul(k).neg();if(k.isNegative())return this.mul(k.neg()).neg();if(this.lt(g)&&k.lt(g))return o(this.toNumber()*k.toNumber(),this.unsigned);var D=this.high>>>16,R=this.high&65535,F=this.low>>>16,z=this.low&65535,H=k.high>>>16,P=k.high&65535,G=k.low>>>16,X=k.low&65535,Z=0,ne=0,te=0,ae=0;return ae+=z*X,te+=ae>>>16,ae&=65535,te+=F*X,ne+=te>>>16,te&=65535,te+=z*G,ne+=te>>>16,te&=65535,ne+=R*X,Z+=ne>>>16,ne&=65535,ne+=F*G,Z+=ne>>>16,ne&=65535,ne+=z*P,Z+=ne>>>16,ne&=65535,Z+=D*X+R*G+F*P+z*H,Z&=65535,i(te<<16|ae,Z<<16|ne,this.unsigned)},T.mul=T.multiply,T.divide=function(k){if(t(k)||(k=l(k)),k.isZero())throw Error("division by zero");if(n){if(!this.unsigned&&this.high===-2147483648&&k.low===-1&&k.high===-1)return this;var A=(this.unsigned?n.div_u:n.div_s)(this.low,this.high,k.low,k.high);return i(A,n.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?b:y;var D,R,F;if(this.unsigned){if(k.unsigned||(k=k.toUnsigned()),k.gt(this))return b;if(k.gt(this.shru(1)))return w;F=b}else{if(this.eq($)){if(k.eq(x)||k.eq(v))return $;if(k.eq($))return x;var z=this.shr(1);return D=z.div(k).shl(1),D.eq(y)?k.isNegative()?x:v:(R=this.sub(k.mul(D)),F=D.add(R.div(k)),F)}else if(k.eq($))return this.unsigned?b:y;if(this.isNegative())return k.isNegative()?this.neg().div(k.neg()):this.neg().div(k).neg();if(k.isNegative())return this.div(k.neg()).neg();F=y}for(R=this;R.gte(k);){D=Math.max(1,Math.floor(R.toNumber()/k.toNumber()));for(var H=Math.ceil(Math.log(D)/Math.LN2),P=H<=48?1:u(2,H-48),G=o(D),X=G.mul(k);X.isNegative()||X.gt(R);)D-=P,G=o(D,this.unsigned),X=G.mul(k);G.isZero()&&(G=x),F=F.add(G),R=R.sub(X)}return F},T.div=T.divide,T.modulo=function(k){if(t(k)||(k=l(k)),n){var A=(this.unsigned?n.rem_u:n.rem_s)(this.low,this.high,k.low,k.high);return i(A,n.get_high(),this.unsigned)}return this.sub(this.div(k).mul(k))},T.mod=T.modulo,T.rem=T.modulo,T.not=function(){return i(~this.low,~this.high,this.unsigned)},T.and=function(k){return t(k)||(k=l(k)),i(this.low&k.low,this.high&k.high,this.unsigned)},T.or=function(k){return t(k)||(k=l(k)),i(this.low|k.low,this.high|k.high,this.unsigned)},T.xor=function(k){return t(k)||(k=l(k)),i(this.low^k.low,this.high^k.high,this.unsigned)},T.shiftLeft=function(k){return t(k)&&(k=k.toInt()),(k&=63)===0?this:k<32?i(this.low<<k,this.high<<k|this.low>>>32-k,this.unsigned):i(0,this.low<<k-32,this.unsigned)},T.shl=T.shiftLeft,T.shiftRight=function(k){return t(k)&&(k=k.toInt()),(k&=63)===0?this:k<32?i(this.low>>>k|this.high<<32-k,this.high>>k,this.unsigned):i(this.high>>k-32,this.high>=0?0:-1,this.unsigned)},T.shr=T.shiftRight,T.shiftRightUnsigned=function(k){if(t(k)&&(k=k.toInt()),k&=63,k===0)return this;var A=this.high;if(k<32){var D=this.low;return i(D>>>k|A<<32-k,A>>>k,this.unsigned)}else return k===32?i(A,0,this.unsigned):i(A>>>k-32,0,this.unsigned)},T.shru=T.shiftRightUnsigned,T.shr_u=T.shiftRightUnsigned,T.toSigned=function(){return this.unsigned?i(this.low,this.high,!1):this},T.toUnsigned=function(){return this.unsigned?this:i(this.low,this.high,!0)},T.toBytes=function(k){return k?this.toBytesLE():this.toBytesBE()},T.toBytesLE=function(){var k=this.high,A=this.low;return[A&255,A>>>8&255,A>>>16&255,A>>>24,k&255,k>>>8&255,k>>>16&255,k>>>24]},T.toBytesBE=function(){var k=this.high,A=this.low;return[k>>>24,k>>>16&255,k>>>8&255,k&255,A>>>24,A>>>16&255,A>>>8&255,A&255]},e.fromBytes=function(k,A,D){return D?e.fromBytesLE(k,A):e.fromBytesBE(k,A)},e.fromBytesLE=function(k,A){return new e(k[0]|k[1]<<8|k[2]<<16|k[3]<<24,k[4]|k[5]<<8|k[6]<<16|k[7]<<24,A)},e.fromBytesBE=function(k,A){return new e(k[4]<<24|k[5]<<16|k[6]<<8|k[7],k[0]<<24|k[1]<<16|k[2]<<8|k[3],A)},uy}var hk=xL();const pk=bm(hk),wL=Wb({__proto__:null,default:pk},[hk]);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oo=pk||wL;function jm(n){return Oo.fromString(n,!0,16)}const fk=jm("c3a5c85c97cb3127"),Ro=jm("b492b66fbe98f273"),Gn=jm("9ae16a3b2f90404f");function Yy(n){return n.xor(n.shru(47))}function mk(n,e,t){const s=n.slice(e,e+t);return Oo.fromBytes(Array.from(s),!0,!0)}function Tt(n,e){return mk(n,e,8)}function Hv(n,e){return mk(n,e,4)}function yn(n,e){return e===0?n:n.shru(e).or(n.shl(64-e))}function qa(n,e,t=jm("9ddfea08eb382d69")){let s=n.xor(e).mul(t);s=s.xor(s.shru(47));let r=e.xor(s).mul(t);return r=r.xor(r.shru(47)),r=r.mul(t),r}function vL(n,e,t,s,r,a){r=r.add(n),a=yn(a.add(r).add(s),21);const o=r;return r=r.add(e),r=r.add(t),a=a.add(yn(r,44)),[r.add(s),a.add(o)]}function _p(n,e,t,s){return vL(Tt(n,e),Tt(n,e+8),Tt(n,e+16),Tt(n,e+24),t,s)}function IL(n,e=n.length){if(e>=8){const t=Gn.add(e*2),s=Tt(n,0).add(Gn),r=Tt(n,e-8),a=yn(r,37).mul(t).add(s),o=yn(s,25).add(r).mul(t);return qa(a,o,t)}if(e>=4){const t=Gn.add(e*2),s=Hv(n,0);return qa(s.shl(3).add(e),Hv(n,e-4),t)}if(e>0){const t=n[0],s=n[e>>1],r=n[e-1],a=t+(s<<8),o=e+(r<<2);return Yy(Gn.mul(a).xor(fk.mul(o))).mul(Gn)}return Gn}function SL(n,e=n.length){const t=Gn.add(e*2),s=Tt(n,0).mul(Ro),r=Tt(n,8),a=Tt(n,e-8).mul(t),o=Tt(n,e-16).mul(Gn);return qa(yn(s.add(r),43).add(yn(a,30)).add(o),s.add(yn(r.add(Gn),18)).add(a),t)}function kL(n,e=n.length){const t=Gn.add(e*2),s=Tt(n,0).mul(Gn),r=Tt(n,8),a=Tt(n,e-8).mul(t),o=Tt(n,e-16).mul(Gn),i=yn(s.add(r),43).add(yn(a,30)).add(o),u=qa(i,s.add(yn(r.add(Gn),18)).add(a),t),c=Tt(n,16).mul(t),l=Tt(n,24),d=i.add(Tt(n,e-32)).mul(t),h=u.add(Tt(n,e-24)).mul(t);return qa(yn(c.add(l),43).add(yn(d,30)).add(h),c.add(yn(l.add(s),18)).add(d),t)}function NL(n,e=n.length){const t=Oo.fromNumber(81,!0);if(e<=32)return e<=16?IL(n,e):SL(n,e);if(e<=64)return kL(n,e);let s=t,r=t.mul(Ro).add(113),a=Yy(r.mul(Gn).add(113)).mul(Gn),o=[Oo.UZERO,Oo.UZERO],i=[Oo.UZERO,Oo.UZERO];s=s.mul(Gn).add(Tt(n,0));let u=0;const c=(e-1>>6)*64,l=c+(e-1&63)-63;do s=yn(s.add(r).add(o[0]).add(Tt(n,u+8)),37).mul(Ro),r=yn(r.add(o[1]).add(Tt(n,u+48)),42).mul(Ro),s=s.xor(i[1]),r=r.add(o[0]).add(Tt(n,u+40)),a=yn(a.add(i[0]),33).mul(Ro),o=_p(n,u,o[1].mul(Ro),s.add(i[0])),i=_p(n,u+32,a.add(i[1]),r.add(Tt(n,u+16))),[a,s]=[s,a],u+=64;while(u!==c);const d=Ro.add(a.and(255).shl(1));return u=l,i[0]=i[0].add(e-1&63),o[0]=o[0].add(i[0]),i[0]=i[0].add(o[0]),s=yn(s.add(r).add(o[0]).add(Tt(n,u+8)),37).mul(d),r=yn(r.add(o[1]).add(Tt(n,u+48)),42).mul(d),s=s.xor(i[1].mul(9)),r=r.add(o[0].mul(9).add(Tt(n,u+40))),a=yn(a.add(i[0]),33).mul(d),o=_p(n,u,o[1].mul(d),s.add(i[0])),i=_p(n,u+32,a.add(i[1]),r.add(Tt(n,u+16))),[a,s]=[s,a],qa(qa(o[0],i[0],d).add(Yy(r).mul(fk)).add(a),qa(o[1],i[1],d).add(s),d)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function go(n,e){return e==="string"?Ka(n):xi([n],e)}function CL(n,e){return n instanceof Float32Array&&e==="float32"||n instanceof Int32Array&&e==="int32"||n instanceof Uint8Array&&e==="bool"}function xi(n,e){if(e==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(n)&&(n=no(n)),Y().getBool("DEBUG")&&tL(n,e),CL(n,e))return n;if(e==null||e==="float32"||e==="complex64")return new Float32Array(n);if(e==="int32")return new Int32Array(n);if(e==="bool"){const t=new Uint8Array(n.length);for(let s=0;s<t.length;++s)Math.round(n[s])!==0&&(t[s]=1);return t}else throw new Error(`Unknown data type ${e}`)}function Rn(){return Y().platform.now()}function TL(n,e){return Y().platform.fetch(n,e)}function Ka(n,e="utf-8"){return e=e||"utf-8",Y().platform.encode(n,e)}function to(n,e="utf-8"){return e=e||"utf-8",Y().platform.decode(n,e)}function nr(n){return Y().platform.isTypedArray!=null?Y().platform.isTypedArray(n):dk(n)}function no(n,e=[],t=!1){if(e==null&&(e=[]),typeof n=="boolean"||typeof n=="number"||typeof n=="string"||Yo(n)||n==null||nr(n)&&t)e.push(n);else if(Array.isArray(n)||nr(n))for(let s=0;s<n.length;++s)no(n[s],e,t);else{let s=-1;for(const r of Object.keys(n))/^([1-9]+[0-9]*|0)$/.test(r)&&(s=Math.max(s,Number(r)));for(let r=0;r<=s;r++)no(n[r],e,t)}return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $L{constructor(e,t){this.backendTimer=e,this.logger=t,t==null&&(this.logger=new EL)}profileKernel(e,t,s){let r;const a=()=>{r=s()};let o;const i=Rn();if(this.backendTimer.timerAvailable())o=this.backendTimer.time(a);else{a();for(const c of r)c.dataSync();o=Promise.resolve({kernelMs:Rn()-i})}if(Y().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let c=0;c<r.length;c++){const l=r[c];l.data().then(d=>{_L(d,l.dtype,e)})}return{kernelName:e,outputs:r,inputs:t,timeMs:o.then(c=>c.kernelMs),extraInfo:o.then(c=>c.getExtraProfileInfo!=null?c.getExtraProfileInfo():"")}}logKernelProfile(e){const{kernelName:t,outputs:s,timeMs:r,inputs:a,extraInfo:o}=e;s.forEach(i=>{Promise.all([i.data(),r,o]).then(u=>{this.logger.logKernelProfile(t,i,u[0],u[1],a,u[2])})})}}function _L(n,e,t){if(e!=="float32")return!1;for(let s=0;s<n.length;s++){const r=n[s];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${t}'`),!0}return!1}class EL{logKernelProfile(e,t,s,r,a,o){const i=typeof r=="number"?Ji(`${r}ms`,9):r.error,u=Ji(e,25),c=t.rank,l=t.size,d=Ji(t.shape.toString(),14);let h="";for(const p in a){const f=a[p];if(f!=null){const m=f.shape||t.shape,g=m.length;h+=`${p}: ${g}D ${g>0?m:""} `}}console.log(`%c${u}	%c${i}	%c${c}D ${d}	%c${l}	%c${h}	%c${o}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AL(n,e,t){const s={},r={};for(let u=0;u<e.length;u++)s[e[u].id]=!0;for(let u=0;u<n.length;u++){const c=n[u],l=c.inputs;for(const d in l){const h=l[d];let p=!1;for(let f=0;f<e.length;f++)if(s[h.id]){c.outputs.forEach(m=>s[m.id]=!0),p=!0,r[c.id]=!0;break}if(p)break}}const a={};a[t.id]=!0;const o={};for(let u=n.length-1;u>=0;u--){const c=n[u],l=c.inputs;for(let d=0;d<c.outputs.length;d++)if(a[c.outputs[d].id]){for(const h in l)a[l[h].id]=!0,o[c.id]=!0;break}}const i=[];for(let u=0;u<n.length;u++){const c=n[u];if(r[c.id]&&o[c.id]){const l={};for(const h in c.inputs){const p=c.inputs[h];s[p.id]&&(l[h]=p)}const d=Object.assign({},c);d.inputs=l,d.outputs=c.outputs,i.push(d)}}return i}function DL(n,e,t,s){for(let r=e.length-1;r>=0;r--){const a=e[r],o=[];if(a.outputs.forEach(u=>{const c=n[u.id];c!=null?o.push(c):o.push(null)}),a.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);const i=a.gradient(o);for(const u in a.inputs){if(!(u in i))throw new Error(`Cannot backprop through input ${u}. Available gradients found: ${Object.keys(i)}.`);const c=t(()=>i[u]());if(c.dtype!=="float32")throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${u} must have 'float32' dtype, but has '${c.dtype}'`);const l=a.inputs[u];if(!Qe(c.shape,l.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${u}' has shape '${c.shape}', which does not match the shape of the input '${l.shape}'`);if(n[l.id]==null)n[l.id]=c;else{const d=n[l.id];n[l.id]=s(d,c),d.dispose()}}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jv=20,xc=3,ly=7;function RL(n,e,t,s){const r=ve(e),a=OL(n,e,t,r),o=e.length,i=qp(n,e,t,r,a),u=["Tensor"];return s&&(u.push(`  dtype: ${t}`),u.push(`  rank: ${o}`),u.push(`  shape: [${e}]`),u.push("  values:")),u.push(i.map(c=>"    "+c).join(`
`)),u.join(`
`)}function OL(n,e,t,s){const r=U(e),a=s[s.length-1],o=new Array(a).fill(0),i=e.length,u=t==="complex64"?Cc(n):n;if(i>1)for(let c=0;c<r/a;c++){const l=c*a;for(let d=0;d<a;d++)o[d]=Math.max(o[d],Nc(u[l+d],0,t).length)}return o}function Nc(n,e,t){let s;return Array.isArray(n)?s=`${parseFloat(n[0].toFixed(ly))} + ${parseFloat(n[1].toFixed(ly))}j`:jd(n)?s=`'${n}'`:t==="bool"?s=gk(n):s=parseFloat(n.toFixed(ly)).toString(),Ji(s,e)}function gk(n){return n===0?"false":"true"}function qp(n,e,t,s,r,a=!0){const o=t==="complex64"?2:1,i=e[0],u=e.length;if(u===0){if(t==="complex64"){const m=Cc(n);return[Nc(m[0],0,t)]}return t==="bool"?[gk(n[0])]:[n[0].toString()]}if(u===1){if(i>jv){const g=xc*o;let y=Array.from(n.slice(0,g)),b=Array.from(n.slice((i-xc)*o,i*o));return t==="complex64"&&(y=Cc(y),b=Cc(b)),["["+y.map((x,w)=>Nc(x,r[w],t)).join(", ")+", ..., "+b.map((x,w)=>Nc(x,r[i-xc+w],t)).join(", ")+"]"]}return["["+(t==="complex64"?Cc(n):Array.from(n)).map((g,y)=>Nc(g,r[y],t)).join(", ")+"]"]}const c=e.slice(1),l=s.slice(1),d=s[0]*o,h=[];if(i>jv){for(let m=0;m<xc;m++){const g=m*d,y=g+d;h.push(...qp(n.slice(g,y),c,t,l,r,!1))}h.push("...");for(let m=i-xc;m<i;m++){const g=m*d,y=g+d;h.push(...qp(n.slice(g,y),c,t,l,r,m===i-1))}}else for(let m=0;m<i;m++){const g=m*d,y=g+d;h.push(...qp(n.slice(g,y),c,t,l,r,m===i-1))}const p=u===2?",":"";h[0]="["+(i>0?h[0]+p:"");for(let m=1;m<h.length-1;m++)h[m]=" "+h[m]+p;let f=`,
`;for(let m=2;m<u;m++)f+=`
`;return h[h.length-1]=" "+h[h.length-1]+"]"+(a?"":f),h}function Cc(n){const e=[];for(let t=0;t<n.length;t+=2)e.push([n[t],n[t+1]]);return e}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dn{constructor(e,t,s){if(this.dtype=t,this.shape=e.slice(),this.size=U(e),s!=null){const r=s.length;_(r===this.size,()=>`Length of values '${r}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=s||Ht(t,this.size),this.strides=ve(e)}set(e,...t){t.length===0&&(t=[0]),_(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);const s=this.locToIndex(t);this.values[s]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(const r of e){if(r<0||r>=this.shape[t]){const a=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(a)}t++}let s=e[e.length-1];for(let r=0;r<e.length-1;++r)s+=this.strides[r]*e[r];return this.values[s]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let s=0;s<e.length-1;++s)t+=this.strides[s]*e[s];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];const t=new Array(this.shape.length);for(let s=0;s<t.length-1;++s)t[s]=Math.floor(e/this.strides[s]),e-=t[s]*this.strides[s];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return hr().makeTensor(this.values,this.shape,this.dtype)}}let hr=null,qi=null;function FL(n){hr=n}function PL(n){qi=n}class Bt{constructor(e,t,s,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=U(e),this.strides=ve(e),this.dataId=s,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return qi.buffer(this.shape,this.dtype,e)}bufferSync(){return qi.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return Js(this.shape,e,this.dtype==="complex64")}arraySync(){return Js(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();const e=hr().read(this.dataId);if(this.dtype==="string"){const t=await e;try{return t.map(s=>to(s))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),hr().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=hr().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>to(t))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await hr().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),hr().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return qi.print(this,e)}clone(){return this.throwIfDisposed(),qi.clone(this)}toString(e=!1){const t=this.dataSync();return RL(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),qi.cast(this,e)}variable(e=!0,t,s){return this.throwIfDisposed(),hr().makeVariable(this,e,t,s)}}Object.defineProperty(Bt,Symbol.hasInstance,{value:n=>!!n&&n.data!=null&&n.dataSync!=null&&n.throwIfDisposed!=null});function ee(){return bx("Tensor",()=>Bt)}ee();class xf extends Bt{constructor(e,t,s,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=s}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!Qe(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);hr().disposeTensor(this),this.dataId=e.dataId,hr().incRef(this,null)}dispose(){hr().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(xf,Symbol.hasInstance,{value:n=>n instanceof Bt&&n.assign!=null&&n.assign instanceof Function});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var qv;(function(n){n.R0="R0",n.R1="R1",n.R2="R2",n.R3="R3",n.R4="R4",n.R5="R5",n.R6="R6"})(qv||(qv={}));var Zy;(function(n){n.float32="float32",n.int32="int32",n.bool="int32",n.complex64="complex64"})(Zy||(Zy={}));var Jy;(function(n){n.float32="float32",n.int32="int32",n.bool="bool",n.complex64="complex64"})(Jy||(Jy={}));var Qy;(function(n){n.float32="float32",n.int32="float32",n.bool="float32",n.complex64="complex64"})(Qy||(Qy={}));var eb;(function(n){n.float32="complex64",n.int32="complex64",n.bool="complex64",n.complex64="complex64"})(eb||(eb={}));const LL={float32:Qy,int32:Zy,bool:Jy,complex64:eb};function ws(n,e){if(n==="string"||e==="string"){if(n==="string"&&e==="string")return"string";throw new Error(`Can not upcast ${n} with ${e}`)}return LL[n][e]}function Dx(n){return ws(n,"int32")}function yk(n){return n!=null&&typeof n=="object"&&"texture"in n&&n.texture instanceof WebGLTexture}function bk(n){return typeof GPUBuffer<"u"&&n!=null&&typeof n=="object"&&"buffer"in n&&n.buffer instanceof GPUBuffer}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ut(n,e){if(n.dtype===e.dtype)return[n,e];const t=ws(n.dtype,e.dtype);return[n.cast(t),e.cast(t)]}function ML(n,e){_(n.dtype===e.dtype,()=>`The dtypes of the first(${n.dtype}) and second(${e.dtype}) input must match`)}function xk(n){const e=[];return wk(n,e,new Set),e}function wk(n,e,t){if(n==null)return;if(n instanceof Bt){e.push(n);return}if(!BL(n))return;const s=n;for(const r in s){const a=s[r];t.has(a)||(t.add(a),wk(a,e,t))}}function BL(n){return Array.isArray(n)||typeof n=="object"}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cy(n){return n.kernelName!=null}class Kv{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class bu{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Kv}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const s=e[t];if(await this.initializeBackend(s).success){await this.setBackend(s);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){const{asyncInit:t}=this.initializeBackend(e);if(t)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,s=1){return e in this.registryFactory?(As(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:s},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;const{success:t,asyncInit:s}=this.initializeBackend(e);if(!(s?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new $L(this.backendInstance),!0}setupRegisteredKernels(){Uv(this.backendName).forEach(t=>{t.setupFunc!=null&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){Uv(e).forEach(s=>{s.disposeFunc!=null&&s.disposeFunc(this.registry[e])})}initializeBackend(e){const t=this.registryFactory[e];if(t==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const s=t.factory();if(s&&!(s instanceof km)&&typeof s.then=="function"){const r=++this.pendingBackendInitId,a=s.then(o=>r<this.pendingBackendInitId?!1:(this.registry[e]=o,this.pendingBackendInit=null,!0)).catch(o=>(r<this.pendingBackendInitId||(this.pendingBackendInit=null,As(`Initialization of backend ${e} failed`),As(o.stack||o.message)),!1));return this.pendingBackendInit=a,{success:a,asyncInit:!0}}else return this.registry[e]=s,{success:!0,asyncInit:!1}}catch(s){return As(`Initialization of backend ${e} failed`),As(s.stack||s.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const s=e[t],{success:r,asyncInit:a}=this.initializeBackend(s);if(a||r)return{name:s,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const s=this.state.tensorInfo.get(t),r=s.backend,a=this.readSync(t),o=r.refCount(t);r.disposeData(t,!0),s.backend=e,e.move(t,a,s.shape,s.dtype,o),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let s=null;if(t==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");t=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof t!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");s=e}let r;return this.scopedRun(()=>this.startScope(s),()=>this.endScope(r),()=>(r=t(),r instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),r))}scopedRun(e,t,s){e();try{const r=s();return t(),r}catch(r){throw t(),r}}nextTensorId(){return bu.nextTensorId++}nextVariableId(){return bu.nextVariableId++}clone(e){const t=M.runKernel(cl,{x:e}),s={x:e},r=o=>({x:()=>{const i="float32",u={x:o},c={dtype:i};return M.runKernel(Hu,u,c)}}),a=[];return this.addTapeNode(this.state.activeScope.name,s,[t],r,a,{}),t}runKernel(e,t,s){if(this.backendName==null&&this.backend,!(Vv(e,this.backendName)!=null))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:s})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,s){const r=this.backend.numDataIds();let a=0;s.forEach(u=>{a+=u.dtype==="complex64"?3:1});const o=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-t-a-o;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,s=[];const r=this.isTapeOn(),a=this.state.numBytes,o=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let i;this.backendName==null&&this.backend;let u;const c=cy(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(cy(e)){const{kernelName:f,inputs:m,attrs:g}=e;this.backendName==null&&this.backend;const y=Vv(f,this.backendName);_(y!=null,()=>`Cannot find registered kernel '${f}' for backend '${this.backendName}'`),i=()=>{const b=this.backend.numDataIds();u=y.kernelFunc({inputs:m,attrs:g,backend:this.backend});const x=Array.isArray(u)?u:[u];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(f,b,x);const w=x.map(v=>v.rank!=null?v:this.makeTensorFromTensorInfo(v));if(r){const v=this.getTensorsForGradient(f,m,w);s=this.saveTensorsForBackwardMode(v)}return w}}else{const{forwardFunc:f}=e,m=g=>{r&&(s=g.map(y=>this.keep(this.clone(y))))};i=()=>{const g=this.backend.numDataIds();u=this.tidy(()=>f(this.backend,m));const y=Array.isArray(u)?u:[u];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(c,g,y),y}}const{inputs:l,attrs:d}=e,h=cy(e)?null:e.backwardsFunc;let p;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?t=i():(p=this.profiler.profileKernel(c,l,()=>i()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(p),t=p.outputs)}),r&&this.addTapeNode(c,l,t,h,s,d),this.state.profiling&&this.state.activeProfile.kernels.push({name:c,bytesAdded:this.state.numBytes-a,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-o,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(l).map(f=>l[f]!=null?l[f].shape:null),outputShapes:t.map(f=>f.shape),kernelTimeMs:p.timeMs,extraInfo:p.extraInfo}),Array.isArray(u)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(s=>this.keep(this.clone(s)))}getTensorsForGradient(e,t,s){const r=Wv(e);if(r!=null){const a=r.inputsToSave||[],o=r.outputsToSave||[];let i;r.saveAllInputs?(_(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),i=Object.keys(t).map(c=>t[c])):i=a.map(c=>t[c]);const u=s.filter((c,l)=>o[l]);return i.concat(u)}return[]}makeTensor(e,t,s,r){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");s=s||"float32",r=r||this.backend;let a=e;s==="string"&&jd(e[0])&&(a=e.map(u=>Ka(u)));const o=r.write(a,t,s),i=new Bt(t,s,o,this.nextTensorId());if(this.trackTensor(i,r),s==="string"){const u=this.state.tensorInfo.get(o),c=sL(a);this.state.numBytes+=c-u.bytes,u.bytes=c}return i}makeTensorFromDataId(e,t,s,r){s=s||"float32";const a={dataId:e,shape:t,dtype:s};return this.makeTensorFromTensorInfo(a,r)}makeTensorFromTensorInfo(e,t){const{dataId:s,shape:r,dtype:a}=e,o=new Bt(r,a,s,this.nextTensorId());return this.trackTensor(o,t),o}makeVariable(e,t=!0,s,r){s=s||this.nextVariableId().toString(),r!=null&&r!==e.dtype&&(e=e.cast(r));const a=new xf(e,t,s,this.nextTensorId());if(this.state.registeredVariables[a.name]!=null)throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(e,t){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let s=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(s=e.size*fu(e.dtype)),this.state.numBytes+=s,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:s})),e instanceof xf||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){const s=e.size*fu(e.dtype);this.state.numBytes-=s}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,s=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(r=>r.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-s;for(const r of this.state.activeProfile.kernels)r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,t,s,r,a,o){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:s,saved:a},u=Wv(e);u!=null&&(r=u.gradFunc),r!=null&&(i.gradient=c=>(c=c.map((l,d)=>{if(l==null){const h=s[d],p=Ln(h.size,h.dtype);return this.makeTensor(p,h.shape,h.dtype)}return l}),r(c.length>1?c:c[0],a,o))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=xk(e),s=new Set(t.map(a=>a.id));for(let a=0;a<this.state.activeScope.track.length;a++){const o=this.state.activeScope.track[a];!o.kept&&!s.has(o.id)&&o.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(a=>{!a.kept&&a.scopeId===r.id&&this.track(a)})}gradients(e,t,s,r=!1){if(_(t.length>0,()=>"gradients() received an empty list of xs."),s!=null&&s.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${s.dtype}'`);const a=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));_(a instanceof Bt,()=>"The result y returned by f() must be a tensor.");const o=AL(this.state.activeTape,t,a);if(!r&&o.length===0&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const i={};i[a.id]=s??zL(a.shape),DL(i,o,c=>this.tidy(c),VL);const u=t.map(c=>i[c.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(c=>{for(const l of c.saved)l.dispose()}),this.state.activeTape=null),{value:a,grads:u}})}customGrad(e){return _(qy(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{_(t.every(i=>i instanceof Bt),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let s;const r={};t.forEach((i,u)=>{r[u]=i});const a=(i,u)=>(s=e(...t,u),_(s.value instanceof Bt,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),_(qy(s.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),s.value),o=(i,u)=>{const c=s.gradFunc(i,u),l=Array.isArray(c)?c:[c];_(l.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),_(l.every(h=>h instanceof Bt),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const d={};return l.forEach((h,p)=>{d[p]=()=>h}),d};return this.runKernelFunc({forwardFunc:a,backwardsFunc:o,inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=Rn(),s=await this.backend.time(e);return s.wallMs=Rn()-t,s}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Kv;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}bu.nextTensorId=0;bu.nextVariableId=0;function zL(n){const e=yx(U(n),"float32");return M.makeTensor(e,n,"float32")}function vk(){const n=lk();if(n._tfengine==null){const e=new oL(n);n._tfengine=new bu(e)}return cL(n._tfengine.ENV),FL(()=>n._tfengine),n._tfengine}const M=vk();function VL(n,e){const t={a:n,b:e};return M.runKernel(mi,t)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WL(){return typeof navigator<"u"&&navigator!=null}function Ik(n){if(n||WL()){if(n||(n=navigator),n.product==="ReactNative")return!0;const e=n.userAgent||n.vendor||(typeof window<"u"?window.opera:"");if(!e){const t=n;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function Sk(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const os=Y();os.registerFlag("DEBUG",()=>!1,n=>{n&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});os.registerFlag("IS_BROWSER",()=>Sk());os.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");os.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));os.registerFlag("IS_SAFARI",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor));os.registerFlag("PROD",()=>!1);os.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>os.getBool("DEBUG"));os.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);os.registerFlag("IS_TEST",()=>!1);os.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>os.getBool("DEBUG"));os.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);os.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);os.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yo(n,e){let t=n;if(nr(n))return e==="string"?[]:[n.length];if(yk(n)){const r=n.channels||"RGBA";return[n.height,n.width*r.length]}else if(bk(n))return[n.buffer.size/(e==null?4:fu(e))];if(!Array.isArray(n))return[];const s=[];for(;Array.isArray(t)||nr(t)&&e!=="string";)s.push(t.length),t=t[0];return Array.isArray(n)&&Y().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&kk(n,s,[]),s}function kk(n,e,t){if(t=t||[],!Array.isArray(n)&&!nr(n)){_(e.length===0,()=>`Element arr[${t.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`);return}_(e.length>0,()=>`Element arr[${t.join("][")}] should be a primitive, but is an array of ${n.length} elements`),_(n.length===e[0],()=>`Element arr[${t.join("][")}] should have ${e[0]} elements, but has ${n.length} elements`);const s=e.slice(1);for(let r=0;r<n.length;++r)kk(n[r],s,t.concat(r))}function Xv(n,e,t,s){if(n!=="string_or_numeric"){if(n==null)throw new Error("Expected dtype cannot be null.");if(n!=="numeric"&&n!==e||n==="numeric"&&e==="string")throw new Error(`Argument '${t}' passed to '${s}' must be ${n} tensor, but got ${e} tensor`)}}function E(n,e,t,s="numeric"){if(n instanceof ee())return Xv(s,n.dtype,e,t),n;let r=fi(n);if(r!=="string"&&["bool","int32","float32"].indexOf(s)>=0&&(r=s),Xv(s,r,e,t),n==null||!nr(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string"){const u=n==null?"null":n.constructor.name;throw new Error(`Argument '${e}' passed to '${t}' must be a Tensor or TensorLike, but got '${u}'`)}const a=yo(n,r);!nr(n)&&!Array.isArray(n)&&(n=[n]);const i=r!=="string"?xi(n,r):no(n,[],!0);return M.makeTensor(i,a,r)}function wf(n,e,t,s="numeric"){if(!Array.isArray(n))throw new Error(`Argument ${e} passed to ${t} must be a \`Tensor[]\` or \`TensorLike[]\``);return n.map((a,o)=>E(a,`${e}[${o}]`,t,s))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nk="__op";function L(n){const e=Object.keys(n);if(e.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let t=e[0];const s=n[t];t.endsWith("_")&&(t=t.substring(0,t.length-1)),t=t+Nk;const r=(...a)=>{M.startScope(t);try{const o=s(...a);return Yo(o)&&console.error("Cannot return a Promise inside of tidy."),M.endScope(o),o}catch(o){throw M.endScope(null),o}};return Object.defineProperty(r,"name",{value:t,configurable:!0}),r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UL(n,e){const t=E(n,"real","complex"),s=E(e,"imag","complex");us(t.shape,s.shape,`real and imag shapes, ${t.shape} and ${s.shape}, must match in call to tf.complex().`);const r={real:t,imag:s};return M.runKernel(xx,r)}const so=L({complex_:UL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bo(n,e,t,s){if(s==null)s=fi(n);else if(s==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(bk(n)||yk(n)){if(s!=="float32"&&s!=="int32")throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${s}.`);return M.backend.createTensorFromGPUData(n,e||t,s)}if(!nr(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(e!=null){Ms(e);const r=U(e),a=U(t);_(r===a,()=>`Based on the provided shape, [${e}], the tensor should have ${r} values but has ${a}`);for(let o=0;o<t.length;++o){const i=t[o],u=o===t.length-1?i!==U(e.slice(o)):!0;_(t[o]===e[o]||!u,()=>`Error creating a new Tensor. Inferred shape (${t}) does not match the provided shape (${e}). `)}}return!nr(n)&&!Array.isArray(n)&&(n=[n]),e=e||t,n=s!=="string"?xi(n,s):no(n,[],!0),M.makeTensor(n,e,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qs(n,e,t){const s=yo(n,t);return bo(n,e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zo={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};class Nr{static join(e){return new Nr(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,e==null||(e instanceof Array||(e=[e]),e=e.map(s=>nr(s)?s.buffer:s),e.length===0))return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let s=0;s<e.length;s++){const r=e[s];s!==e.length-1&&r.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const a=t+r.byteLength;this.shards.push({buffer:r,start:t,end:a}),t=a}this.shards.length===0&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,t=this.byteLength){if(this.shards.length===0)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),t=Math.min(this.byteLength,t),t<=e)return new ArrayBuffer(0);const s=this.findShardForByte(e);if(s===-1)throw new Error(`Could not find start shard for byte ${e}`);const r=t-e,a=new ArrayBuffer(r),o=new Uint8Array(a);let i=0;for(let u=s;u<this.shards.length;u++){const c=this.shards[u],d=e+i-c.start,h=i,f=Math.min(t,c.end)-c.start,m=new Uint8Array(c.buffer,d,f-d);if(o.set(m,h),i+=m.length,t<c.end)break}return a}findShardForByte(e){if(this.shards.length===0||e<0||e>=this.byteLength)return-1;if(this.bufferUniformSize!=null)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(r){return e<r.start?-1:e>=r.end?1:0}if(t(this.shards[this.previousShardIndex])===0)return this.previousShardIndex;const s=GL(this.shards,t);return s===-1?-1:(this.previousShardIndex=s,this.previousShardIndex)}}function GL(n,e){let t=0,s=n.length;for(;t<=s;){const r=Math.floor((s-t)/2)+t,a=e(n[r]);if(a===0)return r;a<0?s=r:t=r+1}return-1}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cr(){return M}function Yv(){return M.memory()}function j(n,e){return M.tidy(n,e)}function Xe(n){xk(n).forEach(t=>t.dispose())}function bn(n){return M.keep(n)}function Zv(n){return M.setBackend(n)}function Jv(){return M.ready()}function HL(){return M.backendName}function Rx(n,e,t=1){return M.registerBackend(n,e,t)}function Ck(){return M.backend}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ro=4;async function tb(n,e){const t=[],s=[],r=Array.isArray(n)?n.map(o=>o.name):Object.keys(n);for(let o=0;o<r.length;++o){const i=r[o],u=Array.isArray(n)?n[o].tensor:n[i];if(u.dtype!=="float32"&&u.dtype!=="int32"&&u.dtype!=="bool"&&u.dtype!=="string"&&u.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${i}': ${u.dtype}`);const c={name:i,shape:u.shape,dtype:u.dtype};if(u.dtype==="string"){const l=new Promise(async d=>{const h=await u.bytes(),p=h.reduce((g,y)=>g+y.length,0)+ro*h.length,f=new Uint8Array(p);let m=0;for(let g=0;g<h.length;g++){const y=h[g],b=new Uint8Array(new Uint32Array([y.length]).buffer);f.set(b,m),m+=ro,f.set(y,m),m+=y.length}d(f)});s.push(l)}else s.push(u.data());e!=null&&(c.group=e),t.push(c)}const a=await Promise.all(s);return{data:KL(a),specs:t}}function Tk(n,e){const t=new Nr(n),s={};let r=0;for(const a of e){const o=jL(a,(i,u)=>t.slice(r+i,r+u));s[a.name]=$k(a,t.slice(r,r+o)),r+=o}return s}function jL(n,e){const t=U(n.shape);let s;if("quantization"in n){const r=n.quantization;s=Zo[r.dtype]}else if(n.dtype==="string"){let r=0;for(let a=0;a<t;a++)r+=ro+new Uint32Array(e(r,r+ro))[0];return r}else s=Zo[n.dtype];return t*s}async function qL(n,e){const t=U(n.shape);let s;if("quantization"in n){const r=n.quantization;s=Zo[r.dtype]}else if(n.dtype==="string"){let r=0;for(let a=0;a<t;a++)r+=ro+new Uint32Array(await e(r,r+ro))[0];return r}else s=Zo[n.dtype];return t*s}function $k(n,e){const t=n.name,s=n.dtype,r=n.shape,a=U(r);let o,i=0;if("quantization"in n){const u=n.quantization;if(u.dtype==="uint8"||u.dtype==="uint16"){if(!("min"in u&&"scale"in u))throw new Error(`Weight ${n.name} with quantization ${u.dtype} doesn't have corresponding metadata min and scale.`)}else if(u.dtype==="float16"){if(s!=="float32")throw new Error(`Weight ${n.name} is quantized with ${u.dtype} which only supports weights of type float32 not ${s}.`)}else throw new Error(`Weight ${n.name} has unknown quantization dtype ${u.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);const c=Zo[u.dtype],l=u.dtype==="uint8"?new Uint8Array(e):new Uint16Array(e);if(s==="float32")if(u.dtype==="uint8"||u.dtype==="uint16"){o=new Float32Array(l.length);for(let d=0;d<l.length;d++){const h=l[d];o[d]=h*u.scale+u.min}}else if(u.dtype==="float16")o=e3()(l);else throw new Error(`Unsupported quantization type ${u.dtype} for weight type float32.`);else if(s==="int32"){if(u.dtype!=="uint8"&&u.dtype!=="uint16")throw new Error(`Unsupported quantization type ${u.dtype} for weight type int32.`);o=new Int32Array(l.length);for(let d=0;d<l.length;d++){const h=l[d];o[d]=Math.round(h*u.scale+u.min)}}else throw new Error(`Unsupported dtype in weight '${t}': ${s}`);i+=a*c}else if(s==="string"){const u=U(n.shape);o=[];for(let c=0;c<u;c++){const l=new Uint32Array(e.slice(i,i+ro))[0];i+=ro;const d=new Uint8Array(e.slice(i,i+l));o.push(d),i+=l}}else{const u=Zo[s];if(s==="float32")o=new Float32Array(e);else if(s==="int32")o=new Int32Array(e);else if(s==="bool")o=new Uint8Array(e);else if(s==="complex64"){o=new Float32Array(e);const c=new Float32Array(o.length/2),l=new Float32Array(o.length/2);for(let f=0;f<c.length;f++)c[f]=o[f*2],l[f]=o[f*2+1];const d=Qs(c,r,"float32"),h=Qs(l,r,"float32"),p=so(d,h);return d.dispose(),h.dispose(),p}else throw new Error(`Unsupported dtype in weight '${t}': ${s}`);i+=a*u}return Qs(o,r,s)}async function Qv(n,e,t){let s=new Uint8Array(e);for(;s.byteLength<t;){const{done:r,value:a}=await n.read();if(r&&a==null){const i=t-s.byteLength;throw new Error(`Reader is done but ${i} bytes are still expected`)}const o=new Uint8Array(s.length+a.byteLength);o.set(s,0),o.set(new Uint8Array(a),s.length),s=o}return s.buffer}async function _k(n,e){const t={},s=n.getReader();let r=new ArrayBuffer(0);for(const a of e){const o=await qL(a,async(c,l)=>(r=await Qv(s,r,l),r.slice(c,l)));r=await Qv(s,r,o);const i=r.slice(0,o);r=r.slice(o);const u=$k(a,i);if(t[a.name]=u,HL()==="webgpu"){const c=Ck();"uploadToGPU"in c&&U(u.shape)>=Y().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&c.uploadToGPU(u.dataId)}}return t}function KL(n){if(n===null)throw new Error(`Invalid input value: ${JSON.stringify(n)}`);let e=0;const t=[];n.forEach(a=>{if(e+=a.byteLength,t.push(a.byteLength===a.buffer.byteLength?a:new a.constructor(a)),!(a instanceof Float32Array||a instanceof Int32Array||a instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${a.constructor.name}`)});const s=new Uint8Array(e);let r=0;return t.forEach(a=>{s.set(new Uint8Array(a.buffer),r),r+=a.byteLength}),s.buffer}const Ox=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function e1(n){return Ox?Buffer.byteLength(n,"utf8"):new Blob([n]).size}function XL(n){if(Ox)return Buffer.from(n).toString("base64");const e=new Uint8Array(n);let t="";for(let s=0,r=e.length;s<r;s++)t+=String.fromCharCode(e[s]);return btoa(t)}function YL(n){if(Ox){const s=Buffer.from(n,"base64");return s.buffer.slice(s.byteOffset,s.byteOffset+s.byteLength)}const e=atob(n),t=new Uint8Array(e.length);for(let s=0;s<e.length;++s)t.set([e.charCodeAt(s)],s);return t.buffer}function Ek(n){return Nr.join(n)}function t1(n){const e="/";for(n=n.trim();n.endsWith(e);)n=n.slice(0,n.length-1);const t=n.split(e);return t[t.length-1]}function Ak(n,e){const t={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy,weightsManifest:e};return n.signature!=null&&(t.signature=n.signature),n.userDefinedMetadata!=null&&(t.userDefinedMetadata=n.userDefinedMetadata),n.modelInitializer!=null&&(t.modelInitializer=n.modelInitializer),n.initializerSignature!=null&&(t.initializerSignature=n.initializerSignature),n.trainingConfig!=null&&(t.trainingConfig=n.trainingConfig),t}function Dk(n,e,t){const s={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy};if(n.trainingConfig!=null&&(s.trainingConfig=n.trainingConfig),n.weightsManifest!=null){if(!e)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!t)throw new Error("modelJSON has weightsManifest but weightData is null");s.weightSpecs=e,s.weightData=t}return n.signature!=null&&(s.signature=n.signature),n.userDefinedMetadata!=null&&(s.userDefinedMetadata=n.userDefinedMetadata),n.modelInitializer!=null&&(s.modelInitializer=n.modelInitializer),n.initializerSignature!=null&&(s.initializerSignature=n.initializerSignature),s}async function Fx(n,e){let t,s;return n.weightsManifest!=null&&([t,s]=await e(n.weightsManifest)),Dk(n,t,s)}function Xh(n){if(n.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:n.modelTopology==null?0:e1(JSON.stringify(n.modelTopology)),weightSpecsBytes:n.weightSpecs==null?0:e1(JSON.stringify(n.weightSpecs)),weightDataBytes:n.weightData==null?0:new Nr(n.weightData).byteLength}}function nb(n){const e=[];for(const t of n)e.push(...t.weights);return e}function ZL(){const n=t=>{let s=t<<13,r=0;for(;(s&8388608)===0;)r-=8388608,s<<=1;return s&=-8388609,r+=947912704,s|r},e=new Uint32Array(2048);e[0]=0;for(let t=1;t<1024;t++)e[t]=n(t);for(let t=1024;t<2048;t++)e[t]=939524096+(t-1024<<13);return e}function JL(){const n=new Uint32Array(64);n[0]=0,n[31]=1199570944,n[32]=2147483648,n[63]=3347054592;for(let e=1;e<31;e++)n[e]=e<<23;for(let e=33;e<63;e++)n[e]=2147483648+(e-32<<23);return n}function QL(){const n=new Uint32Array(64);for(let e=0;e<64;e++)n[e]=1024;return n[0]=n[32]=0,n}function e3(){const n=ZL(),e=JL(),t=QL();return s=>{const r=new ArrayBuffer(4*s.length),a=new Uint32Array(r);for(let o=0;o<s.length;o++){const i=s[o],u=n[t[i>>10]+(i&1023)]+e[i>>10];a[o]=u}return new Float32Array(r)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Mt{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return Mt.instance==null&&(Mt.instance=new Mt),Mt.instance}static registerSaveRouter(e){Mt.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Mt.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Mt.getHandlers(e,"save")}static getLoadHandlers(e,t){return Mt.getHandlers(e,"load",t)}static getHandlers(e,t,s){const r=[];return(t==="load"?Mt.getInstance().loadRouters:Mt.getInstance().saveRouters).forEach(o=>{const i=o(e,s);i!==null&&r.push(i)}),r}}const t3=n=>Mt.registerSaveRouter(n),n3=n=>Mt.registerLoadRouter(n),Rk=n=>Mt.getSaveHandlers(n),s3=(n,e)=>Mt.getLoadHandlers(n,e);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sb="tensorflowjs",rb=1,Mo="models_store",Wa="model_info_store";function Ok(){if(!Y().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const n=typeof window>"u"?self:window,e=n.indexedDB||n.mozIndexedDB||n.webkitIndexedDB||n.msIndexedDB||n.shimIndexedDB;if(e==null)throw new Error("The current browser does not appear to support IndexedDB.");return e}function ab(n){const e=n.result;e.createObjectStore(Mo,{keyPath:"modelPath"}),e.createObjectStore(Wa,{keyPath:"modelPath"})}class Jo{constructor(e){if(this.indexedDB=Ok(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((s,r)=>{const a=this.indexedDB.open(sb,rb);a.onupgradeneeded=()=>ab(a),a.onsuccess=()=>{const o=a.result;if(t==null){const i=o.transaction(Mo,"readonly"),c=i.objectStore(Mo).get(this.modelPath);c.onsuccess=()=>{if(c.result==null)return o.close(),r(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));s(c.result.modelArtifacts)},c.onerror=l=>(o.close(),r(c.error)),i.oncomplete=()=>o.close()}else{t.weightData=Nr.join(t.weightData);const i=Xh(t),u=o.transaction(Wa,"readwrite");let c=u.objectStore(Wa),l;try{l=c.put({modelPath:this.modelPath,modelArtifactsInfo:i})}catch(h){return r(h)}let d;l.onsuccess=()=>{d=o.transaction(Mo,"readwrite");const h=d.objectStore(Mo);let p;try{p=h.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:i})}catch(f){return r(f)}p.onsuccess=()=>s({modelArtifactsInfo:i}),p.onerror=f=>{c=u.objectStore(Wa);const m=c.delete(this.modelPath);m.onsuccess=()=>(o.close(),r(p.error)),m.onerror=g=>(o.close(),r(p.error))}},l.onerror=h=>(o.close(),r(l.error)),u.oncomplete=()=>{d==null?o.close():d.oncomplete=()=>o.close()}}},a.onerror=o=>r(a.error)})}}Jo.URL_SCHEME="indexeddb://";const Fk=n=>Y().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(Jo.URL_SCHEME)?r3(n.slice(Jo.URL_SCHEME.length)):null;Mt.registerSaveRouter(Fk);Mt.registerLoadRouter(Fk);function r3(n){return new Jo(n)}function a3(n){return n.startsWith(Jo.URL_SCHEME)?n.slice(Jo.URL_SCHEME.length):n}class o3{constructor(){this.indexedDB=Ok()}async listModels(){return new Promise((e,t)=>{const s=this.indexedDB.open(sb,rb);s.onupgradeneeded=()=>ab(s),s.onsuccess=()=>{const r=s.result,a=r.transaction(Wa,"readonly"),i=a.objectStore(Wa).getAll();i.onsuccess=()=>{const u={};for(const c of i.result)u[c.modelPath]=c.modelArtifactsInfo;e(u)},i.onerror=u=>(r.close(),t(i.error)),a.oncomplete=()=>r.close()},s.onerror=r=>t(s.error)})}async removeModel(e){return e=a3(e),new Promise((t,s)=>{const r=this.indexedDB.open(sb,rb);r.onupgradeneeded=()=>ab(r),r.onsuccess=()=>{const a=r.result,o=a.transaction(Wa,"readwrite"),i=o.objectStore(Wa),u=i.get(e);let c;u.onsuccess=()=>{if(u.result==null)return a.close(),s(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const l=i.delete(e),d=()=>{c=a.transaction(Mo,"readwrite");const p=c.objectStore(Mo).delete(e);p.onsuccess=()=>t(u.result.modelArtifactsInfo),p.onerror=f=>s(u.error)};l.onsuccess=d,l.onerror=h=>(d(),a.close(),s(u.error))}},u.onerror=l=>(a.close(),s(u.error)),o.oncomplete=()=>{c==null?a.close():c.oncomplete=()=>a.close()}},r.onerror=a=>s(r.error)})}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fa="/",Ki="tensorflowjs_models",Pk="info",i3="model_topology",u3="weight_specs",l3="weight_data",c3="model_metadata";function Lk(n){return{info:[Ki,n,Pk].join(fa),topology:[Ki,n,i3].join(fa),weightSpecs:[Ki,n,u3].join(fa),weightData:[Ki,n,l3].join(fa),modelMetadata:[Ki,n,c3].join(fa)}}function Mk(n){for(const e of Object.values(n))window.localStorage.removeItem(e)}function d3(n){const e=n.split(fa);if(e.length<3)throw new Error(`Invalid key format: ${n}`);return e.slice(1,e.length-1).join(fa)}function h3(n){return n.startsWith(Qo.URL_SCHEME)?n.slice(Qo.URL_SCHEME.length):n}class Qo{constructor(e){if(!Y().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=Lk(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),s=JSON.stringify(e.weightSpecs),r=Xh(e),a=Nr.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,s),this.LS.setItem(this.keys.weightData,XL(a));const o={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,initializerSignature:e.initializerSignature!=null?e.initializerSignature:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(o)),{modelArtifactsInfo:r}}catch{throw Mk(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},s=JSON.parse(this.LS.getItem(this.keys.topology));if(s==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=s;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(r==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const a=this.LS.getItem(this.keys.modelMetadata);if(a!=null){const i=JSON.parse(a);t.format=i.format,t.generatedBy=i.generatedBy,t.convertedBy=i.convertedBy,i.signature!=null&&(t.signature=i.signature),i.userDefinedMetadata!=null&&(t.userDefinedMetadata=i.userDefinedMetadata),i.modelInitializer!=null&&(t.modelInitializer=i.modelInitializer),i.initializerSignature!=null&&(t.initializerSignature=i.initializerSignature),i.trainingConfig!=null&&(t.trainingConfig=i.trainingConfig)}const o=this.LS.getItem(this.keys.weightData);if(o==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=YL(o),t}}Qo.URL_SCHEME="localstorage://";const Bk=n=>Y().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(Qo.URL_SCHEME)?p3(n.slice(Qo.URL_SCHEME.length)):null;Mt.registerSaveRouter(Bk);Mt.registerLoadRouter(Bk);function p3(n){return new Qo(n)}class f3{constructor(){_(Y().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),_(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const e={},t=Ki+fa,s=fa+Pk;for(let r=0;r<this.LS.length;++r){const a=this.LS.key(r);if(a.startsWith(t)&&a.endsWith(s)){const o=d3(a);e[o]=JSON.parse(this.LS.getItem(a))}}return e}async removeModel(e){e=h3(e);const t=Lk(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);const s=JSON.parse(this.LS.getItem(t.info));return Mk(t),s}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qi="://";class Un{constructor(){this.managers={}}static getInstance(){return Un.instance==null&&(Un.instance=new Un),Un.instance}static registerManager(e,t){_(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(Qi)&&(e=e.slice(0,e.indexOf(Qi))),_(e.length>0,()=>"scheme must not be an empty string.");const s=Un.getInstance();_(s.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),s.managers[e]=t}static getManager(e){const t=Un.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(Un.getInstance().managers)}}function Kp(n){if(n.indexOf(Qi)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${Un.getSchemes().join(",")}`);return{scheme:n.split(Qi)[0],path:n.split(Qi)[1]}}async function zk(n,e,t=!1){_(n!==e,()=>`Old path and new path are the same: '${n}'`);const s=Mt.getLoadHandlers(n);_(s.length>0,()=>`Copying failed because no load handler is found for source URL ${n}.`),_(s.length<2,()=>`Copying failed because more than one (${s.length}) load handlers for source URL ${n}.`);const r=s[0],a=Mt.getSaveHandlers(e);_(a.length>0,()=>`Copying failed because no save handler is found for destination URL ${e}.`),_(a.length<2,()=>`Copying failed because more than one (${s.length}) save handlers for destination URL ${e}.`);const o=a[0],i=Kp(n).scheme,u=Kp(n).path,c=i===Kp(n).scheme,l=await r.load();t&&c&&await Un.getManager(i).removeModel(u);const d=await o.save(l);return t&&!c&&await Un.getManager(i).removeModel(u),d.modelArtifactsInfo}async function m3(){const n=Un.getSchemes(),e={};for(const t of n){const s=await Un.getManager(t).listModels();for(const r in s){const a=t+Qi+r;e[a]=s[r]}}return e}async function g3(n){const e=Kp(n);return Un.getManager(e.scheme).removeModel(e.path)}async function y3(n,e){return zk(n,e,!1)}async function b3(n,e){return zk(n,e,!0)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class x3{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){if(typeof window>"u"||!Y().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(e,t);return}this.functionRefs.push(e),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",s=>{if(s.source===window&&s.data.name===this.messageName){s.stopPropagation();const r=this.functionRefs[s.data.index];r(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}isTypedArray(e){return dk(e)}}if(Y().get("IS_BROWSER")){Y().setPlatform("browser",new x3);try{Un.registerManager(Qo.URL_SCHEME,new f3)}catch{}try{Un.registerManager(Jo.URL_SCHEME,new o3)}catch{}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w3={importFetch:()=>require("node-fetch")};let dy;class v3{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return Y().global.fetch!=null?Y().global.fetch(e,t):(dy==null&&(dy=w3.importFetch()),dy(e,t))}now(){const e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}}Y().get("IS_NODE")&&!Y().get("IS_BROWSER")&&Y().setPlatform("node",new v3);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function He(n,e="float32",t){return e=e||"float32",Ms(n),new dn(n,e,t)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I3(n,e){const t=E(n,"x","cast");if(!nL(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if(e==="string"&&t.dtype!=="string"||e!=="string"&&t.dtype==="string")throw new Error("Only strings can be casted to strings");const s={x:t},r={dtype:e};return M.runKernel(Hu,s,r)}const fe=L({cast_:I3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S3(n){const t={x:E(n,"x","clone","string_or_numeric")};return M.runKernel(cl,t)}const ya=L({clone_:S3});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vk(n,e=!1){console.log(n.toString(e))}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */vk();const k3={buffer:He,cast:fe,clone:ya,print:Vk};PL(k3);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N3(n,e){let t=E(n,"a","add"),s=E(e,"b","add");[t,s]=Ut(t,s);const r={a:t,b:s};return M.runKernel(mi,r)}const se=L({add_:N3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C3(n,e){let t=E(n,"a","floorDiv"),s=E(e,"b","floorDiv");[t,s]=Ut(t,s);const r={a:t,b:s};return M.runKernel(il,r)}const Px=L({floorDiv_:C3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T3(n,e){let t=E(n,"a","div"),s=E(e,"b","div");if([t,s]=Ut(t,s),t.dtype==="int32"&&s.dtype==="int32")return Px(t,s);const r={a:t,b:s},a={};return M.runKernel(tl,r,a)}const $e=L({div_:T3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $3(n,e){let t=E(n,"a","mul"),s=E(e,"b","mul");[t,s]=Ut(t,s);const r={a:t,b:s};return M.runKernel(Cl,r)}const B=L({mul_:$3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _3(n){const e=E(n,"x","abs");if(e.dtype==="complex64"){const t={x:e};return M.runKernel($m,t)}else{const t={x:e};return M.runKernel(qd,t)}}const an=L({abs_:_3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E3(n){const t={x:E(n,"x","acos")};return M.runKernel(Fu,t)}const Wk=L({acos_:E3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A3(n){const t={x:E(n,"x","acosh")};return M.runKernel(Pu,t)}const Uk=L({acosh_:A3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D3(n){_(Array.isArray(n),()=>"The argument passed to tf.addN() must be a list of tensors"),_(n.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${n.length}`);const e=n.map((r,a)=>E(r,`tensors${a}`,"addN")),t=e[0];e.forEach(r=>{if(r.dtype!==t.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),e.forEach(r=>{if(!Qe(r.shape,t.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const s=e;return M.runKernel(Lu,s)}const R3=L({addN_:D3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O3(n,e=null,t=!1){const r={x:E(n,"x","all","bool")},a={axis:e,keepDims:t};return M.runKernel(Kd,r,a)}const Lx=L({all_:O3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F3(n,e=null,t=!1){const r={x:E(n,"x","any","bool")},a={axis:e,keepDims:t};return M.runKernel(Xd,r,a)}const vf=L({any_:F3});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P3(n,e=0){const s={x:E(n,"x","argMax")},r={axis:e};return M.runKernel(Yd,s,r)}const xu=L({argMax_:P3});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L3(n,e=0){const s={x:E(n,"x","argMin")},r={axis:e};return M.runKernel(Zd,s,r)}const Gk=L({argMin_:L3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M3(n){const t={x:E(n,"x","asin")};return M.runKernel(Mu,t)}const Hk=L({asin_:M3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B3(n){const t={x:E(n,"x","asinh")};return M.runKernel(Bu,t)}const jk=L({asinh_:B3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z3(n){const t={x:E(n,"x","atan")};return M.runKernel(zu,t)}const qk=L({atan_:z3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V3(n,e){let t=E(n,"a","atan2"),s=E(e,"b","atan2");[t,s]=Ut(t,s);const r={a:t,b:s};return M.runKernel(Wu,r)}const Kk=L({atan2_:V3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W3(n){const t={x:E(n,"x","atanh")};return M.runKernel(Vu,t)}const Xk=L({atanh_:W3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xo(n,e,t,s,r="NHWC",a){const o=n[3],i=[...e,o],u=Tr(r);return Vt(n,i,t,a,s,null,null,u)}function Mn(n,e,t,s,r,a,o="channelsLast"){const[i,u]=Gc(e);let c;if(o==="channelsLast")c=[i,u,n[3],n[3]];else if(o==="channelsFirst")c=[i,u,n[1],n[1]];else throw new Error(`Unknown dataFormat ${o}`);return Vt(n,c,t,s,r,a,!1,o)}function Bs(n,e,t,s,r,a,o="NDHWC"){const[i,u,c]=ob(e);let l,d;if(o==="NDHWC")d="channelsLast",l=[i,u,c,n[4],n[4]];else if(o==="NCDHW")d="channelsFirst",l=[i,u,c,n[1],n[1]];else throw new Error(`Unknown dataFormat ${o}`);return Cr(n,l,t,s,r,!1,d,a)}function Vt(n,e,t,s,r,a,o=!1,i="channelsLast"){let[u,c,l,d]=[-1,-1,-1,-1];if(i==="channelsLast")[u,c,l,d]=n;else if(i==="channelsFirst")[u,d,c,l]=n;else throw new Error(`Unknown dataFormat ${i}`);const[h,p,,f]=e,[m,g]=Gc(t),[y,b]=Gc(s),x=eu(h,y),w=eu(p,b),{padInfo:v,outHeight:S,outWidth:N}=H3(r,c,l,m,g,x,w,a,i),$=o?f*d:f;let T;return i==="channelsFirst"?T=[u,$,S,N]:i==="channelsLast"&&(T=[u,S,N,$]),{batchSize:u,dataFormat:i,inHeight:c,inWidth:l,inChannels:d,outHeight:S,outWidth:N,outChannels:$,padInfo:v,strideHeight:m,strideWidth:g,filterHeight:h,filterWidth:p,effectiveFilterHeight:x,effectiveFilterWidth:w,dilationHeight:y,dilationWidth:b,inShape:n,outShape:T,filterShape:e}}function Cr(n,e,t,s,r,a=!1,o="channelsLast",i){let[u,c,l,d,h]=[-1,-1,-1,-1,-1];if(o==="channelsLast")[u,c,l,d,h]=n;else if(o==="channelsFirst")[u,h,c,l,d]=n;else throw new Error(`Unknown dataFormat ${o}`);const[p,f,m,,g]=e,[y,b,x]=ob(t),[w,v,S]=ob(s),N=eu(p,w),$=eu(f,v),T=eu(m,S),{padInfo:C,outDepth:k,outHeight:A,outWidth:D}=j3(r,c,l,d,y,b,x,N,$,T,i),R=a?g*h:g;let F;return o==="channelsFirst"?F=[u,R,k,A,D]:o==="channelsLast"&&(F=[u,k,A,D,R]),{batchSize:u,dataFormat:o,inDepth:c,inHeight:l,inWidth:d,inChannels:h,outDepth:k,outHeight:A,outWidth:D,outChannels:R,padInfo:C,strideDepth:y,strideHeight:b,strideWidth:x,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:N,effectiveFilterHeight:$,effectiveFilterWidth:T,dilationDepth:w,dilationHeight:v,dilationWidth:S,inShape:n,outShape:F,filterShape:e}}function U3(n,e,t,s,r){s==null&&(s=Mx(n,e,t));const a=n[0],o=n[1],i=Hc((a-e+2*s)/t+1,r),u=Hc((o-e+2*s)/t+1,r);return[i,u]}function G3(n,e,t,s,r,a){r==null&&(r=Mx(n,e[0],s[0]));const o=[0,0,0,t];for(let i=0;i<3;i++)n[i]+2*r>=e[i]&&(o[i]=Hc((n[i]-e[i]+2*r)/s[i]+1,a));return o}function Mx(n,e,t,s=1){const r=eu(e,s);return Math.floor((n[0]*(t-1)-t+r)/2)}function Gc(n){return typeof n=="number"?[n,n,n]:n.length===2?[n[0],n[1],1]:n}function ob(n){return typeof n=="number"?[n,n,n]:n}function eu(n,e){return e<=1?n:n+(n-1)*(e-1)}function H3(n,e,t,s,r,a,o,i,u){let c,l,d;if(typeof n=="number"){c={top:n,bottom:n,left:n,right:n,type:n===0?"VALID":"NUMBER"};const p=U3([e,t],a,s,n,i);l=p[0],d=p[1]}else if(n==="same"){l=Math.ceil(e/s),d=Math.ceil(t/r);const h=Math.max(0,(l-1)*s+a-e),p=Math.max(0,(d-1)*r+o-t),f=Math.floor(h/2),m=h-f,g=Math.floor(p/2),y=p-g;c={top:f,bottom:m,left:g,right:y,type:"SAME"}}else if(n==="valid")c={top:0,bottom:0,left:0,right:0,type:"VALID"},l=Math.ceil((e-a+1)/s),d=Math.ceil((t-o+1)/r);else if(typeof n=="object"){const h=u==="channelsLast"?n[1][0]:n[2][0],p=u==="channelsLast"?n[1][1]:n[2][1],f=u==="channelsLast"?n[2][0]:n[3][0],m=u==="channelsLast"?n[2][1]:n[3][1];c={top:h,bottom:p,left:f,right:m,type:h===0&&p===0&&f===0&&m===0?"VALID":"EXPLICIT"},l=Hc((e-a+h+p)/s+1,i),d=Hc((t-o+f+m)/r+1,i)}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:c,outHeight:l,outWidth:d}}function j3(n,e,t,s,r,a,o,i,u,c,l){let d,h,p,f;if(n==="valid"&&(n=0),typeof n=="number"){d={top:n,bottom:n,left:n,right:n,front:n,back:n,type:n===0?"VALID":"NUMBER"};const g=G3([e,t,s,1],[i,u,c],1,[r,a,o],n,l);h=g[0],p=g[1],f=g[2]}else if(n==="same"){h=Math.ceil(e/r),p=Math.ceil(t/a),f=Math.ceil(s/o);const m=(h-1)*r+i-e,g=(p-1)*a+u-t,y=(f-1)*o+c-s,b=Math.floor(m/2),x=m-b,w=Math.floor(g/2),v=g-w,S=Math.floor(y/2),N=y-S;d={top:w,bottom:v,left:S,right:N,front:b,back:x,type:"SAME"}}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:d,outDepth:h,outHeight:p,outWidth:f}}function Hc(n,e){if(!e)return Math.trunc(n);switch(e){case"round":return Math.round(n);case"ceil":return Math.ceil(n);case"floor":return Math.floor(n);default:throw new Error(`Unknown roundingMode ${e}`)}}function ao(n){const[e,t,s]=Gc(n);return e===1&&t===1&&s===1}function wn(n,e){return ao(n)||ao(e)}function ei(n){return Gc(n).every(e=>e>0)}function Tr(n){if(n==="NHWC")return"channelsLast";if(n==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${n}`)}function Kn(n,e,t){if(t!=null){if(typeof e=="string")throw Error(`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);if(typeof e=="number")_(pu(e),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);else if(typeof e=="object")e.forEach(s=>{s.forEach(r=>{_(pu(r),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${r}.`)})});else throw Error(`Error in ${n}: Unknown padding parameter: ${e}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q3(n,e){const s={x:E(n,"x","reshape","string_or_numeric")},r={shape:e};return M.runKernel(Ah,s,r)}const V=L({reshape_:q3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K3(n,e,t,s,r){const a=E(n,"x","avgPool","float32"),o=1;_(wn(t,o),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`);let i=a,u=!1;a.rank===3&&(u=!0,i=V(a,[1,a.shape[0],a.shape[1],a.shape[2]])),_(i.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`),Kn("avgPool",s,r);const c={x:i},l={filterSize:e,strides:t,pad:s,dimRoundingMode:r};let d=M.runKernel(Uu,c,l);return d=fe(d,a.dtype),u?V(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const qm=L({avgPool_:K3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X3(n,e,t,s,r,a="NDHWC"){const o=E(n,"x","avgPool3d","float32");let i=o,u=!1;o.rank===4&&(u=!0,i=V(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),_(i.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${i.rank}.`),_(a==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`),_(typeof t=="number"&&t>0||Array.isArray(t)&&t[0]>0&&t[1]>0&&t[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${t}'`),Kn("avgPool3d",s,r);const c={x:i},l={filterSize:e,strides:t,pad:s,dimRoundingMode:r,dataFormat:a};let d=M.runKernel(Jd,c,l);return d=fe(d,i.dtype),u?V(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const Yk=L({avgPool3d_:X3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y3(n,e=0){_(n.length>=1,()=>"Pass at least one tensor to concat");const t=wf(n,"tensors","concat","string_or_numeric");if(t[0].dtype==="complex64"&&t.forEach(a=>{if(a.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${a.dtype}. `)}),t.length===1)return ya(t[0]);const s=t,r={axis:e};return M.runKernel(nh,s,r)}const tn=L({concat_:Y3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z3(n,e,t=!1,s=!1){let r=E(n,"a","matMul"),a=E(e,"b","matMul");[r,a]=Ut(r,a);const o={a:r,b:a},i={transposeA:t,transposeB:s};return M.runKernel(Gu,o,i)}const Ke=L({matMul_:Z3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J3(n){const t={x:E(n,"x","sigmoid","float32")};return M.runKernel(Gl,t)}const Wr=L({sigmoid_:J3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q3(n,e,t){const s=E(n,"x","slice","string_or_numeric");if(s.rank===0)throw new Error("Slicing scalar is not possible");const r={x:s},a={begin:e,size:t};return M.runKernel(Mh,r,a)}const tt=L({slice_:Q3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eM(n){const t={x:E(n,"x","tanh","float32")};return M.runKernel(Jl,t)}const ti=L({tanh_:eM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tM(n,e,t,s,r,a){const o=E(n,"forgetBias","basicLSTMCell"),i=E(e,"lstmKernel","basicLSTMCell"),u=E(t,"lstmBias","basicLSTMCell"),c=E(s,"data","basicLSTMCell"),l=E(r,"c","basicLSTMCell"),d=E(a,"h","basicLSTMCell"),h=tn([c,d],1),p=Ke(h,i),f=se(p,u),m=f.shape[0],g=f.shape[1]/4,y=[m,g],b=tt(f,[0,0],y),x=tt(f,[0,g],y),w=tt(f,[0,g*2],y),v=tt(f,[0,g*3],y),S=se(B(Wr(b),ti(x)),B(l,Wr(se(o,w)))),N=B(ti(S),Wr(v));return[S,N]}const nM=L({basicLSTMCell_:tM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sM(n,e,t){const s=E(n,"x","batchToSpaceND"),r=e.reduce((i,u)=>i*u);_(s.rank>=1+e.length,()=>`input rank is ${s.rank} but should be > than blockShape.length ${e.length}`),_(t.length===e.length,()=>`crops.length is ${t.length} but should be equal to blockShape.length  ${e.length}`),_(s.shape[0]%r===0,()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${r}`);const a={x:s},o={blockShape:e,crops:t};return M.runKernel(Qd,a,o)}const Km=L({batchToSpaceND_:sM});function rM(n){let e;return n.rank===0||n.rank===1?e=V(n,[1,1,1,n.size]):n.rank===2?e=V(n,[1,1,n.shape[0],n.shape[1]]):n.rank===3?e=V(n,[1,n.shape[0],n.shape[1],n.shape[2]]):e=n,e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aM(n,e,t,s,r,a){a==null&&(a=.001);const o=E(n,"x","batchNorm"),i=E(e,"mean","batchNorm"),u=E(t,"variance","batchNorm");let c;r!=null&&(c=E(r,"scale","batchNorm"));let l;s!=null&&(l=E(s,"offset","batchNorm")),_(i.rank===u.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),_(l==null||i.rank===l.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),_(c==null||i.rank===c.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const h={x:rM(o),scale:c,offset:l,mean:i,variance:u},p={varianceEpsilon:a},f=M.runKernel(ul,h,p);return V(f,o.shape)}const Yh=L({batchNorm_:aM});function oM(n,e,t,s,r,a){const o=E(n,"x","batchNorm"),i=E(e,"mean","batchNorm"),u=E(t,"variance","batchNorm");let c;r!=null&&(c=E(r,"scale","batchNorm"));let l;return s!=null&&(l=E(s,"offset","batchNorm")),_(o.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${o.rank}.`),_(i.rank===2||i.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${i.rank}.`),_(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`),c!=null&&_(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${c.rank}.`),l!=null&&_(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${l.rank}.`),Yh(o,i,u,l,c,a)}const Zk=L({batchNorm2d_:oM});function iM(n,e,t,s,r,a){const o=E(n,"x","batchNorm"),i=E(e,"mean","batchNorm"),u=E(t,"variance","batchNorm");let c;r!=null&&(c=E(r,"scale","batchNorm"));let l;return s!=null&&(l=E(s,"offset","batchNorm")),_(o.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${o.rank}.`),_(i.rank===3||i.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${i.rank}.`),_(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`),c!=null&&_(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${c.rank}.`),l!=null&&_(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${l.rank}.`),Yh(o,i,u,l,c,a)}const Jk=L({batchNorm3d_:iM});function uM(n,e,t,s,r,a){const o=E(n,"x","batchNorm"),i=E(e,"mean","batchNorm"),u=E(t,"variance","batchNorm");let c;r!=null&&(c=E(r,"scale","batchNorm"));let l;return s!=null&&(l=E(s,"offset","batchNorm")),_(o.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${o.rank}.`),_(i.rank===4||i.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${i.rank}.`),_(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`),c!=null&&_(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${c.rank}.`),l!=null&&_(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${l.rank}.`),Yh(o,i,u,l,c,a)}const Qk=L({batchNorm4d_:uM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lM(n,e,t){const s=E(n,"x","bincount"),r=E(e,"weights","bincount");_(s.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`),_(t>=0,()=>`size must be non-negative, but got ${t}.`),_(r.size===s.size||r.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${r.shape}.`);const a={x:s,weights:r},o={size:t};return M.runKernel(eh,a,o)}const eN=L({bincount_:lM});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cM(n,e){const t=E(n,"x","bitwiseAnd"),s=E(e,"y","bitwiseAnd");if(!Qe(t.shape,s.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${t.shape}, y: ${s.shape}`);if(t.dtype!=="int32"||s.dtype!=="int32")throw new Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${t.dtype} and type of y: ${s.dtype}`);const r={a:t,b:s};return M.runKernel(th,r)}const dM=L({bitwiseAnd_:cM});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hM(n,e){const t=E(n,"s0","broadcastArgs","int32"),s=E(e,"s1","broadcastArgs","int32");if(t.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${t.rank}`);if(s.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${s.rank}`);const r={s0:t,s1:s};return M.runKernel(Tm,r)}const pM=L({broadcastArgs_:hM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fM(n,e){let t=E(n,"broadcastTo","x");const s=t.shape;if(Ms(e),e.length<t.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${t.rank}.`);if(e.length>t.rank){const c=t.shape.slice();for(;c.length<e.length;)c.unshift(1);t=V(t,c)}const r=t.shape,a=Array.from(e);for(let c=e.length-1;c>=0;c--)if(r[c]===e[c])a[c]=1;else if(t.shape[c]!==1)throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${e}].`);if(a.map((c,l)=>c>1?l:-1).filter(c=>c>=0).length===0)return ya(t);const i={x:t},u={reps:a};return M.runKernel(yi,i,u)}const tu=L({broadcastTo_:fM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mM(n){const t={x:E(n,"x","ceil","float32")};return M.runKernel(ju,t)}const tN=L({ceil_:mM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ql(n,e,t){Ms(n),t=t||fi(e);const s={shape:n,value:e,dtype:t};return M.runKernel(Am,{},s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gM(n,e,t){const s=E(n,"x","clipByValue");if(_(e<=t,()=>`Error in clip: min (${e}) must be less than or equal to max (${t}).`),e===t)return Ql(s.shape,e,s.dtype);const r={x:s},a={clipValueMin:e,clipValueMax:t};return M.runKernel(gi,r,a)}const vs=L({clipByValue_:gM});function yM(n){return tn(n,0)}const nN=L({concat1d_:yM});function bM(n,e){return tn(n,e)}const sN=L({concat2d_:bM});function xM(n,e){return tn(n,e)}const rN=L({concat3d_:xM});function wM(n,e){return tn(n,e)}const aN=L({concat4d_:wM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vM(n,e,t,s,r="NHWC",a=[1,1],o){const i=E(n,"x","conv2d","float32"),u=E(e,"filter","conv2d","float32");let c=i,l=!1;i.rank===3&&(l=!0,c=V(i,[1,i.shape[0],i.shape[1],i.shape[2]])),_(c.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${c.rank}.`),_(u.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`),Kn("conv2d",s,o);const d=r==="NHWC"?c.shape[3]:c.shape[1];_(d===u.shape[2],()=>`Error in conv2d: depth of input (${d}) must match input depth for filter ${u.shape[2]}.`),_(wn(t,a),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${a}'`),_(ei(a),()=>"Error in conv2D: Dilated rates should be larger than 0."),_(ei(t),()=>"Error in conv2D: Strides should be larger than 0.");const h={x:c,filter:u},p={strides:t,pad:s,dataFormat:r,dilations:a,dimRoundingMode:o},f=M.runKernel(qu,h,p);return l?V(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const oo=L({conv2d_:vM});function IM(n,e,t,s,r="NWC",a=1,o){const i=E(n,"x","conv1d"),u=E(e,"filter","conv1d");let c=i,l=!1;i.rank===2&&(l=!0,c=V(i,[1,i.shape[0],i.shape[1]])),_(c.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${c.rank}.`),_(u.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`),Kn("conv1d",s,o),_(c.shape[2]===u.shape[1],()=>`Error in conv1d: depth of input (${c.shape[2]}) must match input depth for filter ${u.shape[1]}.`),_(wn(t,a),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${t} and dilation '${a}'`),_(ei(a),()=>"Error in conv1D: Dilated rates should be larger than 0."),_(ei(t),()=>"Error in conv1D: Stride should be larger than 0."),_(r==="NWC",()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`);const d=V(u,[1,u.shape[0],u.shape[1],u.shape[2]]),h=V(c,[c.shape[0],1,c.shape[1],c.shape[2]]),g=oo(h,d,[1,t],s,"NHWC",[1,a],o);return l?V(g,[g.shape[2],g.shape[3]]):V(g,[g.shape[0],g.shape[2],g.shape[3]])}const Bx=L({conv1d_:IM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SM(n,e,t,s,r,a="NHWC",o){_(n.length===e.rank,()=>`Length of inShape (${n.length}) and rank of dy (${e.rank}) must match`);let i=n,u=e,c=!1;e.rank===3&&(c=!0,u=V(e,[1,e.shape[0],e.shape[1],e.shape[2]]),i=[1,n[0],n[1],n[2]]),_(i.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${i.length}.`),_(u.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`),_(t.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${t.rank}`);const l=a==="NHWC"?i[3]:i[1],d=a==="NHWC"?u.shape[3]:u.shape[1];_(l===t.shape[2],()=>`Error in conv2dDerInput: depth of input (${l}) must match input depth for filter ${t.shape[2]}.`),_(d===t.shape[3],()=>`Error in conv2dDerInput: depth of output (${d}) must match output depth for filter ${t.shape[3]}.`),Kn("conv2dDerInput",r,o);const h={dy:u,filter:t},p={strides:s,pad:r,dataFormat:a,dimRoundingMode:o,inputShape:i},f=M.runKernel(Ku,h,p);return c?V(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const zx=L({conv2DBackpropInput_:SM});function kM(n,e,t,s,r,a){const o=E(n,"x","conv2dTranspose"),i=E(e,"filter","conv2dTranspose");return zx(t,o,i,s,r,"NHWC",a)}const Vx=L({conv2dTranspose_:kM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NM(n,e,t,s,r="NDHWC",a=[1,1,1]){const o=E(n,"x","conv3d"),i=E(e,"filter","conv3d");let u=o,c=!1;o.rank===4&&(c=!0,u=V(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),_(u.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`),_(i.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${i.rank}.`),_(u.shape[4]===i.shape[3],()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${i.shape[3]}.`),_(wn(t,a),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${t} and dilations '${a}'`),_(r==="NDHWC",()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`),_(ei(a),()=>"Error in conv3D: Dilated rates should be larger than 0."),_(ei(t),()=>"Error in conv3D: Strides should be larger than 0.");const l={x:u,filter:i},d={strides:t,pad:s,dataFormat:r,dilations:a},h=M.runKernel(Xu,l,d);return c?V(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const oN=L({conv3d_:NM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CM(n,e,t,s,r){_(n.length===e.rank,()=>`Length of inShape (${n.length}) and rank of dy (${e.rank}) must match`);let a=n,o=e,i=!1;e.rank===4&&(i=!0,o=V(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),a=[1,n[0],n[1],n[2],n[3]]);const u=a[4],c=o.shape[4];_(a.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${a.length}.`),_(o.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${o.rank}`),_(t.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${t.rank}`),_(u===t.shape[3],()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${t.shape[3]}.`),_(c===t.shape[4],()=>`Error in conv3dDerInput: depth of output (${c}) must match output depth for filter ${t.shape[4]}.`);const l={dy:o,filter:t},d={pad:r,strides:s,inputShape:a},h=M.runKernel(rh,l,d);return i?V(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const iN=L({conv3DBackpropInput_:CM});function TM(n,e,t,s,r){const a=E(n,"x","conv3dTranspose"),o=E(e,"filter","conv3dTranspose");return iN(t,a,o,s,r)}const uN=L({conv3dTranspose_:TM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $M(n){const t={x:E(n,"x","cos","float32")};return M.runKernel(Yu,t)}const Xm=L({cos_:$M});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _M(n){const t={x:E(n,"x","cosh","float32")};return M.runKernel(Zu,t)}const Wx=L({cosh_:_M});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EM(n,e=0,t=!1,s=!1){const a={x:E(n,"x","cumprod")},o={axis:e,exclusive:t,reverse:s};return M.runKernel(ah,a,o)}const If=L({cumprod_:EM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AM(n,e=0,t=!1,s=!1){const a={x:E(n,"x","cumsum")},o={axis:e,exclusive:t,reverse:s};return M.runKernel(Ju,a,o)}const Ux=L({cumsum_:AM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DM(n,e,t,s=!1){const r=E(n,"x","denseBincount"),a=E(e,"weights","denseBincount");_(r.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${r.dtype}`),_(r.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${r.rank}.`),_(t>=0,()=>`size must be non-negative, but got ${t}.`),_(a.size===r.size||a.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${r.shape}, weights shape: ${a.shape}.`);const o={x:r,weights:a},i={size:t,binaryOutput:s};return M.runKernel(_m,o,i)}const ib=L({denseBincount_:DM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RM(n,e,t="NHWC"){const s=E(n,"x","depthToSpace","float32"),r=t==="NHWC"?s.shape[1]:s.shape[2],a=t==="NHWC"?s.shape[2]:s.shape[3],o=t==="NHWC"?s.shape[3]:s.shape[1];_(e>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`),_(r*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${r} and ${e}  for depthToSpace with input shape
    ${s.shape}`),_(a*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${a} and ${e} for depthToSpace with input shape
        ${s.shape}`),_(o%(e*e)===0,()=>`Dimension size must be evenly divisible by ${e*e} but is ${o} for depthToSpace with input shape ${s.shape}`);const i={x:s},u={blockSize:e,dataFormat:t};return M.runKernel(ih,i,u)}const lN=L({depthToSpace_:RM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OM(n,e,t,s,r="NHWC",a=[1,1],o){const i=E(n,"x","depthwiseConv2d","float32"),u=E(e,"filter","depthwiseConv2d","float32");let c=i,l=!1;i.rank===3&&(l=!0,c=V(i,[1,i.shape[0],i.shape[1],i.shape[2]])),_(c.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`),_(u.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`);const d=r==="NHWC"?c.shape[3]:c.shape[1];_(d===u.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${d}) must match the inChannels dimension in filter ${u.shape[2]}.`),Kn("depthwiseConv2d",s,o);const h={x:c,filter:u},p={strides:t,pad:s,dataFormat:r,dilations:a,dimRoundingMode:o},f=M.runKernel(Qu,h,p);return l?V(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const Zh=L({depthwiseConv2d_:OM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FM(n){const t={x:E(n,"x","diag")};return M.runKernel(Em,t)}const PM=L({diag_:FM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LM(n,e,t,s,r=[1,1],a="NHWC"){const o=E(n,"x","dilation2d"),i=E(e,"filter","dilation2d");_(o.rank===3||o.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${o.rank}.`),_(i.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${i.rank}.`),_(a==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${a}`);let u=o,c=!1;o.rank===3&&(u=V(o,[1,o.shape[0],o.shape[1],o.shape[2]]),c=!0),_(u.shape[3]===i.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${u.shape[3]} vs ${i.shape[2]}`);const l={x:u,filter:i},d={strides:t,pad:s,dilations:r},h=M.runKernel(el,l,d);return c?V(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const cN=L({dilation2d_:LM});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wu(n,e){const t=n.length,s=[];for(let r=0;r<t;r++){const a=t-1-r,o=n[a]||1;(e[e.length-1-r]||1)>1&&o===1&&s.unshift(a)}return s}function fn(n,e){const t=[];for(let s=0;s<e.length;s++){const r=n[n.length-s-1],a=e.length-s-1,o=e[a];(r==null||r===1&&o>1)&&t.unshift(a)}return t}function Me(n,e){const t=Math.max(n.length,e.length),s=new Array(t);for(let r=0;r<t;r++){let a=n[n.length-r-1];a==null&&(a=1);let o=e[e.length-r-1];if(o==null&&(o=1),a===1)s[t-r-1]=o;else if(o===1)s[t-r-1]=a;else if(a!==o){const i=`Operands could not be broadcast together with shapes ${n} and ${e}.`;throw Error(i)}else s[t-r-1]=a}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MM(n,e){let t=E(n,"a","equal","string_or_numeric"),s=E(e,"b","equal","string_or_numeric");[t,s]=Ut(t,s),Me(t.shape,s.shape);const r={a:t,b:s};return M.runKernel(lh,r)}const wr=L({equal_:MM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BM(n,e,t){const s=E(e,"a","where"),r=E(t,"b","where"),a=E(n,"condition","where","bool"),o=Me(Me(a.shape,s.shape),r.shape),i=tu(a,o),u=tu(s,o),c=tu(r,o),l={condition:i,t:u,e:c};return M.runKernel(Lh,l)}const Pn=L({where_:BM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zM(n){const t={x:E(n,"x","zerosLike")};return M.runKernel(qh,t)}const st=L({zerosLike_:zM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VM(n,e){let t=E(n,"a","div"),s=E(e,"b","div");[t,s]=Ut(t,s);const r=$e(t,s),a=st(r),o=wr(s,a);return Pn(o,a,r)}const dN=L({divNoNan_:VM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WM(n,e){const t=E(n,"t1","dot"),s=E(e,"t2","dot");_((t.rank===1||t.rank===2)&&(s.rank===1||s.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${t.rank} and ${s.rank}.`);const r=t.rank===1?t.size:t.shape[1],a=s.rank===1?s.size:s.shape[0];if(_(r===a,()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${a}.`),t.rank===1&&s.rank===1){const o=V(t,[1,-1]),i=V(s,[-1,1]),u=Ke(o,i);return V(u,[])}else if(t.rank===1&&s.rank===2){const o=V(t,[1,-1]),i=V(s,[s.shape[0],s.shape[1]]),u=Ke(o,i);return V(u,[u.size])}else if(t.rank===2&&s.rank===1){const o=V(s,[-1,1]),i=Ke(t,o);return V(i,[i.size])}else{const o=V(s,[s.shape[0],s.shape[1]]);return Ke(t,o)}}const hN=L({dot_:WM});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UM(n,...e){const t=e.map((r,a)=>E(r,`tensors${a}`,"einsum")),s={equation:n};return M.runKernel(Sx,t,s)}const Xi=L({einsum_:UM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GM(n){const t={x:E(n,"x","elu","float32")};return M.runKernel(nl,t)}const Jh=L({elu_:GM});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HM(n,e){const t=E(n,"x","ensureShape","string_or_numeric");if(!eL(t.shape,e))throw new Error(`EnsureShape: Shape of tensor ${t.shape} is not compatible with expected shape ${e}`);return n}const jM=L({ensureShape_:HM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qM(n){let e=E(n,"x","erf");_(e.dtype==="int32"||e.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),e.dtype==="int32"&&(e=fe(e,"float32"));const t={x:e};return M.runKernel(sl,t)}const Gx=L({erf_:qM});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hx(n,e){for(let t=0;t<n.length;++t)if(n[n.length-t-1]!==e-1-t)return!1;return!0}function pN(n,e,t){const s=n.length+e.length,r=[];let a=0,o=0;for(let i=0;i<s;i++)t.indexOf(i)===-1?r.push(n[a++]):r.push(e[o++]);return r}function Rt(n,e){const t=[],s=n.length;for(let a=0;a<s;a++)e.indexOf(a)===-1&&t.push(n[a]);const r=e.map(a=>n[a]);return[t,r]}function wt(n,e){const t=e.map(s=>1);return pN(n,t,e)}function Et(n,e,t){_(Hx(e,t),()=>`${n} supports only inner-most axes for now. Got axes ${e} and rank-${t} input.`)}function At(n,e){if(Hx(n,e))return null;const t=[];for(let s=0;s<e;++s)n.indexOf(s)===-1&&t.push(s);return n.forEach(s=>t.push(s)),t}function Qr(n){return n.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function Ct(n,e){const t=[];for(let s=e-n;s<e;++s)t.push(s);return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KM(n,e=null,t=!1){const r={x:E(n,"x","max")},a={reductionIndices:e,keepDims:t};return M.runKernel(bl,r,a)}const er=L({max_:KM});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XM(n,e=null,t=!1){const r={x:E(n,"x","min")},a={axis:e,keepDims:t};return M.runKernel(Il,r,a)}const jc=L({min_:XM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YM(n,e){let t=E(n,"base","pow"),s=E(e,"exp","pow");[t,s]=Ut(t,s);const r={a:t,b:s};return M.runKernel(_l,r)}const Sa=L({pow_:YM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ae(n,e){if((nr(n)&&e!=="string"||Array.isArray(n))&&e!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(e==="string"&&nr(n)&&!(n instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return bo(n,[],[],e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZM(n){const t={x:E(n,"x","sqrt","float32")};return M.runKernel(jl,t)}const Tn=L({sqrt_:ZM});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JM(n){const e=E(n,"x","square"),t={};return M.runKernel("Square",{x:e},t)}const kt=L({square_:JM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QM(n,e=null,t=!1){let s=E(n,"x","sum");s.dtype==="bool"&&(s=fe(s,"int32"));const r={x:s},a={axis:e,keepDims:t};return M.runKernel(ql,r,a)}const Ne=L({sum_:QM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eB(n,e="euclidean",t=null,s=!1){n=E(n,"x","norm");const r=fN(n,e,t);let a=r.shape;if(s){const o=ze(t,n.shape);a=wt(r.shape,o)}return V(r,a)}function fN(n,e,t=null){if(n.rank===0)return an(n);if(n.rank!==1&&t===null)return fN(V(n,[-1]),e,t);if(n.rank===1||typeof t=="number"||Array.isArray(t)&&t.length===1){if(e===1)return Ne(an(n),t);if(e===1/0)return er(an(n),t);if(e===-1/0)return jc(an(n),t);if(e==="euclidean"||e===2)return Tn(Ne(Sa(an(n),Ae(2,"int32")),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(t)&&t.length===2){if(e===1)return er(Ne(an(n),t[0]),t[1]-1);if(e===1/0)return er(Ne(an(n),t[1]),t[0]);if(e===-1/0)return jc(Ne(an(n),t[1]),t[0]);if(e==="fro"||e==="euclidean")return Tn(Ne(kt(n),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${t}`)}const Qh=L({norm_:eB});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tB(n,e=null,t=!1){return Qh(n,"euclidean",e,t)}const mN=L({euclideanNorm_:tB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nB(n){const t={x:E(n,"x","exp")};return M.runKernel(rl,t)}const Is=L({exp_:nB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sB(n,e=0){const t=E(n,"x","expandDims","string_or_numeric");_(e<=t.rank,()=>"Axis must be <= rank of the tensor");const s={input:t},r={dim:e};return M.runKernel(ch,s,r)}const Hn=L({expandDims_:sB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rB(n){const t={x:E(n,"x","expm1")};return M.runKernel(al,t)}const gN=L({expm1_:rB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aB(n,e){const t=E(n,"x","tile","string_or_numeric");_(t.rank===e.length,()=>`Error in transpose: rank of input ${t.rank} must match length of reps ${e}.`);const s={x:t},r={reps:e};return M.runKernel(yi,s,r)}const Xs=L({tile_:aB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oB(n,e,t,s="float32"){e==null&&(e=n);const r=He([n,e],s),a=n<=e?n:e;for(let i=0;i<a;++i)r.set(1,i,i);const o=V(r.toTensor(),[n,e]);if(t==null)return o;if(t.length===1)return Xs(Hn(o,0),[t[0],1,1]);if(t.length===2)return Xs(Hn(Hn(o,0),0),[t[0],t[1],1,1]);if(t.length===3)return Xs(Hn(Hn(Hn(o,0),0),0),[t[0],t[1],t[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${t.length}D.`)}const jx=L({eye_:oB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iB(n){const t={x:E(n,"x","floor","float32")};return M.runKernel(ol,t)}const ep=L({floor_:iB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uB(n,e,t=0,s=0){const r=E(n,"x","gather"),a=E(e,"indices","gather","int32"),o={x:r,indices:a},i={axis:t,batchDims:s};return M.runKernel(hh,o,i)}const tp=L({gather_:uB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lB(n,e){let t=E(n,"a","greater","string_or_numeric"),s=E(e,"b","greater","string_or_numeric");[t,s]=Ut(t,s),Me(t.shape,s.shape);const r={a:t,b:s};return M.runKernel(fh,r)}const Cs=L({greater_:lB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cB(n,e){let t=E(n,"a","greaterEqual","string_or_numeric"),s=E(e,"b","greaterEqual","string_or_numeric");[t,s]=Ut(t,s),Me(t.shape,s.shape);const r={a:t,b:s};return M.runKernel(ll,r)}const wo=L({greaterEqual_:cB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dB(n){const t={input:E(n,"input","imag")};return M.runKernel(Cx,t)}const Ym=L({imag_:dB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hB(n){const t={x:E(n,"x","isFinite")};return M.runKernel(dl,t)}const yN=L({isFinite_:hB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pB(n){const t={x:E(n,"x","isInf")};return M.runKernel(hl,t)}const bN=L({isInf_:pB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fB(n){const t={x:E(n,"x","isNaN")};return M.runKernel(pl,t)}const xN=L({isNaN_:fB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mB(n,e=.2){const s={x:E(n,"x","leakyRelu")},r={alpha:e};return M.runKernel(fl,s,r)}const Zm=L({leakyRelu_:mB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gB(n,e){let t=E(n,"a","less","string_or_numeric"),s=E(e,"b","less","string_or_numeric");[t,s]=Ut(t,s),Me(t.shape,s.shape);const r={a:t,b:s};return M.runKernel(mh,r)}const qc=L({less_:gB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yB(n,e){let t=E(n,"a","lessEqual","string_or_numeric"),s=E(e,"b","lessEqual","string_or_numeric");[t,s]=Ut(t,s),Me(t.shape,s.shape);const r={a:t,b:s};return M.runKernel(gh,r)}const wi=L({lessEqual_:yB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bB(n,e,t){if(t<=0)throw new Error("The number of values should be positive.");const s={start:n,stop:e,num:t};return M.runKernel(yh,{},s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xB(n,e=5,t=1,s=1,r=.5){const a=E(n,"x","localResponseNormalization");_(a.rank===4||a.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${a.rank}.`),_(pu(e),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`);let o=a,i=!1;a.rank===3&&(i=!0,o=V(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const u={x:o},c={depthRadius:e,bias:t,alpha:s,beta:r},l=M.runKernel(yl,u,c);return i?V(l,[l.shape[1],l.shape[2],l.shape[3]]):l}const wN=L({localResponseNormalization_:xB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wB(n){const t={x:E(n,"x","log","float32")};return M.runKernel(ml,t)}const Ps=L({log_:wB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vB(n){const t={x:E(n,"x","log1p")};return M.runKernel(gl,t)}const Jm=L({log1p_:vB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IB(n,e){_(qy(n),()=>"The f passed in variableGrads(f) must be a function"),_(e==null||Array.isArray(e)&&e.every(c=>c instanceof xf),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const t=e!=null;if(!t){e=[];for(const c in M.registeredVariables)e.push(M.registeredVariables[c])}const s=t?e.filter(c=>!c.trainable):null,r=e.length;e=e.filter(c=>c.trainable),_(e.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`);const a=!0,{value:o,grads:i}=M.gradients(n,e,null,a);_(i.some(c=>c!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),_(o.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${o.rank} tensor`);const u={};return e.forEach((c,l)=>{i[l]!=null&&(u[c.name]=i[l])}),s!=null&&s.forEach(c=>u[c.name]=null),{value:o,grads:u}}function ka(n){return M.customGrad(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SB(n){const t={x:E(n,"x","neg")};return M.runKernel(kh,t)}const Dt=L({neg_:SB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kB(n){const t={x:E(n,"x","softplus")};return M.runKernel(Hl,t)}const ec=L({softplus_:kB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NB(n){const e=E(n,"x","logSigmoid");return ka(s=>({value:Dt(ec(Dt(s))),gradFunc:o=>B(o,Wr(Dt(s)))}))(e)}const vN=L({logSigmoid_:NB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CB(n,e){let t=E(n,"a","sub"),s=E(e,"b","sub");[t,s]=Ut(t,s);const r={a:t,b:s};return M.runKernel(Yl,r)}const we=L({sub_:CB});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TB(n,e=-1){const t=E(n,"logits","logSoftmax");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and axis was ${e}`);return ka((r,a)=>{const i=er(r,e,!0),u=we(r,i),c=we(fe(u,"float32"),Ps(Ne(Is(u),e,!0)));return a([c]),{value:c,gradFunc:(d,h)=>{const[p]=h,f=!0,m=Is(p);return we(d,B(Ne(d,e,f),m))}}})(t)}const qx=L({logSoftmax_:TB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $B(n,e=null,t=!1){const s=E(n,"x","logSumExp"),r=ze(e,s.shape),a=er(s,r,!0),o=we(s,a),i=Is(o),u=Ne(i,r),c=Ps(u),l=se(V(a,c.shape),c);if(t){const d=wt(l.shape,r);return V(l,d)}return l}const Qm=L({logSumExp_:$B});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _B(n,e){const t=E(n,"a","logicalAnd","bool"),s=E(e,"b","logicalAnd","bool");Me(t.shape,s.shape);const r={a:t,b:s};return M.runKernel(bh,r)}const Xr=L({logicalAnd_:_B});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EB(n){const t={x:E(n,"x","logicalNot","bool")};return M.runKernel(xh,t)}const eg=L({logicalNot_:EB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AB(n,e){const t=E(n,"a","logicalOr","bool"),s=E(e,"b","logicalOr","bool");Me(t.shape,s.shape);const r={a:t,b:s};return M.runKernel(wh,r)}const Kx=L({logicalOr_:AB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DB(n,e){const t=E(n,"a","logicalXor","bool"),s=E(e,"b","logicalXor","bool");return Me(t.shape,s.shape),Xr(Kx(n,e),eg(Xr(n,e)))}const IN=L({logicalXor_:DB});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ep=2147483648;function RB(n,e,t="left"){const s=E(n,"sortedSequence","searchSorted"),r=E(e,"values","searchSorted"),a=s.shape[s.shape.length-1],o=r.shape[r.shape.length-1],i=V(s,[-1,a]),u=V(r,[-1,o]);if(i.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(i.shape[0]!==u.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(U(u.shape)>=Ep)throw new Error(`values tensor size must less than ${Ep}`);if(i.shape[1]>=Ep)throw new Error(`trailing dim_size must less than ${Ep} for int32 output type, was ${i.shape[1]}`);const c={sortedSequence:i,values:u},l={side:t};return M.runKernel(Ph,c,l)}const Xx=L({searchSorted_:RB});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OB(n,e){return Xx(n,e,"left")}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FB(n,e,t,s,r){const a=E(n,"x","maxPool"),o=1;let i=a,u=!1;a.rank===3&&(u=!0,i=V(a,[1,a.shape[0],a.shape[1],a.shape[2]])),_(i.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`),_(wn(t,o),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`),Kn("maxPool",s,r);const c={x:i},l={filterSize:e,strides:t,pad:s,dimRoundingMode:r},d=M.runKernel(wl,c,l);return u?V(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const tg=L({maxPool_:FB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PB(n,e=[1,1,1],t,s,r,a="NDHWC"){const o=E(n,"x","maxPool3d");let i=o,u=!1;o.rank===4&&(u=!0,i=V(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),_(i.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${i.rank}.`),_(a==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`),Kn("maxPool3d",s,r);const c={x:i},l={filterSize:e,strides:t,pad:s,dimRoundingMode:r,dataFormat:a},d=M.runKernel(Ih,c,l);return u?V(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const SN=L({maxPool3d_:PB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LB(n,e,t,s,r=!1){const o={x:E(n,"x","maxPoolWithArgmax")},i={filterSize:e,strides:t,pad:s,includeBatchInIndex:r},u=M.runKernel(Om,o,i);return{result:u[0],indexes:u[1]}}const MB=L({maxPoolWithArgmax_:LB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BB(n,e){let t=E(n,"a","maximum"),s=E(e,"b","maximum");[t,s]=Ut(t,s),t.dtype==="bool"&&(t=fe(t,"int32"),s=fe(s,"int32")),Me(t.shape,s.shape);const r={a:t,b:s};return M.runKernel(xl,r)}const $a=L({maximum_:BB});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zB(n,e=null,t=!1){const r={x:E(n,"x","mean")},a={axis:e,keepDims:t};return M.runKernel(vl,r,a)}const Wt=L({mean_:zB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function un(n,e="float32"){if(Ms(n),e==="complex64"){const s=un(n,"float32"),r=un(n,"float32");return so(s,r)}const t=Ln(U(n),e);return M.makeTensor(t,n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gs(n,e="float32"){if(Ms(n),e==="complex64"){const s=gs(n,"float32"),r=un(n,"float32");return so(s,r)}const t=yx(U(n),e);return M.makeTensor(t,n,e)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VB(n,e,{indexing:t="xy"}={}){if(t!=="xy"&&t!=="ij")throw new TypeError(`${t} is not a valid third argument to meshgrid`);if(n===void 0)return[];let s=E(n,"x","meshgrid",n instanceof Bt?n.dtype:"float32");if(e===void 0)return[s];let r=E(e,"y","meshgrid",e instanceof Bt?e.dtype:"float32");const a=U(s.shape),o=U(r.shape);return t==="xy"?(s=V(s,[1,-1]),r=V(r,[-1,1]),[Ke(gs([o,1],s.dtype),s),Ke(r,gs([1,a],r.dtype))]):(s=V(s,[-1,1]),r=V(r,[1,-1]),[Ke(s,gs([1,o],s.dtype)),Ke(gs([a,1],r.dtype),r)])}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WB(n,e){let t=E(n,"a","minimum"),s=E(e,"b","minimum");[t,s]=Ut(t,s),t.dtype==="bool"&&(t=fe(t,"int32"),s=fe(s,"int32")),Me(t.shape,s.shape);const r={a:t,b:s};return M.runKernel(Sl,r)}const ni=L({minimum_:WB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UB(n,e,t){_(t==="reflect"||t==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${t}.`);const s=E(n,"x","mirrorPad");if(s.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");_(e.length===s.rank,()=>`Padding doesn't match input. Must be ${s.rank}. Got ${e.length}.`);const r=t==="reflect"?1:0;for(let i=0;i<s.rank;i++)_(e[i].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),_(e[i][0]>=0&&e[i][0]<=s.shape[i]-r&&e[i][1]>=0&&e[i][1]<=s.shape[i]-r,()=>`Padding in dimension ${i} cannot be greater than or equal to ${s.shape[i]-r} or less than 0 for input of shape ${s.shape}`);const a={paddings:e,mode:t},o={x:s};return M.runKernel(kl,o,a)}const kN=L({mirrorPad_:UB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GB(n,e){let t=E(n,"a","mod"),s=E(e,"b","mod");[t,s]=Ut(t,s);const r={a:t,b:s};return M.runKernel(Nl,r)}const NN=L({mod_:GB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HB(n,e=null,t=!1){n=E(n,"x","moments");const s=ze(e,n.shape),r=Wt(n,s,t);let a=r.shape;t||(a=wt(r.shape,s));const o=kt(we(fe(n,"float32"),V(r,a))),i=Wt(o,s,t);return{mean:r,variance:i}}const ng=L({moments_:HB});function jB(n,e,t,s){const r=E(e,"data","multiRNNCell"),a=wf(t,"c","multiRNNCell"),o=wf(s,"h","multiRNNCell");let i=r;const u=[];for(let d=0;d<n.length;d++){const h=n[d](i,a[d],o[d]);u.push(h[0]),u.push(h[1]),i=h[1]}const c=[],l=[];for(let d=0;d<u.length;d+=2)c.push(u[d]),l.push(u[d+1]);return[c,l]}const qB=L({multiRNNCell_:jB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KB(n,e,t,s=!1){const r=E(n,"logits","multinomial"),a=r.size,o=r.rank;if(a<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${a}.`);if(o>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${o}`);t=t||Math.random();const u={logits:o===1?V(r,[1,-1]):r},c={numSamples:e,seed:t,normalized:s},l=M.runKernel(Sh,u,c);return o===1?V(l,[l.size]):l}const XB=L({multinomial_:KB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YB(n,e){let t=E(n,"a","notEqual","string_or_numeric"),s=E(e,"b","notEqual","string_or_numeric");[t,s]=Ut(t,s),Me(t.shape,s.shape);const r={a:t,b:s};return M.runKernel(Nh,r)}const vu=L({notEqual_:YB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZB(n,e,t=1,s=0,r="int32"){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);const o={indices:E(n,"indices","oneHot","int32")},i={dtype:r,depth:e,onValue:t,offValue:s};return M.runKernel(Tl,o,i)}const Yx=L({oneHot_:ZB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JB(n){const t={x:E(n,"x","onesLike")};return M.runKernel(_h,t)}const Ls=L({onesLike_:JB});function QB(n,e){const t=E(n,"v1","outerProduct"),s=E(e,"v2","outerProduct");_(t.rank===1&&s.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${t.rank} and ${s.rank}.`);const r=V(t,[-1,1]),a=V(s,[1,-1]);return Ke(r,a)}const ez=L({outerProduct_:QB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tz(n,e,t=0){const s=E(n,"x","pad");if(s.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const r={paddings:e,constantValue:t},a={x:s};return M.runKernel($l,a,r)}const vo=L({pad_:tz});function nz(n,e,t=0){return _(e.length===2,()=>"Invalid number of paddings. Must be length of 2."),vo(n,[e],t)}const sz=L({pad1d_:nz});function rz(n,e,t=0){return _(e.length===2&&e[0].length===2&&e[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),vo(n,e,t)}const az=L({pad2d_:rz});function oz(n,e,t=0){return _(e.length===3&&e[0].length===2&&e[1].length===2&&e[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),vo(n,e,t)}const iz=L({pad3d_:oz});function uz(n,e,t=0){return _(e.length===4&&e[0].length===2&&e[1].length===2&&e[2].length===2&&e[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),vo(n,e,t)}const lz=L({pad4d_:uz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cz(n,e,t){const s=E(n,"x","spaceToBatchND");_(s.rank>=1+e.length,()=>`input rank ${s.rank} should be > than [blockShape] ${e.length}`),_(t.length===e.length,()=>`paddings.shape[0] ${t.length} must be equal to [blockShape] ${e.length}`),_(s.shape.reduce((o,i,u)=>u>0&&u<=e.length?o&&(i+t[u-1][0]+t[u-1][1])%e[u-1]===0:o,!0),()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${t.toString()} must be divisible by blockShapes ${e.toString()}`);const r={x:s},a={blockShape:e,paddings:t};return M.runKernel(Bh,r,a)}const sg=L({spaceToBatchND_:cz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dz(n,e,t,s,r,a,o){r==null&&(r=[1,1]),a==null&&(a=1),s===0&&(s="valid");const i=E(n,"x","maxPool");let u=i,c=!1;i.rank===3&&(c=!0,u=V(i,[1,i.shape[0],i.shape[1],i.shape[2]])),_(wn(a,r),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${r}'`);const l=Mn(u.shape,e,a,r,s),d=[l.dilationHeight,l.dilationWidth];let h;s==="same"?h=pz([l.filterHeight,l.filterWidth],d):h=[[0,0],[0,0]];const p=d[0]===1&&d[1]===1,[f,m]=hz([l.inHeight,l.inWidth],d,h),g=p?s:"valid",y=p?u:sg(u,d,f),x=(t==="avg"?()=>qm(y,e,a,g,o):()=>tg(y,e,a,g,o))(),w=p?x:Km(x,d,m);return c?V(w,[w.shape[1],w.shape[2],w.shape[3]]):w}function hz(n,e,t){const s=t.map(l=>l[0]),r=t.map(l=>l[1]),a=n.concat(s,r),o=e.map((l,d)=>(l-a[d]%l)%l),i=r.map((l,d)=>l+o[d]),u=e.map((l,d)=>[s[d],i[d]]),c=e.map((l,d)=>[0,o[d]]);return[u,c]}function pz(n,e){const s=n.map((o,i)=>o+(o-1)*(e[i]-1)).map(o=>o-1),r=s.map(o=>Math.floor(o/2)),a=s.map((o,i)=>o-r[i]);return s.map((o,i)=>[r[i],a[i]])}const CN=L({pool_:dz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fz(n,e){const t=E(n,"x","prelu"),s=E(e,"alpha","prelu"),r={x:t,alpha:s};return M.runKernel(El,r)}const rg=L({prelu_:fz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mz(n,e=null,t=!1){let s=E(n,"x","prod");s.dtype==="bool"&&(s=fe(s,"int32"));const r={x:s},a={axis:e,keepDims:t};return M.runKernel(Al,r,a)}const TN=L({prod_:mz});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gz(n,e,t,s){const r=n.map((l,d)=>E(l,`tensors${d}`,"raggedGather","int32")),a=E(e,"paramsDenseValues","raggedGather"),o=E(t,"indices","raggedGather","int32"),i={paramsNestedSplits:r,paramsDenseValues:a,indices:o},u={outputRaggedRank:s},c=M.runKernel(Tx,i,u);return{outputNestedSplits:c.slice(0,c.length-1),outputDenseValues:c[c.length-1]}}const yz=L({raggedGather_:gz});/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bz(n,e,t){const s=E(n,"starts","raggedRange"),r=E(e,"limits","raggedRange",s.dtype),a=E(t,"deltas","raggedRange",s.dtype),o={starts:s,limits:r,deltas:a},i=M.runKernel($x,o);return{rtNestedSplits:i[0],rtDenseValues:i[1]}}const xz=L({raggedRange_:bz});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wz(n,e,t,s,r){const a=E(n,"shape","raggedTensorToTensor","int32"),o=E(e,"values","raggedTensorToTensor"),i=E(t,"defaultValue","raggedTensorToTensor",o.dtype),u=s.map((d,h)=>E(d,`tensors${h}`,"raggedTensorToTensor","int32")),c={shape:a,values:o,defaultValue:i,rowPartitionTensors:u},l={rowPartitionTypes:r};return M.runKernel(_x,c,l)}const vz=L({raggedTensorToTensor_:wz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Iz(n,e,t){Ms(n);const s=U(n);let r=null;if(t==null||t==="float32")r=new Float32Array(s);else if(t==="int32")r=new Int32Array(s);else if(t==="bool")r=new Uint8Array(s);else throw new Error(`Unknown data type ${t}`);for(let a=0;a<s;a++)r[a]=e();return M.makeTensor(r,n,t)}const Sz=L({rand_:Iz});var Xp={exports:{}},kz=Xp.exports,n1;function Nz(){return n1||(n1=1,function(n){(function(e,t,s){function r(u){var c=this,l=i();c.next=function(){var d=2091639*c.s0+c.c*23283064365386963e-26;return c.s0=c.s1,c.s1=c.s2,c.s2=d-(c.c=d|0)},c.c=1,c.s0=l(" "),c.s1=l(" "),c.s2=l(" "),c.s0-=l(u),c.s0<0&&(c.s0+=1),c.s1-=l(u),c.s1<0&&(c.s1+=1),c.s2-=l(u),c.s2<0&&(c.s2+=1),l=null}function a(u,c){return c.c=u.c,c.s0=u.s0,c.s1=u.s1,c.s2=u.s2,c}function o(u,c){var l=new r(u),d=c&&c.state,h=l.next;return h.int32=function(){return l.next()*4294967296|0},h.double=function(){return h()+(h()*2097152|0)*11102230246251565e-32},h.quick=h,d&&(typeof d=="object"&&a(d,l),h.state=function(){return a(l,{})}),h}function i(){var u=4022871197,c=function(l){l=String(l);for(var d=0;d<l.length;d++){u+=l.charCodeAt(d);var h=.02519603282416938*u;u=h>>>0,h-=u,h*=u,u=h>>>0,h-=u,u+=h*4294967296}return(u>>>0)*23283064365386963e-26};return c}t&&t.exports?t.exports=o:this.alea=o})(kz,n)}(Xp)),Xp.exports}var Yp={exports:{}},Cz=Yp.exports,s1;function Tz(){return s1||(s1=1,function(n){(function(e,t,s){function r(i){var u=this,c="";u.x=0,u.y=0,u.z=0,u.w=0,u.next=function(){var d=u.x^u.x<<11;return u.x=u.y,u.y=u.z,u.z=u.w,u.w^=u.w>>>19^d^d>>>8},i===(i|0)?u.x=i:c+=i;for(var l=0;l<c.length+64;l++)u.x^=c.charCodeAt(l)|0,u.next()}function a(i,u){return u.x=i.x,u.y=i.y,u.z=i.z,u.w=i.w,u}function o(i,u){var c=new r(i),l=u&&u.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var h=c.next()>>>11,p=(c.next()>>>0)/4294967296,f=(h+p)/(1<<21);while(f===0);return f},d.int32=c.next,d.quick=d,l&&(typeof l=="object"&&a(l,c),d.state=function(){return a(c,{})}),d}t&&t.exports?t.exports=o:this.xor128=o})(Cz,n)}(Yp)),Yp.exports}var Zp={exports:{}},$z=Zp.exports,r1;function _z(){return r1||(r1=1,function(n){(function(e,t,s){function r(i){var u=this,c="";u.next=function(){var d=u.x^u.x>>>2;return u.x=u.y,u.y=u.z,u.z=u.w,u.w=u.v,(u.d=u.d+362437|0)+(u.v=u.v^u.v<<4^(d^d<<1))|0},u.x=0,u.y=0,u.z=0,u.w=0,u.v=0,i===(i|0)?u.x=i:c+=i;for(var l=0;l<c.length+64;l++)u.x^=c.charCodeAt(l)|0,l==c.length&&(u.d=u.x<<10^u.x>>>4),u.next()}function a(i,u){return u.x=i.x,u.y=i.y,u.z=i.z,u.w=i.w,u.v=i.v,u.d=i.d,u}function o(i,u){var c=new r(i),l=u&&u.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var h=c.next()>>>11,p=(c.next()>>>0)/4294967296,f=(h+p)/(1<<21);while(f===0);return f},d.int32=c.next,d.quick=d,l&&(typeof l=="object"&&a(l,c),d.state=function(){return a(c,{})}),d}t&&t.exports?t.exports=o:this.xorwow=o})($z,n)}(Zp)),Zp.exports}var Jp={exports:{}},Ez=Jp.exports,a1;function Az(){return a1||(a1=1,function(n){(function(e,t,s){function r(i){var u=this;u.next=function(){var l=u.x,d=u.i,h,p;return h=l[d],h^=h>>>7,p=h^h<<24,h=l[d+1&7],p^=h^h>>>10,h=l[d+3&7],p^=h^h>>>3,h=l[d+4&7],p^=h^h<<7,h=l[d+7&7],h=h^h<<13,p^=h^h<<9,l[d]=p,u.i=d+1&7,p};function c(l,d){var h,p=[];if(d===(d|0))p[0]=d;else for(d=""+d,h=0;h<d.length;++h)p[h&7]=p[h&7]<<15^d.charCodeAt(h)+p[h+1&7]<<13;for(;p.length<8;)p.push(0);for(h=0;h<8&&p[h]===0;++h);for(h==8?p[7]=-1:p[h],l.x=p,l.i=0,h=256;h>0;--h)l.next()}c(u,i)}function a(i,u){return u.x=i.x.slice(),u.i=i.i,u}function o(i,u){i==null&&(i=+new Date);var c=new r(i),l=u&&u.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var h=c.next()>>>11,p=(c.next()>>>0)/4294967296,f=(h+p)/(1<<21);while(f===0);return f},d.int32=c.next,d.quick=d,l&&(l.x&&a(l,c),d.state=function(){return a(c,{})}),d}t&&t.exports?t.exports=o:this.xorshift7=o})(Ez,n)}(Jp)),Jp.exports}var Qp={exports:{}},Dz=Qp.exports,o1;function Rz(){return o1||(o1=1,function(n){(function(e,t,s){function r(i){var u=this;u.next=function(){var l=u.w,d=u.X,h=u.i,p,f;return u.w=l=l+1640531527|0,f=d[h+34&127],p=d[h=h+1&127],f^=f<<13,p^=p<<17,f^=f>>>15,p^=p>>>12,f=d[h]=f^p,u.i=h,f+(l^l>>>16)|0};function c(l,d){var h,p,f,m,g,y=[],b=128;for(d===(d|0)?(p=d,d=null):(d=d+"\0",p=0,b=Math.max(b,d.length)),f=0,m=-32;m<b;++m)d&&(p^=d.charCodeAt((m+32)%d.length)),m===0&&(g=p),p^=p<<10,p^=p>>>15,p^=p<<4,p^=p>>>13,m>=0&&(g=g+1640531527|0,h=y[m&127]^=p+g,f=h==0?f+1:0);for(f>=128&&(y[(d&&d.length||0)&127]=-1),f=127,m=4*128;m>0;--m)p=y[f+34&127],h=y[f=f+1&127],p^=p<<13,h^=h<<17,p^=p>>>15,h^=h>>>12,y[f]=p^h;l.w=g,l.X=y,l.i=f}c(u,i)}function a(i,u){return u.i=i.i,u.w=i.w,u.X=i.X.slice(),u}function o(i,u){i==null&&(i=+new Date);var c=new r(i),l=u&&u.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var h=c.next()>>>11,p=(c.next()>>>0)/4294967296,f=(h+p)/(1<<21);while(f===0);return f},d.int32=c.next,d.quick=d,l&&(l.X&&a(l,c),d.state=function(){return a(c,{})}),d}t&&t.exports?t.exports=o:this.xor4096=o})(Dz,n)}(Qp)),Qp.exports}var ef={exports:{}},Oz=ef.exports,i1;function Fz(){return i1||(i1=1,function(n){(function(e,t,s){function r(i){var u=this,c="";u.next=function(){var d=u.b,h=u.c,p=u.d,f=u.a;return d=d<<25^d>>>7^h,h=h-p|0,p=p<<24^p>>>8^f,f=f-d|0,u.b=d=d<<20^d>>>12^h,u.c=h=h-p|0,u.d=p<<16^h>>>16^f,u.a=f-d|0},u.a=0,u.b=0,u.c=-1640531527,u.d=1367130551,i===Math.floor(i)?(u.a=i/4294967296|0,u.b=i|0):c+=i;for(var l=0;l<c.length+20;l++)u.b^=c.charCodeAt(l)|0,u.next()}function a(i,u){return u.a=i.a,u.b=i.b,u.c=i.c,u.d=i.d,u}function o(i,u){var c=new r(i),l=u&&u.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var h=c.next()>>>11,p=(c.next()>>>0)/4294967296,f=(h+p)/(1<<21);while(f===0);return f},d.int32=c.next,d.quick=d,l&&(typeof l=="object"&&a(l,c),d.state=function(){return a(c,{})}),d}t&&t.exports?t.exports=o:this.tychei=o})(Oz,n)}(ef)),ef.exports}var tf={exports:{}};const Pz={},Lz=Object.freeze(Object.defineProperty({__proto__:null,default:Pz},Symbol.toStringTag,{value:"Module"})),La=MR(Lz);var Mz=tf.exports,u1;function Bz(){return u1||(u1=1,function(n){(function(e,t,s){var r=256,a=6,o=52,i="random",u=s.pow(r,a),c=s.pow(2,o),l=c*2,d=r-1,h;function p(w,v,S){var N=[];v=v==!0?{entropy:!0}:v||{};var $=y(g(v.entropy?[w,x(t)]:w??b(),3),N),T=new f(N),C=function(){for(var k=T.g(a),A=u,D=0;k<c;)k=(k+D)*r,A*=r,D=T.g(1);for(;k>=l;)k/=2,A/=2,D>>>=1;return(k+D)/A};return C.int32=function(){return T.g(4)|0},C.quick=function(){return T.g(4)/4294967296},C.double=C,y(x(T.S),t),(v.pass||S||function(k,A,D,R){return R&&(R.S&&m(R,T),k.state=function(){return m(T,{})}),D?(s[i]=k,A):k})(C,$,"global"in v?v.global:this==s,v.state)}function f(w){var v,S=w.length,N=this,$=0,T=N.i=N.j=0,C=N.S=[];for(S||(w=[S++]);$<r;)C[$]=$++;for($=0;$<r;$++)C[$]=C[T=d&T+w[$%S]+(v=C[$])],C[T]=v;(N.g=function(k){for(var A,D=0,R=N.i,F=N.j,z=N.S;k--;)A=z[R=d&R+1],D=D*r+z[d&(z[R]=z[F=d&F+A])+(z[F]=A)];return N.i=R,N.j=F,D})(r)}function m(w,v){return v.i=w.i,v.j=w.j,v.S=w.S.slice(),v}function g(w,v){var S=[],N=typeof w,$;if(v&&N=="object")for($ in w)try{S.push(g(w[$],v-1))}catch{}return S.length?S:N=="string"?w:w+"\0"}function y(w,v){for(var S=w+"",N,$=0;$<S.length;)v[d&$]=d&(N^=v[d&$]*19)+S.charCodeAt($++);return x(v)}function b(){try{var w;return h&&(w=h.randomBytes)?w=w(r):(w=new Uint8Array(r),(e.crypto||e.msCrypto).getRandomValues(w)),x(w)}catch{var v=e.navigator,S=v&&v.plugins;return[+new Date,e,S,e.screen,x(t)]}}function x(w){return String.fromCharCode.apply(0,w)}if(y(s.random(),t),n.exports){n.exports=p;try{h=La}catch{}}else s["seed"+i]=p})(typeof self<"u"?self:Mz,[],Math)}(tf)),tf.exports}var hy,l1;function zz(){if(l1)return hy;l1=1;var n=Nz(),e=Tz(),t=_z(),s=Az(),r=Rz(),a=Fz(),o=Bz();return o.alea=n,o.xor128=e,o.xorwow=t,o.xorshift7=s,o.xor4096=r,o.tychei=a,hy=o,hy}var ag=zz();/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zx{constructor(e,t,s,r,a){this.mean=e,this.stdDev=t,this.dtype=s,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);const o=a||Math.random();this.random=ag.alea(o.toString())}nextValue(){if(!isNaN(this.nextVal)){const r=this.nextVal;return this.nextVal=NaN,r}let e,t,s=!1;for(;!s;){let r,a,o;do r=2*this.random()-1,a=2*this.random()-1,o=r*r+a*a;while(o>=1||o===0);const i=Math.sqrt(-2*Math.log(o)/o);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*a*i,(!this.truncated||this.isValidTruncated(e))&&(s=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class Vz{constructor(e,t,s,r){this.alpha=e,this.beta=1/t,this.dtype=s;const a=r||Math.random();this.randu=ag.alea(a.toString()),this.randn=new Zx(0,1,s,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,s,r,a,o;for(;;){do r=this.randn.nextValue(),o=1+this.c*r;while(o<=0);if(o*=o*o,e=r*r,t=1-.331*e*e,s=.5*e+this.d*(1-o+Math.log(o)),a=this.randu(),a<t||Math.log(a)<s)break}return o=1/this.beta*this.d*o,this.alpha<1&&(o*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(o)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}}class Wz{constructor(e=0,t=1,s,r){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=t-e,this.dtype=s,r==null&&(r=Math.random()),typeof r=="number"&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=ag.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uz(n,e,t=1,s="float32",r){if(Ms(n),t==null&&(t=1),s==null&&(s="float32"),s!=="float32"&&s!=="int32")throw new Error(`Unsupported data type ${s}`);const a=new Vz(e,t,s,r),o=He(n,s);for(let i=0;i<o.values.length;i++)o.values[i]=a.nextValue();return o.toTensor()}const Gz=L({randomGamma_:Uz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hz(n,e=0,t=1,s,r){if(Ms(n),s!=null&&s==="bool")throw new Error(`Unsupported data type ${s}`);const a=new Zx(e,t,s,!1,r),o=He(n,s);for(let i=0;i<o.values.length;i++)o.values[i]=a.nextValue();return o.toTensor()}const Jx=L({randomNormal_:Hz});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jz(n,e,t){if(e!=null&&e==="bool")throw new Error(`Unsupported data type ${e}`);return Jx(n,0,1,e,t)}const qz=L({randomStandardNormal_:jz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kz(n,e=0,t=1,s="float32",r){Ms(n);const a=He(n,s),o=new Wz(e,t,null,r);for(let i=0;i<a.values.length;i++)a.values[i]=o.nextValue();return a.toTensor()}const vi=L({randomUniform_:Kz});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xz(n,e,t,s){return vi(n,e,t,"int32",s)}const Yz=L({randomUniformInt_:Xz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Iu(n,e,t=1,s="float32"){if(t===0)throw new Error("Cannot have a step of zero");const r={start:n,stop:e,step:t,dtype:s};return M.runKernel(Fm,{},r)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zz(n){const t={input:E(n,"input","real")};return M.runKernel(Ex,t)}const Kc=L({real_:Zz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jz(n){const t={x:E(n,"x","reciprocal")};return M.runKernel(Dl,t)}const $N=L({reciprocal_:Jz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qz(n){const t={x:E(n,"x","relu")};return M.runKernel(Rl,t)}const ea=L({relu_:Qz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eV(n){const t={x:E(n,"x","relu6")};return M.runKernel(Pl,t)}const Qx=L({relu6_:eV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tV(n,e){const s={x:E(n,"x","reverse")},r={dims:e};return M.runKernel(Ll,s,r)}const sr=L({reverse_:tV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nV(n){const e=E(n,"x","reverse");return _(e.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${e.rank}.`),sr(e,0)}const sV=L({reverse1d_:nV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rV(n,e){const t=E(n,"x","reverse");return _(t.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${t.rank}.`),sr(t,e)}const aV=L({reverse2d_:rV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oV(n,e){const t=E(n,"x","reverse");return _(t.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${t.rank}.`),sr(t,e)}const iV=L({reverse3d_:oV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uV(n,e){const t=E(n,"x","reverse");return _(t.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${t.rank}.`),sr(t,e)}const lV=L({reverse4d_:uV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cV(n){const t={x:E(n,"x","round")};return M.runKernel(Ml,t)}const ew=L({round_:cV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dV(n){const t={x:E(n,"x","rsqrt","float32")};return M.runKernel(Bl,t)}const tw=L({rsqrt_:dV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hV(n){const t={x:E(n,"x","selu")};return M.runKernel(zl,t)}const nw=L({selu_:hV});function pV(n,e,t,s,r,a=[1,1],o="NHWC"){const i=E(n,"x","separableConv2d"),u=E(e,"depthwiseFilter","separableConv2d"),c=E(t,"pointwiseFilter","separableConv2d");let l=i,d=!1;if(i.rank===3&&(d=!0,l=V(i,[1,i.shape[0],i.shape[1],i.shape[2]])),o==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");_(l.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${l.rank}.`),_(u.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`),_(c.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`),_(c.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${c.shape[0]}.`),_(c.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${c.shape[1]}.`);const h=u.shape[2],p=u.shape[3];_(c.shape[2]===h*p,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${h*p}, but got ${c.shape[2]}.`);const f=Zh(l,u,s,r,o,a),g=oo(f,c,1,"valid",o);return d?V(g,[g.shape[1],g.shape[2],g.shape[3]]):g}const sw=L({separableConv2d_:pV});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function fV(n,e){const t=E(n,"x","setdiff1d"),s=E(e,"y","setdiff1d");_(t.dtype===s.dtype,()=>`x and y should have the same dtype, but got x (${t.dtype}) and y (${s.dtype}).`),_(t.rank===1,()=>`x should be 1D tensor, but got x (${t.shape}).`),_(s.rank===1,()=>`y should be 1D tensor, but got y (${s.shape}).`);const r=await t.data(),a=await s.data(),o=new Set(a);let i=0;for(let l=0;l<r.length;l++)o.has(r[l])||i++;const u=new dn([i],t.dtype),c=new dn([i],"int32");for(let l=0,d=0;l<r.length;l++)o.has(r[l])||(u.values[d]=r[l],c.values[d]=l,d++);return[u.toTensor(),c.toTensor()]}const mV=fV;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gV(n){const t={x:E(n,"x","sign")};return M.runKernel(Ul,t)}const _N=L({sign_:gV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yV(n){const t={x:E(n,"x","sin","float32")};return M.runKernel(Vl,t)}const rw=L({sin_:yV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bV(n){const t={x:E(n,"x","sinh")};return M.runKernel(Wl,t)}const aw=L({sinh_:bV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xV(n,e,t){const s=E(n,"x","slice1d");return _(s.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`),tt(s,[e],[t])}const og=L({slice1d_:xV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wV(n,e,t){const s=E(n,"x","slice2d");return _(s.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`),tt(s,e,t)}const ow=L({slice2d_:wV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vV(n,e,t){const s=E(n,"x","slice3d");return _(s.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`),tt(s,e,t)}const ig=L({slice3d_:vV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IV(n,e,t){const s=E(n,"x","slice4d");return _(s.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`),tt(s,e,t)}const Xc=L({slice4d_:IV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SV(n,e=-1){const t=E(n,"logits","softmax","float32");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and dim was ${e}`);const s={logits:t},r={dim:e};return M.runKernel(Kl,s,r)}const ug=L({softmax_:SV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kV(n){_(n.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${n.dtype}.`);const e={input:n};return M.runKernel(kx,e)}const lg=L({fft_:kV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NV(n){_(n.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${n.dtype}.`);const e={input:n};return M.runKernel(Nx,e)}const Yc=L({ifft_:NV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CV(n){const e=n.shape[n.shape.length-1],t=n.size/e;let s;if(e<=2){const r=V(n,[t,e]);s=Yc(r)}else{const r=[t,2*(e-1)],a=V(Kc(n),[t,e]),o=V(Ym(n),[t,e]),i=sr(tt(a,[0,1],[t,e-2]),1),u=B(sr(tt(o,[0,1],[t,e-2]),1),Ae(-1)),c=tn([a,i],1),l=tn([o,u],1),d=V(so(c,l),[r[0],r[1]]);s=Yc(d)}if(s=Kc(s),n.rank===3&&n.shape[0]!==0){const r=s,a=n.shape[0];s=V(s,[a,s.shape[0]/a,s.shape[1]]),r.dispose()}return s}const iw=L({irfft_:CV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TV(n,e,t=0){const r={x:E(n,"x","split")},a={numOrSizeSplits:e,axis:t};return M.runKernel(zh,r,a)}const bs=L({split_:TV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $V(n,e){_(n.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${n.dtype}`);let t=n.shape[n.shape.length-1];const s=n.size/t;let r;if(e!=null&&e<t){const f=n.shape.map(g=>0),m=n.shape.map(g=>g);m[n.shape.length-1]=e,r=tt(n,f,m),t=e}else if(e!=null&&e>t){const f=n.shape.map(m=>m);f[n.shape.length-1]=e-t,r=tn([n,un(f)],n.shape.length-1),t=e}else r=n;const a=st(r),o=V(so(r,a),[s,t]),i=lg(o),u=Math.floor(t/2)+1,c=Kc(i),l=Ym(i),d=bs(c,[u,t-u],c.shape.length-1),h=bs(l,[u,t-u],l.shape.length-1),p=r.shape.slice();return p[r.shape.length-1]=u,V(so(d[0],h[0]),p)}const cg=L({rfft_:$V});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _V(n,e){let t=E(n,"a","squaredDifference"),s=E(e,"b","squaredDifference");[t,s]=Ut(t,s),Me(t.shape,s.shape);const r={a:t,b:s},a={};return M.runKernel(Xl,r,a)}const uw=L({squaredDifference_:_V});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EV(n,e){const t=E(n,"x","squeeze","string_or_numeric");return V(t,mo(t.shape,e).newShape)}const Ii=L({squeeze_:EV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AV(n,e=0){const t=wf(n,"tensors","stack","string_or_numeric");_(t.length>=1,()=>"Pass at least one tensor to tf.stack"),t.length>0&&_(e<=t[0].rank,()=>"Axis must be <= rank of the tensor");const s=t,r={axis:e};return M.runKernel(Eh,s,r)}const Ss=L({stack_:AV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DV(n,e=0){const s={x:E(n,"x","step")},r={alpha:e};return M.runKernel(bi,s,r)}const tc=L({step_:DV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RV(n,e,t,s,r=0,a=0,o=0,i=0,u=0){const l={x:E(n,"x","stridedSlice","string_or_numeric")},d={begin:e,end:t,strides:s,beginMask:r,endMask:a,ellipsisMask:o,newAxisMask:i,shrinkAxisMask:u};return M.runKernel(Uh,l,d)}const EN=L({stridedSlice_:RV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OV(n){const t={x:E(n,"x","tan","float32")};return M.runKernel(Zl,t)}const AN=L({tan_:OV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function On(n,e){Ru(n);const t=yo(n,e);if(t.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return bo(n,null,t,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Go(n,e,t){if(Ru(n),e!=null&&e.length!==2)throw new Error("tensor2d() requires shape to have two numbers");const s=yo(n,t);if(s.length!==2&&s.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return bo(n,e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FV(n,e,t){if(Ru(n),e!=null&&e.length!==3)throw new Error("tensor3d() requires shape to have three numbers");const s=yo(n,t);if(s.length!==3&&s.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return bo(n,e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PV(n,e,t){if(Ru(n),e!=null&&e.length!==4)throw new Error("tensor4d() requires shape to have four numbers");const s=yo(n,t);if(s.length!==4&&s.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return bo(n,e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LV(n,e,t){if(Ru(n),e!=null&&e.length!==5)throw new Error("tensor5d() requires shape to have five numbers");const s=yo(n,t);if(s.length!==5&&s.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return bo(n,e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MV(n,e,t){if(Ru(n),e!=null&&e.length!==6)throw new Error("tensor6d() requires shape to have six numbers");const s=yo(n,t);if(s.length!==6&&s.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return e=e||s,bo(n,e,s,t)}function DN(n,e,t){const s=e.rank>1?e.shape[e.rank-1]:1,r=e.rank>1?e.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${t.shape}, indices.shape: ${e.shape}, shape: ${n}, sliceDim: ${s}, and batchDim: ${r}.`;if(t.rank<r)throw new Error(a+` update.rank < ${r}. `);if(n.length<s+(t.rank-r))throw new Error(a+` Output shape length < ${s+(t.rank-r)}`);if(t.rank!==r+n.length-s)throw new Error(a+` update.rank != ${r+n.length-s}`);for(let o=0;o<r;++o)if(t.shape[o]!==e.shape[o])throw new Error(a+` updates.shape[${o}] (${t.shape[o]}) != indices.shape[${o}] (${e.shape[o]}).`);for(let o=0;o<t.rank-r;++o)if(t.shape[o+r]!==n[o+s])throw new Error(a+` updates.shape[${o+r}] (${t.shape[o+r]}) != shape[${o+r}] (${n[o+r]})`)}function lw(n,e,t){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(n.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${n.rank}.`);if(e.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(t.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${t}`);if(t.length===0){if(e.size===0)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(n.size===0)throw new Error(`Updates specified for empty output. updates shape: ${n.shape}`)}DN(t,e,n)}function ta(n,e,t){const s=e.shape.length,r=s>1?e.shape[s-1]:1,a=t.length;let o=1;for(let d=r;d<a;++d)o*=t[d];const i=r<1?1:r,u=U(e.shape)/i,c=[...ve(t.slice(0,r)),1],l=U(t);return{sliceRank:r,numUpdates:u,sliceSize:o,strides:c,outputSize:l}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BV(n,e,t){const s=E(n,"tensor","tensorScatterupdate"),r=E(e,"indices","tensorScatterupdate","int32"),a=E(t,"updates","tensorScatterupdate");if(lw(a,r,s.shape),s.dtype!==a.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${s.dtype} and ${a.dtype}.`);const o={tensor:s,indices:r,updates:a},i={};return M.runKernel(Fh,o,i)}const zV=L({tensorScatterUpdate_:BV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VV(n,e=1,t=!0){const s=E(n,"x","topk");if(s.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");const r=s.shape[s.shape.length-1];if(e<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${e}`);if(e>r)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${e}`);const a={x:s},o={k:e,sorted:t},[i,u]=M.runKernel(Gh,a,o);return{values:i,indices:u}}const RN=L({topk_:VV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WV(n,e=0,t=1,s,r){if(Ms(n),s!=null&&s==="bool")throw new Error("Unsupported data type $ { dtype }");const a=new Zx(e,t,s,!0,r),o=He(n,s);for(let i=0;i<o.values.length;i++)o.values[i]=a.nextValue();return o.toTensor()}const cw=L({truncatedNormal_:WV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UV(n,e=0){const t=E(n,"x","unique","string_or_numeric");_(t.rank>0,()=>"The input tensor must be at least 1D");const s={x:t},r={axis:e},[a,o]=M.runKernel(Gm,s,r);return{values:a,indices:o}}const ON=L({unique_:UV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GV(n,e,t){const s=E(n,"x","unsortedSegmentSum"),r=E(e,"segmentIds","unsortedSegmentSum","int32");_(pu(t),()=>"numSegments must be of dtype int");const a={x:s,segmentIds:r},o={numSegments:t};return M.runKernel(Hm,a,o)}const dw=L({unsortedSegmentSum_:GV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HV(n,e=0){const t=E(n,"x","unstack","string_or_numeric");_(e>=-t.shape.length&&e<t.shape.length,()=>`Axis = ${e} is not in [-${t.shape.length}, ${t.shape.length})`);const s={value:t},r={axis:e};return M.runKernel(jh,s,r)}const rr=L({unstack_:HV});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jV(n,e){return Xx(n,e,"right")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FN(n,e=!0,t,s){return M.makeVariable(n,e,t,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hw(n,e){const t=[];for(let a=0;a<e.length;a++)e[a]&&t.push(a);const s=He(n,"int32"),r=He([t.length,n.length],"int32");for(let a=0;a<t.length;a++){const o=s.indexToLoc(t[a]),i=a*n.length;r.values.set(o,i)}return r.toTensor()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function qV(n){const e=E(n,"condition","whereAsync","bool"),t=await e.data(),s=hw(e.shape,t);return n!==e&&e.dispose(),s}const PN=qV;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function KV(n,e,t){const s=E(n,"tensor","boolMask"),r=E(e,"mask","boolMask","bool"),a=t??0,o=r.rank,i=s.shape;_(o>0,()=>"mask cannot be scalar"),us(i.slice(a,a+o),r.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let m=a;m<a+o;m++)u*=i[m];const c=i.slice(0,a).concat([u],i.slice(a+o)),l=V(s,c),d=V(r,[-1]),h=await PN(d),p=Ii(h,[1]),f=tp(l,p,a);return n!==s&&s.dispose(),e!==r&&r.dispose(),p.dispose(),l.dispose(),d.dispose(),h.dispose(),f}const XV=KV;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YV(n,e,t){const s=E(n,"x","transpose");if(e==null&&(e=s.shape.map((o,i)=>i).reverse()),_(s.rank===e.length,()=>`Error in transpose: rank of input ${s.rank} must match length of perm ${e}.`),e.forEach(o=>{_(o>=0&&o<s.rank,()=>`All entries in 'perm' must be between 0 and ${s.rank-1} but got ${e}`)}),s.rank<=1)return s.clone();const r={x:s},a={perm:e};return s.dtype==="complex64"?j(()=>{let o=Kc(s),i=Ym(s);return o=M.runKernel(ja,{x:o},a),i=M.runKernel(ja,{x:i},a),t&&(i=Dt(i)),so(o,i)}):M.runKernel(ja,r,a)}const nt=L({transpose_:YV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZV(n,e,t,s,r=!0){const a=E(n,"v","movingAverage"),o=E(e,"x","movingAverage"),i=E(t,"decay","movingAverage");ML(a,o),_(Qe(a.shape,o.shape),()=>"Shape mismatch in v and x");const u=Ae(1),c=we(u,i);let l=B(we(o,a),c);if(r){_(s!=null,()=>"When using zeroDebias: true, step is required.");const d=E(s,"step","movingAverage");l=$e(l,we(u,Sa(i,d)))}return se(a,l)}const JV=L({movingAverage_:ZV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QV(n,e,t){Ms(t);const s=E(n,"indices","scatterND","int32"),r=E(e,"updates","scatterND");lw(r,s,t);const a={indices:s,updates:r},o={shape:t};return M.runKernel(Oh,a,o)}const eW=L({scatterND_:QV});function tW(n,e,t,s){if(n.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${n.dtype}.`);if(n.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${n.shape}.`);const r=n.rank>0?n.shape[0]:1,a=n.rank>1?n.shape[1]:1;if(t.length!==a)throw new Error(`outputShape has incorrect number of elements:, ${t.length}, should be: ${a}.`);const o=e.size;if(!(e.rank===0||e.rank===1&&o===r))throw new Error(`sparseValues has incorrect shape ${e.shape}, should be [] or [${r}]`);if(e.dtype!==s.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nW(n,e,t,s=0){Ms(t);const r=E(n,"sparseIndices","sparseToDense","int32"),a=E(e,"sparseValues","sparseToDense","string_or_numeric"),o=E(s,"defaultValue","sparseToDense",a.dtype);tW(r,a,t,o);const i={sparseIndices:r,sparseValues:a,defaultValue:o},u={outputShape:t};return M.runKernel(Wh,i,u)}const sW=L({sparseToDense_:nW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rW(n,e){const t=E(e,"indices","gatherND","int32"),r={params:E(n,"x","gatherND","string_or_numeric"),indices:t};return M.runKernel(ph,r)}const aW=L({gatherND_:rW});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oW(n,e){if(e==null)return n.shape.slice();if(Qe(n.shape,e))return e;if(n.shape.length===e.length){const t=[];for(let s=0;s<n.shape.length;s++)e[s]==null&&n.shape[s]!=null?t.push(n.shape[s]):t.push(e[s]);return t}return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iW(n,e,t,s){const r=E(n,"x","dropout");if(_(r.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`),_(e>=0&&e<1,()=>`rate must be a float in the range [0, 1), but got ${e}.`),e===0)return n instanceof Bt?r.clone():r;const a=oW(r,t),o=1-e,i=$e(ep(se(vi(a,0,1,"float32",s),o)),o);return B(r,i)}const LN=L({dropout_:iW});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MN(n){return Math.floor(Math.pow(2,Math.ceil(Math.log(n)/Math.log(2))))}function pw(n,e,t){const s=1-n%2,r=new Float32Array(n);for(let a=0;a<n;++a){const o=2*Math.PI*a/(n+s-1);r[a]=e-t*Math.cos(o)}return On(r,"float32")}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function uW(n,e,t=1){const s=E(n,"predictions","inTopK"),r=E(e,"targets","inTopK");_(s.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${s.rank}`),_(s.rank-1===r.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${s.rank} and targets rank ${r.rank}`),us(s.shape.slice(0,s.shape.length-1),r.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const a=s.shape[s.shape.length-1];_(t>0&&t<=a,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${a}), but got ${t}`);const o=await s.data(),i=await r.data(),[u,c]=[o.length/a,a],l=Cn("bool",u);for(let d=0;d<u;d++){const h=d*c,p=o.subarray(h,h+c),f=[];for(let m=0;m<p.length;m++)f.push({value:p[m],index:m});f.sort((m,g)=>g.value-m.value),l[d]=0;for(let m=0;m<t;m++)if(f[m].index===i[d]){l[d]=1;break}}return n!==s&&s.dispose(),e!==r&&r.dispose(),Qs(l,r.shape,"bool")}const lW=uW;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cW(n,e,t,s,r,a="NHWC",o){let i=n;n.rank===3&&(i=V(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let u=e;u.rank===3&&(u=V(e,[1,e.shape[0],e.shape[1],e.shape[2]])),_(i.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${i.shape}.`),_(u.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`),_(t.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${t}.`);const c=a==="NHWC"?i.shape[3]:i.shape[1],l=a==="NHWC"?u.shape[3]:u.shape[1];_(c===t[2],()=>`Error in conv2dDerFilter: depth of input ${c}) must match input depth in filter (${t[2]}.`),_(l===t[3],()=>`Error in conv2dDerFilter: depth of dy (${l}) must match output depth for filter (${t[3]}).`),Kn("conv2dDerFilter",r,o);const d={x:i,dy:u},h={strides:s,pad:r,dataFormat:a,dimRoundingMode:o,filterShape:t};return M.runKernel(wx,d,h)}const fw=L({conv2DBackpropFilter_:cW});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dg(n,e,t){if(t==null||t==="linear")return n;if(t==="relu")return B(n,tc(e));throw new Error(`Cannot compute gradient for fused activation ${t}.`)}function hg(n,e){let t=e;const s=fn(n.shape,e.shape);return s.length>0&&(t=Ne(t,s)),V(t,n.shape)}function pg(n,e,t,s){if(e==="linear")return n;if(e==="relu")return ea(n);if(e==="elu")return Jh(n);if(e==="relu6")return Qx(n);if(e==="prelu")return rg(n,t);if(e==="leakyrelu")return Zm(n,s);if(e==="sigmoid")return Wr(n);throw new Error(`Unknown fused activation ${e}.`)}const fg=(n,e)=>!(n>0)||e==="linear";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dW({x:n,filter:e,strides:t,pad:s,dataFormat:r="NHWC",dilations:a=[1,1],dimRoundingMode:o,bias:i,activation:u="linear",preluActivationWeights:c,leakyreluAlpha:l}){if(u=u||"linear",fg(M.state.gradientDepth,u)===!1){_(r==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${r} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let S=oo(n,e,t,s,r,a,o);return i!=null&&(S=se(S,i)),pg(S,u,c,l)}const d=E(n,"x","conv2d","float32"),h=E(e,"filter","conv2d","float32");let p=d,f=!1;d.rank===3&&(f=!0,p=V(d,[1,d.shape[0],d.shape[1],d.shape[2]])),_(p.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`),_(h.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${h.rank}.`),Kn("fused conv2d",s,o);const m=r==="NHWC"?p.shape[3]:p.shape[1];_(h.shape[2]===m,()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${h.shape[2]}.`),_(wn(t,a),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${a}'`);const g=Vt(p.shape,h.shape,t,a,s,o);let y;i!=null&&(y=E(i,"bias","fused conv2d"),[y]=Ut(y,d),r==="NHWC"?Me(g.outShape,y.shape):(_(y.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${y.shape.length}.`),_(y.shape.length===0||y.shape[0]===g.outChannels||y.shape[0]===1,()=>`Error in fused conv2d: bias shape (${y.shape}) is not compatible with the number of output channels (${g.outChannels})`)));let b;if(c!=null){const S=c.shape;if(_(S.length<=1||S.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${S.length}.`),S.length===1)_(S[0]===1||S[0]===g.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${S}) is not compatible with the number of output channels (${g.outChannels}).`);else if(S.length===3)try{Me(S,g.outShape)}catch{const $=`Error in fused conv2d: PReLU activation weights (${S}) is not compatible with the output shape of the conv2d (${g.outShape}).`;throw Error($)}b=E(c,"prelu weights","fused conv2d")}const x=(S,N)=>{_(r==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${r} but only NHWC is currently supported.`);const[$,T,C,k]=N,A=dg(S,C,u);_(ao(a),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`);const D=zx(T.shape,A,$,t,s),R=fw(T,A,$.shape,t,s),F=[D,R];if(k!=null){const z=hg(k,A);F.push(z)}return F},w={x:p,filter:h,bias:y,preluActivationWeights:b},v={strides:t,pad:s,dataFormat:r,dilations:a,dimRoundingMode:o,activation:u,leakyreluAlpha:l};return i==null?ka((N,$,T)=>{let C=M.runKernel(gu,w,v);return T([$,N,C]),f&&(C=V(C,[C.shape[1],C.shape[2],C.shape[3]])),{value:C,gradFunc:x}})(p,h):ka((N,$,T,C)=>{let k=M.runKernel(gu,w,v);return C([$,N,k,T]),f&&(k=V(k,[k.shape[1],k.shape[2],k.shape[3]])),{value:k,gradFunc:x}})(p,h,y)}const BN=L({fusedConv2d_:dW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hW(n,e,t,s,r,a=[1,1],o){let i=n;n.rank===3&&(i=V(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let u=e;u.rank===3&&(u=V(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const c={x:i,dy:u},l={strides:s,pad:r,dimRoundingMode:o,dilations:a,filterShape:t};return M.runKernel(vx,c,l)}const zN=L({depthwiseConv2dNativeBackpropFilter_:hW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pW(n,e,t,s,r,a=[1,1],o){let i=e,u=!1;e.rank===3&&(u=!0,i=V(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const c={dy:i,filter:t},l={strides:s,pad:r,dimRoundingMode:o,dilations:a,inputShape:n},d=M.runKernel(Ix,c,l);return u?V(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const VN=L({depthwiseConv2dNativeBackpropInput_:pW});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fW({x:n,filter:e,strides:t,pad:s,dataFormat:r="NHWC",dilations:a=[1,1],dimRoundingMode:o,bias:i,activation:u="linear",preluActivationWeights:c,leakyreluAlpha:l}){if(fg(M.state.gradientDepth,u)===!1){let v=Zh(n,e,t,s,r,a,o);return i!=null&&(v=se(v,i)),pg(v,u,c,l)}const d=E(n,"x","depthwiseConv2d","float32"),h=E(e,"filter","depthwiseConv2d","float32");let p=d,f=!1;d.rank===3&&(f=!0,p=V(d,[1,d.shape[0],d.shape[1],d.shape[2]])),_(p.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${p.rank}.`),_(h.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${h.rank}.`),_(p.shape[3]===h.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${p.shape[3]}) must match the inChannels dimension in filter ${h.shape[2]}.`),a==null&&(a=[1,1]),_(wn(t,a),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${t} and dilations '${a}'`),Kn("fused depthwiseConv2d",s,o);const m=Vt(p.shape,h.shape,t,a,s,o,!0);let g;i!=null&&(g=E(i,"bias","fused conv2d"),[g]=Ut(g,d),Me(m.outShape,g.shape));let y;c!=null&&(y=E(c,"prelu weights","fused depthwiseConv2d"));const b=(v,S)=>{_(ao(a),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`);const[N,$,T,C]=S,k=dg(v,T,u),A=VN($.shape,k,N,t,s,a,o),D=zN($,k,N.shape,t,s,a,o);if(C!=null){const R=hg(g,k);return[A,D,R]}return[A,D]},x={x:p,filter:h,bias:g,preluActivationWeights:y},w={strides:t,pad:s,dataFormat:r,dilations:a,dimRoundingMode:o,activation:u,leakyreluAlpha:l};return i==null?ka((S,N,$)=>{let T=M.runKernel(yu,x,w);return $([N,S,T]),f&&(T=V(T,[T.shape[1],T.shape[2],T.shape[3]])),{value:T,gradFunc:b}})(p,h):ka((S,N,$,T)=>{let C=M.runKernel(yu,x,w);return T([N,S,C,$]),f&&(C=V(C,[C.shape[1],C.shape[2],C.shape[3]])),{value:C,gradFunc:b}})(p,h,g)}const mW=L({fusedDepthwiseConv2d_:fW});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gW({a:n,b:e,transposeA:t=!1,transposeB:s=!1,bias:r,activation:a="linear",preluActivationWeights:o,leakyreluAlpha:i=.2}){if(fg(M.state.gradientDepth,a)===!1){let k=Ke(n,e,t,s);return r!=null&&(k=se(k,r)),pg(k,a,o,i)}let u=E(n,"a","fused matMul"),c=E(e,"b","fused matMul");[u,c]=Ut(u,c);const l=t?u.shape[u.rank-2]:u.shape[u.rank-1],d=s?c.shape[c.rank-1]:c.shape[c.rank-2],h=t?u.shape[u.rank-1]:u.shape[u.rank-2],p=s?c.shape[c.rank-2]:c.shape[c.rank-1],f=u.shape.slice(0,-2),m=c.shape.slice(0,-2),g=U(f),y=U(m);_(l===d,()=>`Error in fused matMul: inner shapes (${l}) and (${d}) of Tensors with shapes ${u.shape} and ${c.shape} and transposeA=${t} and transposeB=${s} must match.`);const x=Me(u.shape.slice(0,-2),c.shape.slice(0,-2)).concat([h,p]),w=t?V(u,[g,l,h]):V(u,[g,h,l]),v=s?V(c,[y,p,d]):V(c,[y,d,p]);let S;r!=null&&(S=E(r,"bias","fused matMul"),[S]=Ut(S,u),Me(x,S.shape));let N;o!=null&&(N=E(o,"prelu weights","fused matMul"));const $=(k,A)=>{const[D,R,F,z]=A,H=dg(V(k,F.shape),F,a);let P,G;if(!t&&!s?(P=Ke(H,R,!1,!0),G=Ke(D,H,!0,!1)):!t&&s?(P=Ke(H,R,!1,!1),G=Ke(H,D,!0,!1)):t&&!s?(P=Ke(R,H,!1,!0),G=Ke(D,H,!1,!1)):(P=Ke(R,H,!0,!0),G=Ke(H,D,!0,!0)),r!=null){const X=hg(z,H);return[P,G,X]}else return[P,G]},T={a:w,b:v,bias:S,preluActivationWeights:N},C={transposeA:t,transposeB:s,activation:a,leakyreluAlpha:i};return r==null?ka((A,D,R)=>{const F=M.runKernel(mu,T,C);return R([A,D,F]),{value:V(F,x),gradFunc:$}})(w,v):ka((A,D,R,F)=>{const z=M.runKernel(mu,T,C);return F([A,D,z,R]),{value:V(z,x),gradFunc:$}})(w,v,S)}const ub=L({fusedMatMul_:gW});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yW=Object.freeze(Object.defineProperty({__proto__:null,conv2d:BN,depthwiseConv2d:mW,matMul:ub},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bW(n){return pw(n,.54,.46)}const xW=L({hammingWindow_:bW});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wW(n){return pw(n,.5,.5)}const WN=L({hannWindow_:wW});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vW(n,e,t,s=!1,r=0){let a=0;const o=[];for(;a+e<=n.size;)o.push(tt(n,a,e)),a+=t;if(s)for(;a<n.size;){const i=a+e-n.size,u=tn([tt(n,a,e-i),Ql([i],r)]);o.push(u),a+=t}return o.length===0?Go([],[0,e]):V(tn(o),[o.length,e])}const UN=L({frame_:vW});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IW(n,e,t,s,r=WN){s==null&&(s=MN(e));const a=UN(n,e,t),o=B(a,r(e));return cg(o,s)}const SW=L({stft_:IW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kW(n,e,t,s,r="bilinear",a=0){const o=E(n,"image","cropAndResize"),i=E(e,"boxes","cropAndResize","float32"),u=E(t,"boxInd","cropAndResize","int32"),c=i.shape[0];_(o.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${o.rank}.`),_(i.rank===2&&i.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${c},4] but had shape ${i.shape}.`),_(u.rank===1&&u.shape[0]===c,()=>`Error in cropAndResize: boxInd must be have size [${c}] but had shape ${i.shape}.`),_(s.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`),_(s[0]>=1&&s[1]>=1,()=>`cropSize must be atleast [1,1], but was ${s}`),_(r==="bilinear"||r==="nearest",()=>`method must be bilinear or nearest, but was ${r}`);const l={image:o,boxes:i,boxInd:u},d={method:r,extrapolationValue:a,cropSize:s};return M.runKernel(oh,l,d)}const NW=L({cropAndResize_:kW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CW(n){const e=E(n,"image","flipLeftRight","float32");_(e.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`);const t={image:e};return M.runKernel(dh,t,{})}const TW=L({flipLeftRight_:CW});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $W(n){const e=E(n,"image","grayscaleToRGB"),t=e.rank-1,s=e.shape[t];_(e.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${e.rank}.`),_(s===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${s}.`);const r=new Array(e.rank);return r.fill(1,0,t),r[t]=3,Xs(e,r)}const _W=L({grayscaleToRGB_:$W});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EW(n){const e=E(n,"image","RGBToGrayscale"),t=e.rank-1,s=e.shape[t];_(e.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${e.rank}.`),_(s===3,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${s}.`);const r=e.dtype,a=fe(e,"float32"),o=On([.2989,.587,.114]);let i;switch(e.rank){case 2:i=Xi("ij,j->i",a,o);break;case 3:i=Xi("ijk,k->ij",a,o);break;case 4:i=Xi("ijkl,l->ijk",a,o);break;case 5:i=Xi("ijklm,m->ijkl",a,o);break;case 6:i=Xi("ijklmn,n->ijklm",a,o);break;default:throw new Error("Not a valid tensor rank.")}return i=Hn(i,-1),fe(i,r)}const AW=L({rgbToGrayscale_:EW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DW(n,e,t=0,s=.5){const r=E(n,"image","rotateWithOffset","float32");_(r.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`);const a={image:r},o={radians:e,fillValue:t,center:s};return M.runKernel(Kh,a,o)}const RW=L({rotateWithOffset_:DW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nc(n,e,t,s,r,a){s==null&&(s=.5),r==null&&(r=Number.NEGATIVE_INFINITY),a==null&&(a=0);const o=n.shape[0];return t=Math.min(t,o),_(0<=s&&s<=1,()=>`iouThreshold must be in [0, 1], but was '${s}'`),_(n.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${n.rank}'`),_(n.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${n.shape[1]}`),_(e.rank===1,()=>"scores must be a 1D tensor"),_(e.shape[0]===o,()=>`scores has incompatible shape with boxes. Expected ${o}, but was ${e.shape[0]}`),_(0<=a&&a<=1,()=>`softNmsSigma must be in [0, 1], but was '${a}'`),{maxOutputSize:t,iouThreshold:s,scoreThreshold:r,softNmsSigma:a}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OW(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY){const a=E(n,"boxes","nonMaxSuppression","float32"),o=E(e,"scores","nonMaxSuppression","float32"),i=nc(a,o,t,s,r);t=i.maxOutputSize,s=i.iouThreshold,r=i.scoreThreshold;const u={maxOutputSize:t,iouThreshold:s,scoreThreshold:r};return M.runKernel(Ch,{boxes:a,scores:o},u)}const FW=L({nonMaxSuppression_:OW});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PW(n,e,t){const s=LW(n,e,t),r=s<0?-(s+1):s;n.splice(r,0,e)}function LW(n,e,t){return BW(n,e,t||MW)}function MW(n,e){return n>e?1:n<e?-1:0}function BW(n,e,t){let s=0,r=n.length,a=0,o=!1;for(;s<r;){a=s+(r-s>>>1);const i=t(e,n[a]);i>0?s=a+1:(r=a,o=!i)}return o?s:-s-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mw(n,e,t,s,r){return bw(n,e,t,s,r,0)}function gw(n,e,t,s,r,a){return bw(n,e,t,s,r,0,!1,a,!0)}function yw(n,e,t,s,r,a){return bw(n,e,t,s,r,a,!0)}function bw(n,e,t,s,r,a,o=!1,i=!1,u=!1){const c=[];for(let g=0;g<e.length;g++)e[g]>r&&c.push({score:e[g],boxIndex:g,suppressBeginIndex:0});c.sort(c1);const l=a>0?-.5/a:0,d=[],h=[];for(;d.length<t&&c.length>0;){const g=c.pop(),{score:y,boxIndex:b,suppressBeginIndex:x}=g;if(y<r)break;let w=!1;for(let v=d.length-1;v>=x;--v){const S=zW(n,b,d[v]);if(S>=s){w=!0;break}if(g.score=g.score*VW(s,l,S),g.score<=r)break}g.suppressBeginIndex=d.length,w||(g.score===y?(d.push(b),h.push(g.score)):g.score>r&&PW(c,g,c1))}const p=d.length,f=t-p;i&&f>0&&(d.push(...new Array(f).fill(0)),h.push(...new Array(f).fill(0)));const m={selectedIndices:d};return o&&(m.selectedScores=h),u&&(m.validOutputs=p),m}function zW(n,e,t){const s=n.subarray(e*4,e*4+4),r=n.subarray(t*4,t*4+4),a=Math.min(s[0],s[2]),o=Math.min(s[1],s[3]),i=Math.max(s[0],s[2]),u=Math.max(s[1],s[3]),c=Math.min(r[0],r[2]),l=Math.min(r[1],r[3]),d=Math.max(r[0],r[2]),h=Math.max(r[1],r[3]),p=(i-a)*(u-o),f=(d-c)*(h-l);if(p<=0||f<=0)return 0;const m=Math.max(a,c),g=Math.max(o,l),y=Math.min(i,d),b=Math.min(u,h),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(p+f-x)}function VW(n,e,t){const s=Math.exp(e*t*t);return t<=n?s:0}function c1(n,e){return n.score-e.score||n.score===e.score&&e.boxIndex-n.boxIndex}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function WW(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY){const a=E(n,"boxes","nonMaxSuppressionAsync"),o=E(e,"scores","nonMaxSuppressionAsync"),i=nc(a,o,t,s,r);t=i.maxOutputSize,s=i.iouThreshold,r=i.scoreThreshold;const u=await Promise.all([a.data(),o.data()]),c=u[0],l=u[1],{selectedIndices:d}=mw(c,l,t,s,r);return a!==n&&a.dispose(),o!==e&&o.dispose(),On(d,"int32")}const UW=WW;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GW(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY,a=0){const o=E(n,"boxes","nonMaxSuppression"),i=E(e,"scores","nonMaxSuppression"),u=nc(o,i,t,s,r,a);t=u.maxOutputSize,s=u.iouThreshold,r=u.scoreThreshold,a=u.softNmsSigma;const c={boxes:o,scores:i},l={maxOutputSize:t,iouThreshold:s,scoreThreshold:r,softNmsSigma:a},d=M.runKernel($h,c,l);return{selectedIndices:d[0],selectedScores:d[1]}}const HW=L({nonMaxSuppressionWithScore_:GW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function jW(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY,a=0){const o=E(n,"boxes","nonMaxSuppressionAsync"),i=E(e,"scores","nonMaxSuppressionAsync"),u=nc(o,i,t,s,r,a);t=u.maxOutputSize,s=u.iouThreshold,r=u.scoreThreshold,a=u.softNmsSigma;const c=await Promise.all([o.data(),i.data()]),l=c[0],d=c[1],{selectedIndices:h,selectedScores:p}=yw(l,d,t,s,r,a);return o!==n&&o.dispose(),i!==e&&i.dispose(),{selectedIndices:On(h,"int32"),selectedScores:On(p)}}const qW=jW;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KW(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY,a=!1){const o=E(n,"boxes","nonMaxSuppression"),i=E(e,"scores","nonMaxSuppression"),u=nc(o,i,t,s,r,null),c=u.maxOutputSize,l=u.iouThreshold,d=u.scoreThreshold,h={boxes:o,scores:i},p={maxOutputSize:c,iouThreshold:l,scoreThreshold:d,padToMaxOutputSize:a},f=M.runKernel(Th,h,p);return{selectedIndices:f[0],validOutputs:f[1]}}const XW=L({nonMaxSuppressionPadded_:KW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function YW(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY,a=!1){const o=E(n,"boxes","nonMaxSuppressionAsync"),i=E(e,"scores","nonMaxSuppressionAsync"),u=nc(o,i,t,s,r,null),c=u.maxOutputSize,l=u.iouThreshold,d=u.scoreThreshold,[h,p]=await Promise.all([o.data(),i.data()]),{selectedIndices:f,validOutputs:m}=gw(h,p,c,l,d,a);return o!==n&&o.dispose(),i!==e&&i.dispose(),{selectedIndices:On(f,"int32"),validOutputs:Ae(m,"int32")}}const ZW=YW;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JW(n,e,t=!1,s=!1){const r=E(n,"images","resizeBilinear");_(r.rank===3||r.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`),_(e.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`),_(s===!1||t===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let a=r,o=!1;r.rank===3&&(o=!0,a=V(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const i={images:a},u={alignCorners:t,halfPixelCenters:s,size:e},c=M.runKernel(Fl,i,u);return o?V(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const GN=L({resizeBilinear_:JW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QW(n,e,t=!1,s=!1){const r=E(n,"images","resizeNearestNeighbor");_(r.rank===3||r.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`),_(e.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`),_(r.dtype==="float32"||r.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),_(s===!1||t===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let a=r,o=!1;r.rank===3&&(o=!0,a=V(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const i={images:a},u={alignCorners:t,halfPixelCenters:s,size:e},c=M.runKernel(Ol,i,u);return o?V(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const HN=L({resizeNearestNeighbor_:QW});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eU(n,e="binary",t=!1,s=.5){const r=E(n,"image","threshold"),a=.2989,o=.587,i=.114,u=r.shape[0]*r.shape[1];let c=B(On([s]),255),l,d,h,p;if(_(r.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${r.rank}.`),_(r.shape[2]===3||r.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${r.shape[2]}.`),_(r.dtype==="int32"||r.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${r.dtype}.`),_(e==="otsu"||e==="binary",()=>`Method must be binary or otsu, but was ${e}`),r.shape[2]===3){[l,d,h]=bs(r,[1,1,1],-1);const g=B(l,a),y=B(d,o),b=B(h,i);p=se(se(g,y),b)}else p=n;if(e==="otsu"){const g=eN(fe(ew(p),"int32"),Qs([]),256);c=tU(g,u)}const f=t?wi(p,c):Cs(p,c);return fe(B(f,255),"int32")}function tU(n,e){let t=On([-1]),s=On([0]),r=On([0]),a,o,i,u,c,l;for(let d=0;d<n.size-1;d++){a=tt(n,0,d+1),o=tt(n,d+1),c=$e(Ne(a),e),l=$e(Ne(o),e);const h=Ne(B(a,Iu(0,a.size)));i=$e(h,Ne(a));const p=Ql(o.shape,a.size),f=se(Iu(0,o.size),p),m=B(o,f);u=$e(Ne(m),Ne(o));const g=we(i,u),y=we(i,u),b=B(c,l);r=B(B(b,g),y);const x=Cs(r,s);s=Pn(x,r,s),t=Pn(x,On([d]),t)}return t}const nU=L({threshold_:eU});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sU(n,e,t="nearest",s="constant",r=0,a){const o=E(n,"image","transform","float32"),i=E(e,"transforms","transform","float32");_(o.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${o.rank}.`),_(i.rank===2&&(i.shape[0]===o.shape[0]||i.shape[0]===1)&&i.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),_(a==null||a.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${a}.`);const u={image:o,transforms:i},c={interpolation:t,fillMode:s,fillValue:r,outputShape:a};return M.runKernel(Hh,u,c)}const rU=L({transform_:sU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aU(n,e,t){const s=E(n,"a","bandPart");_(s.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`);const r=s.shape,[a,o]=s.shape.slice(-2);let i,u;typeof e=="number"?(_(e%1===0,()=>`bandPart(): numLower must be an integer, got ${e}.`),_(e<=a,()=>`bandPart(): numLower (${e}) must not be greater than the number of rows (${a}).`),i=E(e<0?a:e,"numLower","bandPart")):(_(e.dtype==="int32",()=>"bandPart(): numLower's dtype must be an int32."),i=Pn(qc(e,0),a,ni(e,a))),typeof t=="number"?(_(t%1===0,()=>`bandPart(): numUpper must be an integer, got ${t}.`),_(t<=o,()=>`bandPart(): numUpper (${t}) must not be greater than the number of columns (${o}).`),u=E(t<0?o:t,"numUpper","bandPart")):(_(t.dtype==="int32",()=>"bandPart(): numUpper's dtype must be an int32."),u=Pn(qc(t,0),o,ni(t,o)));const c=V(Iu(0,a,1,"int32"),[-1,1]),l=Iu(0,o,1,"int32"),d=we(c,l),h=Xr(wi(d,i),wo(d,Dt(u))),p=un([a,o],s.dtype);return V(Ss(rr(V(s,[-1,a,o])).map(f=>Pn(h,f,p))),r)}const oU=L({bandPart_:aU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iU(n){let e;if(Array.isArray(n)){e=!1,_(n!=null&&n.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const r=n[0].shape[0];for(let a=1;a<n.length;++a)_(n[a].shape[0]===r,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${n[a].shape[0]} vs. ${r})`)}else e=!0,n=bs(n,n.shape[0],0).map(r=>Ii(r,[0]));_(n.length<=n[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${n.length}) exceeds number of dimensions (${n[0].shape[0]}).`);const t=[],s=n;for(let r=0;r<n.length;++r)t.push(M.tidy(()=>{let a=s[r];if(r>0)for(let o=0;o<r;++o){const i=B(Ne(B(t[o],a)),t[o]);a=we(a,i)}return $e(a,Qh(a,"euclidean"))}));return e?Ss(t,0):t}const uU=L({gramSchmidt_:iU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lU(n,e=!1){if(_(n.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${n.rank}`),n.rank===2)return d1(n,e);{const t=n.shape.slice(0,n.shape.length-2).reduce((u,c)=>u*c),s=rr(V(n,[t,n.shape[n.shape.length-2],n.shape[n.shape.length-1]]),0),r=[],a=[];s.forEach(u=>{const[c,l]=d1(u,e);r.push(c),a.push(l)});const o=V(Ss(r,0),n.shape),i=V(Ss(a,0),n.shape);return[o,i]}}function d1(n,e=!1){return M.tidy(()=>{_(n.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${n.shape.length}D Tensor.`);const t=n.shape[0],s=n.shape[1];let r=jx(t),a=ya(n);const o=Go([[1]],[1,1]);let i=ya(o);const u=t>=s?s:t;for(let c=0;c<u;++c){const l=a,d=i,h=r;[i,a,r]=M.tidy(()=>{const p=tt(a,[c,c],[t-c,1]),f=Qh(p),m=tt(a,[c,c],[1,1]),g=Pn(Cs(m,0),Go([[-1]]),Go([[1]])),y=we(m,B(g,f)),b=$e(p,y);b.shape[0]===1?i=ya(o):i=tn([o,tt(b,[1,0],[b.shape[0]-1,b.shape[1]])],0);const x=Dt($e(Ke(g,y),f)),w=tt(a,[c,0],[t-c,s]),v=B(x,i),S=nt(i);if(c===0)a=we(w,Ke(v,Ke(S,w)));else{const T=we(w,Ke(v,Ke(S,w)));a=tn([tt(a,[0,0],[c,s]),T],0)}const N=nt(v),$=tt(r,[0,c],[t,r.shape[1]-c]);if(c===0)r=we($,Ke(Ke($,i),N));else{const T=we($,Ke(Ke($,i),N));r=tn([tt(r,[0,0],[t,c]),T],1)}return[i,a,r]}),Xe([l,d,h])}return!e&&t>s&&(r=tt(r,[0,0],[t,s]),a=tt(a,[0,0],[s,s])),[r,a]})}const cU=L({qr_:lU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var ns;(function(n){n[n.NONE=0]="NONE",n[n.MEAN=1]="MEAN",n[n.SUM=2]="SUM",n[n.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(ns||(ns={}));function dU(n,e,t=ns.SUM_BY_NONZERO_WEIGHTS){const s=E(n,"losses","computeWeightedLoss");let r=null;e!=null&&(r=E(e,"weights","computeWeightedLoss"));const a=r==null?s:B(s,r);if(t===ns.NONE)return a;if(t===ns.SUM)return Ne(a);if(t===ns.MEAN){if(r==null)return Wt(a);{const o=s.size/r.size,i=$e(Ne(a),Ne(r));return o>1?$e(i,Ae(o)):i}}if(t===ns.SUM_BY_NONZERO_WEIGHTS){if(r==null)return $e(Ne(a),Ae(s.size));{const o=B(r,gs(s.shape)),i=fe(Ne(vu(o,Ae(0))),"float32");return $e(Ne(a),i)}}throw Error(`Unknown reduction: ${t}`)}const _a=L({computeWeightedLoss_:dU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hU(n,e,t,s=ns.SUM_BY_NONZERO_WEIGHTS){const r=E(n,"labels","absoluteDifference"),a=E(e,"predictions","absoluteDifference");let o=null;t!=null&&(o=E(t,"weights","absoluteDifference")),us(r.shape,a.shape,"Error in absoluteDifference: ");const i=an(we(r,a));return _a(i,o,s)}const pU=L({absoluteDifference_:hU});function fU(n,e,t,s,r=ns.SUM_BY_NONZERO_WEIGHTS){const a=E(n,"labels","cosineDistance"),o=E(e,"predictions","cosineDistance");let i=null;s!=null&&(i=E(s,"weights","cosineDistance")),us(a.shape,o.shape,"Error in cosineDistance: ");const u=Ae(1),c=we(u,Ne(B(a,o),t,!0));return _a(c,i,r)}const mU=L({cosineDistance_:fU});function gU(n,e,t,s=ns.SUM_BY_NONZERO_WEIGHTS){let r=E(n,"labels","hingeLoss");const a=E(e,"predictions","hingeLoss");let o=null;t!=null&&(o=E(t,"weights","hingeLoss")),us(r.shape,a.shape,"Error in hingeLoss: ");const i=Ae(1);r=we(B(Ae(2),r),i);const u=ea(we(i,B(r,a)));return _a(u,o,s)}const yU=L({hingeLoss_:gU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bU(n,e,t,s=1,r=ns.SUM_BY_NONZERO_WEIGHTS){const a=E(n,"labels","huberLoss"),o=E(e,"predictions","huberLoss");let i=null;t!=null&&(i=E(t,"weights","huberLoss")),us(a.shape,o.shape,"Error in huberLoss: ");const u=Ae(s),c=an(we(o,a)),l=ni(c,u),d=we(c,l),h=se(B(Ae(.5),kt(l)),B(u,d));return _a(h,i,r)}const xU=L({huberLoss_:bU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wU(n,e,t,s=1e-7,r=ns.SUM_BY_NONZERO_WEIGHTS){const a=E(n,"labels","logLoss"),o=E(e,"predictions","logLoss");let i=null;t!=null&&(i=E(t,"weights","logLoss")),us(a.shape,o.shape,"Error in logLoss: ");const u=Ae(1),c=Ae(s),l=Dt(B(a,Ps(se(o,c)))),d=B(we(u,a),Ps(se(we(u,o),c))),h=we(l,d);return _a(h,i,r)}const vU=L({logLoss_:wU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IU(n,e,t,s=ns.SUM_BY_NONZERO_WEIGHTS){const r=E(n,"labels","meanSquaredError"),a=E(e,"predictions","meanSquaredError");let o=null;t!=null&&(o=E(t,"weights","meanSquaredError")),us(r.shape,a.shape,"Error in meanSquaredError: ");const i=uw(r,a);return _a(i,o,s)}const SU=L({meanSquaredError_:IU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kU(n,e){const t=E(n,"labels","sigmoidCrossEntropyWithLogits"),s=E(e,"logits","sigmoidCrossEntropyWithLogits");us(t.shape,s.shape,"Error in sigmoidCrossEntropyWithLogits: ");const r=ea(s),a=B(s,t),o=Jm(Is(Dt(an(s))));return se(we(r,a),o)}function NU(n,e,t,s=0,r=ns.SUM_BY_NONZERO_WEIGHTS){let a=E(n,"multiClassLabels","sigmoidCrossEntropy");const o=E(e,"logits","sigmoidCrossEntropy");let i=null;if(t!=null&&(i=E(t,"weights","sigmoidCrossEntropy")),us(a.shape,o.shape,"Error in sigmoidCrossEntropy: "),s>0){const c=Ae(s),l=Ae(1),d=Ae(.5);a=se(B(a,we(l,c)),B(d,c))}const u=kU(a,o);return _a(u,i,r)}const CU=L({sigmoidCrossEntropy_:NU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TU(n,e,t=-1){if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${t}`);return ka((r,a,o)=>{const u=Qm(a,[t],!0),c=we(fe(a,"float32"),u);o([r,c]);const l=Dt(B(c,r));return{value:Ne(l,[t]),gradFunc:(p,f)=>{const[m,g]=f,y=wt(p.shape,[t]);return[B(V(p,y),we(fe(m,"float32"),Is(g))),B(V(p,y),we(Is(g),fe(m,"float32")))]}}})(n,e)}function $U(n,e,t,s=0,r=ns.SUM_BY_NONZERO_WEIGHTS){let a=E(n,"onehotLabels","softmaxCrossEntropy");const o=E(e,"logits","softmaxCrossEntropy");let i=null;if(t!=null&&(i=E(t,"weights","softmaxCrossEntropy")),us(a.shape,o.shape,"Error in softmaxCrossEntropy: "),s>0){const c=Ae(s),l=Ae(1),d=Ae(a.shape[1]);a=se(B(a,we(l,c)),$e(c,d))}const u=TU(a,o);return _a(u,i,r)}const _U=L({softmaxCrossEntropy_:$U});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EU(n,e,t,s){const r=E(n,"indices","sparseFillEmptyRows","int32"),a=E(e,"values","sparseFillEmptyRows"),o=E(t,"denseShape","sparseFillEmptyRows","int32"),i=E(s,"defaultValue","sparseFillEmptyRows",a.dtype);if(r.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${r.shape}`);if(a.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${a.shape}`);if(o.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${o.shape}`);if(i.rank!==0)throw new Error(`Default value should be a scalar but received shape ${i.shape}`);const u={indices:r,values:a,denseShape:o,defaultValue:i},c=M.runKernel(Pm,u);return{outputIndices:c[0],outputValues:c[1],emptyRowIndicator:c[2],reverseIndexMap:c[3]}}const AU=L({sparseFillEmptyRows_:EU});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DU(n,e,t){const s=E(n,"inputIndices","sparseReshape","int32"),r=E(e,"inputShape","sparseReshape","int32"),a=E(t,"newShape","sparseReshape","int32");if(s.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${s.shape}`);if(r.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${r.shape}`);if(a.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${a.shape}`);const o={inputIndices:s,inputShape:r,newShape:a},i=M.runKernel(Vh,o);return{outputIndices:i[0],outputShape:i[1]}}const RU=L({sparseReshape_:DU});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OU(n,e,t){const s=E(n,"data","sparseSegmentMean"),r=E(e,"indices","sparseSegmentMean","int32"),a=E(t,"segmentIds","sparseSegmentMean","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${r.shape}`);if(a.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${a.shape}`);const o={data:s,indices:r,segmentIds:a};return M.runKernel(Lm,o)}const FU=L({sparseSegmentMean_:OU});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PU(n,e,t){const s=E(n,"data","sparseSegmentSum"),r=E(e,"indices","sparseSegmentSum","int32"),a=E(t,"segmentIds","sparseSegmentSum","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${r.shape}`);if(a.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${a.shape}`);const o={data:s,indices:r,segmentIds:a};return M.runKernel(Mm,o)}const LU=L({sparseSegmentSum_:PU});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MU(n,e,t,s,r,a,o,i){const u=E(n,"data","stringNGrams","string");if(u.dtype!=="string")throw new Error("Data must be of datatype string");if(u.shape.length!==1)throw new Error(`Data must be a vector, saw: ${u.shape}`);const c=E(e,"dataSplits","stringNGrams");if(c.dtype!=="int32")throw new Error("Data splits must be of datatype int32");const l={separator:t,nGramWidths:s,leftPad:r,rightPad:a,padWidth:o,preserveShortSequences:i},d={data:u,dataSplits:c},h=M.runKernel(Vm,d,l);return{nGrams:h[0],nGramsSplits:h[1]}}const BU=L({stringNGrams_:MU});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zU(n,e,t=!0){const s=E(n,"input","stringSplit","string"),r=E(e,"delimiter","stringSplit","string");if(s.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${s.shape}`);if(r.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${r.shape}`);const a={skipEmpty:t},o={input:s,delimiter:r},i=M.runKernel(Wm,o,a);return{indices:i[0],values:i[1],shape:i[2]}}const VU=L({stringSplit_:zU});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WU(n,e){const t=E(n,"input","stringToHashBucketFast","string"),s={numBuckets:e};if(e<=0)throw new Error("Number of buckets must be at least 1");const r={input:t};return M.runKernel(Um,r,s)}const UU=L({stringToHashBucketFast_:WU});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GU(n,e,t,s=!0){const r=E(n,"input","staticRegexReplace","string"),a={pattern:e,rewrite:t,replaceGlobal:s};return M.runKernel(zm,{x:r},a)}const HU=L({staticRegexReplace_:GU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jU={fft:lg,ifft:Yc,rfft:cg,irfft:iw},qU={hammingWindow:xW,hannWindow:WN,frame:UN,stft:SW},Mr={flipLeftRight:TW,grayscaleToRGB:_W,resizeNearestNeighbor:HN,resizeBilinear:GN,rgbToGrayscale:AW,rotateWithOffset:RW,cropAndResize:NW,nonMaxSuppression:FW,nonMaxSuppressionAsync:UW,nonMaxSuppressionWithScore:HW,nonMaxSuppressionWithScoreAsync:qW,nonMaxSuppressionPadded:XW,nonMaxSuppressionPaddedAsync:ZW,threshold:nU,transform:rU},jN={bandPart:oU,gramSchmidt:uU,qr:cU},KU={absoluteDifference:pU,computeWeightedLoss:_a,cosineDistance:mU,hingeLoss:yU,huberLoss:xU,logLoss:vU,meanSquaredError:SU,sigmoidCrossEntropy:CU,softmaxCrossEntropy:_U},XU={sparseFillEmptyRows:AU,sparseReshape:RU,sparseSegmentMean:FU,sparseSegmentSum:LU},YU={stringNGrams:BU,stringSplit:VU,stringToHashBucketFast:UU,staticRegexReplace:HU};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZU=new Map,JU=new Map;class sc{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Ks{constructor(){this.classNameMap={}}static getMap(){return Ks.instance==null&&(Ks.instance=new Ks),Ks.instance}static register(e){Ks.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function re(n,e,t){_(n.className!=null,()=>"Class being registered does not have the static className property defined."),_(typeof n.className=="string",()=>"className is required to be a string, but got type "+typeof n.className),_(n.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),typeof e>"u"&&(e="Custom"),typeof t>"u"&&(t=n.className);const s=t,r=e+">"+s;return Ks.register(n),ZU.set(r,n),JU.set(n,r),n}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Io extends sc{minimize(e,t=!1,s){const{value:r,grads:a}=this.computeGradients(e,s);if(s!=null){const o=s.map(i=>({name:i.name,tensor:a[i.name]}));this.applyGradients(o)}else this.applyGradients(a);return Xe(a),t?r:(r.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return IB(e,t)}dispose(){this.iterations_!=null&&Xe(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:Ae(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Io,Symbol.hasInstance,{value:n=>n.minimize!=null&&n.computeGradients!=null&&n.applyGradients!=null});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qN extends Io{static get className(){return"Adadelta"}constructor(e,t,s=null){super(),this.learningRate=e,this.rho=t,this.epsilon=s,this.accumulatedGrads=[],this.accumulatedUpdates=[],s==null&&(this.epsilon=M.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const a=M.registeredVariables[s],o=!1;this.accumulatedGrads[r]==null&&(this.accumulatedGrads[r]={originalName:`${s}/accum_grad`,variable:j(()=>st(a).variable(o))}),this.accumulatedUpdates[r]==null&&(this.accumulatedUpdates[r]={originalName:`${s}/accum_var`,variable:j(()=>st(a).variable(o))});const i=Array.isArray(e)?e[r].tensor:e[s];if(i==null)return;const u=this.accumulatedGrads[r].variable,c=this.accumulatedUpdates[r].variable;j(()=>{const l=se(B(u,this.rho),B(kt(i),1-this.rho)),d=B($e(Tn(se(c,this.epsilon)),Tn(se(u,this.epsilon))),i),h=se(B(c,this.rho),B(kt(d),1-this.rho));u.assign(l),c.assign(h);const p=se(B(d,-this.learningRate),a);a.assign(p)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(Xe(this.accumulatedGrads.map(e=>e.variable)),Xe(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=e.length/2,s=!1;this.accumulatedGrads=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedUpdates=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class KN extends Io{static get className(){return"Adagrad"}constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const a=M.registeredVariables[s];this.accumulatedGrads[r]==null&&(this.accumulatedGrads[r]={originalName:`${s}/accumulator`,variable:j(()=>Ql(a.shape,this.initialAccumulatorValue).variable(!1))});const o=Array.isArray(e)?e[r].tensor:e[s];if(o==null)return;const i=this.accumulatedGrads[r].variable;j(()=>{const u=se(i,kt(o));i.assign(u);const c=se(B($e(o,Tn(se(u,M.backend.epsilon()))),-this.learningRate),a);a.assign(c)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&Xe(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulatedGrads=e.map(s=>({originalName:s.name,variable:s.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class XN extends Io{static get className(){return"Adam"}constructor(e,t,s,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=s,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],j(()=>{this.accBeta1=Ae(t).variable(),this.accBeta2=Ae(s).variable()}),r==null&&(this.epsilon=M.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(s=>s.name):Object.keys(e);j(()=>{const s=we(1,this.accBeta1),r=we(1,this.accBeta2);t.forEach((a,o)=>{const i=M.registeredVariables[a],u=!1;this.accumulatedFirstMoment[o]==null&&(this.accumulatedFirstMoment[o]={originalName:`${a}/m`,variable:j(()=>st(i).variable(u))}),this.accumulatedSecondMoment[o]==null&&(this.accumulatedSecondMoment[o]={originalName:`${a}/v`,variable:j(()=>st(i).variable(u))});const c=Array.isArray(e)?e[o].tensor:e[a];if(c==null)return;const l=this.accumulatedFirstMoment[o].variable,d=this.accumulatedSecondMoment[o].variable,h=se(B(l,this.beta1),B(c,1-this.beta1)),p=se(B(d,this.beta2),B(kt(c),1-this.beta2)),f=$e(h,s),m=$e(p,r);l.assign(h),d.assign(p);const g=se(B($e(f,se(Tn(m),this.epsilon)),-this.learningRate),i);i.assign(g)}),this.accBeta1.assign(B(this.accBeta1,this.beta1)),this.accBeta2.assign(B(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&Xe(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&Xe(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),j(()=>{this.accBeta1.assign(Sa(this.beta1,this.iterations_+1)),this.accBeta2.assign(Sa(this.beta2,this.iterations_+1))});const t=e.length/2,s=!1;this.accumulatedFirstMoment=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class YN extends Io{static get className(){return"Adamax"}constructor(e,t,s,r=null,a=0){super(),this.learningRate=e,this.beta1=t,this.beta2=s,this.epsilon=r,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],j(()=>{this.iteration=Ae(0).variable(),this.accBeta1=Ae(t).variable()}),r==null&&(this.epsilon=M.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(s=>s.name):Object.keys(e);j(()=>{const s=we(1,this.accBeta1),r=$e(-this.learningRate,se(B(this.iteration,this.decay),1));t.forEach((a,o)=>{const i=M.registeredVariables[a],u=!1;this.accumulatedFirstMoment[o]==null&&(this.accumulatedFirstMoment[o]={originalName:`${a}/m`,variable:st(i).variable(u)}),this.accumulatedWeightedInfNorm[o]==null&&(this.accumulatedWeightedInfNorm[o]={originalName:`${a}/v`,variable:st(i).variable(u)});const c=Array.isArray(e)?e[o].tensor:e[a];if(c==null)return;const l=this.accumulatedFirstMoment[o].variable,d=this.accumulatedWeightedInfNorm[o].variable,h=se(B(l,this.beta1),B(c,1-this.beta1)),p=B(d,this.beta2),f=an(c),m=$a(p,f);l.assign(h),d.assign(m);const g=se(B($e(r,s),$e(h,se(m,this.epsilon))),i);i.assign(g)}),this.iteration.assign(se(this.iteration,1)),this.accBeta1.assign(B(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&Xe(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&Xe(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xw extends Io{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const a=Array.isArray(e)?e[r].tensor:e[s];if(a==null)return;const o=M.registeredVariables[s];j(()=>{const i=se(B(this.c,a),o);o.assign(i)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=bn(Ae(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ZN extends xw{static get className(){return"Momentum"}constructor(e,t,s=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=s,this.accumulations=[],this.m=Ae(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const a=M.registeredVariables[s];this.accumulations[r]==null&&(this.accumulations[r]={originalName:`${s}/momentum`,variable:j(()=>st(a).variable(!1))});const o=this.accumulations[r].variable,i=Array.isArray(e)?e[r].tensor:e[s];i!=null&&j(()=>{let u;const c=se(B(this.m,o),i);this.useNesterov?u=se(B(this.c,se(i,B(c,this.m))),a):u=se(B(this.c,c),a),o.assign(c),a.assign(u)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&Xe(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulations=e.map(s=>({originalName:s.name,variable:s.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class JN extends Io{static get className(){return"RMSProp"}constructor(e,t=.9,s=0,r=null,a=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=s,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,r==null&&(this.epsilon=M.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const a=M.registeredVariables[s],o=!1;this.accumulatedMeanSquares[r]==null&&(this.accumulatedMeanSquares[r]={originalName:`${s}/rms`,variable:j(()=>st(a).variable(o))}),this.accumulatedMoments[r]==null&&(this.accumulatedMoments[r]={originalName:`${s}/momentum`,variable:j(()=>st(a).variable(o))}),this.accumulatedMeanGrads[r]==null&&this.centered&&(this.accumulatedMeanGrads[r]={originalName:`${s}/mg`,variable:j(()=>st(a).variable(o))});const i=Array.isArray(e)?e[r].tensor:e[s];if(i==null)return;const u=this.accumulatedMeanSquares[r].variable,c=this.accumulatedMoments[r].variable;j(()=>{const l=se(B(u,this.decay),B(kt(i),1-this.decay));if(this.centered){const d=this.accumulatedMeanGrads[r].variable,h=se(B(d,this.decay),B(i,1-this.decay)),p=$e(B(i,this.learningRate),Tn(we(l,se(kt(h),this.epsilon)))),f=se(B(c,this.momentum),p);u.assign(l),d.assign(h),c.assign(f);const m=we(a,f);a.assign(m)}else{const d=se(B(u,this.decay),B(kt(i),1-this.decay)),h=se(B(c,this.momentum),$e(B(i,this.learningRate),Tn(se(d,this.epsilon))));u.assign(d),c.assign(h);const p=we(a,h);a.assign(p)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&Xe(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&Xe(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&Xe(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,s=!1;this.accumulatedMeanSquares=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedMoments=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QU=[qN,KN,XN,YN,ZN,JN,xw];function e4(){for(const n of QU)re(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const t4="model",n4=".json",s4=".weights.bin";function h1(n){return new Promise(e=>setTimeout(e)).then(n)}class si{constructor(e){if(!Y().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(si.URL_SCHEME)&&(e=e.slice(si.URL_SCHEME.length)),(e==null||e.length===0)&&(e=t4),this.modelJsonFileName=e+n4,this.weightDataFileName=e+s4}async save(e){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=Nr.join(e.weightData),s=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const r=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],a=Ak(e,r),o=window.URL.createObjectURL(new Blob([JSON.stringify(a)],{type:"application/json"})),i=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(i.download=this.modelJsonFileName,i.href=o,await h1(()=>i.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){const u=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;u.download=this.weightDataFileName,u.href=s,await h1(()=>u.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Xh(e)}}}}si.URL_SCHEME="downloads://";class r4{constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{const s=new FileReader;s.onload=r=>{const a=JSON.parse(r.target.result),o=a.modelTopology;if(o==null){t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(a.weightsManifest==null){t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){e({modelTopology:o});return}const u=Fx(a,c=>this.loadWeights(c));e(u)},s.onerror=r=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),s.readAsText(this.jsonFile)})}loadWeights(e){const t=[],s=[];for(const o of e)t.push(...o.weights),s.push(...o.paths);const r=this.checkManifestAndWeightFiles(e),a=s.map(o=>this.loadWeightsFile(o,r[o]));return Promise.all(a).then(o=>[t,o])}loadWeightsFile(e,t){return new Promise((s,r)=>{const a=new FileReader;a.onload=o=>{const i=o.target.result;s(i)},a.onerror=o=>r(`Failed to weights data from file of path '${e}'.`),a.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){const t=[],s=this.weightsFiles.map(a=>t1(a.name)),r={};for(const a of e)a.paths.forEach(o=>{const i=t1(o);if(t.indexOf(i)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${i}'`);if(t.push(i),s.indexOf(i)===-1)throw new Error(`Weight file with basename '${i}' is not provided.`);r[o]=this.weightsFiles[s.indexOf(i)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}const a4=n=>Y().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(si.URL_SCHEME)?o4(n.slice(si.URL_SCHEME.length)):null;Mt.registerSaveRouter(a4);function o4(n="model"){return new si(n)}function i4(n){return new r4(n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p1(n,e,t,s){o(n),t=t??0,s=s??1,i(t,s);let r=0;const a=u=>(u.then(c=>{const l=t+ ++r/n.length*(s-t);return e(l),c}),u);function o(u){_(u!=null&&Array.isArray(u)&&u.length>0,()=>"promises must be a none empty array")}function i(u,c){_(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${u}`),_(c>=0&&c<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${c}`),_(c>=u,()=>`startFraction must be no more than endFraction, but got startFraction ${u} and endFraction ${c}`)}return Promise.all(n.map(a))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function QN(n,e){e==null&&(e={});const t=e.fetchFunc==null?Y().platform.fetch:e.fetchFunc,s=n.map(d=>t(d,e.requestInit,{isBinary:!0})),i=(e.onProgress==null?await Promise.all(s):await p1(s,e.onProgress,0,.5)).map(d=>d.arrayBuffer());return e.onProgress==null?await Promise.all(i):await p1(i,e.onProgress,.5,1)}function u4(n,e){var t;const s=e.fetchFunc==null?Y().platform.fetch:e.fetchFunc;let r=0,a;return(t=e.onProgress)===null||t===void 0||t.call(e,0),new ReadableStream({pull:async o=>{for(var i;r<n.length;){a||(a=(await s(n[r],e.requestInit,{isBinary:!0})).body.getReader());const{done:u,value:c}=await a.read();if(u){r++,a=void 0,(i=e.onProgress)===null||i===void 0||i.call(e,r/n.length);continue}o.enqueue(c);return}o.close()}})}async function l4(n,e="",t,s){return eC(o=>QN(o,{requestInit:s}))(n,e,t)}function eC(n){return async(e,t="",s)=>{const r=e.map(()=>!1),a={},o=s!=null?s.map(()=>!1):[],i=[];if(e.forEach((p,f)=>{let m=0;p.weights.forEach(g=>{const y="quantization"in g?g.quantization.dtype:g.dtype,b=Zo[y]*U(g.shape),x=()=>{r[f]=!0,a[f]==null&&(a[f]=[]),a[f].push({manifestEntry:g,groupOffset:m,sizeBytes:b})};s!=null?s.forEach((w,v)=>{w===g.name&&(x(),o[v]=!0)}):x(),i.push(g.name),m+=b})}),!o.every(p=>p)){const p=s.filter((f,m)=>!o[m]);throw new Error(`Could not find weights in manifest with names: ${p.join(", ")}. 
Manifest JSON has weights with names: ${i.join(", ")}.`)}const u=r.reduce((p,f,m)=>(f&&p.push(m),p),[]),c=[];u.forEach(p=>{e[p].paths.forEach(f=>{const m=t+(t.endsWith("/")?"":"/")+f;c.push(m)})});const l=await n(c),d={};let h=0;return u.forEach(p=>{const f=e[p].paths.length,m=new Nr(l.slice(h,h+f));a[p].forEach(y=>{const b=m.slice(y.groupOffset,y.groupOffset+y.sizeBytes),x=Tk(b,[y.manifestEntry]);for(const w in x)d[w]=x[w]}),h+=f}),d}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c4="application/octet-stream",d4="application/json";class ww{constructor(e,t){if(this.DEFAULT_METHOD="POST",t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.weightUrlConverter=t.weightUrlConverter,t.fetchFunc!=null?(_(typeof t.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=Y().platform.fetch,_(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&_(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{},this.loadOptions=t}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const s=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r=Ak(e,s);if(t.body.append("model.json",new Blob([JSON.stringify(r)],{type:d4}),"model.json"),e.weightData!=null){const o=Nr.join(e.weightData);t.body.append("model.weights.bin",new Blob([o],{type:c4}),"model.weights.bin")}const a=await this.fetch(this.path,t);if(a.ok)return{modelArtifactsInfo:Xh(e),responses:[a]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${a.status}.`)}async loadModelJSON(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch{let o=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?o+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":o+=" Please make sure the server is serving valid JSON for this request.",new Error(o)}const s=t.modelTopology,r=t.weightsManifest;if(s==null&&r==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return t}async load(){if(this.loadOptions.streamWeights)return this.loadStream();const e=await this.loadModelJSON();return Fx(e,t=>this.loadWeights(t))}async loadStream(){const e=await this.loadModelJSON(),t=await this.getWeightUrls(e.weightsManifest),s=nb(e.weightsManifest),r=()=>u4(t,this.loadOptions);return Object.assign(Object.assign({},e),{weightSpecs:s,getWeightStream:r})}async getWeightUrls(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[s,r]=h4(t),a=this.weightPathPrefix||s,o=[],i=[];for(const u of e)for(const c of u.paths)this.weightUrlConverter!=null?i.push(this.weightUrlConverter(c)):o.push(a+c+r);return this.weightUrlConverter&&o.push(...await Promise.all(i)),o}async loadWeights(e){const t=await this.getWeightUrls(e),s=nb(e),r=await QN(t,this.loadOptions);return[s,r]}}ww.URL_SCHEME_REGEX=/^https?:\/\//;function h4(n){const e=n.lastIndexOf("/"),t=n.lastIndexOf("?"),s=n.substring(0,e),r=t>e?n.substring(t):"";return[s+"/",r]}function lb(n){return n.match(ww.URL_SCHEME_REGEX)!=null}const tC=(n,e)=>{if(typeof fetch>"u"&&(e==null||e.fetchFunc==null))return null;{let t=!0;if(Array.isArray(n)?t=n.every(s=>lb(s)):t=lb(n),t)return vw(n,e)}return null};Mt.registerSaveRouter(tC);Mt.registerLoadRouter(tC);function vw(n,e){return new ww(n,e)}function p4(n,e){return vw(n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class py{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class nC{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class f4{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function m4(n,e,t,s){const r=arguments;return new f4(sC(...r))}function sC(n,e,t,s){return arguments.length===1?n.modelTopology!=null||n.weightSpecs!=null?new py(n):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new py({modelTopology:n})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new py({modelTopology:n,weightSpecs:e,weightData:t,trainingConfig:s}))}function g4(n){return new nC(n)}function y4(n){return new nC(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rC=Object.freeze(Object.defineProperty({__proto__:null,CompositeArrayBuffer:Nr,browserFiles:i4,browserHTTPRequest:p4,concatenateArrayBuffers:Ek,copyModel:y3,decodeWeights:Tk,decodeWeightsStream:_k,encodeWeights:tb,fromMemory:m4,fromMemorySync:sC,getLoadHandlers:s3,getModelArtifactsForJSON:Fx,getModelArtifactsForJSONSync:Dk,getModelArtifactsInfoForJSON:Xh,getSaveHandlers:Rk,getWeightSpecs:nb,http:vw,isHTTPScheme:lb,listModels:m3,loadWeights:l4,moveModel:b3,registerLoadRouter:n3,registerSaveRouter:t3,removeModel:g3,weightsLoaderFactory:eC,withSaveHandler:g4,withSaveHandlerSync:y4},Symbol.toStringTag,{value:"Module"}));function mg(n,e){const t=n.shape.length,s=e.shape.length;if(t<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${t}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if(e.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[s-1]>t)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[s-1]} vs. ${t}`);if(U(n.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${n.shape}.`);const r=e.shape,a=r[r.length-1];let o=1;for(let d=0;d<r.length-1;++d)o*=r[d];const i=n.shape,u=r.slice();u.pop();let c=1;for(let d=a;d<t;++d)c*=i[d],u.push(i[d]);const l=[...ve(n.shape).map(d=>d/c),1].slice(0,a);return[u,o,c,l]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cb=-2,b4=-1;function Iw(n,e,t){const s=n.shape.length;_(s===e.length,()=>`Error in slice${s}D: Length of begin ${e} must match the rank of the array (${s}).`),_(s===t.length,()=>`Error in slice${s}D: Length of size ${t} must match the rank of the array (${s}).`);for(let r=0;r<s;++r)_(e[r]+t[r]<=n.shape[r],()=>`Error in slice${s}D: begin[${r}] + size[${r}] (${e[r]+t[r]}) would overflow input.shape[${r}] (${n.shape[r]})`)}function x4(n){const e=[];let t=0;for(;n>0;)n&1&&e.push(t),n/=2,t++;return e}function gg(n,e,t){const s=[];for(let r=0;r<n.length;r++)s[r]=Math.ceil((e[r]-n[r])/t[r]);return s}function aC(n,e,t,s){const r=[...n];for(let a=r.length;a<s.length;a++)r.push(1);for(let a=0;a<t;a++)a===0?r[e]=1:(r.splice(e,0,1),r.pop());return r}function oC(n,e,t){return t<=n?t:t-(e-1)}function iC(n,e){const t=[];for(let s=0;s<n;s++)t.push(e+s);return t}function w4(n,e,t,s,r,a,o,i,u){const c=n.length;let l=new Array(c),d=new Array(c),h=new Array(c);if(e.length&&t>0){const p=e[0],f=t+1;l=uC(o,p,f,s,n),d=lC(i,p,f,r,n),h=aC(a,p,f,n)}else for(let p=0;p<c;p++)l[p]=dC(o,s,a,n,p,u),d[p]=hC(i,r,a,n,p,u),h[p]=cC(a,p,u);return{begin:l,end:d,strides:h}}function uC(n,e,t,s,r){const a=[...r],o=iC(t,e);for(let i=0;i<a.length;i++)if(o.indexOf(i)>-1)a[i]=0;else{const u=oC(e,t,i);let c=s[u];n&1<<u&&(c=0),a[i]=c}return a}function lC(n,e,t,s,r){const a=[...r],o=iC(t,e);for(let i=0;i<a.length;i++)if(o.indexOf(i)>-1)a[i]=Number.MAX_SAFE_INTEGER;else{const u=oC(e,t,i);let c=s[u];n&1<<u&&(c=Number.MAX_SAFE_INTEGER),a[i]=c}for(let i=0;i<a.length;i++){const u=r[i];a[i]<0&&(a[i]+=u),a[i]=Xo(0,a[i],r[i])}return a}function cC(n,e,t){let s=n[e];return(t&1<<e||s==null)&&(s=1),s}function dC(n,e,t,s,r,a){let o=e[r];const i=t[r]||1;(n&1<<r||a&1<<r||o==null)&&(i>0?o=Number.MIN_SAFE_INTEGER:o=Number.MAX_SAFE_INTEGER);const u=s[r];return o<0&&(o+=u),o=Xo(0,o,u-1),o}function hC(n,e,t,s,r,a){let o=e[r];const i=t[r]||1;(n&1<<r||a&1<<r||o==null)&&(i>0?o=Number.MAX_SAFE_INTEGER:o=Number.MIN_SAFE_INTEGER);const u=s[r];return o<0&&(o+=u),i>0?o=Xo(0,o,u):o=Xo(-1,o,u-1),o}function yg(n,e,t){let s=t.length;for(let r=0;r<t.length;r++)if(t[r]>1){s=r;break}for(let r=s+1;r<t.length;r++)if(e[r]>0||t[r]!==n[r])return!1;return!0}function bg(n,e){let t=n.length>0?n[n.length-1]:1;for(let s=0;s<n.length-1;s++)t+=n[s]*e[s];return t}function np(n,e,t){let s;const r=n.shape.length;typeof e=="number"?s=[e,...new Array(r-1).fill(0)]:e.length<r?s=e.concat(new Array(r-e.length).fill(0)):s=e.slice(),s.forEach(o=>{_(o!==-1,()=>"slice() does not support negative begin indexing.")});let a;return t==null?a=new Array(r).fill(-1):typeof t=="number"?a=[t,...new Array(r-1).fill(-1)]:t.length<r?a=t.concat(new Array(r-t.length).fill(-1)):a=t,a=a.map((o,i)=>o>=0?o:(_(o===-1,()=>`Negative size values should be exactly -1 but got ${o} for the slice() size at index ${i}.`),n.shape[i]-s[i])),[s,a]}function xg(n,e,t,s,r,a,o,i,u){let c;if(s==null?(c=new Array(e.length),c.fill(1)):c=s,o!=null&&(o&o-1)!==0)throw new Error("Multiple ellipses in slice is not allowed.");let l=!1;const d={dims:c.length,numAddAxisAfterEllipsis:0,begin:e.slice(),end:t.slice(),strides:c.slice(),beginMask:r,endMask:a,ellipsisMask:o,newAxisMask:i,shrinkAxisMask:u};for(let x=0;x<d.dims;x++)l&&(1<<x&i)!==0&&d.numAddAxisAfterEllipsis++,1<<x&o&&(l=!0);l||(d.ellipsisMask|=1<<d.dims,d.dims++);const h={dims:n.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};v4(d,h);let p=!0,f=!0,m=!0;const g=[],y=[];for(let x=0;x<n.length;++x){if(h.strides[x]===0)throw Error(`strides[${x}] must be non-zero`);const w=!!(h.shrinkAxisMask&1<<x),v=n[x];if(v===-1){g.push(w?1:-1);continue}const S=[h.beginMask&1<<x,h.endMask&1<<x],N=[h.strides[x]>0?0:-1,h.strides[x]>0?v:v-1];if(w&&h.strides[x]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&h.strides[x]===1;const $=!!(h.beginMask&1<<x&&h.endMask&1<<x);if(h.beginValid&&h.endValid){if(w){const A=h.begin[x]<0?v+h.begin[x]:h.begin[x];if(h.begin[x]=A,h.end[x]=h.begin[x]+1,A<0||A>=v)throw Error(`slice index ${h.begin[x]} of dimension ${x} out of bounds.`)}else h.begin[x]=f1(h.begin[x],0,h.strides[x],v,S,N),h.end[x]=f1(h.end[x],1,h.strides[x],v,S,N);const k=h.strides[x]===1&&h.begin[x]===0&&h.end[x]===v;p=p&&k,f=f&&(x===0&&h.strides[x]===1||k)}else p=p&&h.strides[x]===1&&$,f=f&&(x===0&&h.strides[x]===1||$);let T,C=!1;if(h.beginValid&&h.endValid?(T=h.end[x]-h.begin[x],C=!0):w?(T=1,C=!0):$&&v>=0&&(h.strides[x]<0?T=-v:T=v,C=!0),C){let k;T===0||T<0!=h.strides[x]<0?k=0:k=Math.trunc(T/h.strides[x])+(T%h.strides[x]!==0?1:0),g.push(k)}else g.push(-1)}for(let x=0;x<h.finalShapeGatherIndices.length;++x){const w=h.finalShapeGatherIndices[x];w>=0?y.push(g[w]):w===cb&&y.push(1)}return{finalShapeSparse:y.filter((x,w)=>h.finalShapeGatherIndices[w]!==cb),finalShape:y,isIdentity:p,sliceDim0:f,isSimpleSlice:m,begin:h.begin,end:h.end,strides:h.strides}}function v4(n,e){e.beginMask=0,e.endMask=0,e.shrinkAxisMask=0;let t=0;e.beginValid=n.begin!=null,e.endValid=n.end!=null,e.begin=new Array(e.dims),e.end=new Array(e.dims),e.strides=new Array(e.dims),e.finalShapeGatherIndices=[],e.finalShapeGatherIndicesSparse=[],e.inputShapeGatherIndicesSparse=new Array(e.dims);for(let s=0;s<n.dims;s++)if(1<<s&n.ellipsisMask){const r=Math.min(e.dims-(n.dims-s)+1+n.numAddAxisAfterEllipsis,e.dims);for(;t<r;t++)e.begin[t]=0,e.end[t]=0,e.strides[t]=1,e.beginMask|=1<<t,e.endMask|=1<<t,e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(-1),e.inputShapeGatherIndicesSparse[t]=s}else if(1<<s&n.newAxisMask)e.finalShapeGatherIndices.push(cb),e.finalShapeGatherIndicesSparse.push(-1);else{if(t===e.begin.length)throw Error(`Index out of range using input dim ${t}; input has only ${e.dims} dims, ${e.begin.length}.`);n.begin!=null&&(e.begin[t]=n.begin[s]),n.end!=null&&(e.end[t]=n.end[s]),e.strides[t]=n.strides[s],n.beginMask&1<<s&&(e.beginMask|=1<<t),n.endMask&1<<s&&(e.endMask|=1<<t),n.shrinkAxisMask&1<<s?(e.finalShapeGatherIndices.push(b4),e.finalShapeGatherIndicesSparse.push(-1),e.shrinkAxisMask|=1<<t):(e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(s)),e.inputShapeGatherIndicesSparse[t]=s,t++}}function f1(n,e,t,s,r,a){if(r[e])return t>0?a[e]:a[e+1&1];{const o=n<0?s+n:n;return o<a[0]?a[0]:o>a[1]?a[1]:o}}const I4=Object.freeze(Object.defineProperty({__proto__:null,assertParamsValid:Iw,computeFlatOffset:bg,computeOutShape:gg,getNormalizedAxes:w4,isSliceContinous:yg,maskToAxes:x4,parseSliceParams:np,sliceInfo:xg,startForAxis:dC,startIndicesWithElidedDims:uC,stopForAxis:hC,stopIndicesWithElidedDims:lC,stridesForAxis:cC,stridesWithElidedDims:aC},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class S4{static sgd(e){return new xw(e)}static momentum(e,t,s=!1){return new ZN(e,t,s)}static rmsprop(e,t=.9,s=0,r=null,a=!1){return new JN(e,t,s,r,a)}static adam(e=.001,t=.9,s=.999,r=null){return new XN(e,t,s,r)}static adadelta(e=.001,t=.95,s=null){return new qN(e,t,s)}static adamax(e=.002,t=.9,s=.999,r=null,a=0){return new YN(e,t,s,r,a)}static adagrad(e,t=.1){return new KN(e,t)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zi=S4;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k4=typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:n=>n();function pC(){return new Promise(n=>k4(()=>n()))}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wg(n,e){const t=n[0].length;n.forEach((r,a)=>{_(r.length===t,()=>`Error in concat${t}D: rank of tensors[${a}] must be the same as the rank of the rest (${t})`)}),_(e>=0&&e<t,()=>`Error in concat${t}D: axis must be between 0 and ${t-1}.`);const s=n[0];n.forEach((r,a)=>{for(let o=0;o<t;o++)_(o===e||r[o]===s[o],()=>`Error in concat${t}D: Shape of tensors[${a}] (${r}) does not match the shape of the rest (${s}) along the non-concatenated axis ${a}.`)})}function Fs(n,e){const t=n[0].slice();for(let s=1;s<n.length;s++)t[e]+=n[s][e];return t}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var pr;(function(n){n[n.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",n[n.VALUE_ROWIDS=1]="VALUE_ROWIDS",n[n.ROW_LENGTHS=2]="ROW_LENGTHS",n[n.ROW_SPLITS=3]="ROW_SPLITS",n[n.ROW_LIMITS=4]="ROW_LIMITS",n[n.ROW_STARTS=5]="ROW_STARTS"})(pr||(pr={}));function fC(n,e,t){let s=new Array;if(t==null&&e==null)return s;if(e==null)for(;s.length<n+t.length;)s.push(-1);else s=e.slice();if(t==null)return s;if(n+t.length!==s.length)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.rank = ${n+t.length}, but shape.rank = ${s.length}`);for(let r=1;r<t.length;++r){const a=t[r],o=s[s.length-t.length+r],i=s[o];if(a>=0)if(i>=0){if(i!==a)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.shape[${r+n}] = ${a} but shape[${r+n}] = ${i}`)}else s[o]=a}return s}function mC(n){const e={FIRST_DIM_SIZE:pr.FIRST_DIM_SIZE,VALUE_ROWIDS:pr.VALUE_ROWIDS,ROW_LENGTHS:pr.ROW_LENGTHS,ROW_SPLITS:pr.ROW_SPLITS,ROW_LIMITS:pr.ROW_LIMITS,ROW_STARTS:pr.ROW_STARTS},t=[];for(const s of n)if(s in e)t.push(e[s]);else break;return t}function gC(n){return n.length===0?0:n[0]===pr.FIRST_DIM_SIZE?n.length-1:n.length}function yC(n,e){if(n==null||e==null)return;const t=n.length,s=e.length;if(t>=s)throw new Error(`defaultValue.shape=${n} and ragged tensor flatValues.shape=${e}, are incompatible: defaultValue.rank = ${t} must be less than ragged tensor input flatValues.rank = ${s})`);for(let r=0;r<Math.min(t,s-1);++r){const a=n[r],o=e[r+1];if(a>=0&&o>=0&&a!==1&&a!==o)throw new Error(`defaultValue.shape=${n}, and ragged tensor input flatValues.shape=${e} are incompatible: defaultValue.shape[${r-n.length}] = ${a} but ragged tensor input.flatValues.shape[${r-n.length}] = ${o}`)}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sw=30;function vg(n){return n<=Sw?n:Ky(n,Math.floor(Math.sqrt(n)))}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ig(n,e,t){const s=t*(typeof n=="number"?n:n[0]),r=e*(typeof n=="number"?n:n[1]);return[s,r]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Si(n,e,t,s=!0){let r=[];if(s)r=r.concat(e.slice(0)),r.push(n[0]/t),r=r.concat(n.slice(1));else{r=r.concat(n[0]);const a=e.length;for(let o=0;o<a;++o)r=r.concat([n[o+1]/e[o],e[o]]);r=r.concat(n.slice(a+1))}return r}function ki(n,e,t=!0){const s=[];if(t){s.push(e);for(let r=e+1;r<n;++r)r<=2*e?(s.push(r),s.push(r-(e+1))):s.push(r)}else{const r=[],a=[];for(let o=1;o<n;++o)o>=e*2+1||o%2===1?a.push(o):r.push(o);s.push(...r),s.push(0),s.push(...a)}return s}function Ni(n,e,t,s=!0){const r=[];s?r.push(n[0]/t):r.push(n[0]*t);for(let a=1;a<n.length;++a)a<=e.length?s?r.push(e[a-1]*n[a]):r.push(n[a]/e[a-1]):r.push(n[a]);return r}function Sg(n,e){const t=[0];for(let s=0;s<e;++s)t.push(n[s][0]);return t}function kg(n,e,t){const s=n.slice(0,1);for(let r=0;r<t;++r)s.push(n[r+1]-e[r][0]-e[r][1]);return s}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ng=1.7580993408473768,Cg=1.0507009873554805;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kw=.3275911,Nw=.254829592,Cw=-.284496736,Tw=1.421413741,$w=-1.453152027,_w=1.061405429;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Na(n,e){if(n.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${n.length}, imag: ${e.length}.`);const t=new Float32Array(n.length*2);for(let s=0;s<t.length;s+=2)t[s]=n[s/2],t[s+1]=e[s/2];return t}function bC(n){const e=new Float32Array(n.length/2),t=new Float32Array(n.length/2);for(let s=0;s<n.length;s+=2)e[s/2]=n[s],t[s/2]=n[s+1];return{real:e,imag:t}}function xC(n){const e=Math.ceil(n.length/4),t=new Float32Array(e),s=new Float32Array(e);for(let r=0;r<n.length;r+=4)t[Math.floor(r/4)]=n[r],s[Math.floor(r/4)]=n[r+1];return{real:t,imag:s}}function wC(n){const e=Math.floor(n.length/4),t=new Float32Array(e),s=new Float32Array(e);for(let r=2;r<n.length;r+=4)t[Math.floor(r/4)]=n[r],s[Math.floor(r/4)]=n[r+1];return{real:t,imag:s}}function Ew(n,e){const t=n[e*2],s=n[e*2+1];return{real:t,imag:s}}function vC(n,e,t,s){n[s*2]=e,n[s*2+1]=t}function IC(n,e){const t=new Float32Array(n/2),s=new Float32Array(n/2);for(let r=0;r<Math.ceil(n/2);r++){const a=(e?2:-2)*Math.PI*(r/n);t[r]=Math.cos(a),s[r]=Math.sin(a)}return{real:t,imag:s}}function SC(n,e,t){const s=(t?2:-2)*Math.PI*(n/e),r=Math.cos(s),a=Math.sin(s);return{real:r,imag:a}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fy="->",N4=/->/g,m1=",",g1="...";function Aw(n,e){n=n.replace(/\s/g,"");const t=(n.length-n.replace(N4,"").length)/fy.length;if(t<1)throw new Error("Equations without an arrow are not supported.");if(t>1)throw new Error(`Equation must contain exactly one arrow ("${fy}").`);const[s,r]=n.split(fy);_(s.indexOf(g1)===-1,()=>`The ellipsis notation ("${g1}") is not supported yet.`);const a=s.split(m1),o=a.length;if(e!==o)throw new Error(`Expected ${o} input tensors, received ${e}`);if(o>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const i=[];for(let h=0;h<r.length;++h){const p=r[h];if(!a.some(f=>f.indexOf(p)!==-1))throw new Error(`Output subscripts contain the label ${p} not present in the input subscripts.`);i.indexOf(p)===-1&&i.push(p)}for(let h=0;h<s.length;++h){const p=s[h];i.indexOf(p)===-1&&p!==m1&&i.push(p)}const u=new Array(a.length);for(let h=0;h<o;++h){if(new Set(a[h].split("")).size!==a[h].length)throw new Error(`Found duplicate axes in input component ${a[h]}. Support for duplicate axes in input is not implemented yet.`);u[h]=[];for(let p=0;p<a[h].length;++p)u[h].push(i.indexOf(a[h][p]))}const c=i.length,l=r.length,d=[];for(let h=l;h<c;++h)d.push(h);return{allDims:i,summedDims:d,idDims:u}}function Dw(n,e){let t=new Array(n);t.fill(-1);for(let r=0;r<e.length;++r)t[e[r]]=r;const s=[];for(let r=0;r<n;++r)t[r]===-1&&s.push(r);return t=t.filter(r=>r!==-1),{permutationIndices:t,expandDims:s}}function Rw(n,e,t){const s=new Array(n);for(let r=0;r<t.length;++r){const a=t[r].shape;for(let o=0;o<e[r].length;++o)s[e[r][o]]===void 0?s[e[r][o]]=a[o]:_(s[e[r][o]]===a[o],()=>`Expected dimension ${s[e[r][o]]} at axis ${o} of input shaped ${JSON.stringify(a)}, but got dimension ${a[o]}`)}}function Ow(n,e){const t=n,s=[];let r=0;n.length===0&&t.push(-1),r=n.length+1;for(let o=0;o<r;++o)s.push([]);const a=[];for(let o=0;o<t.length;++o){const i=t[o],u=C4(e,i);for(const c of u)a.indexOf(c)===-1&&(s[o].push(c),a.push(c))}return{path:t,steps:s}}function Fw(n){return n.every((e,t)=>e===t)}function C4(n,e){const t=[];for(let s=0;s<n.length;++s)(n[s].length===0||n[s].indexOf(e)!==-1||e===-1)&&t.push(s);return t}function Tg(n,e,t=0){let s=[];if(typeof e=="number")_(n.shape[t]%e===0,()=>"Number of splits must evenly divide the axis."),s=new Array(e).fill(n.shape[t]/e);else{const r=e.reduce((o,i)=>(i===-1&&(o+=1),o),0);_(r<=1,()=>"There should be only one negative value in split array.");const a=e.indexOf(-1);if(a!==-1){const o=e.reduce((i,u)=>u>0?i+u:i);e[a]=n.shape[t]-o}_(n.shape[t]===e.reduce((o,i)=>o+i),()=>"The sum of sizes must match the size of the axis dimension."),s=e}return s}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pw(n){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${n}`}function Lw(n,e){return`indices(${n}, 0) is invalid: ${e} < 0`}function Mw(n,e,t){return`indices(${n}, 0) is invalid: ${e} >= ${t}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bw(n,e){return`only one output dimension may be -1, not both ${n} and ${e}`}function zw(n,e){return`size ${n} must be non-negative, not ${e}`}function Vw(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function Ww(n,e){const t=U(n),s=U(e);return`Input to reshape is a SparseTensor with ${t}
  dense values, but the requested shape requires a multiple of ${s}. inputShape=${n} outputShape= ${e}`}function Uw(n,e){const t=U(n),s=U(e);return`Input to reshape is a tensor with ${t} dense values, but the requested shape has ${s}. inputShape=${n} outputShape=${e}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zc(){return"segment ids must be >= 0"}function Gw(){return"segment ids are not increasing"}function Hw(n,e){return`Segment id ${n} out of range [0, ${e}), possibly because segmentIds input is not sorted.`}function jw(n,e,t){return`Bad: indices[${n}] == ${e} out of range [0, ${t})`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kC(n,e){let t=!1,s;for(n<=Sw?(s=n,t=!0):s=Ky(n,Math.floor(Math.sqrt(n)));!t;)s>e||s===n?t=!0:s=Ky(n,s+1);return s}function NC(n,e,t){const s=[],r=n.length;for(let a=0;a<r;a++)a!==e?s.push(n[a]):s.push(t);return s}function $g(n,e,t,s){const r=e.shape.length,a=n.shape.length;if(s!==0&&(s<-r||s>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${s}`);if(s<0&&(s+=r),s>a)throw new Error(`batchDims (${s}) must be less than rank(x) (
    ${a}).`);if(t<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${t}).`);for(let d=0;d<s;++d)if(n.shape[d]!==e.shape[d])throw new Error(`x.shape[${d}]: ${n.shape[d]} should be equal to indices.shape[${d}]: ${e.shape[d]}.`);const o=n.shape[t],i=[];let u=1,c=1,l=1;for(let d=0;d<s;++d)i.push(n.shape[d]),u*=n.shape[d];for(let d=s;d<t;d++)i.push(n.shape[d]),c*=n.shape[d];for(let d=s;d<r;d++)i.push(e.shape[d]);for(let d=t+1;d<a;d++)i.push(n.shape[d]),l*=n.shape[d];return{batchSize:u,sliceSize:l,outerSize:c,dimSize:o,outputShape:i}}const T4=Object.freeze(Object.defineProperty({__proto__:null,collectGatherOpShapeInfo:$g,computeOutShape:NC,segOpComputeOptimalWindowSize:kC},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ca(n){try{return n.map(e=>to(e))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function qw(n){return n.map(e=>Ka(e))}const $4=Object.freeze(Object.defineProperty({__proto__:null,ERF_A1:Nw,ERF_A2:Cw,ERF_A3:Tw,ERF_A4:$w,ERF_A5:_w,ERF_P:kw,PARALLELIZE_THRESHOLD:Sw,get RowPartitionType(){return pr},SELU_SCALE:Cg,SELU_SCALEALPHA:Ng,applyActivation:pg,assertAndGetBroadcastShape:Me,assertAxesAreInnerMostDims:Et,assertParamsConsistent:wg,assignToTypedArray:vC,axesAreInnerMostDims:Hx,calculateShapes:ta,checkEinsumDimSizes:Rw,checkPadOnDimRoundingMode:Kn,combineLocations:pN,combineRaggedTensorToTensorShapes:fC,complexWithEvenIndex:xC,complexWithOddIndex:wC,computeConv2DInfo:Vt,computeConv3DInfo:Cr,computeDefaultPad:Mx,computeDilation2DInfo:xo,computeOptimalWindowSize:vg,computeOutAndReduceShapes:Rt,computeOutShape:Fs,computePool2DInfo:Mn,computePool3DInfo:Bs,convertConv2DDataFormat:Tr,decodeEinsumEquation:Aw,eitherStridesOrDilationsAreOne:wn,expandShapeToKeepDim:wt,exponent:SC,exponents:IC,fromStringArrayToUint8:qw,fromUint8ToStringArray:Ca,getAxesPermutation:At,getBroadcastDims:wu,getComplexWithIndex:Ew,getEinsumComputePath:Ow,getEinsumPermutation:Dw,getFusedBiasGradient:hg,getFusedDyActivation:dg,getImageCenter:Ig,getInnerMostAxes:Ct,getPermuted:ki,getRaggedRank:gC,getReductionAxes:fn,getReshaped:Si,getReshapedPermuted:Ni,getRowPartitionTypesHelper:mC,getSliceBeginCoords:Sg,getSliceSize:kg,getSparseFillEmptyRowsIndicesDenseShapeMismatch:Pw,getSparseFillEmptyRowsNegativeIndexErrorMessage:Lw,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:Mw,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:Vw,getSparseReshapeInputOutputMismatchErrorMessage:Uw,getSparseReshapeInputOutputMultipleErrorMessage:Ww,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:Bw,getSparseReshapeNegativeOutputDimErrorMessage:zw,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:jw,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:Zc,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:Gw,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:Hw,getUndoAxesPermutation:Qr,isIdentityPermutation:Fw,log:yL,mergeRealAndImagArrays:Na,prepareAndValidate:mg,prepareSplitSize:Tg,segment_util:T4,shouldFuse:fg,slice_util:I4,splitRealAndImagArrays:bC,stridesOrDilationsArePositive:ei,tupleValuesAreOne:ao,upcastType:ws,validateDefaultValueShape:yC,validateInput:lw,validateUpdateShape:DN,warn:As},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */e4();/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CC={kernelName:qd,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>B(n,tc(fe(t,"float32"),-1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _4={kernelName:Fu,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=kt(fe(t,"float32")),r=Tn(we(Ae(1),s));return Dt($e(n,r))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E4={kernelName:Pu,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=Tn(we(kt(fe(t,"float32")),1));return $e(n,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A4={kernelName:mi,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=Me(t.shape,s.shape);return{a:()=>{let i=n;const u=fn(t.shape,r);return u.length>0&&(i=Ne(i,u)),V(i,t.shape)},b:()=>{let i=n;const u=fn(s.shape,r);return u.length>0&&(i=Ne(i,u)),V(i,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D4={kernelName:Lu,saveAllInputs:!0,gradFunc:(n,e)=>{const t={};return e.forEach((s,r)=>{t[r]=()=>n.clone()}),t}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R4={kernelName:Yd,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>st(t)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O4={kernelName:Zd,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>st(t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F4={kernelName:Mu,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>$e(n,Tn(we(Ae(1),kt(fe(t,"float32")))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P4={kernelName:Bu,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=Tn(se(Ae(1),kt(fe(t,"float32"))));return $e(n,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L4={kernelName:Wu,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=Me(t.shape,s.shape);return{a:()=>{const i=se(kt(t),kt(s));let u=B(n,$e(s,i));const c=fn(t.shape,r);return c.length>0&&(u=Ne(u,c)),V(u,t.shape)},b:()=>{const i=se(kt(t),kt(s));let u=Dt(B(n,$e(t,i)));const c=fn(s.shape,r);return c.length>0&&(u=Ne(u,c)),V(u,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M4={kernelName:zu,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>$e(n,se(kt(fe(t,"float32")),1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B4={kernelName:Vu,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>$e(n,we(Ae(1),kt(fe(t,"float32"))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z4(n,e,t,s,r,a){const o=E(n,"dy","avgPool3dGrad"),i=E(e,"input","avgPool3dGrad");let u=o,c=i,l=!1;i.rank===4&&(l=!0,u=V(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),c=V(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),_(u.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`),_(c.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${c.rank}.`),Kn("avgPool3dGrad",r,a);const d={dy:u,input:c},h={filterSize:t,strides:s,pad:r,dimRoundingMode:a},p=M.runKernel(Cm,d,h);return l?V(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}const V4=L({avgPool3dGrad_:z4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W4={kernelName:Jd,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{filterSize:r,strides:a,pad:o,dimRoundingMode:i}=t;return{x:()=>V4(n,s,r,a,o,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U4(n,e,t,s,r){const a=E(n,"dy","avgPoolGrad"),o=E(e,"input","avgPoolGrad");_(o.rank===a.rank,()=>`Rank of input (${o.rank}) does not match rank of dy (${a.rank})`);let i=o,u=a,c=!1;o.rank===3&&(c=!0,i=V(o,[1,o.shape[0],o.shape[1],o.shape[2]]),u=V(a,[1,a.shape[0],a.shape[1],a.shape[2]])),_(u.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${u.rank}.`),_(i.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${i.rank}.`);const l={dy:u,input:i},d={filterSize:t,strides:s,pad:r},h=M.runKernel(Nm,l,d);return c?V(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const G4=L({avgPoolGrad_:U4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H4={kernelName:Uu,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{filterSize:r,strides:a,pad:o}=t;return{x:()=>G4(n,s,r,a,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const j4={kernelName:Gu,inputsToSave:["a","b"],gradFunc:(n,e,t)=>{const[s,r]=e,{transposeA:a,transposeB:o}=t;return!a&&!o?{a:()=>Ke(n,r,!1,!0),b:()=>Ke(s,n,!0,!1)}:!a&&o?{a:()=>Ke(n,r,!1,!1),b:()=>Ke(n,s,!0,!1)}:a&&!o?{a:()=>Ke(r,n,!1,!0),b:()=>Ke(s,n,!1,!1)}:{a:()=>Ke(r,n,!0,!0),b:()=>Ke(n,s,!0,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q4={kernelName:Qd,gradFunc:(n,e,t)=>{const{blockShape:s,crops:r}=t;return{x:()=>sg(n,s,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const K4={kernelName:hL,gradFunc:(n,e,t)=>{const s=t,r=s.inputShape,a=s.shape,o=Array.from(a);for(let u=r.length-1;u>=0;u--)if(r[u]===a[u])o[u]=1;else if(r[u]!==1)throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${a}].`);const i=[];for(let u=0;u<o.length;u++)o[u]>1&&i.push(u);return{x:()=>Ne(n,i,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X4={kernelName:Hu,gradFunc:n=>({x:()=>n.clone()})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y4={kernelName:ju,gradFunc:n=>({x:()=>st(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z4={kernelName:gi,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{clipValueMin:r,clipValueMax:a}=t;return{x:()=>Pn(Xr(wo(s,r),wi(s,a)),n,st(n))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const J4={kernelName:$m,inputsToSave:["x"],gradFunc:CC.gradFunc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q4={kernelName:nh,saveAllInputs:!0,gradFunc:(n,e,t)=>{const s=e.map(u=>u.shape),{axis:r}=t,a=ze(r,e[0].shape)[0],o=s.map(u=>u[a]);return bs(n,o,a).map(u=>()=>u)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eG={kernelName:qu,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const[s,r]=e,{dilations:a,strides:o,pad:i,dataFormat:u}=t;return _(ao(a),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`),{x:()=>zx(s.shape,n,r,o,i,u),filter:()=>fw(s,n,r.shape,o,i,u)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tG={kernelName:Ku,inputsToSave:["dy","filter"],gradFunc:(n,e,t)=>{const[s,r]=e,{strides:a,pad:o,dataFormat:i,dimRoundingMode:u}=t;return{dy:()=>oo(n,r,a,o,i,1,u),filter:()=>fw(n,s,r.shape,a,o,i,u)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nG(n,e,t,s,r){let a=n;n.rank===4&&(a=V(n,[1,n.shape[0],n.shape[1],n.shape[2],n.shape[3]]));let o=e;o.rank===4&&(o=V(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),_(a.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${a.shape}.`),_(o.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${o.shape}.`),_(t.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${t}.`),_(a.shape[4]===t[3],()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${t[3]}.`),_(o.shape[4]===t[4],()=>`Error in conv3dDerFilter: depth of dy (${o.shape[4]}) must match output depth for filter (${t[4]}).`);const i={x:a,dy:o},u={strides:s,pad:r,filterShape:t};return M.runKernel(sh,i,u)}const sG=L({conv3DBackpropFilter_:nG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rG={kernelName:Xu,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const{dilations:s,strides:r,pad:a}=t;_(ao(s),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);const[o,i]=e;return{x:()=>iN(o.shape,n,i,r,a),filter:()=>sG(o,n,i.shape,r,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aG={kernelName:Yu,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>B(Dt(rw(fe(t,"float32"))),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oG={kernelName:Zu,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>B(aw(fe(t,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iG={kernelName:Ju,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{axis:r,exclusive:a,reverse:o}=t;return{x:()=>{const i=At([r],s.rank);let u=Ux(n,r,a,!o);return i!=null&&(u=nt(u,i)),u}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uG={kernelName:Qu,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const{dilations:s,strides:r,pad:a,dimRoundingMode:o}=t,i=s??[1,1];_(ao(i),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`);const[u,c]=e;return _(u.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`),_(c.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${c.rank}.`),_(u.shape[3]===c.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`),_(wn(r,i),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations '${i}'.`),Kn("depthwiseConv2d",a,o),{x:()=>VN(u.shape,n,c,r,a,i,o),filter:()=>zN(u,n,c.shape,r,a,i,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lG={kernelName:el,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const[s,r]=e,a={x:s,filter:r,dy:n},o={x:s,filter:r,dy:n};return{x:()=>M.runKernel(Wc,a,t),filter:()=>M.runKernel(Uc,o,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cG={kernelName:nl,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e,s={dy:n,y:t};return{x:()=>M.runKernel(uh,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dG={kernelName:sl,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e,s=B(Is(Dt(kt(t))),2/Math.sqrt(Math.PI));return{x:()=>B(n,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hG={kernelName:rl,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e;return{x:()=>B(n,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pG={kernelName:ch,inputsToSave:["input"],gradFunc:(n,e)=>{const[t]=e;return{input:()=>V(n,t.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fG={kernelName:al,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>B(n,Is(t))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mG={kernelName:ol,gradFunc:n=>({x:()=>st(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gG={kernelName:il,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=Me(t.shape,s.shape);return{a:()=>{const i=$e(n,fe(s,"float32")),u=fn(t.shape,r);return u.length>0?V(Ne(i,u),t.shape):i},b:()=>{let i=B(n,fe(t,"float32"));const u=fn(s.shape,r);u.length>0&&(i=V(Ne(i,u),s.shape));const c=kt(s);return Dt($e(i,fe(c,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yG={kernelName:ul,inputsToSave:["x","mean","variance","scale"],gradFunc:(n,e,t)=>{const{varianceEpsilon:s}=t,[r,a,o,i]=e,u=i??Ae(1),c=fn(a.shape,r.shape),l=[];if(a.rank===1){for(let w=0;w<r.shape.length-1;++w)l.push(r.shape[w]);l.push(1)}const d=we(r,a),h=B(n,u),p=tw(se(o,Ae(s))),f=B(B(B(p,p),p),Ae(-.5));return{x:()=>a.rank===1?V(B(B(n,Xs(V(p,[1,1,1,a.shape[0]]),l)),u),r.shape):V(B(B(n,p),u),r.shape),mean:()=>{let w=B(B(p,Ae(-1)),h);return a.rank===1&&(w=Ne(w,c)),V(w,a.shape)},variance:()=>{let w=B(B(f,d),h);return a.rank===1&&(w=Ne(w,c)),V(w,a.shape)},scale:()=>{const w=B(d,p);let v=B(n,w);return a.rank===1&&(v=Ne(v,c)),V(v,a.shape)},offset:()=>{let w=n;return a.rank===1&&(w=Ne(w,c)),V(w,a.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bG={kernelName:hh,inputsToSave:["x","indices"],gradFunc:(n,e,t)=>{const[s,r]=e,{axis:a,batchDims:o}=t,i=ze(a,s.shape)[0],u=(c,l,d)=>()=>{const h=c.shape,p=l.size,f=h.slice(0,i),m=f.length,g=h.slice(a,h.length).slice(1),y=g.length,b=y1(0,m),x=y1(m+1,m+1+y),w=b1([f,[p],g]),v=V(d,w),S=V(l,[p]),N=b1([[m],b,x]),$=nt(v,N);let T=dw($,S,c.shape[i]);const C=Qr(N);return T=nt(T,C),T};if(o===1){const c=s.shape[0],l=s.split(c,0);return{x:()=>Ss(l.map((p,f)=>u(p,r.slice(f,1),n.slice(f,1))())).reshape(s.shape),indices:()=>r}}else return{x:u(s,r,n),indices:()=>r}}};function y1(n,e){const t=[];for(let s=n;s<e;++s)t.push(s);return t}function b1(n){const e=[];for(let t=0;t<n.length;++t)for(let s=0;s<n[t].length;++s)e.push(n[t][s]);return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xG={kernelName:ll,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e;return{a:()=>st(t),b:()=>st(s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wG={kernelName:cl,gradFunc:n=>({x:()=>fe(n,"float32")})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vG={kernelName:dl,gradFunc:n=>({x:()=>st(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IG={kernelName:hl,gradFunc:n=>({x:()=>st(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SG={kernelName:pl,gradFunc:n=>({x:()=>st(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kG={kernelName:fl,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{alpha:r}=t,a=Cs(s,0);return{x:()=>Pn(a,n,B(n,r))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NG={kernelName:gl,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>$e(n,se(t,1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CG={kernelName:ml,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>$e(n,fe(t,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TG={kernelName:mL,inputsToSave:[],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s]=e,{axis:r}=t;return{logits:()=>{const o=Is(s);return we(n,B(Ne(n,r,!0),o))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $G(n,e,t,s=5,r=1,a=1,o=.5){const i={x:n,y:e,dy:t},u={depthRadius:s,bias:r,alpha:a,beta:o};return M.runKernel(vh,i,u)}const _G=L({localResponseNormalizationBackprop_:$G});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EG={kernelName:yl,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s,r]=e,{depthRadius:a,bias:o,alpha:i,beta:u}=t;return{x:()=>_G(s,r,n,a,o,i,u)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TC(n,e,t,s){return e.rank<t.rank&&(e=V(e,wt(e.shape,s))),n.rank<t.rank&&(n=V(n,wt(n.shape,s))),{x:()=>B(n,fe(wr(t,e),n.dtype))}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x1={kernelName:bl,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const s=t,{reductionIndices:r}=s,a=e[0],o=e[1],i=ze(r,a.shape),u=TC(n,o,a,i);return{x:()=>u.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AG={kernelName:xl,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e;return{a:()=>B(n,fe(wo(t,s),"float32")),b:()=>B(n,fe(qc(t,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DG(n,e,t,s,r,a,o){const i=E(n,"dy","maxPool3dGrad"),u=E(e,"input","maxPool3dGrad"),c=E(t,"output","maxPool3dGrad");let l=i,d=u,h=c,p=!1;u.rank===4&&(p=!0,l=V(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),d=V(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),h=V(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),_(l.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),_(d.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${d.rank}.`),_(h.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${h.rank}.`),Kn("maxPool3dGrad",a,o);const f={dy:l,input:d,output:h},m={filterSize:s,strides:r,pad:a,dimRoundingMode:o},g=M.runKernel(Rm,f,m);return p?V(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}const RG=L({maxPool3dGrad_:DG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OG={kernelName:Ih,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s,r]=e,{filterSize:a,strides:o,pad:i,dimRoundingMode:u}=t;return{x:()=>RG(n,s,r,a,o,i,u)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FG(n,e,t,s,r,a,o){const i=E(n,"dy","maxPoolGrad"),u=E(e,"input","maxPoolGrad"),c=E(t,"output","maxPoolGrad");_(u.rank===i.rank,()=>`Rank of input (${u.rank}) does not match rank of dy (${i.rank})`),_(i.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${i.rank}.`),_(u.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${u.rank}.`),Kn("maxPoolGrad",a,o);const l={dy:i,input:u,output:c},d={filterSize:s,strides:r,pad:a,dimRoundingMode:o};return M.runKernel(Dm,l,d)}const PG=L({maxPoolGrad_:FG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LG={kernelName:wl,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s,r]=e,{filterSize:a,strides:o,pad:i}=t;return{x:()=>PG(n,s,r,a,o,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MG={kernelName:vl,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{axis:r}=t,a=ze(r,s.shape),i=Rt(s.shape,a)[1],u=U(i);return{x:()=>{const l=s.shape.slice();a.forEach(p=>{l[p]=1});const d=V(n,l);return $e(B(d,gs(s.shape,"float32")),u)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BG={kernelName:Il,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const s=t,{axis:r}=s,[a,o]=e,i=ze(r,a.shape),u=TC(n,o,a,i);return{x:()=>u.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zG={kernelName:Sl,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e;return{a:()=>B(n,fe(wi(t,s),"float32")),b:()=>B(n,fe(Cs(t,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VG={kernelName:kl,inputsToSave:["x"],gradFunc:(n,e,t)=>{const s=e[0],{paddings:r}=t,a=r.map(o=>o[0]);return{x:()=>tt(n,a,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WG={kernelName:Nl,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=Me(t.shape,s.shape);return{a:()=>{const i=fn(t.shape,r);return i.length>0?V(Ne(n,i),t.shape):n},b:()=>{const i=B(n,Dt(ep($e(t,s)))),u=fn(s.shape,r);return u.length>0?V(Ne(i,u),s.shape):i}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UG={kernelName:Cl,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=Me(t.shape,s.shape);return{a:()=>{const i=B(n,fe(s,"float32")),u=fn(t.shape,r);return u.length>0?V(Ne(i,u),t.shape):i},b:()=>{const i=B(n,fe(t,"float32")),u=fn(s.shape,r);return u.length>0?V(Ne(i,u),s.shape):i}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GG={kernelName:kh,gradFunc:n=>({x:()=>Dt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HG={kernelName:Tl,inputsToSave:["indices"],gradFunc:(n,e)=>{const t=e[0];return{indices:()=>un(t.shape,"float32")}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jG={kernelName:_h,gradFunc:n=>({x:()=>st(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qG={kernelName:Eh,saveAllInputs:!0,gradFunc:(n,e,t)=>{const{axis:s}=t;return rr(n,s).map(a=>()=>a)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w1={kernelName:$l,inputsToSave:["x"],gradFunc:(n,e,t)=>{const s=e[0],{paddings:r}=t,a=r.map(o=>o[0]);return{x:()=>tt(n,a,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KG={kernelName:_l,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(n,e)=>{const[t,s,r]=e,a=t,o=s,i=Me(a.shape,o.shape);return{a:()=>{const l=fe(o,"float32");let d=B(n,B(l,Sa(a,we(l,Ae(1)))));const h=fn(a.shape,i);return h.length>0&&(d=Ne(d,h)),V(d,a.shape)},b:()=>{const l=Cs(a,0),d=Pn(l,Ps(a),st(a));let h=B(n,B(r,d));const p=fn(o.shape,i);return p.length>0&&(h=Ne(h,p)),V(h,o.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XG={kernelName:El,inputsToSave:["x","alpha"],gradFunc:(n,e)=>{const[t,s]=e,r=Cs(t,0);return{x:()=>Pn(r,n,B(n,s)),alpha:()=>{let a=Pn(r,st(n),B(n,t));const o=fn(s.shape,n.shape);return o.length>0&&(a=Ne(a,o)),V(a,s.shape)}}}};/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YG(n,e,t){const s=n.shape.slice();s[t]=1;const r=V(e,s),a=If(n,t,!0,!1),o=If(n,t,!0,!0),i=B(a,o);return B(r,i)}function ZG(n,e,t){const s=n.shape.length,r=s-t.length,a=At(t,s);let o=n;a!=null&&(o=nt(n,a));const i=o.shape.slice(),c=i.splice(s-t.length,t.length).reduce((h,p)=>h*p,1);i.push(c);const l=o.reshape(i);let d=YG(l,e,r);if(d=d.reshape(o.shape),a!=null){const h=Qr(a);d=nt(d,h)}return d}const JG={kernelName:Al,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{axis:r}=t;let a=[];return r==null?a=s.shape.map((o,i)=>i):typeof r=="number"?a=[r]:a=r,{x:()=>ZG(s,n,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QG={kernelName:tl,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=Me(t.shape,s.shape);return{a:()=>{const i=$e(n,fe(s,"float32")),u=fn(t.shape,r);return u.length>0?V(Ne(i,u),t.shape):i},b:()=>{let i=B(n,fe(t,"float32"));const u=fn(s.shape,r);u.length>0&&(i=V(Ne(i,u),s.shape));const c=kt(s);return Dt($e(i,fe(c,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eH={kernelName:Dl,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>$e(n,Dt(kt(t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tH={kernelName:Pl,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e,s=B(wi(t,6),tc(t));return{x:()=>B(n,fe(s,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nH={kernelName:Rl,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>B(n,fe(tc(t),"float32"))}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sH={kernelName:Ah,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>V(n,t.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rH={kernelName:Fl,inputsToSave:["images"],gradFunc:(n,e,t)=>{const[s]=e,r={dy:n,images:s};return{images:()=>M.runKernel(Rh,r,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aH={kernelName:Ol,inputsToSave:["images"],gradFunc:(n,e,t)=>{const[s]=e,r={dy:n,images:s};return{images:()=>M.runKernel(Dh,r,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oH={kernelName:Ll,gradFunc:(n,e,t)=>{const{dims:s}=t,r=ze(s,n.shape);return{x:()=>sr(n,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iH={kernelName:Ml,gradFunc:n=>({x:()=>st(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uH={kernelName:Bl,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Dt($e(n,B(Sa(t,1.5),2)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lH={kernelName:Lh,inputsToSave:["condition"],gradFunc:(n,e)=>{const[t]=e;return{condition:()=>fe(st(t),"float32"),t:()=>B(n,fe(t,n.dtype)),e:()=>B(n,fe(eg(t),n.dtype))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cH={kernelName:zl,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=Cs(t,Ae(0)),r=Ae(Ng),a=Ae(Cg),o=B(n,a),i=B(B(n,r),Is(fe(t,"float32")));return Pn(s,o,i)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dH={kernelName:Gl,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e;return{x:()=>B(n,B(t,we(Ae(1),t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hH={kernelName:Ul,gradFunc:n=>({x:()=>st(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pH={kernelName:Vl,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>B(Xm(fe(t,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fH={kernelName:Wl,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>B(Wx(fe(t,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mH={kernelName:Mh,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{begin:r,size:a}=t,o=s.shape,[i,u]=np(s,r,a),c=[];for(let l=0;l<n.rank;l++)c.push([i[l],o[l]-i[l]-u[l]]);return{x:()=>vo(n,c)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gH={kernelName:Kl,outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s]=e,{dim:r}=t,a=!0,o=B(n,s);return{logits:()=>we(o,B(Ne(o,[r],a),s))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yH={kernelName:Hl,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>B(n,Wr(t))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v1={kernelName:Bh,gradFunc:(n,e,t)=>{const{blockShape:s,paddings:r}=t;return{x:()=>Km(n,s,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I1={kernelName:zh,gradFunc:(n,e,t)=>{const{axis:s}=t;return{x:()=>tn(n,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bH={kernelName:jl,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>$e(n,B(Tn(fe(t,"float32")),2))}}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xH={kernelName:Bm,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>B(n,B(fe(t,"float32"),2))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wH={kernelName:Xl,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=Ae(2);return{a:()=>B(n,B(r,we(t,s))),b:()=>B(n,B(r,we(s,t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vH={kernelName:bi,gradFunc:n=>({x:()=>st(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IH={kernelName:Yl,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=Me(t.shape,s.shape);return{a:()=>{let i=n;const u=fn(t.shape,r);return u.length>0&&(i=Ne(i,u)),V(i,t.shape)},b:()=>{let i=n;const u=fn(s.shape,r);return u.length>0&&(i=Ne(i,u)),V(Dt(i),s.shape)}}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SH={kernelName:ql,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,r=s.shape.slice(),{axis:a}=t;ze(a,s.shape).forEach(c=>{r[c]=1});const i=V(n,r),u=B(i,gs(s.shape,"float32"));return{x:()=>u}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kH={kernelName:Zl,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>$e(n,kt(Xm(t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NH={kernelName:Jl,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e;return{x:()=>B(we(Ae(1),kt(t)),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CH={kernelName:yi,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{reps:r}=t;return{x:()=>{let o=st(s);if(s.rank===1)for(let i=0;i<r[0];++i)o=se(o,tt(n,[i*s.shape[0]],[s.shape[0]]));else if(s.rank===2)for(let i=0;i<r[0];++i)for(let u=0;u<r[1];++u)o=se(o,tt(n,[i*s.shape[0],u*s.shape[1]],[s.shape[0],s.shape[1]]));else if(s.rank===3)for(let i=0;i<r[0];++i)for(let u=0;u<r[1];++u)for(let c=0;c<r[2];++c)o=se(o,tt(n,[i*s.shape[0],u*s.shape[1],c*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else if(s.rank===4)for(let i=0;i<r[0];++i)for(let u=0;u<r[1];++u)for(let c=0;c<r[2];++c)for(let l=0;l<r[3];++l)o=se(o,tt(n,[i*s.shape[0],u*s.shape[1],c*s.shape[2],l*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);return o}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TH={kernelName:ja,gradFunc:(n,e,t)=>{const s=t,{perm:r}=s,a=Qr(r);return{x:()=>nt(n,a)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $H={kernelName:jh,gradFunc:(n,e,t)=>{const s=t,{axis:r}=s;return{value:()=>Ss(n,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _H={kernelName:Hm,inputsToSave:["segmentIds"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>EH(n,t)}}};function EH(n,e){const t=$a(e,st(e)),s=tp(n,t);let r=wo(e,Ae(0,"int32"));const a=s.rank-r.rank;for(let i=0;i<a;++i)r=Hn(r,i+1);r=Xr(r,gs(s.shape,"bool"));const o=st(s);return Pn(r,s,o)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AH={kernelName:qh,gradFunc:n=>({x:()=>st(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DH=[CC,_4,E4,A4,D4,R4,O4,F4,P4,L4,M4,B4,W4,H4,j4,q4,K4,X4,Y4,Z4,J4,Q4,tG,eG,rG,aG,oG,iG,uG,lG,QG,cG,dG,hG,pG,fG,gG,mG,yG,bG,xG,wG,vG,IG,SG,kG,NG,CG,TG,EG,x1,x1,AG,OG,LG,MG,BG,zG,VG,WG,UG,GG,HG,jG,qG,w1,w1,KG,XG,JG,eH,tH,nH,sH,rH,aH,oH,iH,uH,lH,cH,dH,hH,pH,fH,mH,gH,yH,v1,v1,I1,I1,bH,wH,xH,vH,IH,SH,kH,NH,CH,TH,$H,_H,AH];for(const n of DH)bL(n);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.abs=function(){return this.throwIfDisposed(),an(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.acos=function(){return this.throwIfDisposed(),Wk(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.acosh=function(){return this.throwIfDisposed(),Uk(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.add=function(n){return this.throwIfDisposed(),se(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.all=function(n,e){return this.throwIfDisposed(),Lx(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.any=function(n,e){return this.throwIfDisposed(),vf(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.argMax=function(n){return this.throwIfDisposed(),xu(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.argMin=function(n){return this.throwIfDisposed(),Gk(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.asScalar=function(){return this.throwIfDisposed(),_(this.size===1,()=>"The array must have only 1 element."),V(this,[])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.asType=function(n){return this.throwIfDisposed(),fe(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.as1D=function(){return this.throwIfDisposed(),V(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.as2D=function(n,e){return this.throwIfDisposed(),V(this,[n,e])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.as3D=function(n,e,t){return this.throwIfDisposed(),V(this,[n,e,t])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.as4D=function(n,e,t,s){return this.throwIfDisposed(),V(this,[n,e,t,s])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.as5D=function(n,e,t,s,r){return this.throwIfDisposed(),V(this,[n,e,t,s,r])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.asin=function(){return this.throwIfDisposed(),Hk(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.asinh=function(){return this.throwIfDisposed(),jk(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.atan=function(){return this.throwIfDisposed(),qk(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.atan2=function(n){return this.throwIfDisposed(),Kk(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.atanh=function(){return this.throwIfDisposed(),Xk(this)};ee().prototype.avgPool=function(n,e,t,s){return this.throwIfDisposed(),qm(this,n,e,t,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.batchToSpaceND=function(n,e){return this.throwIfDisposed(),Km(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.batchNorm=function(n,e,t,s,r){return this.throwIfDisposed(),Yh(this,n,e,t,s,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.broadcastTo=function(n){return this.throwIfDisposed(),tu(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.cast=function(n){return this.throwIfDisposed(),fe(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.ceil=function(){return this.throwIfDisposed(),tN(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.clipByValue=function(n,e){return this.throwIfDisposed(),vs(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.concat=function(n,e){return this.throwIfDisposed(),n instanceof Bt&&(n=[n]),tn([this,...n],e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.conv1d=function(n,e,t,s,r,a){return this.throwIfDisposed(),Bx(this,n,e,t,s,r,a)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.conv2dTranspose=function(n,e,t,s,r){return this.throwIfDisposed(),Vx(this,n,e,t,s,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.conv2d=function(n,e,t,s,r,a){return this.throwIfDisposed(),oo(this,n,e,t,s,r,a)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.cos=function(){return this.throwIfDisposed(),Xm(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.cosh=function(){return this.throwIfDisposed(),Wx(this)};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.cumprod=function(n,e,t){return this.throwIfDisposed(),If(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.cumsum=function(n,e,t){return this.throwIfDisposed(),Ux(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.depthToSpace=function(n,e){return this.throwIfDisposed(),lN(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.depthwiseConv2d=function(n,e,t,s,r,a){return this.throwIfDisposed(),Zh(this,n,e,t,s,r,a)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.dilation2d=function(n,e,t,s,r){return this.throwIfDisposed(),cN(this,n,e,t,s,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.divNoNan=function(n){return this.throwIfDisposed(),dN(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.div=function(n){return this.throwIfDisposed(),$e(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.dot=function(n){return this.throwIfDisposed(),hN(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.elu=function(){return this.throwIfDisposed(),Jh(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.equal=function(n){return this.throwIfDisposed(),wr(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.erf=function(){return this.throwIfDisposed(),Gx(this)};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.euclideanNorm=function(n,e){return this.throwIfDisposed(),mN(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.exp=function(){return this.throwIfDisposed(),Is(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.expandDims=function(n){return this.throwIfDisposed(),Hn(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.expm1=function(){return this.throwIfDisposed(),gN(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.fft=function(){return this.throwIfDisposed(),lg(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.flatten=function(){return this.throwIfDisposed(),V(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.floor=function(){return this.throwIfDisposed(),ep(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.floorDiv=function(n){return this.throwIfDisposed(),Px(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.gather=function(n,e,t){return this.throwIfDisposed(),tp(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.greaterEqual=function(n){return this.throwIfDisposed(),wo(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.greater=function(n){return this.throwIfDisposed(),Cs(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.ifft=function(){return this.throwIfDisposed(),Yc(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.irfft=function(){return this.throwIfDisposed(),iw(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.isFinite=function(){return this.throwIfDisposed(),yN(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.isInf=function(){return this.throwIfDisposed(),bN(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.isNaN=function(){return this.throwIfDisposed(),xN(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.leakyRelu=function(n){return this.throwIfDisposed(),Zm(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.lessEqual=function(n){return this.throwIfDisposed(),wi(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.less=function(n){return this.throwIfDisposed(),qc(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.localResponseNormalization=function(n,e,t,s){return this.throwIfDisposed(),wN(this,n,e,t,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.logSigmoid=function(){return this.throwIfDisposed(),vN(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.logSoftmax=function(n){return this.throwIfDisposed(),qx(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.logSumExp=function(n,e){return this.throwIfDisposed(),Qm(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.log=function(){return this.throwIfDisposed(),Ps(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.log1p=function(){return this.throwIfDisposed(),Jm(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.logicalAnd=function(n){return this.throwIfDisposed(),Xr(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.logicalNot=function(){return this.throwIfDisposed(),eg(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.logicalOr=function(n){return this.throwIfDisposed(),Kx(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.logicalXor=function(n){return this.throwIfDisposed(),IN(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.matMul=function(n,e,t){return this.throwIfDisposed(),Ke(this,n,e,t)};ee().prototype.maxPool=function(n,e,t,s){return this.throwIfDisposed(),tg(this,n,e,t,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.max=function(n,e){return this.throwIfDisposed(),er(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.maximum=function(n){return this.throwIfDisposed(),$a(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.mean=function(n,e){return this.throwIfDisposed(),Wt(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.min=function(n,e){return this.throwIfDisposed(),jc(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.minimum=function(n){return this.throwIfDisposed(),ni(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.mirrorPad=function(n,e){return this.throwIfDisposed(),kN(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.mod=function(n){return this.throwIfDisposed(),NN(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.mul=function(n){return this.throwIfDisposed(),B(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.neg=function(){return this.throwIfDisposed(),Dt(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.norm=function(n,e,t){return this.throwIfDisposed(),Qh(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.notEqual=function(n){return this.throwIfDisposed(),vu(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.oneHot=function(n,e=1,t=0){return this.throwIfDisposed(),Yx(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.onesLike=function(){return this.throwIfDisposed(),Ls(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.pad=function(n,e){return this.throwIfDisposed(),vo(this,n,e)};ee().prototype.pool=function(n,e,t,s,r,a){return this.throwIfDisposed(),CN(this,n,e,t,s,r,a)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.pow=function(n){return this.throwIfDisposed(),Sa(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.prelu=function(n){return this.throwIfDisposed(),rg(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.prod=function(n,e){return this.throwIfDisposed(),TN(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.reciprocal=function(){return this.throwIfDisposed(),$N(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.relu=function(){return this.throwIfDisposed(),ea(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.relu6=function(){return this.throwIfDisposed(),Qx(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.reshapeAs=function(n){return this.throwIfDisposed(),V(this,n.shape)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.reshape=function(n){return this.throwIfDisposed(),V(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.resizeBilinear=function(n,e,t){return this.throwIfDisposed(),GN(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.resizeNearestNeighbor=function(n,e,t){return this.throwIfDisposed(),HN(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.reverse=function(n){return this.throwIfDisposed(),sr(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.rfft=function(){return this.throwIfDisposed(),cg(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.round=function(){return this.throwIfDisposed(),ew(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.rsqrt=function(){return this.throwIfDisposed(),tw(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.selu=function(){return this.throwIfDisposed(),nw(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.separableConv2d=function(n,e,t,s,r,a){return this.throwIfDisposed(),sw(this,n,e,t,s,r,a)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.sigmoid=function(){return this.throwIfDisposed(),Wr(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.sign=function(){return this.throwIfDisposed(),_N(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.sin=function(){return this.throwIfDisposed(),rw(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.sinh=function(){return this.throwIfDisposed(),aw(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.slice=function(n,e){return this.throwIfDisposed(),tt(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.softmax=function(n){return this.throwIfDisposed(),ug(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.softplus=function(){return this.throwIfDisposed(),ec(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.spaceToBatchND=function(n,e){return this.throwIfDisposed(),sg(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.split=function(n,e){return this.throwIfDisposed(),bs(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.sqrt=function(){return this.throwIfDisposed(),Tn(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.square=function(){return this.throwIfDisposed(),kt(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.squaredDifference=function(n){return this.throwIfDisposed(),uw(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.squeeze=function(n){return this.throwIfDisposed(),Ii(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.stack=function(n,e){this.throwIfDisposed();const t=n instanceof Bt?[this,n]:[this,...n];return Ss(t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.step=function(n){return this.throwIfDisposed(),tc(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.stridedSlice=function(n,e,t,s,r,a,o,i){return this.throwIfDisposed(),EN(this,n,e,t,s,r,a,o,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.sub=function(n){return this.throwIfDisposed(),we(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.sum=function(n,e){return this.throwIfDisposed(),Ne(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.tan=function(){return this.throwIfDisposed(),AN(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.tanh=function(){return this.throwIfDisposed(),ti(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.tile=function(n){return this.throwIfDisposed(),Xs(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.toBool=function(){return this.throwIfDisposed(),fe(this,"bool")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.toFloat=function(){return this.throwIfDisposed(),fe(this,"float32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.toInt=function(){return this.throwIfDisposed(),fe(this,"int32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.topk=function(n,e){return this.throwIfDisposed(),RN(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.transpose=function(n){return this.throwIfDisposed(),nt(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.unique=function(n){return this.throwIfDisposed(),ON(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.unsortedSegmentSum=function(n,e){return this.throwIfDisposed(),dw(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.unstack=function(n){return this.throwIfDisposed(),rr(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.where=function(n,e){return this.throwIfDisposed(),Pn(n,this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ee().prototype.zerosLike=function(){return this.throwIfDisposed(),st(this)};/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Fr extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Fr.prototype)}}class Ys extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Ys.prototype)}}class W extends Error{constructor(e){super(e),Object.setPrototypeOf(this,W.prototype)}}class Ge extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Ge.prototype)}}class Kw extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Kw.prototype)}}/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class $C{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const s=this.cache.keys().next().value;this.cache.delete(s)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const s=this.cache.keys().next().value;this.cache.delete(s)}this.maxEntries=e}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ri(n,e){if(Array.isArray(n)){let t=[];for(let s=0;s<e;s++)t=t.concat(n);return t}else{const t=new Array(e);return t.fill(n),t}}function Pr(n,e){if(!n)throw new Kw(e)}function S1(n,e){let t=0;for(const s of n)s===e&&t++;return t}function es(n){return n.length===1?n[0]:n}function bt(n){return Array.isArray(n)?n:[n]}function ia(n){const t=n.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return t[0]!=="_"?t:"private"+t}function Fo(n){return n.length<=1||n.indexOf("_")===-1?n:n.replace(/[_]+(\w|$)/g,(e,t)=>t.toUpperCase())}let Us={};function Xw(n){if(n==null)return null;const e={};return e.className=n.getClassName(),e.config=n.getConfig(),e}function db(n){if(!(n==null||typeof n!="object"))if(Array.isArray(n))n.forEach(e=>db(e));else{const e=Object.keys(n);for(const t of e){const s=n[t];s!=null&&typeof s=="object"&&(!Array.isArray(s)&&s.type==="ndarray"&&typeof s.value=="number"?n[t]=s.value:db(s))}}}function sp(n,e={},t={},s="object",r=!1){if(typeof n=="string"){const a=n;let o;if(a in t)o=t[a];else if(a in Us)o=Us[a];else if(o=e[a],o==null)throw new W(`Unknown ${s}: ${n}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return o}else{const a=n;if(a.className==null||a.config==null)throw new W(`${s}: Improper config format: ${JSON.stringify(a)}.
'className' and 'config' must set.`);const o=a.className;let i,u;if(o in t?[i,u]=t[o]:o in Us?[i,u]=Us.className:o in e&&([i,u]=e[o]),i==null)throw new W(`Unknown ${s}: ${o}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(u!=null){const c={};for(const p of Object.keys(Us))c[p]=Us[p];for(const p of Object.keys(t))c[p]=t[p];const l=a.config;l.customObjects=c;const d=Object.assign({},Us);for(const p of Object.keys(t))Us[p]=t[p];db(a.config);const h=u(i,a.config,t,r);return Us=Object.assign({},d),h}else{const c=Object.assign({},Us);for(const d of Object.keys(t))Us[d]=t[d];const l=new i(a.config);return Us=Object.assign({},c),l}}}function RH(n,e){return n<e?-1:n>e?1:0}function Ap(n,e){return-1*RH(n,e)}function Xa(n){if(n==null)return n;const e=[];for(const t of n)e.indexOf(t)===-1&&e.push(t);return e}function OH(n){if(n==null)throw new W(`Invalid value in obj: ${JSON.stringify(n)}`);for(const e in n)if(n.hasOwnProperty(e))return!1;return!0}function Ci(n,e,t){if(t!=null&&n.indexOf(t)<0)throw new W(`${t} is not a valid ${e}.  Valid values are ${n} or null/undefined.`)}function Yw(n,e,t=0,s=1/0){return Pr(t>=0),Pr(s>=t),Array.isArray(n)&&n.length>=t&&n.length<=s&&n.every(r=>typeof r===e)}function xn(n,e){Array.isArray(n)?(_(n.length>0,()=>`${e} is unexpectedly an empty array.`),n.forEach((t,s)=>xn(t,`element ${s+1} of ${e}`))):_(Number.isInteger(n)&&n>0,()=>`Expected ${e} to be a positive integer, but got ${_C(n)}.`)}function _C(n){return n===null?"null":Array.isArray(n)?"["+n.map(e=>_C(e)).join(",")+"]":typeof n=="string"?`"${n}"`:`${n}`}function FH(n,e,t){let s=t!=null?t():Rn(),r;return(...o)=>{const i=t!=null?t():Rn();return i-s<e||(s=i,r=n(...o)),r}}function EC(n){return n==="relu"?"relu":n==="linear"?"linear":n==="elu"?"elu":null}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let PH=0;function AC(){return PH++}const Dp={};function _g(n=""){return n in Dp||(Dp[n]=0),Dp[n]+=1,n+Dp[n].toString()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const LH=["channelsFirst","channelsLast"],MH=["nearest","bilinear"],BH=["valid","same","causal"],zH=["max","avg"],VH=["sum","mul","concat","ave"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Vi=new Map;function Xt(n){Ci(LH,"DataFormat",n)}function WH(n){Ci(MH,"InterpolationFormat",n)}function zs(n){Ci(BH,"PaddingMode",n)}function DC(n){Ci(zH,"PoolMode",n)}const Dc=[],k1="/";function Ho(n,e){Dc.push(n);try{const t=e();return Dc.pop(),t}catch(t){throw Dc.pop(),t}}function UH(){return Dc.length===0?"":Dc.join(k1)+k1}function RC(n){if(!FC(n))throw new Error("Not a valid tensor name: '"+n+"'");return UH()+n}function OC(n){if(!FC(n))throw new Error("Not a valid tensor name: '"+n+"'");Vi.has(n)||Vi.set(n,0);const e=Vi.get(n);if(Vi.set(n,Vi.get(n)+1),e>0){const t=`${n}_${e}`;return Vi.set(t,1),t}else return n}const GH=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function FC(n){return!!n.match(GH)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function HH(n){return n===parseInt(n.toString(),10)}function Ya(n,e,t){e==null&&(e=0),t==null&&(t=n.length);let s=1;for(let r=e;r<t;++r)s*=n[r];return s}function Su(n){if(n.length===0)return Number.NaN;let e=Number.POSITIVE_INFINITY;for(let t=0;t<n.length;t++){const s=n[t];s<e&&(e=s)}return e}function io(n){if(n.length===0)return Number.NaN;let e=Number.NEGATIVE_INFINITY;for(let t=0;t<n.length;t++){const s=n[t];s>e&&(e=s)}return e}function vr(n,e){if(e<n)throw new W(`end (${e}) < begin (${n}) is forbidden.`);const t=[];for(let s=n;s<e;++s)t.push(s);return t}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let my;function ln(){return my==null&&(my=Ck().epsilon()),my}function Ir(){return"channelsLast"}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Ur(n,e){return fe(n,e)}function rp(n,e=-1){const t=n.shape.slice();return e<0&&(e=t.length+e+1),t.splice(e,0,1),V(n,t)}function jH(n,e){return j(()=>{if(n.shape.length!==2)throw new W(`repeat() expects a rank-2 tensor, but received a rank-${n.shape.length} tensor.`);const t=rp(n,1);return hb(t,[1,e,1])})}function qH(n){const e=[Ya(n.shape)];return V(n,e)}function KH(n){if(n.rank<=1)throw new W(`batchFlatten requires a minimum rank of 2. Got rank: ${n.rank}.`);const e=[n.shape[0],Ya(n.shape,1)];return V(n,e)}function jo(n,e,t){return j(()=>{switch(n.rank){case 1:return og(n,e,t);case 2:return ow(n,[e,0],[t,n.shape[1]]);case 3:return ig(n,[e,0,0],[t,n.shape[1],n.shape[2]]);case 4:return Xc(n,[e,0,0,0],[t,n.shape[1],n.shape[2],n.shape[3]]);case 5:return tt(n,[e,0,0,0,0],[t,n.shape[1],n.shape[2],n.shape[3],n.shape[4]]);case 6:return tt(n,[e,0,0,0,0,0],[t,n.shape[1],n.shape[2],n.shape[3],n.shape[4],n.shape[5]]);default:throw new W(`sliceAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}})}function gy(n,e,t){return j(()=>{switch(n.rank){case 1:return og(n,e,t);case 2:return ow(n,[0,e],[n.shape[0],t]);case 3:return ig(n,[0,0,e],[n.shape[0],n.shape[1],t]);case 4:return Xc(n,[0,0,0,e],[n.shape[0],n.shape[1],n.shape[2],t]);default:throw new W(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function Rp(n,e,t,s){return j(()=>{switch(n.rank){case 1:return og(n,e,t);case 2:switch(s){case 1:return jo(n,e,t);case 2:return gy(n,e,t);default:throw new W(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return jo(n,e,t);case 2:return ig(n,[0,e,0],[n.shape[0],t,n.shape[2]]);case 3:return gy(n,e,t);default:throw new W(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return jo(n,e,t);case 2:return Xc(n,[0,e,0,0],[n.shape[0],t,n.shape[2],n.shape[3]]);case 3:return Xc(n,[0,0,e,0],[n.shape[0],n.shape[1],t,n.shape[3]]);case 4:return gy(n,e,t);default:throw new W(`The axis is not within the rank of the tensor ${s}`)}default:throw new W(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function Zw(n,e=-1){let t;return e<0&&(t=n[0].rank,t!==0?e=t:e=0),e===n[0].rank&&(e=-1),tn(n,e)}function N1(n,e){switch(n.rank){case 1:return nN([n,e]);case 2:return sN([n,e],0);case 3:return rN([n,e],0);case 4:return aN([n,e],0);default:throw new W(`concatAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}}function hb(n,e){if(Array.isArray(e)||(e=[e]),n.rank!==e.length)throw new W(`The length of input n (${e.length}) does not match the number of dimensions in input x (${n.rank})`);return Xs(n,e)}function Eg(n,e=0,t=1,s,r){return Jx(n,e,t,s,r)}function Gr(n,e,t,s){if(n.rank<2||e.rank<2)throw new Ge(`dot requires both inputs to be rank >= 2 but got x shape = ${n.shape} and y shape = ${e.shape}`);if(e.rank>=3){const r=n.shape.slice(-1)[0],a=e.shape.slice(-2)[0];if(r!==a)throw new Ge(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${n.shape} and  y shape = ${e.shape}`)}if(n.rank===2&&e.rank===2)return ub({a:n,b:e,transposeA:!1,transposeB:!1,bias:s?pb(n.rank,s,Ir()):null,activation:t});{const r=n.shape.slice(),a=r.pop();n=V(n,[-1,a]);const o=e.shape.slice(),i=o.pop(),u=o.pop(),c=[...o,i],l=Array.from({length:e.rank},(f,m)=>m===0?e.rank-2:m<=e.rank-2?m-1:m);e=V(nt(e,l),[u,-1]);const d=[...r,...c];return V(ub({a:n,b:e,transposeA:!1,transposeB:!1,bias:s?pb(n.rank,s,Ir()):null,activation:t}),d)}}function PC(n,e,t){return j(()=>(Array.isArray(e)?e=On(e,"int32"):e=fe(e,"int32"),tp(n,e,t)))}function ap(n){return B(n,n)}function pb(n,e,t){const s=e.shape;if(e.rank!==1&&e.rank!==n)throw new W(`Unexpected bias dimensions: ${e.rank}; expected it to be 1 or ${n}`);if(n===5){if(t==="channelsFirst")return s.length===1?V(e,[1,s[0],1,1,1]):V(e,[1,s[3],s[0],s[1],s[2]]);if(t==="channelsLast")return s.length===1?V(e,[1,1,1,1,s[0]]):V(e,[1].concat(s))}else if(n===4){if(t==="channelsFirst")return s.length===1?V(e,[1,s[0],1,1]):V(e,[1,s[2],s[0],s[1]]);if(t==="channelsLast")return s.length===1?V(e,[1,1,1,s[0]]):V(e,[1].concat(s))}else if(n===3){if(t==="channelsFirst")return s.length===1?V(e,[1,s[0],1]):V(e,[1,s[1],s[0]]);if(t==="channelsLast")return s.length===1?V(e,[1,1,s[0]]):V(e,[1].concat(s))}else if(n<3)return e;throw new W(`Unsupported input rank by biasAdd: ${e.rank}`)}function $r(n,e,t){return j(()=>(t==null&&(t=Ir()),Xt(t),se(n,pb(n.rank,e,t))))}function XH(n,e=1){if(e!==1)throw new Ge(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return Jh(n)}function YH(n){return j(()=>$e(n,se(an(n),1)))}function LC(n,e,t,s){return j(()=>LN(n,e,t,s))}function ZH(n){return j(()=>{const e=se(.5,B(.2,n));return vs(e,0,1)})}function op(n,e,t=!1){return t?n():e()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const JH=["fanIn","fanOut","fanAvg"],QH=["normal","uniform","truncatedNormal"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ej(n){Ci(JH,"FanMode",n)}function tj(n){Ci(QH,"Distribution",n)}class ar extends sc{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class MC extends ar{apply(e,t){return un(e,t)}}MC.className="Zeros";re(MC);class Jw extends ar{apply(e,t){return gs(e,t)}}Jw.className="Ones";re(Jw);class BC extends ar{constructor(e){if(super(),typeof e!="object")throw new W(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new W(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return j(()=>B(Ae(this.value),gs(e,t)))}getConfig(){return{value:this.value}}}BC.className="Constant";re(BC);class zC extends ar{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return vi(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}zC.className="RandomUniform";re(zC);class VC extends ar{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Ge(`randomNormal does not support dType ${t}.`);return Eg(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}VC.className="RandomNormal";re(VC);class WC extends ar{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Ge(`truncatedNormal does not support dType ${t}.`);return cw(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}WC.className="TruncatedNormal";re(WC);class UC extends ar{constructor(e){super(),this.gain=e.gain!=null?e.gain:1}apply(e,t){return j(()=>{if(e.length!==2||e[0]!==e[1])throw new W("Identity matrix initializer can only be used for 2D square matrices.");return B(this.gain,jx(e[0]))})}getConfig(){return{gain:this.gain}}}UC.className="Identity";re(UC);function nj(n,e="channelsLast"){let t,s;if(Xt(e),n.length===2)t=n[0],s=n[1];else if([3,4,5].indexOf(n.length)!==-1){if(e==="channelsFirst"){const r=Ya(n,2);t=n[1]*r,s=n[0]*r}else if(e==="channelsLast"){const r=Ya(n,0,n.length-2);t=n[n.length-2]*r,s=n[n.length-1]*r}}else{const r=Ya(n);t=Math.sqrt(r),s=Math.sqrt(r)}return[t,s]}class ks extends ar{constructor(e){if(super(),e.scale<0)throw new W(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,ej(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,tj(this.distribution),this.seed=e.seed}apply(e,t){const s=nj(e),r=s[0],a=s[1];let o=this.scale;if(this.mode==="fanIn"?o/=Math.max(1,r):this.mode==="fanOut"?o/=Math.max(1,a):o/=Math.max(1,(r+a)/2),this.distribution==="normal"){const i=Math.sqrt(o);if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Ge(`${this.getClassName()} does not support dType ${t}.`);return cw(e,0,i,t,this.seed)}else{const i=Math.sqrt(3*o);return vi(e,-i,i,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}ks.className="VarianceScaling";re(ks);class Qw extends ks{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return ks.className}}Qw.className="GlorotUniform";re(Qw);class e0 extends ks{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return ks.className}}e0.className="GlorotNormal";re(e0);class t0 extends ks{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return ks.className}}t0.className="HeNormal";re(t0);class n0 extends ks{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return ks.className}}n0.className="HeUniform";re(n0);class s0 extends ks{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return ks.className}}s0.className="LeCunNormal";re(s0);class r0 extends ks{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return ks.className}}r0.className="LeCunUniform";re(r0);class GC extends ar{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,t){return j(()=>{if(e.length<2)throw new Ge("Shape must be at least 2D.");if(t!=="int32"&&t!=="float32"&&t!==void 0)throw new TypeError(`Unsupported data type ${t}.`);t=t;const s=U(e.slice(0,-1)),r=e[e.length-1],a=s*r;a>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${a}) elements: Slowness may result.`);const o=[Math.max(r,s),Math.min(r,s)],i=Eg(o,0,1,t,this.seed),u=jN.qr(i,!1);let c=u[0];const d=u[1].flatten().stridedSlice([0],[Math.min(r,s)*Math.min(r,s)],[Math.min(r,s)+1]);return c=B(c,d.sign()),s<r&&(c=c.transpose()),B(Ae(this.gain),c.reshape(e))})}getConfig(){return{gain:this.gain,seed:this.seed}}}GC.className="Orthogonal";re(GC);const C1={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function T1(n,e={}){return sp(n,Ks.getMap().classNameMap,e,"initializer")}function zt(n){return Xw(n)}function Ft(n){if(typeof n=="string"){const e=n in C1?C1[n]:n;if(e==="GlorotNormal")return new e0;if(e==="GlorotUniform")return new Qw;if(e==="HeNormal")return new t0;if(e==="HeUniform")return new n0;if(e==="LeCunNormal")return new s0;if(e==="LeCunUniform")return new r0;{const t={};return t.className=e,t.config={},T1(t)}}else return n instanceof ar?n:T1(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function fb(n){return Array.isArray(n)&&Array.isArray(n[0])}function Sf(n){return n.length===0?[]:Array.isArray(n[0])?n:[n]}function Fe(n){let e;if(Array.isArray(n)){if(n.length!==1)throw new W(`Expected Tensor length to be 1; got ${n.length}`);e=n[0]}else e=n;return e}function ct(n){if(Array.isArray(n)&&Array.isArray(n[0])){if(n.length===1)return n=n,n[0];throw new W(`Expected exactly 1 Shape; got ${n.length}`)}else return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function kf(n){let e=0;for(const t of n)t.shape.length===0?e+=1:e+=t.shape.reduce((s,r)=>s*r);return e}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const $1="Variable";class sj{constructor(e,t="float32",s=$1,r=!0,a=null){this.dtype=t??"float32",this.shape=e.shape,this.id=AC(),s=s??$1,this.originalName=RC(s),this.name=OC(this.originalName),this.trainable_=r,this.constraint=a,this.val=FN(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),rj(this.val,e),this.val.id!==e.id&&(this.val.assign(e),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function rj(n,e){if(n.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(n.shape)+" vs. "+JSON.stringify(e.shape))}function mb(n){return n.map(e=>e.read())}function a0(n){n.forEach(e=>{e[0].write(e[1])})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class cn{constructor(e){this.dtype=e.dtype,this.shape=e.shape,e.shape!=null?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class Yr{constructor(e,t,s,r,a,o,i){this.dtype=e,this.shape=t,this.sourceLayer=s,this.inputs=r,this.callArgs=a,this.outputTensorIndex=i,this.id=AC(),o!=null&&(this.originalName=RC(o),this.name=OC(this.originalName)),this.rank=t.length}}let aj=0,Ag=class{constructor(e,t){this.callArgs=t,this.id=aj++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const s of e.inboundLayers)s!=null&&s.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)t!=null?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},oj=0;class Ye extends sc{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=oj++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const s=this.getClassName();t=ia(s)+"_"+_g(s)}if(this.name=t,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let s;if(e.batchInputShape!=null)s=e.batchInputShape;else if(e.inputShape!=null){let a=null;e.batchSize!=null&&(a=e.batchSize),s=[a].concat(e.inputShape)}this.batchInputShape=s;let r=e.dtype;r==null&&(r=e.inputDType),r==null&&(r="float32"),this.dtype=r}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(this.inboundNodes.length===0)throw new Ys(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new W(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return es(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return es(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Fr(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new Fr(`Layer ${this.name} is not connected, no input to return.`);return es(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new Fr(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Fr(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return es(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){const t=bt(e);if(this.inputSpec==null||this.inputSpec.length===0)return;const s=bt(this.inputSpec);if(t.length!==s.length)throw new W(`Layer ${this.name} expects ${s.length} inputs, but it received ${t.length} input tensors. Input received: ${e}`);for(let r=0;r<t.length;r++){const a=t[r],o=s[r];if(o==null)continue;const i=a.rank;if(o.ndim!=null&&i!==o.ndim)throw new W(`Input ${r} is incompatible with layer ${this.name}: expected ndim=${o.ndim}, found ndim=${i}`);if(o.maxNDim!=null&&i>o.maxNDim)throw new W(`Input ${r} is incompatible with layer ${this.name}: expected max_ndim=${o.maxNDim}, found ndim=${i}`);if(o.minNDim!=null&&i<o.minNDim)throw new W(`Input ${r} is incompatible with layer ${this.name}: expected min_ndim=${o.minNDim}, found ndim=${i}.`);if(o.dtype!=null&&a.dtype!==o.dtype)throw new W(`Input ${r} is incompatible with layer ${this.name} : expected dtype=${o.dtype}, found dtype=${a.dtype}.`);if(o.axes){const u=a.shape;for(const c in o.axes){const l=Number(c),d=o.axes[c],h=l>=0?u[l]:u[u.length+l];if(d!=null&&[d,null].indexOf(h)===-1)throw new W(`Input ${r} is incompatible with layer ${this.name}: expected axis ${l} of input shape to have value ${d} but got shape ${u}.`)}}if(o.shape!=null)for(let u=0;u<o.shape.length;++u){const c=o.shape[u],l=a.shape[u];if(c!=null&&l!=null&&c!==l)throw new W(`Input ${r} is incompatible with layer ${this.name}: expected shape=${o.shape}, found shape=${a.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){this._callHook!=null&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const s=bt(e),r=lj(e),a=cj(e);if(r===a)throw new W("Arguments to apply() must be all SymbolicTensors or all Tensors");return Ho(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);const o=[];for(const i of bt(e))o.push(i.shape);this.build(es(o)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&a&&(this._refCount=1)}if(this.assertInputCompatibility(e),a){let o=this.call(e,t);this.supportsMasking&&this.setMaskMetadata(e,o);const i=bt(o),u=[];for(let c of i)s.indexOf(c)!==-1&&(c=c.clone()),u.push(c);if(o=es(u),this.activityRegularizer!=null)throw new Ge("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return o}else{const o=ij(e),i=this.computeOutputShape(o);let u;const c=uj(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?o[0]:o),i!=null&&i.length>0&&Array.isArray(i[0])?u=i.map((l,d)=>new Yr(c,l,this,bt(e),t,this.name,d)):u=new Yr(c,i,this,bt(e),t,this.name),this.addInboundNode(e,u,null,null,o,i,t),this._refCount++,this.activityRegularizer!=null)throw new Ge("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return u}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((s,r)=>{s!=null&&e[r]!=null&&e[r]!==s&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new Fr(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const s=JSON.stringify(t.outputShapes);e.indexOf(s)===-1&&e.push(s)}if(e.length===1){const t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&t.length===1?t[0]:t}else throw new Fr(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Ys(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return kf(this.weights)}build(e){this.built=!0}getWeights(e=!1){return mb(e?this.trainableWeights:this.weights)}setWeights(e){j(()=>{const t=this.weights;if(t.length!==e.length)throw new W(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(t.length===0)return;const s=[],r=mb(t);for(let a=0;a<r.length;++a){const o=r[a],i=t[a],u=e[a];if(!Qe(o.shape,u.shape))throw new W(`Layer weight shape ${o.shape} not compatible with provided weight shape ${u.shape}`);s.push([i,u])}a0(s)})}addWeight(e,t,s,r,a,o,i,u){if(this._addedWeightNames.indexOf(e)!==-1)throw new W(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),s==null&&(s="float32"),this.fastWeightInitDuringBuild&&(r=u!=null?u():Ft("zeros"));const c=r.apply(t,s),l=new sj(c,s,e,o,i);return c.dispose(),a!=null&&this.addLoss(()=>a.apply(l.read())),o==null&&(o=!0),o?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=bt(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(t!=null)if(Array.isArray(t))t.forEach(s=>{if(s!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return t}setMaskMetadata(e,t,s){if(!this.supportsMasking)return;const r=this.computeMask(e,s),a=bt(t),o=bt(r);if(a.length!==o.length)throw new Error(`${this.name} outputs ${a.length} tensors but ${a.length} masks for those tensors`);for(let i=0;i<a.length;i++)a[i].kerasMask=o[i]}addInboundNode(e,t,s,r,a,o,i=null){const u=bt(e);t=bt(t),s=bt(s),r=bt(r),a=Sf(a),o=Sf(o);const c=[],l=[],d=[];for(const h of u)c.push(h.sourceLayer),l.push(h.nodeIndex),d.push(h.tensorIndex);new Ag({outboundLayer:this,inboundLayers:c,nodeIndices:l,tensorIndices:d,inputTensors:u,outputTensors:t,inputMasks:s,outputMasks:r,inputShapes:a,outputShapes:o},i);for(let h=0;h<t.length;h++)t[h].sourceLayer=this,t[h].nodeIndex=this.inboundNodes.length-1,t[h].tensorIndex=h}getConfig(){const e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount===0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function ij(n){n=bt(n);const e=[];for(const t of n)e.push(t.shape);return es(e)}function uj(n){return"float32"}function HC(n,e,t){if((e==null||t!=null&&t>0)&&(e=n.sourceLayer,t=n.nodeIndex),e.inboundNodes.length===0)return[n];{const s=e.inboundNodes[t];if(s.inboundLayers.length===0)return s.inputTensors;{const r=[];for(let a=0;a<s.inboundLayers.length;a++){const o=s.inputTensors[a],i=s.inboundLayers[a],u=s.nodeIndices[a],c=HC(o,i,u);for(const l of c)r.indexOf(l)===-1&&r.push(l)}return r}}}function lj(n){let e=!0;for(const t of bt(n))if(!(t instanceof Yr)){e=!1;break}return e}function cj(n){let e=!0;for(const t of bt(n))if(t instanceof Yr){e=!1;break}return e}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class ip extends Ye{constructor(e){if(super({dtype:e.dtype,name:e.name!=null?e.name:_g("input").toString()}),e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new W("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(t==null){if(e.inputShape==null)throw new W("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new W("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const s=e.dtype||"float32";this.batchInputShape=t,this.dtype=s,this.inputSpec=[{shape:t}];const r=new Yr(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new Ag({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new W(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}ip.className="InputLayer";re(ip);function dj(n){if(n.batchShape==null&&n.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(n.batchShape!=null&&n.shape!=null)throw new W("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=n.batchShape;n.shape!=null&&e==null&&(e=[null].concat(n.shape));let t=n.dtype;return t==null&&(t="float32"),new ip({batchInputShape:e,name:n.name,dtype:t,sparse:n.sparse}).inboundNodes[0].outputTensors[0]}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function hj(n,e){if(n.dtype==null||n.dtype===e.dtype)return e;try{return fe(e,n.dtype)}catch{throw new W(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${n.name}' (${n.dtype}).`)}}class Ua{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof Ua)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(e==null)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,s){if(this.id2Value[e.id]==null)this.id2Value[e.id]=hj(e,t),this.name2Id[e.name]=e.id,s!=null&&(this.id2Mask[e.id]=s);else throw new W(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return this.id2Value[e.id]!=null}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof Yr){if(this.id2Value[e.id]==null)throw new W(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}else{const t=this.name2Id[e];if(t==null)throw new W(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof Yr){if(this.id2Value[e.id]==null)throw new W(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}else{const t=this.name2Id[e];if(t==null)throw new W(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){this.id2Mask!=null&&Xe(this.id2Mask)}}const Nf=new $C,Cf=new $C;function pj(n){Nf!=null&&Nf.setMaxEntries(n),Cf!=null&&Cf.setMaxEntries(n)}function Tc(n,e,t,s){const r=t==null?!1:t.training,a=Array.isArray(n),o=a?n:[n],i=o.map(f=>f.name),u=[],c=e.names();for(const f of i)c.indexOf(f)!==-1?u.push(e.getValue(f)):u.push(null);const l=i.join(",")+"|"+e.names().sort().join(",");let d=Nf.get(l),h;if(d==null){const f=fj(o,e);d=f.sorted,h=f.recipientCounts,Nf.put(l,d),Cf.put(l,h)}h={},r||Object.assign(h,Cf.get(l));const p=new Ua(e);for(let f=0;f<d.length;++f){const m=d[f],g=m.sourceLayer;if(g instanceof ip)continue;const y=[],b=[],x=[];let w=!1;for(const T of m.inputs){const C=p.getValue(T),k=p.getMask(T);y.push(C),b.push(k),k!=null&&(w=!0),r||(h[T.name]--,h[T.name]===0&&!e.hasKey(T)&&i.indexOf(T.name)===-1&&!C.isDisposed&&T.sourceLayer.stateful!==!0&&x.push(C))}w&&(t=t||{},t.mask=b[0]);const v=bt(g.apply(y,t));let S=null;g.supportsMasking&&(S=g.computeMask(y,b));const N=gj(m),$=Array.isArray(N)?N:[N];for(let T=0;T<$.length;++T){p.hasKey($[T])||p.add($[T],v[T],Array.isArray(S)?S[0]:S);const C=i.indexOf($[T].name);C!==-1&&(u[C]=v[T])}r||Xe(x)}return p.disposeMasks(),a?u:u[0]}function fj(n,e){_(n!=null&&n.length>0,()=>"Expected at least one fetch, got none");let t=[],s={};if(n.length===1){const r=_1(n[0],e);t=r.sorted,s=r.recipientMap}else{const r=new Set;for(const a of n){const{sorted:o,recipientMap:i}=_1(a,e);for(const u of o)r.has(u.name)||(t.push(u),r.add(u.name));for(const u in i)s[u]==null&&(s[u]=new Set),i[u].forEach(c=>s[u].add(c))}}return{sorted:t,recipientCounts:mj(s)}}function mj(n){const e={};for(const t in n)e[t]=n[t].size;return e}function _1(n,e){const t=new Set,s=[],r={};for(const i of e.names())t.add(i);const a=[],o=[];for(a.push(n);a.length>0;){const i=a[a.length-1];if(t.has(i.name)){a.pop();continue}const u=o[o.length-1]===a.length-1;if(i.inputs.length===0||u)a.pop(),s.push(i),t.add(i.name),u&&o.pop();else{o.push(a.length-1);for(const c of i.inputs)r[c.name]==null&&(r[c.name]=new Set),r[c.name].add(i.name),!t.has(c.name)&&a.push(c)}}return{sorted:s,recipientMap:r}}function gj(n){let e;if(n.sourceLayer.inboundNodes.length===1)e=n.sourceLayer.output;else{let t=null;for(let s=0;s<n.sourceLayer.inboundNodes.length;++s)for(const r of n.sourceLayer.inboundNodes[s].outputTensors)if(r.id===n.id){t=s;break}e=n.sourceLayer.getOutputAt(t)}return e}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yj=Y();yj.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,pj);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function o0(n,e){return j(()=>Tn(Ne(B(n,n),e,!0)))}class up extends sc{getConfig(){return{}}}class jC extends up{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return j(()=>{const t=o0(e,this.axis),s=vs(t,0,this.maxValue);return B(e,$e(s,se(ln(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}jC.className="MaxNorm";re(jC);class qC extends up{constructor(e){super(),this.defaultAxis=0,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return j(()=>$e(e,se(ln(),o0(e,this.axis))))}getConfig(){return{axis:this.axis}}}qC.className="UnitNorm";re(qC);class KC extends up{apply(e){return ea(e)}}KC.className="NonNeg";re(KC);class XC extends up{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return j(()=>{const t=o0(e,this.axis),s=se(B(this.rate,vs(t,this.minValue,this.maxValue)),B(1-this.rate,t));return B(e,$e(s,se(ln(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}XC.className="MinMaxNorm";re(XC);const E1={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function hn(n){return Xw(n)}function A1(n,e={}){return sp(n,Ks.getMap().classNameMap,e,"constraint")}function pn(n){if(n==null)return null;if(typeof n=="string"){const t={className:n in E1?E1[n]:n,config:{}};return A1(t)}else return n instanceof up?n:A1(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function Ao(n){if(n==null)return;const e=[],t=[],s=[];for(const r in n){const a=n[r];if(typeof a!="number"){const o=a;e.push(o.data()),t.push(r),s.push(o)}}if(e.length>0){const r=await Promise.all(e);for(let a=0;a<r.length;++a)n[t[a]]=r[a][0];Xe(s)}}function YC(n){if(n!=null)for(const e in n){const t=n[e];typeof t!="number"&&t.dispose()}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var D1;(function(n){n[n.SILENT=0]="SILENT",n[n.VERBOSE=1]="VERBOSE"})(D1||(D1={}));const bj=125;class Jc{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class xj{constructor(e,t=10){e==null&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onEpochBegin(e,t)}async onEpochEnd(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onEpochEnd(e,t)}async onBatchBegin(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onBatchBegin(e,t)}async onBatchEnd(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onBatchEnd(e,t)}async onTrainBegin(e){e==null&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){e==null&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class wj extends Jc{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){t==null&&(t={});const s=t.size==null?0:t.size;this.seen+=s;for(const r in t){const a=t[r];if(typeof a=="number")this.totals.hasOwnProperty(r)||(this.totals[r]=0),this.totals[r]=this.totals[r]+a*s;else{let o;r in this.totals?o=this.totals[r]:this.totals[r]=0;const i=j(()=>se(this.totals[r],B(a,s)));this.totals[r]=i,o!=null&&o.dispose()}}}async onEpochEnd(e,t){if(t!=null)for(const s of this.params.metrics)this.totals[s]!=null&&(typeof this.totals[s]=="number"?t[s]=this.totals[s]/this.seen:j(()=>{const r=B($e(1,this.seen),this.totals[s]);t[s]=r,this.totals[s].dispose(),bn(t[s])}))}}class vj extends Jc{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){t==null&&(t={}),this.epoch.push(e);for(const s in t)this.history[s]==null&&(this.history[s]=[]),this.history[s].push(t[s])}async syncData(){const e=[],t=[],s=[];for(const a in this.history){const o=this.history[a];for(let i=0;i<o.length;++i)if(typeof o[i]!="number"){const u=o[i];e.push(u.data()),t.push(a),s.push(i)}}const r=await Promise.all(e);for(let a=0;a<r.length;++a)this.history[t[a]][s[a]].dispose(),this.history[t[a]][s[a]]=r[a][0]}}class Ij extends Jc{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||pC,this.yieldEvery=t||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=bj),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");jy(this.yieldEvery)&&(this.maybeWait=FH(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,s){const r=[];this.yield!=null&&(await Ao(s),r.push(this.yield(e,t,s))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,this.epochBegin!=null&&(await Ao(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const s=[];this.epochEnd!=null&&(await Ao(t),s.push(this.epochEnd(e,t))),this.yieldEvery==="epoch"&&s.push(this.nextFrameFunc()),await Promise.all(s)}async onBatchBegin(e,t){this.batchBegin!=null&&(await Ao(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const s=[];this.batchEnd!=null&&(await Ao(t),s.push(this.batchEnd(e,t))),this.yieldEvery==="batch"?s.push(this.nextFrameFunc()):jy(this.yieldEvery)&&s.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(s)}async onTrainBegin(e){this.trainBegin!=null&&(await Ao(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await Ao(e),await this.trainEnd(e))}}function ZC(n,e){return n==null&&(n={}),n instanceof Jc?[n]:Array.isArray(n)&&n[0]instanceof Jc?n:bt(n).map(s=>new Ij(s,e))}class js{constructor(){}static registerCallbackConstructor(e,t){_(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),js.checkForDuplicate(t),js.constructors[e]==null&&(js.constructors[e]=[]),js.constructors[e].push(t)}static checkForDuplicate(e){for(const t in js.constructors)js.constructors[+t].forEach(r=>{if(r===e)throw new W("Duplicate callback constructor.")})}static clear(){js.constructors={}}static createCallbacks(e){const t=[];for(const s in js.constructors){const r=+s;e>=r&&t.push(...js.constructors[r])}return t.map(s=>new s)}}js.constructors={};function JC(n,e,t,s,r,a,o,i,u){const c=new vj,l=[new wj,...js.createCallbacks(e)];n!=null&&l.push(...n),l.push(c);const d=new xj(l);return d.setParams({epochs:t,initialEpoch:s,samples:r,steps:a,batchSize:o,verbose:e,doValidation:i,metrics:u}),{callbackList:d,history:c}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ba(n,e={},t=!1){return sp(n,Ks.getMap().classNameMap,e,"layer",t)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Tf(n,e){return j(()=>{n.dtype!=="float32"&&(n=fe(n,"float32"));const t=Ne(ap(n),e,!0),s=Ql(t.shape,ln()),r=Tn($a(t,s));return $e(n,r)})}function Dg(n,e){return j(()=>Wt(ap(we(e,n)),-1))}function i0(n,e){return j(()=>Wt(an(we(e,n)),-1))}function u0(n,e){return j(()=>{const t=we(n,e),s=vs(an(n),ln(),Number.MAX_VALUE),r=an($e(t,s));return B(100,Wt(r,-1))})}function Sj(n,e){return j(()=>{const t=vs(e,ln(),Number.MAX_VALUE),s=Ps(se(1,t)),r=vs(n,ln(),Number.MAX_VALUE),a=Ps(se(1,r));return Wt(ap(we(s,a)),-1)})}function kj(n,e){return j(()=>{const t=$a(0,we(1,B(n,e)));return Wt(ap(t),-1)})}function Nj(n,e){return j(()=>{const t=$a(0,we(1,B(n,e)));return Wt(t,-1)})}function Cj(n,e){return j(()=>{const t=Ne(B(n,e),-1),s=er(B(we(1,n),e),-1);return $a(0,se(1,we(s,t)))})}function Tj(n,e){return j(()=>{const t=Math.log(2),s=we(e,n),r=we(se(s,ec(B(-2,s))),t);return Wt(r,-1)})}function Qc(n,e,t=!1){return j(()=>{if(t)e=ug(e);else{const s=Ne(e,e.shape.length-1,!0);e=$e(e,s)}return e=vs(e,ln(),1-ln()),Dt(Ne(B(fe(n,"float32"),Ps(e)),e.shape.length-1))})}function $f(n,e,t=!1){return j(()=>{const s=fe(ep(qH(n)),"int32");e=vs(e,ln(),1-ln());const r=e.shape,a=V(Yx(s,r[r.length-1]),r);return Qc(a,e,t)})}function $j(n,e){if(!Qe(n.shape,e.shape))throw new W(`logits and labels must have the same shape, but got shapes ${JSON.stringify(n.shape)} and ${JSON.stringify(e.shape)}`);return j(()=>{const t=ea(e),s=Dt(an(e));return se(we(t,B(e,n)),Jm(Is(s)))})}function Rg(n,e){return j(()=>{let t;return t=vs(e,ln(),1-ln()),t=Ps($e(t,we(1,t))),Wt($j(n,t),-1)})}function _j(n,e){return j(()=>{const t=vs(n,ln(),1),s=vs(e,ln(),1);return Ne(B(n,Ps($e(t,s))),-1)})}function Ej(n,e){return j(()=>{const t=Ps(se(ln(),e));return Wt(we(e,B(n,t)),-1)})}function QC(n,e){return j(()=>{const t=Tf(n,-1),s=Tf(e,-1),r=B(t,s);return Dt(Ne(r,-1))})}const _f={meanSquaredError:Dg,meanAbsoluteError:i0,meanAbsolutePercentageError:u0,meanSquaredLogarithmicError:Sj,squaredHinge:kj,hinge:Nj,categoricalHinge:Cj,logcosh:Tj,categoricalCrossentropy:Qc,sparseCategoricalCrossentropy:$f,binaryCrossentropy:Rg,kullbackLeiblerDivergence:_j,poisson:Ej,cosineProximity:QC};function yy(n){if(typeof n=="string"){if(n in _f)return _f[n];let e=`Unknown loss ${n}`;throw n.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${n}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new W(e)}else return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function eT(n,e){return j(()=>{const t=B(.5,Ls(e)),s=Ur(Cs(e,t),n.dtype);return Wt(wr(n,s),-1)})}function tT(n,e){return j(()=>Ur(wr(xu(n,-1),xu(e,-1)),"float32"))}function Aj(n,e){return j(()=>fe(Ne(Xr(wr(n,1),wr(e,1))),"float32"))}function Dj(n,e){return j(()=>fe(Ne(Xr(wr(n,0),wr(e,1))),"float32"))}function Rj(n,e){return j(()=>{const t=Aj(n,e),s=Dj(n,e),r=se(t,s);return fe(Pn(Cs(r,0),$e(t,r),0),"float32")})}function Oj(n,e){return Rg(n,e)}function Fj(n,e){return n.rank===e.rank&&(n=Ii(n,[n.rank-1])),e=xu(e,-1),e.dtype!==n.dtype&&(e=fe(e,n.dtype)),fe(wr(n,e),"float32")}const Pj=Dg,Lj=Dg,Mj=i0,Bj=i0,zj=u0,Vj=u0,nT=Qc,Wj=QC,sT=$f,Ef={binaryAccuracy:eT,categoricalAccuracy:tT,precision:Rj,categoricalCrossentropy:nT,sparseCategoricalCrossentropy:sT,mse:Pj,MSE:Lj,mae:Mj,MAE:Bj,mape:zj,MAPE:Vj,cosine:Wj};function Uj(n){if(typeof n=="string"&&n in Ef)return Ef[n];if(typeof n!="string"&&n!=null)return n;throw new W(`Unknown metric ${n}`)}function Op(n){if(Pr(n!==null,`Unknown LossOrMetricFn ${n}`),typeof n=="string")return n;{let e;for(const t of Object.keys(_f))if(_f[t]===n){e=t;break}if(e!==void 0)return e;for(const t of Object.keys(Ef))if(Ef[t]===n){e=t;break}return e!==void 0?e:n.name}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Gj(n){const e={Adagrad:()=>zi.adagrad(.01),Adadelta:()=>zi.adadelta(1,.95,ln()),Adam:()=>zi.adam(.001,.9,.999,ln()),Adamax:()=>zi.adamax(.002,.9,.999,ln(),0),RMSProp:()=>zi.rmsprop(.001,.9,0,ln()),SGD:()=>zi.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,n in e)return e[n]();throw new W(`Unknown Optimizer ${n}`)}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const R1=1*1024*1024;function O1(n,e,t=!1){if(n==null||typeof n!="object"||Object.getPrototypeOf(n)!==Object.prototype||!gb(n))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(t){const s=JSON.stringify(n);s.length>R1&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${s.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${R1}.`)}}function gb(n){if(n===null)return!0;if(typeof n=="object")if(Object.getPrototypeOf(n)===Object.prototype){const e=Object.keys(n);for(const t of e)if(typeof t!="string"||!gb(n[t]))return!1;return!0}else if(Array.isArray(n)){for(const e of n)if(!gb(e))return!1;return!0}else return!1;else{const e=typeof n;return e==="string"||e==="number"||e==="boolean"}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Hj(n,e,t,s=console.log){const r=qj(n),a=["Layer (type)","Input Shape","Output shape","Param #"];r?(e=e||90,t=t||[.32,.61,.89,1]):(e=e||115,t=t||[.24,.48,.7,.8,1]),t[t.length-1]<=1&&(t=t.map(l=>Math.floor(e*l)));let o;if(!r){a.push("Receives inputs"),o=[];for(const l in n.nodesByDepth)o.push(...n.nodesByDepth[l])}s("_".repeat(e)),Af(a,t,s),s("=".repeat(e));const i=n.layers;for(let l=0;l<i.length;++l)r?Kj(i[l],t,s):Xj(i[l],t,o,s),s((l===i.length-1?"=":"_").repeat(e));n.checkTrainableWeightsConsistency();const u=jj(n),c=kf(n.nonTrainableWeights);s(`Total params: ${u+c}`),s(`Trainable params: ${u}`),s(`Non-trainable params: ${c}`),s("_".repeat(e))}function jj(n){let e;return n.collectedTrainableWeights!=null?e=kf(n.collectedTrainableWeights):e=kf(n.trainableWeights),e}function qj(n){let e=!0;const t=[],s=[];for(const r in n.nodesByDepth)t.push(n.nodesByDepth[r]);for(const r of t){if(r.length>1||r.length===1&&r[0].inboundLayers.length>1){e=!1;break}s.push(...r)}if(e)for(const r of n.layers){let a=!1;for(const o of r.inboundNodes)if(s.indexOf(o)!==-1)if(a){e=!1;break}else a=!0;if(!e)break}return e}function Af(n,e,t=console.log){let s="";for(let r=0;r<n.length;++r)r>0&&(s=s.slice(0,s.length-1)+" "),s+=n[r],s=s.slice(0,e[r]),s+=" ".repeat(e[r]-s.length);t(s)}function Kj(n,e,t){let s,r;try{r=n.inboundNodes.map(u=>JSON.stringify(u.inputShapes)).join(",")}catch{r="multiple"}try{s=JSON.stringify(n.outputShape)}catch{s="multiple"}const a=n.name,o=n.getClassName(),i=[`${a} (${o})`,r,s,n.countParams().toString()];Af(i,e,t)}function Xj(n,e,t,s){let r,a;try{a=n.inboundNodes.map(d=>JSON.stringify(d.inputShapes)).join(",")}catch{a="multiple"}try{r=JSON.stringify(n.outputShape)}catch{r="multiple"}const o=[];for(const d of n.inboundNodes)if(!(t!=null&&t.length>0&&t.indexOf(d)===-1))for(let h=0;h<d.inboundLayers.length;++h){const p=d.inboundLayers[h].name,f=d.nodeIndices[h],m=d.tensorIndices[h];o.push(`${p}[${f}][${m}]`)}const i=n.name,u=n.getClassName(),c=o.length===0?"":o[0],l=[`${i} (${u})`,a,r,n.countParams().toString(),c];Af(l,e,s);for(let d=1;d<o.length;++d)Af(["","","","",o[d]],e,s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function rT(n,e,t){return(n==="inboundNodes"||n==="outputLayers"||n==="inputLayers")&&e===0&&typeof t=="string"}function yb(n,e){if(n===null)return null;if(typeof n=="string")return Fo(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){const t=[],s=n.length;for(let r=0;r<s;++r){const a=n[r];rT(e,r,a)?t.push(a):t.push(yb(a,e))}return t}else{const t={};for(const s of Object.keys(n)){const r=n[s];if(s==="name"&&typeof r=="string")t[s]=r;else{const a=Fo(s);t[a]=yb(r,a)}}return t}}function bb(n,e){if(n==null)return null;if(typeof n=="string")return ia(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){const t=[],s=n.length;for(let r=0;r<s;++r){const a=n[r];rT(e,r,a)?t.push(a):t.push(bb(a,e))}return t}else{const t={};for(const s of Object.keys(n)){const r=n[s],a=ia(s);(s==="name"||s==="className")&&typeof r=="string"?t[a]=r:t[a]=bb(r,s)}return t}}/** @license See the LICENSE file. */const aT="4.22.0";/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Yj=n=>{const e=Object.keys(n);if(e.length===0)return!1;const t=e[0].split("/");return!isNaN(parseInt(t[t.length-1],10))};class lr extends Ye{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,this.name==null){const b=this.getClassName().toLowerCase();this.name=_g(b)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Xa(this.inputs).length!==this.inputs.length)throw new W(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(b=>b.name)}`);Xa(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(b=>b.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const b of this.outputs){const x=b.sourceLayer,w=b.nodeIndex,v=b.tensorIndex;this.outputLayers.push(x),this.outputLayersNodeIndices.push(w),this.outputLayersTensorIndices.push(v)}for(const b of this.inputs){const x=b.sourceLayer,w=b.nodeIndex,v=b.tensorIndex;Pr(w===0,"input layer has >1 nodes"),Pr(v===0,"input layer has >1 tensors"),this.inputLayers.push(x),this.inputLayersNodeIndices.push(w),this.inputLayersTensorIndices.push(v)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let b=0;b<this.inputLayers.length;b++){const x=this.inputLayers[b];if(!(x instanceof ip))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${b} (0-based) originates from layer type ${x.getClassName()}.`);this.inputNames.push(x.name),this.feedInputShapes.push(x.batchInputShape),this.feedInputNames.push(x.name)}for(const b of this.outputLayers)this.outputNames.push(b.name);this.internalInputShapes=this.inputs.map(b=>b.shape),this.internalOutputShapes=this.outputs.map(b=>b.shape);const t={},s={},r={},a={},o={},i=[],u=(b,x,w,v,S,N)=>{(v==null||S==null||N==null)&&(v=b.sourceLayer,S=b.nodeIndex,N=b.tensorIndex);const $=v.inboundNodes[S];if(w.indexOf($)!==-1)throw new Ys(`The tensor ${b.name} at layer "${v.name}" is part of a cycle.`);if(x.indexOf($)!==-1)return;this.containerNodes.add(lr.nodeKey(v,S)),v.id in o||(o[v.id]=Object.keys(o).length),w.indexOf($)===-1&&w.push($);const T=$.inboundLayers.length;for(let C=0;C<T;C++){const k=$.inputTensors[C],A=$.inboundLayers[C],D=$.nodeIndices[C],R=$.tensorIndices[C];u(k,x,w,A,D,R)}for(x.push($);w.indexOf($)>=0;)w.splice(w.indexOf($),1);i.push($)},c=[],l=[];for(const b of this.outputs)u(b,c,l);const d=i.slice().reverse();for(const b of d){s[b.id]=b,b.id in t||(t[b.id]=0);let x=t[b.id];const w=r[b.outboundLayer.id]==null?0:r[b.outboundLayer.id];x=Math.max(x,w),r[b.outboundLayer.id]=x,a[b.outboundLayer.id]=b.outboundLayer,t[b.id]=x;for(let v=0;v<b.inboundLayers.length;v++){const S=b.inboundLayers[v],N=b.nodeIndices[v],$=S.inboundNodes[N],T=t[$.id]==null?0:t[$.id];t[$.id]=Math.max(x+1,T),s[$.id]=$}}const h={};for(const b in t){const x=t[b];x in h||(h[x]=[]),h[x].push(s[b])}const p={};for(const b in r){const x=r[b];x in p||(p[x]=[]),p[x].push(a[b])}let f=Object.keys(p).map(b=>parseInt(b,10)).sort(Ap);this.layers=[];for(const b of f){const x=p[b];x.sort((w,v)=>{const S=o[w.id],N=o[v.id];return S<N?-1:S>N?1:0});for(const w of x)w instanceof lr&&this.internalContainerRefs.push(w),this.layers.push(w)}this.layersByDepth=p,f=Object.keys(h).map(b=>parseInt(b,10)).sort(Ap);const m=this.inputs.slice(),g=[];for(const b of f)for(const x of h[b]){const w=x.outboundLayer;if(w!=null){for(const v of x.inputTensors)if(m.indexOf(v)===-1)throw new Ys(`Graph disconnected: cannot obtain value for tensor ${v} at layer "${w.name}". The following previous layers were accessed without issue: ${g}`);for(const v of x.outputTensors)m.push(v);g.push(w.name)}}this.nodesByDepth=h;const y=this.layers.map(b=>b.name);for(const b of y){const x=y.filter(w=>w===b).length;if(x!==1)throw new Ys(`The name "${b}" is used ${x} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(y))}this.outboundNodes=[],this.inboundNodes=[],new Ag({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(b=>null),outputMasks:this.outputs.map(b=>null),inputShapes:this.inputs.map(b=>b.shape),outputShapes:this.outputs.map(b=>b.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(s=>s.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new W("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const s of this.layers)t.push(...s.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const s={};let r=0;const a=Yj(e);a&&this.parseWeights(e);for(const i of this.layers)for(const[u,c]of i.weights.entries()){const l=a?`${c.name.split("/").slice(0,-1).join("/")+"/"}${u}`:c.originalName;if(s[l]!=null)throw new W(`Duplicate weight name: ${l}`);s[l]=c,r++}const o=[];for(const i in e){let u=i;if(s[i]==null){const c=i.split("/");u=c.slice(0,-2).concat([c[c.length-1]]).join("/")}if(s[u]!=null)o.push([s[u],e[i]]);else if(t)throw new W(`Provided weight data has no target variable: ${i}`);delete s[u]}if(t){const i=[];for(const u in s)i.push(u);if(i.length>0)throw new W(`${i.length} of ${r} weights are not set: ${i}`)}a0(o)}parseWeights(e){for(const t in Object.keys(e)){const s=t.split("/"),r=["vars","layer_checkpoint_dependencies"],a=s.map(o=>o.startsWith("_")?o.slice(1):o).filter(o=>!r.includes(o)).join("/");a!==t&&(e[a]=e[t],delete e[t])}}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${aT}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){const s=bb(this.updatedConfig());return t?JSON.stringify(s):s}call(e,t){return j(()=>{e=bt(e);const s=new Ua;for(let r=0;r<this.inputs.length;++r)s.add(this.inputs[r],e[r]);return Tc(this.outputs,s,t)})}computeMask(e,t){return j(()=>{e=bt(e);let s;return t==null?s=ri(null,e.length):s=bt(t),this.runInternalGraph(e,s)[1]})}computeOutputShape(e){const t=Sf(e);if(t.length!==this.inputLayers.length)throw new W(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const s={};for(let i=0;i<t.length;i++){const u=this.inputLayers[i],c=t[i],l=u.name+"_0_0";s[l]=c}const r=Object.keys(this.nodesByDepth).map(i=>parseInt(i,10)).sort(Ap);if(r.length>1)for(const i of r){const u=this.nodesByDepth[i];for(const c of u){const l=c.outboundLayer;if(this.inputLayers.map(m=>m.id).indexOf(l.id)!==-1)continue;const d=[];for(let m=0;m<c.inboundLayers.length;m++){const g=c.inboundLayers[m],y=c.nodeIndices[m],b=c.tensorIndices[m],x=`${g.name}_${y}_${b}`,w=s[x];d.push(w)}const h=l.computeOutputShape(es(d)),p=Sf(h),f=l.inboundNodes.indexOf(c);for(let m=0;m<p.length;m++){const g=`${l.name}_${f}_${m}`;s[g]=p[m]}}}const a=[],o=[];for(let i=0;i<this.outputLayers.length;i++){const u=this.outputLayers[i],c=this.outputLayersNodeIndices[i],l=this.outputLayersTensorIndices[i],d=`${u.name}_${c}_${l}`;o.push(d)}for(let i=0;i<o.length;i++){const u=o[i];Pr(u in s),a.push(s[u])}return es(a)}runInternalGraph(e,t){t==null&&(t=ri(null,e.length));const s={};for(let u=0;u<this.inputs.length;++u){const c=this.inputs[u],l=e[u],d=t[u];s[c.id]=[l,d]}const r=Object.keys(this.nodesByDepth).map(u=>parseInt(u,10)).sort(Ap);for(const u of r){const c=this.nodesByDepth[u];for(const l of c){const d=l.outboundLayer,h=l.inputTensors,p=l.outputTensors,f=new Array;for(const m of h)m.id in s&&f.push(s[m.id]);if(f.length===h.length){let m={},g,y,b,x;if(l.callArgs!=null&&(m=l.callArgs),f.length===1){const[w,v]=f[0];m.mask==null&&(m.mask=v),b=bt(d.call(w,m)),x=bt(d.computeMask(w,v)),g=[w],y=[v]}else g=f.map(w=>w[0]),y=f.map(w=>w[1]),m.mask==null&&(m.mask=y),b=bt(d.call(g,m)),x=bt(d.computeMask(g,y));if(d.activityRegularizer)throw new Ge("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let w=0;w<p.length;++w){const v=p[w],S=b[w],N=x[w];s[v.id]=[S,N]}}}}const a=[],o=[],i=[];for(const u of this.outputs){Pr(u.id in s,`Could not compute output ${u.name} : ${u.id}`);const[c,l]=s[u.id];i.push(c.shape),a.push(c),o.push(l)}return[a,o,i]}buildNodeConversionMap(e){const t={};let s;for(const r of this.layers){s=r instanceof lr?1:0;for(let a=0;a<r.inboundNodes.length;a++){const o=lr.nodeKey(r,a);this.containerNodes.has(o)&&(t[o]=s,s+=1)}}return t}getLayer(e,t){if(t!=null)return this.findLayer(t);if(e==null)throw new W("Provide either a layer name or layer index");if(typeof e=="number")return this.findLayer(e);for(const s of this.layers)if(s.name===e)return s;throw new W(`No such layer: ${e}`)}findLayer(e){if(this.layers.length<=e)throw new W(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}calculateLosses(){return j(()=>{const e=[];for(const t of this.layers)for(let s=0;s<t.inboundNodes.length;++s){const r=lr.nodeKey(t,s);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e})}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),s=[];for(const o of this.layers){const i=o.getClassName(),u=o.getConfig(),c=[];for(let d=0;d<o.inboundNodes.length;d++){const h=o.inboundNodes[d],p=lr.nodeKey(o,d);let f={};if(this.containerNodes.has(p)){if(h.callArgs)try{JSON.stringify(h.callArgs),f=h.callArgs}catch{console.warn(`Layer ${o.name} was passed non-serializable keyword arguments: ${h.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),f={}}if(h.inboundLayers.length>0){const m=[];for(let g=0;g<h.inboundLayers.length;g++){const y=h.inboundLayers[g],b=h.nodeIndices[g],x=h.tensorIndices[g],w=lr.nodeKey(y,b);let v=t[w];v==null&&(v=0),m.push([y.name,v,x,f])}c.push(m)}}}const l={};l.name=o.name,l.className=i,l.config=u,l.inboundNodes=c,s.push(l)}e.layers=s;const r=[];for(let o=0;o<this.inputLayers.length;o++){const i=this.inputLayers[o],u=this.inputLayersNodeIndices[o],c=lr.nodeKey(i,u);if(!this.containerNodes.has(c))continue;let l=t[c];l==null&&(l=0);const d=this.inputLayersTensorIndices[o];r.push([i.name,l,d])}e.inputLayers=r;const a=[];for(let o=0;o<this.outputLayers.length;o++){const i=this.outputLayers[o],u=this.outputLayersNodeIndices[o],c=lr.nodeKey(i,u);if(!this.containerNodes.has(c))continue;let l=t[c];l==null&&(l=0);const d=this.outputLayersTensorIndices[o];a.push([i.name,l,d])}return e.outputLayers=a,e}static fromConfig(e,t,s={},r=!1){const a={},o={};function i(g,y){g.name in o?o[g.name].push(y):o[g.name]=[y]}function u(g,y){const b=[];let x;for(const w of y){const v=w[0],S=w[1],N=w[2];if(x=w[3]==null?{}:w[3],!(v in a)){i(g,y);return}const $=a[v];if($.inboundNodes.length<=S){i(g,y);return}const T=$.inboundNodes[S];b.push(T.outputTensors[N])}b.length>0&&g.apply(es(b),x)}function c(g){const y=g.name,b=ba(g,t.customObjects!=null?t.customObjects:{});b.setFastWeightInitDuringBuild(r),a[y]=b,g.inboundNodes.forEach(w=>{if(!(w instanceof Array))throw new W(`Corrupted configuration, expected array for nodeData: ${w}`);i(b,w)})}const l=t.name,d=t.layers;for(const g of d)c(g);for(;!OH(o);)for(const g of d){const y=a[g.name];if(y.name in o){const b=o[y.name];delete o[y.name];for(const x of b)u(y,x)}}const h=[],p=[],f=t.inputLayers;for(const g of f){const y=g[0],b=g[1],x=g[2];Pr(y in a);const v=a[y].inboundNodes[b].outputTensors;h.push(v[x])}const m=t.outputLayers;for(const g of m){const y=g[0],b=g[1],x=g[2];Pr(y in a);const v=a[y].inboundNodes[b].outputTensors;p.push(v[x])}return new e({inputs:h,outputs:p,name:l})}get stateful(){if(this._stateful)throw new W("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){j(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Zj(n,e,t){const s=e.length;if(n==null||Array.isArray(n)&&n.length===0)return e.map(r=>null);if(s===1)return Array.isArray(n)&&n.length===1?n:typeof n=="object"&&e[0]in n?[n[e[0]]]:[n];if(Array.isArray(n)){if(n.length!==s)throw new Error(`Provided ${t} is an array of ${n.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return n}else if(typeof n=="object"&&Object.keys(n).length>0&&typeof n[Object.keys(n)[0]]=="object"){const r=[];return e.forEach(a=>{a in n?r.push(n[a]):r.push(null)}),r}else throw new Error(`The model has multiple (${s}) outputs, so ${t} must be either an array with ${s} elements or an object with ${e} keys. Provided ${t} not understood: ${JSON.stringify(n)}`)}function oT(n,e){return Zj(n,e,"classWeight")}async function iT(n,e,t,s){if(t!=null){const r=j(()=>{if(n.shape.length===1)return ya(n);if(n.shape.length===2){if(n.shape[1]>1)return xu(n,1);if(n.shape[1]===1)return V(n,[n.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${n.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${n.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),a=Array.from(await r.data());Xe(r);const o=[];return a.forEach(i=>{if(t[i]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${i} exists in the data but not in classWeight`);o.push(t[i])}),On(o,"float32")}else return null}function Jj(n,e){return B(n,e)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Qj=32;function uT(n,e){let t,s;const r=e;t=r.xs,s=r.ys,_(t!=null&&s!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${e}`);const a=F1("input",n.inputNames,t),o=F1("output",n.outputNames,s),i=a[0].shape[0];_(a.length===n.inputs.length,()=>`LayersModel has ${n.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: ${JSON.stringify(n.inputNames)})`),_(o.length===n.outputs.length,()=>`LayersModel has ${n.outputs.length} outputs, but the dataset provides ${o.length} outputs.  (Expected output keys: ${JSON.stringify(n.outputNames)})`);for(let u=0;u<a.length;u++)_(a[u].shape[0]===i,()=>`Batch size mismatch: input ${n.inputNames[u]} has ${a[u].shape[0]}; expected  ${i} based on input ${n.inputNames[0]}.`);for(let u=0;u<o.length;u++)_(o[u].shape[0]===i,()=>`Batch size mismatch: output ${n.outputNames[u]} has ${o[u].shape[0]}; expected  ${i} based on input ${n.inputNames[0]}.`);return{xs:a,ys:o}}function F1(n,e,t){if(t instanceof Bt)return[t];if(Array.isArray(t))return _(t.length===e.length,()=>`Received an array of ${t.length} Tensors, but expected ${e.length} to match the ${n} keys ${e}.`),t;{const s=[];for(const r of e){if(t[r]==null)throw new W(`The feature data generated by the dataset lacks the required ${n} key '${r}'.`);s.push(t[r])}return s}}function eq(n){if(n.length===3)throw new Ge("Validation with sample weights is not implemented yet.");return{xs:n[0],ys:n[1]}}async function tq(n,e,t){const s=t.batchesPerEpoch!=null;if(_(n.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),_(t!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),_(t.epochs!=null&&t.epochs>0&&Number.isInteger(t.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${t.epochs}`),_(!s||t.batchesPerEpoch>0&&Number.isInteger(t.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${t.batchesPerEpoch}`),_(t.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),n.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");n.isTraining=!0;try{const r=t.validationData!=null;let a,o;if(r)if(P1(t.validationData))_(t.validationBatches==null||t.validationBatches>0&&Number.isInteger(t.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${t.validationBatches}`);else{const g=eq(t.validationData);a=g.xs,o=g.ys}const i=n.makeTrainFunction(),u=n.getDedupedMetricsNames();let c;r?c=u.slice().concat(u.map(g=>"val_"+g)):c=u.slice();const l=ZC(t.callbacks,t.yieldEvery),d=t.verbose==null?1:t.verbose,{callbackList:h,history:p}=JC(l,d,t.epochs,null,null,nq(e,t),null,r,c);h.setModel(n),n.history=p,await h.onTrainBegin(),n.stopTraining_=!1;let f=t.initialEpoch==null?0:t.initialEpoch,m=await e.iterator();for(;f<t.epochs;){const g={};await h.onEpochBegin(f);let y=0,b=0;for(s||(m=await e.iterator());!s||y<t.batchesPerEpoch;){const x=await m.next();if(s&&x.done){console.warn(`You provided \`batchesPerEpoch\` as ${t.batchesPerEpoch}, but your dataset iterator ran out of data after ${y} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${t.batchesPerEpoch*t.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(x.value!=null){const{xs:w,ys:v}=uT(n,x.value),S={};S.batch=b,S.size=w[0].shape[0],await h.onBatchBegin(b,S);const N=[];if(t.classWeight!=null){const C=oT(t.classWeight,n.outputNames);for(let k=0;k<C.length;++k)N.push(await iT(v[k],null,C[k]))}const $=w.concat(v).concat(N),T=i($);Xe($);for(let C=0;C<u.length;++C){const k=u[C],A=T[C];S[k]=A,bn(A)}await h.onBatchEnd(b,S),YC(S),b++,y++}if(s?y>=t.batchesPerEpoch:x.done){if(r){let w;P1(t.validationData)?w=bt(await n.evaluateDataset(t.validationData,{batches:t.validationBatches})):w=bt(n.evaluate(a,o,{batchSize:t.validationBatchSize==null?Qj:t.validationBatchSize,verbose:0}));for(let v=0;v<n.metricsNames.length;++v)g[`val_${n.metricsNames[v]}`]=w[v]}break}if(n.stopTraining_)break}if(await h.onEpochEnd(f,g),f++,n.stopTraining_)break}return await h.onTrainEnd(),await n.history.syncData(),n.history}finally{n.isTraining=!1}}function nq(n,e){let t=null;return e.batchesPerEpoch!=null?t=e.batchesPerEpoch:Number.isFinite(n.size)&&(t=n.size),t}function P1(n){return typeof n.iterator=="function"}function sq(n){return typeof n.next=="function"}async function rq(n,e,t){t=t||{};const s=t.batches!=null,r=n.testFunction;let a=[];if(t.verbose>0)throw new Ge("Verbose mode is not implemented yet.");_(!s||t.batches>0&&Number.isInteger(t.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(t.batches)}`);const o=sq(e)?e:await e.iterator();let i=0,u=0;for(;!s||u<t.batches;){const c=await o.next();if(a=j(()=>{if(c.value){const{xs:l,ys:d}=uT(n,c.value),h=l.concat(d),p=j(()=>r(h));if(Xe(h),u===0)for(let m=0;m<p.length;++m)a.push(Ae(0));const f=h[0].shape[0];for(let m=0;m<p.length;++m){const g=p[m],y=a[m];a[m]=j(()=>se(a[m],B(f,g))),u>0&&Xe(y)}Xe(p),i+=f,++u}return a}),c.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${t.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let c=0;c<a.length;++c){const l=a[c];a[c]=$e(a[c],i),Xe(l)}return es(a)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function by(n){_(n>0&&Number.isInteger(n),()=>`batchSize is required to be a positive integer, but got ${n}`)}function wc(n,e,t){return n==null?[null]:Array.isArray(n)?n.map(s=>jo(s,e,t-e)):jo(n,e,t-e)}function xb(n,e){return j(()=>n==null?null:Array.isArray(n)?n.map(t=>xb(t,e)):PC(n,e.dtype==="int32"?e:fe(e,"int32")))}function xy(n,e){const t=[];let s=0,r=null;for(;s<n;)r=s+e,r>=n&&(r=n),t.push([s,r]),s=r;return t}function lT(n){const e=[];n instanceof Bt&&(n=[n]);for(let t=0;t<n.length;++t){const s=n[t];if(s.rank===1)e.push(rp(s,1));else{if(s.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(s)}}return e}function ur(n,e){if(n==null)return;const t=[];if(e instanceof Bt)t.push(e.id);else if(Array.isArray(e))e.forEach(r=>t.push(r.id));else if(e!=null)for(const r in e){const a=e[r];t.push(a.id)}const s=[];if(n instanceof Bt)t.indexOf(n.id)===-1&&s.push(n);else if(Array.isArray(n))n.forEach(r=>{t.indexOf(r.id)===-1&&s.push(r)});else if(n!=null)for(const r in n){const a=n[r];t.indexOf(a.id)===-1&&s.push(a)}s.forEach(r=>{r.isDisposed||r.dispose()})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function aq(n){return n instanceof Bt}function wb(n){return Array.isArray(n)}function L1(n){return!aq(n)&&!wb(n)}function M1(n,e,t,s=!0,r=""){if(e==null||e.length===0){if(n!=null){let o=!1;if(wb(n)&&n.length>0)o=!0;else if(L1(n)){for(const i in n)if(n.hasOwnProperty(i)){o=!0;break}}else o=!0;if(o)throw new W(`Error when checking model ${r} expected no data, but got ${n}`)}return[]}if(n==null)return e.map(o=>null);let a;if(L1(n)){n=n,a=[];for(const o of e){if(n[o]==null)throw new W(`No data provided for "${o}". Need data for each key in: ${e}`);a.push(n[o])}}else if(wb(n)){if(n=n,n.length!==e.length)throw new W(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${n}`);a=n}else{if(n=n,e.length>1)throw new W(`The model ${r} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${n.shape}`);a=[n]}if(a=lT(a),t!=null)for(let o=0;o<e.length;++o){if(t[o]==null)continue;const i=a[o];if(i.shape.length!==t[o].length)throw new W(`Error when checking ${r}: expected ${e[o]} to have ${t[o].length} dimension(s). but got array with shape ${i.shape}`);for(let u=0;u<t[o].length;++u){if(u===0&&!s)continue;const c=i.shape[u],l=t[o][u];if(l!=null&&l>=0&&c!==l)throw new W(`${r} expected a batch of elements where each example has shape [${t[o].slice(1,t[o].length)}] (i.e.,tensor shape [*,${t[o].slice(1,t[o].length)}]) but the ${r} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return a}function oq(n,e,t){const s=Xa(n.map(a=>a.shape[0]));s.sort();const r=Xa(e.map(a=>a.shape[0]));if(r.sort(),s.length>1)throw new W(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(n.map(a=>a.shape))}`);if(r.length>1)throw new W(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(a=>a.shape))}`);if(s.length>0&&r.length>0&&!Qe(s,r))throw new W(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${r[0]} target sample(s).`)}function iq(n,e,t){const s=[Dg,Rg,Qc];for(let r=0;r<n.length;++r){const a=n[r],o=e[r],i=t[r];if(o!=null){if(o===Qc&&a.shape[a.shape.length-1]===1)throw new W(`You are passing a target array of shape ${a.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(s.indexOf(o)!==-1){const u=a.shape.slice(1),c=i.slice(1);for(let l=0;l<u.length;++l){const d=u[l],h=c[l];if(h!=null&&d!==h)throw new W(`A target Tensor with shape ${a.shape} was passed for an output of shape ${i}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function B1(n,e,t,s=!0,r=""){let a;if(Array.isArray(n)){if(n.length!==e.length)throw new W(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${n.length} Tensors(s).`);a=n}else{if(e.length>1)throw new W(`The model expects ${e.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(n.shape)}.`);a=[n]}if(t!=null)for(let o=0;o<e.length;++o){if(t[o]==null)continue;const i=a[o];if(i.shape.length!==t[o].length)throw new W(`Error when checking ${r}: expected ${e[o]} to have ${t[o].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let u=0;u<t[o].length;++u){if(u===0&&!s)continue;const c=i.shape[u],l=t[o][u];if(l!=null&&l!==c)throw new W(`Error when checking ${r}: expected ${e[o]} to have shape ${JSON.stringify(t[o])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}function uq(n,e){if(n==null||Array.isArray(n)&&n.length===0)return e.map(s=>[]);let t;if(typeof n=="string"||typeof n=="function")t=[n];else if(Array.isArray(n)||typeof n=="object")t=n;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${n}`);if(Array.isArray(t))return e.map(s=>t);{const s=[];for(const r of e){let a=t.hasOwnProperty(r)?t[r]:[];Array.isArray(a)||(a=[a]),s.push(a)}return s}}const lq="layers-model";class nu extends lr{constructor(e){super(e),this.isTraining=!1}summary(e,t,s=console.log){if(!this.built)throw new W("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");Hj(this,e,t,s)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=Gj(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Io))throw new W("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(const o in e.loss)if(this.outputNames.indexOf(o)===-1)throw new W(`Unknown entry in loss dictionary: "${o}". Only expected the following keys: ${this.outputNames}`);for(const o of this.outputNames)e.loss[o]==null&&console.warn(`Output "${o}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${o} during training`),t.push(yy(e.loss[o]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new W(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(i=>yy(i))}else{const o=yy(e.loss);this.outputs.forEach(i=>{t.push(o)})}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let o=0;o<this.outputs.length;++o){const i=this.internalOutputShapes[o],u=this.outputNames[o];this.feedOutputNames.push(u),this.feedOutputShapes.push(i),this.feedLossFns.push(this.lossFunctions[o])}const s=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Ho("loss",()=>{for(let o=0;o<this.outputs.length;++o){if(s.indexOf(o)!==-1)continue;const i=this.lossFunctions[o];this.outputs.length>1&&(this.metricsTensors.push([i,o]),this.metricsNames.push(this.outputNames[o]+"_loss"))}});const r=uq(e.metrics,this.outputNames),a=(o,i,u)=>{this.outputNames.length>1&&(i=this.outputNames[o]+"_"+i),this.metricsNames.push(i),this.metricsTensors.push([u,o])};Ho("metric",()=>{for(let o=0;o<this.outputs.length;++o){if(s.indexOf(o)!==-1)continue;const i=r[o];(c=>{const l="";let d,h,p;for(const f of c){if(typeof f=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(f)!==-1){const g=this.internalOutputShapes[o];g[g.length-1]===1||this.lossFunctions[o]===Rg?["accuracy","acc"].indexOf(f)!==-1?h=eT:["crossentropy","ce"].indexOf(f)!==-1&&(h=Oj):this.lossFunctions[o]===$f?["accuracy","acc"].indexOf(f)!==-1?h=Fj:["crossentropy","ce"].indexOf(f)!==-1&&(h=sT):["accuracy","acc"].indexOf(f)!==-1?h=tT:["crossentropy","ce"].indexOf(f)!==-1&&(h=nT);let y;["accuracy","acc"].indexOf(f)!==-1?y="acc":["crossentropy","ce"].indexOf(f)!==-1&&(y="ce"),p=h,d=l+y}else p=Uj(f),d=l+Op(f);let m;Ho(d,()=>{m=p}),a(o,d,m)}})(i)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,s={}){const r=s.batchSize==null?32:s.batchSize;by(r);const o=this.standardizeUserDataXY(e,t,!0,r);try{const i=o[0].concat(o[1]);this.makeTestFunction();const u=this.testFunction,c=this.testLoop(u,i,r,s.verbose,s.steps);return es(c)}finally{ur(o[0],e),ur(o[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),rq(this,e,t)}checkNumSamples(e,t,s,r="steps"){let a;if(s!=null){if(a=null,t!=null)throw new W(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else if(e!=null)Array.isArray(e)?a=e[0].shape[0]:a=e.shape[0];else throw new W(`Either the input data should have a defined shape, or ${r} shoud be specified.`);return a}execute(e,t){if(Array.isArray(t)&&t.length===0)throw new W("`outputs` is an empty Array, which is not allowed.");const s=Array.isArray(t),r=s?t:[t],a=this.retrieveSymbolicTensors(r),o=new Ua;if(e instanceof Bt&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new W(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let u=0;u<this.inputs.length;++u)o.add(this.inputs[u],e[u])}else for(const u of this.inputs){const c=e[u.name];if(c==null)throw new W(`No value is provided for the model's input ${u.name}`);o.add(u,c)}const i=Tc(a,o);return s?i:i[0]}retrieveSymbolicTensors(e){const t=ri(null,e.length);let s=e.length;for(const r of this.layers){const a=Array.isArray(r.output)?r.output:[r.output],o=a.map(i=>i.name);for(let i=0;i<e.length;++i){const u=o.indexOf(e[i]);if(u!==-1&&(t[i]=a[u],s--),s===0)break}if(s===0)break}if(s>0){const r=[];throw t.forEach((a,o)=>{a==null&&r.push(e[o])}),new W(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(r)}`)}return t}predictLoop(e,t=32,s=!1){return j(()=>{const r=this.checkNumSamples(e);if(s)throw new Ge("Verbose predictLoop() is not implemented yet.");const a=xy(r,t),o=this.outputs.map(i=>[]);for(let i=0;i<a.length;++i)j(()=>{const c=a[i][0],l=a[i][1],d=wc(e,c,l),h=[];if(Array.isArray(d))for(let f=0;f<d.length;++f)h.push({key:this.inputs[f],value:d[f]});else h.push({key:this.inputs[0],value:d});const p=new Ua(h);return Tc(this.outputs,p)}).forEach((c,l)=>o[l].push(c));return es(o.map(i=>tn(i,0)))})}predict(e,t={}){const s=lT(e);B1(s,this.inputNames,this.feedInputShapes,!1);try{const r=t.batchSize==null?32:t.batchSize;return by(r),this.predictLoop(s,r)}finally{ur(s,e)}}predictOnBatch(e){B1(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,s=!0,r){if(this.optimizer_==null)throw new Ys("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const a=[];for(let o=0;o<this.feedOutputShapes.length;++o){const i=this.feedOutputShapes[o];this.feedLossFns[o]===$f?a.push(i.slice(0,i.length-1).concat([1])):a.push(i)}if(e=M1(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=M1(t,this.feedOutputNames,a,!1,"target"),oq(e,t),iq(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&r!=null&&r>0&&e[0].shape[0]%r!==0)throw new W(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,s,r,a=!0,o){const[i,u]=this.standardizeUserDataXY(e,t,a,o);if(s!=null)throw new Error("sample weight is not supported yet.");let c=null;if(r!=null){const l=oT(r,this.outputNames);c=[];for(let d=0;d<l.length;++d)c.push(await iT(u[d],null,l[d]))}return[i,u,c]}testLoop(e,t,s,r=0,a){return j(()=>{const o=this.checkNumSamples(t,s,a,"steps"),i=[];if(r>0)throw new Ge("Verbose mode is not implemented yet.");if(a!=null)throw new Ge("steps mode in testLoop() is not implemented yet");{const u=xy(o,s),c=On(vr(0,o));for(let l=0;l<u.length;++l){const d=u[l][0],h=u[l][1],p=jo(c,d,h-d),f=xb(t,p),m=e(f);if(l===0)for(let g=0;g<m.length;++g)i.push(Ae(0));for(let g=0;g<m.length;++g){const y=m[g];i[g]=se(i[g],B(h-d,y))}}for(let l=0;l<i.length;++l)i[l]=$e(i[l],o)}return i})}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let s=0;s<e.length;++s){const r=e[s];let a=r;if(S1(e,r)>1){const o=S1(e.slice(0,s),r);a+=`_${o}`}t.push(a)}return t}makeTrainFunction(){return e=>{const t=[],s=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),o=[],i=()=>{const d=[];for(let m=0;m<this.inputs.length;++m)d.push({key:this.inputs[m],value:s[m]});const h=new Ua(d),p=Tc(this.outputs,h,{training:!0});let f;for(let m=0;m<this.lossFunctions.length;++m){const g=this.lossFunctions[m];let y=g(r[m],p[m]);a[m]!=null&&(y=Jj(y,a[m]));const b=Wt(y);t.push(b),m===0?f=y:f=se(f,y)}for(let m=0;m<this.metricsTensors.length;++m){let g;if(this.outputs.length>1&&m<this.outputs.length)g=t[m];else{const y=this.metricsTensors[m][0],b=this.metricsTensors[m][1];g=Wt(y(r[b],p[b]))}bn(g),o.push(g)}return f=Wt(f),this.calculateLosses().forEach(m=>{f=se(f,m)}),f},u=this.collectedTrainableWeights.map(d=>d.read());return[this.optimizer_.minimize(i,!0,u)].concat(o)}}makeTestFunction(){this.testFunction=e=>j(()=>{const t=[];let s;const r=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),o=[];for(let c=0;c<this.inputs.length;++c)o.push({key:this.inputs[c],value:r[c]});const i=new Ua(o),u=Tc(this.outputs,i);for(let c=0;c<this.lossFunctions.length;++c){const l=this.lossFunctions[c],d=Wt(l(a[c],u[c]));c===0?s=d:s=se(s,d),t.push(s)}for(let c=0;c<this.metricsTensors.length;++c){const l=this.metricsTensors[c][0],d=this.metricsTensors[c][1],h=Wt(l(a[d],u[d]));t.push(h)}return t})}async fit(e,t,s={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;let r,a,o,i,u,c,l,d,h;try{const p=s.batchSize==null?32:s.batchSize;by(p);const m=await this.standardizeUserData(e,t,s.sampleWeight,s.classWeight,!1,p);r=m[0],a=m[1],h=m[2];let g=!1,y;if(s.validationData!=null&&s.validationData.length>0){if(g=!0,s.validationData.length===2)u=s.validationData[0],c=s.validationData[1];else throw s.validationData.length===3?new Ge("validationData including sample weights is not supported yet."):new W(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${s.validationData} is invalid.`);const C=await this.standardizeUserData(u,c,null,null,!0,p);l=C[0],d=C[1],y=l.concat(d)}else if(s.validationSplit!=null&&s.validationSplit>0&&s.validationSplit<1){g=!0;const T=Math.floor(r[0].shape[0]*(1-s.validationSplit)),C=r[0].shape[0];l=wc(r,T,C),o=r,r=wc(r,0,T),d=wc(a,T,C),i=a,a=wc(a,0,T),y=l.concat(d)}else s.validationSteps!=null&&(g=!0);const b=r.concat(a).concat(h);this.checkTrainableWeightsConsistency();const x=this.makeTrainFunction(),w=this.getDedupedMetricsNames();let v,S;g?(this.makeTestFunction(),v=this.testFunction,S=w.slice().concat(w.map(T=>"val_"+T))):(v=null,y=[],S=w.slice());const N=ZC(s.callbacks,s.yieldEvery);return await this.fitLoop(x,b,w,p,s.epochs,s.verbose,N,v,y,s.shuffle,S,s.initialEpoch,null,null)}finally{this.isTraining=!1,ur(r,e),ur(a,t),ur(o,e),ur(i,t),ur(l,u),ur(d,c),h!=null&&Xe(h)}}async fitLoop(e,t,s,r,a,o,i,u,c,l,d,h,p,f){r==null&&(r=32),a==null&&(a=1),l==null&&(l=!0),h==null&&(h=0);let m=!1;if(u!=null&&c!=null&&(m=!0),f!=null&&(m=!0,p==null))throw new W("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const g=this.checkNumSamples(t,r,p,"steps_per_epoch");let y;g!=null&&(y=vr(0,g)),o==null&&(o=1);const{callbackList:b,history:x}=JC(i,o,a,h,g,p,r,m,d);b.setModel(this),this.history=x,await b.onTrainBegin(),this.stopTraining_=!1;for(let w=h;w<a;++w){await b.onEpochBegin(w);const v={};if(p!=null)throw new Ge("stepsPerEpoch mode is not implemented yet.");{if(l==="batch")throw new Ge("batch shuffling is not implemneted yet");l&&JP(y);const S=On(y),N=xy(g,r);for(let $=0;$<N.length;++$){const T={};if(await b.onBatchBegin($,T),j(()=>{const C=N[$][0],k=N[$][1],A=jo(S,C,k-C);T.batch=$,T.size=k-C;const D=xb(t,A),R=e(D);for(let F=0;F<s.length;++F){const z=s[F],H=R[F];T[z]=H,bn(H)}if($===N.length-1&&m){const F=this.testLoop(u,c,r);for(let z=0;z<s.length;++z){const H=s[z],P=F[z];bn(P),v["val_"+H]=P}}}),await b.onBatchEnd($,T),YC(T),this.stopTraining_)break}S.dispose()}if(await b.onEpochEnd(w,v),this.stopTraining_)break}return await b.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return tq(this,e,t)}async trainOnBatch(e,t){const s=await this.standardizeUserData(e,t),r=s[0],a=s[1],i=this.makeTrainFunction()(r.concat(a)),u=[];for(const c of i){const l=await c.data();u.push(l[0])}return Xe(i),ur(s[0],e),ur(s[1],t),es(u)}getNamedWeights(e){const t=[],s=e!=null&&e.trainableOnly,r=s?this.trainableWeights:this.weights,a=this.getWeights(s);for(let o=0;o<r.length;++o)s&&!r[o].trainable||t.push({name:r[o].originalName,tensor:a[o]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){const t=Yv().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-Yv().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=ia(this.loss);else if(Array.isArray(this.loss)){for(const t of this.loss)if(typeof t!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(t=>ia(t))}else{const t=Object.keys(this.loss);e={};const s=this.loss;for(const r of t)if(typeof s[r]=="string")e[r]=ia(s[r]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[ia(Op(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>ia(Op(e)));{const e={};for(const t in this.metrics)e[t]=ia(Op(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");const t=yb(e.optimizer_config),s=ba(t);let r;if(typeof e.loss=="string")r=Fo(e.loss);else if(Array.isArray(e.loss))r=e.loss.map(o=>Fo(o));else if(e.loss!=null){r={};for(const o in e.loss)r[o]=Fo(e.loss[o])}let a;if(Array.isArray(e.metrics))a=e.metrics.map(o=>Fo(o));else if(e.metrics!=null){a={};for(const o in e.metrics)a[o]=Fo(e.metrics[o])}this.compile({loss:r,metrics:a,optimizer:s})}async save(e,t){if(typeof e=="string"){const c=Rk(e);if(c.length===0)throw new W(`Cannot find any save handlers for URL '${e}'`);if(c.length>1)throw new W(`Found more than one (${c.length}) save handlers for URL '${e}'`);e=c[0]}if(e.save==null)throw new W("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const s=await tb(this.getNamedWeights(t)),i={modelTopology:this.toJSON(null,!1),format:lq,generatedBy:`TensorFlow.js tfjs-layers v${aT}`,convertedBy:null};if((t==null?!1:t.includeOptimizer)&&this.optimizer!=null){i.trainingConfig=this.getTrainingConfig();const c="optimizer",{data:l,specs:d}=await tb(await this.optimizer.getWeights(),c);s.specs.push(...d),s.data=Ek([s.data,l])}return this.userDefinedMetadata!=null&&(O1(this.userDefinedMetadata,this.name,!0),i.userDefinedMetadata=this.userDefinedMetadata),i.weightData=s.data,i.weightSpecs=s.specs,e.save(i)}setUserDefinedMetadata(e){O1(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}nu.className="Model";re(nu);class cT extends nu{}cT.className="Functional";re(cT);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class ed extends nu{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=e.name!=null?e.name:_g("sequential_"),e.layers!=null)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(s=>s<0))throw new W(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof ed||e instanceof nu;let s;if(t){if(s=e,s.outputs.length!==1)throw new W("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(s.inputs.length!==1)throw new W("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(e.inboundNodes.length===0){if(e.batchInputShape==null)throw new W("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const r=dj({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(r)}if(t)this.outputs=s.outputs,this.inputs=s.inputs;else{if(e.inboundNodes.length!==1)throw new W(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(e.inboundNodes[0].outputTensors.length!==1)throw new W("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=HC(this.outputs[0])}this.inboundNodes=[],new Ag({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:ri(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(r=>r.shape),outputShapes:this.outputs[0].shape})}else{const r=e.apply(this.outputs[0]);if(Array.isArray(r))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[r],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return this.model==null&&this.build(),this.model.call(e,t)}build(e){if(ct(e),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new nu({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,s=console.log){this.built||this.build(),super.summary(e,t,s)}setWeights(e){this.model==null&&this.build(),this.model.setWeights(e)}evaluate(e,t,s={}){if(!this.built)throw new Ys("The model needs to be compiled before being used.");return this.model.evaluate(e,t,s)}async evaluateDataset(e,t){if(!this.built)throw new Ys("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return this.model==null&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return this.model==null&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,s={}){if(!this.built)throw new Ys("The model needs to be compiled before being used.");return this.model.fit(e,t,s)}async fitDataset(e,t){if(!this.built)throw new Ys("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,s={},r=!1){let a,o={};if(t instanceof Array){if(t[0].className==null||t[0].className==="Merge")throw new W("Legacy serialization format not supported yet.");a=t}else _(t.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),a=t.layers,delete t.layers,o=t;const i=new e(o);if(!(i instanceof ed))throw new Ge(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(const u of a){const l=ba(u,void 0,r);r&&l.setFastWeightInitDuringBuild(!0),i.add(l)}return i}set stopTraining(e){if(this.model==null)throw new W("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(this.model==null)throw new W("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const s={};s.className=t.getClassName(),s.config=t.getConfig(),e.push(s)}return{name:this.name,layers:e}}}ed.className="Sequential";re(ed);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let Bn=class extends sc{getConfig(){return{}}};class dT extends Bn{apply(e,t=1){return XH(e,t)}}dT.className="elu";re(dT);class hT extends Bn{apply(e){return nw(e)}}hT.className="selu";re(hT);class pT extends Bn{apply(e){return ea(e)}}pT.className="relu";re(pT);class fT extends Bn{apply(e){return j(()=>ni(6,ea(e)))}}fT.className="relu6";re(fT);class mT extends Bn{apply(e){return e}}mT.className="linear";re(mT);class gT extends Bn{apply(e){return Wr(e)}}gT.className="sigmoid";re(gT);class yT extends Bn{apply(e){return ZH(e)}}yT.className="hardSigmoid";re(yT);class bT extends Bn{apply(e){return ec(e)}}bT.className="softplus";re(bT);class xT extends Bn{apply(e){return YH(e)}}xT.className="softsign";re(xT);class wT extends Bn{apply(e){return ti(e)}}wT.className="tanh";re(wT);let l0=class extends Bn{apply(e,t=-1){return ug(e,t)}};l0.className="softmax";re(l0);class vT extends Bn{apply(e,t=-1){return qx(e,t)}}vT.className="logSoftmax";re(vT);class IT extends Bn{apply(e){return j(()=>j(()=>{const t=Math.sqrt(2),s=B(.5,se(1,Gx($e(e,t))));return B(e,s)}))}}IT.className="gelu";re(IT);class ST extends Bn{apply(e){return j(()=>B(.5,B(e,se(1,ti(B(Tn($e(2,Math.PI)),se(e,B(.044715,Sa(e,3)))))))))}}ST.className="gelu_new";re(ST);class kT extends Bn{apply(e){return j(()=>B(e,ti(ec(e))))}}kT.className="mish";re(kT);class NT extends Bn{apply(e,t=1){return j(()=>B(Wr(B(e,t)),e))}}NT.className="swish";re(NT);function uo(n){return n.getClassName()}function wy(n,e={}){return sp(n,Ks.getMap().classNameMap,e,"activation")}function lo(n){if(n==null){const e={};return e.className="linear",e.config={},wy(e)}if(typeof n=="string"){const e={};return e.className=n,e.config={},wy(e)}else return n instanceof Bn?n:wy(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function cq(n){if(n!=null&&typeof n!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${n}`)}class CT extends sc{}class TT extends CT{constructor(e){super(),cq(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return j(()=>{let t=un([1]);return this.hasL1&&(t=se(t,Ne(B(this.l1,an(e))))),this.hasL2&&(t=se(t,Ne(B(this.l2,ap(e))))),V(t,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}TT.className="L1L2";re(TT);const z1={l1l2:"L1L2"};function Nt(n){return Xw(n)}function V1(n,e={}){return sp(n,Ks.getMap().classNameMap,e,"regularizer")}function Pt(n){if(n==null)return null;if(typeof n=="string"){const t={className:n in z1?z1[n]:n,config:{}};return V1(t)}else return n instanceof CT?n:V1(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class $T extends Ye{constructor(e){super(e??{}),this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,t){e=Fe(e);let s=ea(e);return this.maxValue!=null&&(s=vs(s,0,this.maxValue)),s}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}$T.className="ReLU";re($T);class _T extends Ye{constructor(e){super(e??{}),this.DEFAULT_ALPHA=.3,e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){const s=Fe(e);return Zm(s,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}_T.className="LeakyReLU";re(_T);class ET extends Ye{constructor(e){if(super(e??{}),this.DEFAULT_ALPHA_INITIALIZER="zeros",e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Ft(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Pt(e.alphaRegularizer),this.alphaConstraint=pn(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new W(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=ct(e);const t=e.slice(1);if(this.sharedAxes!=null)for(const r of this.sharedAxes)t[r-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const s={};if(this.sharedAxes!=null)for(let r=1;r<e.length;++r)s[r]=e[r];this.inputSpec=[new cn({ndim:e.length,axes:s})],this.built=!0}call(e,t){return e=Fe(e),rg(e,this.alpha.read())}getConfig(){const e={alphaInitializer:zt(this.alphaInitializer),alphaRegularizer:Nt(this.alphaRegularizer),alphaConstraint:hn(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}ET.className="PReLU";re(ET);let AT=class extends Ye{constructor(e){if(super(e??{}),this.DEFAULT_ALPHA=1,e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new Ge(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){const s=Fe(e);return Jh(s)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};AT.className="ELU";re(AT);class DT extends Ye{constructor(e){super(e??{}),this.DEFAULT_THETA=1,e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,t){const s=Fe(e);return B(s,fe(Cs(s,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}DT.className="ThresholdedReLU";re(DT);class RT extends Ye{constructor(e){super(e??{}),this.DEFAULT_AXIS=1,e==null&&(e={}),this.softmax=new l0().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,t){return j(()=>{let s=Fe(e);const r=t.mask;if(r!=null){const a=B(we(gs(s.shape),fe(r,s.dtype)),Ae(-1e9));s=se(s,a)}return this.axis instanceof Array?this.axis.length>1?Is(we(s,Qm(s,this.axis,!0))):this.softmax(s,this.axis[0]):this.softmax(s,this.axis)})}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}RT.className="Softmax";re(RT);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function su(n,e,t){if(typeof n=="number")return ri(n,e);if(n.length!==e)throw new W(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${n.length} elements.`);for(let s=0;s<e;++s){const r=n[s];if(!HH(r))throw new W(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(n)} including a non-integer number ${r}`)}return n}function mr(n,e,t,s,r=1){if(n==null)return n;const a=e+(e-1)*(r-1);let o;return t==="same"?o=n:o=n-a+1,Math.floor((o+s-1)/s)}function Lr(n,e,t,s){if(n==null)return null;if(s==="valid")n=n*e+io([t-e,0]);else if(s==="same")n=n*e;else throw new W(`Unsupport padding mode: ${s}.`);return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function c0(n,e){return j(()=>(Xt(e),e==="channelsFirst"?nt(n,[0,2,3,1]):n))}function OT(n,e){return j(()=>(Xt(e),e==="channelsFirst"?nt(n,[0,2,3,4,1]):n))}function dq(n,e,t,s=1,r="valid",a,o=1){return j(()=>{if(a==null&&(a=Ir()),Xt(a),n.shape.length!==3)throw new W(`The input of a conv1dWithBias operation should be 3, but is ${n.shape.length} instead.`);if(e.shape.length!==3)throw new W(`The kernel for a conv1dWithBias operation should be 3, but is ${e.shape.length} instead`);if(t!=null&&t.shape.length!==1)throw new W(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if(a==="channelsFirst"&&(n=nt(n,[0,2,1])),r==="causal")throw new Ge("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let i=Bx(n,e,s,r==="same"?"same":"valid","NWC",o);return t!=null&&(i=$r(i,t)),i})}function W1(n,e,t,s=[1,1],r="valid",a,o,i=null){return j(()=>{if(a==null&&(a=Ir()),Xt(a),n.rank!==3&&n.rank!==4)throw new W(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${n.rank}.`);if(e.rank!==3&&e.rank!==4)throw new W(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${n.rank}.`);let u=c0(n,a);if(r==="causal")throw new Ge("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=BN({x:u,filter:e,strides:s,pad:r==="same"?"same":"valid",dilations:o,dataFormat:"NHWC",bias:t,activation:i}),a==="channelsFirst"&&(u=nt(u,[0,3,1,2])),u})}function hq(n,e,t,s=[1,1,1],r="valid",a,o){return j(()=>{if(a==null&&(a=Ir()),Xt(a),n.rank!==4&&n.rank!==5)throw new W(`conv3dWithBias expects input to be of rank 4 or 5, but received ${n.rank}.`);if(e.rank!==4&&e.rank!==5)throw new W(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${n.rank}.`);let i=OT(n,a);if(r==="causal")throw new Ge("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return i=oN(i,e,s,r==="same"?"same":"valid","NDHWC",o),t!=null&&(i=$r(i,t)),a==="channelsFirst"&&(i=nt(i,[0,4,1,2,3])),i})}class Og extends Ye{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Og.verifyArgs(t),this.rank=e,xn(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new Ge(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=su(t.kernelSize,e,"kernelSize"),this.strides=su(t.strides==null?1:t.strides,e,"strides"),this.padding=t.padding==null?"valid":t.padding,zs(this.padding),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,Xt(this.dataFormat),this.activation=lo(t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.biasInitializer=Ft(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=pn(t.biasConstraint),this.biasRegularizer=Pt(t.biasRegularizer),this.activityRegularizer=Pt(t.activityRegularizer),this.dilationRate=su(t.dilationRate==null?1:t.dilationRate,e,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new W(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new W(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new W(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(Pr("kernelSize"in e,"required key 'kernelSize' not in config"),typeof e.kernelSize!="number"&&!Yw(e.kernelSize,"number",1,3))throw new W(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:uo(this.activation),useBias:this.useBias,biasInitializer:zt(this.biasInitializer),biasRegularizer:Nt(this.biasRegularizer),activityRegularizer:Nt(this.activityRegularizer),biasConstraint:hn(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class rc extends Og{constructor(e,t){super(e,t),this.kernel=null,rc.verifyArgs(t),this.filters=t.filters,xn(this.filters,"filters"),this.kernelInitializer=Ft(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=pn(t.kernelConstraint),this.kernelRegularizer=Pt(t.kernelRegularizer)}build(e){e=ct(e);const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new W(`The channel dimension of the input should be defined. Found ${e[t]}`);const s=e[t],r=this.kernelSize.concat([s,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:s}}],this.built=!0}call(e,t){return j(()=>{e=Fe(e);let s;const r=this.bias==null?null:this.bias.read(),a=EC(this.activation.getClassName());if(a!=null&&this.rank===2)s=W1(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate,a);else{if(this.rank===1)s=dq(e,this.kernel.read(),r,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)s=W1(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)s=hq(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new Ge("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(s=this.activation.apply(s))}return s})}computeOutputShape(e){e=ct(e);const t=[],s=this.dataFormat==="channelsLast"?e.slice(1,e.length-1):e.slice(2);for(let a=0;a<s.length;++a){const o=mr(s[a],this.kernelSize[a],this.padding,this.strides[a],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[a]);t.push(o)}let r=[e[0]];return this.dataFormat==="channelsLast"?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:zt(this.kernelInitializer),kernelRegularizer:Nt(this.kernelRegularizer),kernelConstraint:hn(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||typeof e.filters!="number"||e.filters<1)throw new W(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class lp extends rc{constructor(e){super(2,e),lp.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!Yw(e.kernelSize,"number",1,2))throw new W(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}lp.className="Conv2D";re(lp);class cp extends rc{constructor(e){super(3,e),cp.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!(Array.isArray(e.kernelSize)&&(e.kernelSize.length===1||e.kernelSize.length===3)))throw new W(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}cp.className="Conv3D";re(cp);class FT extends lp{constructor(e){if(super(e),this.inputSpec=[new cn({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new W(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=ct(e),e.length!==4)throw new W("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new W("The channel dimension of the inputs should be defined. Found `None`.");const s=e[t],r=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new cn({ndim:4,axes:{[t]:s}})],this.built=!0}call(e,t){return j(()=>{let s=Fe(e);if(s.shape.length!==4)throw new W(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const r=s.shape,a=r[0];let o,i;this.dataFormat==="channelsFirst"?(o=2,i=3):(o=1,i=2);const u=r[o],c=r[i],l=this.kernelSize[0],d=this.kernelSize[1],h=this.strides[0],p=this.strides[1],f=Lr(u,h,l,this.padding),m=Lr(c,p,d,this.padding),g=[a,f,m,this.filters];this.dataFormat!=="channelsLast"&&(s=nt(s,[0,2,3,1]));let y=Vx(s,this.kernel.read(),g,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(y=nt(y,[0,3,1,2])),this.bias!=null&&(y=$r(y,this.bias.read(),this.dataFormat)),this.activation!=null&&(y=this.activation.apply(y)),y})}computeOutputShape(e){e=ct(e);const t=e.slice();let s,r,a;this.dataFormat==="channelsFirst"?(s=1,r=2,a=3):(s=3,r=1,a=2);const o=this.kernelSize[0],i=this.kernelSize[1],u=this.strides[0],c=this.strides[1];return t[s]=this.filters,t[r]=Lr(t[r],u,o,this.padding),t[a]=Lr(t[a],c,i,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}FT.className="Conv2DTranspose";re(FT);class PT extends cp{constructor(e){if(super(e),this.inputSpec=[new cn({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new W(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=ct(e),e.length!==5)throw new W("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new W("The channel dimension of the inputs should be defined. Found `None`.");const s=e[t],r=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new cn({ndim:5,axes:{[t]:s}})],this.built=!0}call(e,t){return j(()=>{let s=Fe(e);if(s.shape.length!==5)throw new W(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const r=s.shape,a=r[0];let o,i,u;this.dataFormat==="channelsFirst"?(u=2,o=3,i=4):(u=1,o=2,i=3);const c=r[u],l=r[o],d=r[i],h=this.kernelSize[0],p=this.kernelSize[1],f=this.kernelSize[2],m=this.strides[0],g=this.strides[1],y=this.strides[2],b=Lr(c,m,h,this.padding),x=Lr(l,g,p,this.padding),w=Lr(d,y,f,this.padding),v=[a,b,x,w,this.filters];this.dataFormat!=="channelsLast"&&(s=nt(s,[0,2,3,4,1]));let S=uN(s,this.kernel.read(),v,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(S=nt(S,[0,4,1,2,3])),this.bias!==null&&(S=$r(S,this.bias.read(),this.dataFormat)),this.activation!==null&&(S=this.activation.apply(S)),S})}computeOutputShape(e){e=ct(e);const t=e.slice();let s,r,a,o;this.dataFormat==="channelsFirst"?(s=1,r=2,a=3,o=4):(s=4,r=1,a=2,o=3);const i=this.kernelSize[0],u=this.kernelSize[1],c=this.kernelSize[2],l=this.strides[0],d=this.strides[1],h=this.strides[2];return t[s]=this.filters,t[r]=Lr(t[r],l,i,this.padding),t[a]=Lr(t[a],d,u,this.padding),t[o]=Lr(t[o],h,c,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}PT.className="Conv3DTranspose";re(PT);class LT extends rc{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,t.filters==null)throw new W("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(t.kernelInitializer!=null||t.kernelRegularizer!=null||t.kernelConstraint!=null)throw new W("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(t.padding!=null&&t.padding!=="same"&&t.padding!=="valid")throw new W(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=Ft(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Pt(t.depthwiseRegularizer),this.depthwiseConstraint=pn(t.depthwiseConstraint),this.pointwiseInitializer=Ft(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Pt(t.pointwiseRegularizer),this.pointwiseConstraint=pn(t.pointwiseConstraint)}build(e){if(e=ct(e),e.length<this.rank+2)throw new W(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null||e[t]<0)throw new W(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const s=e[t],r=this.kernelSize.concat([s,this.depthMultiplier]),a=[];for(let i=0;i<this.rank;++i)a.push(1);a.push(s*this.depthMultiplier,this.filters);const o=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,o,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",a,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,o,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,o,this.biasConstraint):this.bias=null,this.inputSpec=[new cn({ndim:this.rank+2,axes:{[t]:s}})],this.built=!0}call(e,t){return j(()=>{e=Fe(e);let s;if(this.rank===1)throw new Ge("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=nt(e,[0,2,3,1])),s=sw(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(s=$r(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),this.dataFormat==="channelsFirst"&&(s=nt(s,[0,3,1,2])),s})}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=zt(this.depthwiseInitializer),e.pointwiseInitializer=zt(this.pointwiseInitializer),e.depthwiseRegularizer=Nt(this.depthwiseRegularizer),e.pointwiseRegularizer=Nt(this.pointwiseRegularizer),e.depthwiseConstraint=hn(this.depthwiseConstraint),e.pointwiseConstraint=hn(this.pointwiseConstraint),e}}LT.className="SeparableConv";class MT extends LT{constructor(e){super(2,e)}}MT.className="SeparableConv2D";re(MT);class Fg extends rc{constructor(e){super(1,e),Fg.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!Yw(e.kernelSize,"number",1,1))throw new W(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}Fg.className="Conv1D";re(Fg);class BT extends Ye{constructor(e){super(e),typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return j(()=>{if(e=Fe(e),this.dataFormat==="channelsLast"){const s=Rp(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Rp(s,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{const s=Rp(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Rp(s,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}BT.className="Cropping2D";re(BT);class zT extends Ye{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Xt(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,WH(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){const t=e[2]==null?null:this.size[0]*e[2],s=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],t,s]}else{const t=e[1]==null?null:this.size[0]*e[1],s=e[2]==null?null:this.size[1]*e[2];return[e[0],t,s,e[3]]}}call(e,t){return j(()=>{let s=Fe(e);const r=s.shape;if(this.dataFormat==="channelsFirst"){s=nt(s,[0,2,3,1]);const a=this.size[0]*r[2],o=this.size[1]*r[3],i=this.interpolation==="nearest"?Mr.resizeNearestNeighbor(s,[a,o]):Mr.resizeBilinear(s,[a,o]);return nt(i,[0,3,1,2])}else{const a=this.size[0]*r[1],o=this.size[1]*r[2];return this.interpolation==="nearest"?Mr.resizeNearestNeighbor(s,[a,o]):Mr.resizeBilinear(s,[a,o])}})}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}}zT.className="UpSampling2D";re(zT);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function pq(n,e,t=[1,1],s="valid",r,a){return j(()=>{r==null&&(r=Ir()),Xt(r);let o=c0(n,r);if(n.rank!==4)throw new W(`Input for depthwiseConv2d is required to be 4-D, but is instead ${n.rank}-D`);if(e.rank!==4)throw new W(`depthwiseKernel is required to be 4-D, but is instead ${e.rank}-D`);return o=Zh(o,e,t,s==="same"?"same":"valid","NHWC",a),r==="channelsFirst"&&(o=nt(o,[0,3,1,2])),o})}class VT extends Og{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=Ft(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=pn(e.depthwiseConstraint),this.depthwiseRegularizer=Pt(e.depthwiseRegularizer)}build(e){if(e=ct(e),e.length<4)throw new W(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t=this.dataFormat==="channelsFirst"?1:3;if(e[t]==null||e[t]<0)throw new W(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const s=e[t],r=[this.kernelSize[0],this.kernelSize[1],s,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[s*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return j(()=>{e=Fe(e);let s=pq(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(s=$r(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),s})}computeOutputShape(e){e=ct(e);const t=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2],r=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,a=mr(t,this.kernelSize[0],this.padding,this.strides[0]),o=mr(s,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],r,a,o]:[e[0],a,o,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=zt(this.depthwiseInitializer),e.depthwiseRegularizer=Nt(this.depthwiseRegularizer),e.depthwiseConstraint=hn(this.depthwiseRegularizer),e}}VT.className="DepthwiseConv2D";re(VT);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function WT(n,e,t,s){if(Array.isArray(n)){if(e!=null||t!=null)throw new W("When inputs is an array, neither initialState or constants should be provided");s!=null&&(t=n.slice(n.length-s,n.length),n=n.slice(0,n.length-s)),n.length>1&&(e=n.slice(1,n.length)),n=n[0]}function r(a){return a==null||Array.isArray(a)?a:[a]}return e=r(e),t=r(t),{inputs:n,initialState:e,constants:t}}function UT(n,e,t,s=!1,r,a,o=!1,i=!1){return j(()=>{const u=e.shape.length;if(u<3)throw new W(`Input should be at least 3D, but is ${u}D.`);const c=[1,0].concat(vr(2,u));e=nt(e,c),o&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),r!=null&&(r=fe(fe(r,"bool"),"float32"),r.rank===u-1&&(r=Hn(r,-1)),r=nt(r,c)),s&&(e=sr(e,0),r!=null&&(r=sr(r,0)));const l=[];let d,h=t;const p=e.shape[0],f=rr(e);let m;r!=null&&(m=rr(r));for(let y=0;y<p;++y){const b=f[y],x=j(()=>n(b,h));if(r==null)d=x[0],h=x[1];else{const w=j(()=>{const v=m[y],S=we(Ls(v),v),N=se(B(x[0],v),B(h[0],S)),$=h.map((T,C)=>se(B(x[1][C],v),B(T,S)));return{output:N,newStates:$}});d=w.output,h=w.newStates}i&&l.push(d)}let g;return i&&(g=Ss(l,1)),[d,g,h]})}class So extends Ye{constructor(e){super(e);let t;if(e.cell==null)throw new W("cell property is missing for the constructor of RNN.");if(Array.isArray(e.cell)?t=new p0({cells:e.cell}):t=e.cell,t.stateSize==null)throw new W("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=e.returnSequences==null?!1:e.returnSequences,this.returnState=e.returnState==null?!1:e.returnState,this.goBackwards=e.goBackwards==null?!1:e.goBackwards,this._stateful=e.stateful==null?!1:e.stateful,this.unroll=e.unroll==null?!1:e.unroll,this.supportsMasking=!0,this.inputSpec=[new cn({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return vr(0,e).map(t=>null)}else return this.states_}setStates(e){this.states_=e}computeOutputShape(e){fb(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const s=t[0];let r;if(this.returnSequences?r=[e[0],e[1],s]:r=[e[0],s],this.returnState){const a=[];for(const o of t)a.push([e[0],o]);return[r].concat(a)}else return r}computeMask(e,t){return j(()=>{Array.isArray(t)&&(t=t[0]);const s=this.returnSequences?t:null;if(this.returnState){const r=this.states.map(a=>null);return[s].concat(r)}else return s})}get states(){if(this.states_==null){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let s=0;s<e;++s)t.push(null);return t}else return this.states_}set states(e){this.states_=e}build(e){if(this.numConstants!=null)throw new Ge("Constants support is not implemented in RNN yet.");fb(e)&&(e=e[0]),e=e;const t=this.stateful?e[0]:null,s=e.slice(2);this.inputSpec[0]=new cn({shape:[t,null,...s]});const r=[e[0]].concat(e.slice(2));this.cell.build(r);let a;if(Array.isArray(this.cell.stateSize)?a=this.cell.stateSize:a=[this.cell.stateSize],this.stateSpec!=null){if(!Qe(this.stateSpec.map(o=>o.shape[o.shape.length-1]),a))throw new W(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=a.map(o=>new cn({shape:[null,o]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){j(()=>{if(!this.stateful)throw new Fr("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape[0];if(s==null)throw new W("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(r=>un([s,r])):this.states_=[un([s,this.cell.stateSize])];else if(e==null)Xe(this.states_),this.keptStates!=null&&(Xe(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(r=>un([s,r])):this.states_[0]=un([s,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new W(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t===!0?this.keptStates.push(this.states_.slice()):Xe(this.states_);for(let r=0;r<this.states_.length;++r){const a=e[r],o=Array.isArray(this.cell.stateSize)?this.cell.stateSize[r]:this.cell.stateSize,i=[s,o];if(!Qe(a.shape,i))throw new W(`State ${r} is incompatible with layer ${this.name}: expected shape=${i}, received shape=${a.shape}`);this.states_[r]=a}}this.states_=this.states_.map(r=>bn(r.clone()))})}apply(e,t){let s=t==null?null:t.initialState,r=t==null?null:t.constants;t==null&&(t={});const a=WT(e,s,r,this.numConstants);e=a.inputs,s=a.initialState,r=a.constants;let o=[],i=[];if(s!=null){t.initialState=s,o=o.concat(s),this.stateSpec=[];for(const c of s)this.stateSpec.push(new cn({shape:c.shape}));i=i.concat(this.stateSpec)}if(r!=null&&(t.constants=r,o=o.concat(r),this.numConstants=r.length),o[0]instanceof Yr){const c=[e].concat(o),l=this.inputSpec.concat(i),d=this.inputSpec;this.inputSpec=l;const h=super.apply(c,t);return this.inputSpec=d,h}else return super.apply(e,t)}call(e,t){return j(()=>{const s=t==null?null:t.mask,r=t==null?null:t.training;let a=t==null?null:t.initialState;e=Fe(e),a==null&&(this.stateful?a=this.states_:a=this.getInitialState(e));const o=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(a.length!==o)throw new W(`RNN Layer has ${o} state(s) but was passed ${a.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:r},c=UT((f,m)=>{const g=this.cell.call([f].concat(m),i);return[g[0],g.slice(1)]},e,a,this.goBackwards,s,null,this.unroll,this.returnSequences),l=c[0],d=c[1],h=c[2];this.stateful&&this.resetStates(h,r);const p=this.returnSequences?d:l;return this.returnState?[p].concat(h):p})}getInitialState(e){return j(()=>{let t=un(e.shape);return t=Ne(t,[1,2]),t=rp(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(s=>s>1?hb(t,[1,s]):t):this.cell.stateSize>1?[hb(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(t.numConstants=this.numConstants);const s=this.cell.getConfig();return this.getClassName()===So.className&&(t.cell={className:this.cell.getClassName(),config:s}),Object.assign(Object.assign(Object.assign({},s),e),t)}static fromConfig(e,t,s={}){const r=t.cell,a=ba(r,s);return new e(Object.assign(t,{cell:a}))}}So.className="RNN";re(So);class Pg extends Ye{}class d0 extends Pg{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,xn(this.units,"units"),this.activation=lo(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=Ft(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ft(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ft(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Pt(e.kernelRegularizer),this.recurrentRegularizer=Pt(e.recurrentRegularizer),this.biasRegularizer=Pt(e.biasRegularizer),this.kernelConstraint=pn(e.kernelConstraint),this.recurrentConstraint=pn(e.recurrentConstraint),this.biasConstraint=pn(e.biasConstraint),this.dropout=Su([1,io([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=Su([1,io([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=ct(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return j(()=>{if(e=e,e.length!==2)throw new W(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let s=e[1];e=e[0];const r=t.training==null?!1:t.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=co({ones:()=>Ls(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=co({ones:()=>Ls(s),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));let a;const o=this.dropoutMask,i=this.recurrentDropoutMask;o!=null?a=Gr(B(e,o),this.kernel.read()):a=Gr(e,this.kernel.read()),this.bias!=null&&(a=$r(a,this.bias.read())),i!=null&&(s=B(s,i));let u=se(a,Gr(s,this.recurrentKernel.read()));return this.activation!=null&&(u=this.activation.apply(u)),[u,u]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:uo(this.activation),useBias:this.useBias,kernelInitializer:zt(this.kernelInitializer),recurrentInitializer:zt(this.recurrentInitializer),biasInitializer:zt(this.biasInitializer),kernelRegularizer:Nt(this.kernelRegularizer),recurrentRegularizer:Nt(this.recurrentRegularizer),biasRegularizer:Nt(this.biasRegularizer),activityRegularizer:Nt(this.activityRegularizer),kernelConstraint:hn(this.kernelConstraint),recurrentConstraint:hn(this.recurrentConstraint),biasConstraint:hn(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}}d0.className="SimpleRNNCell";re(d0);class GT extends So{constructor(e){e.cell=new d0(e),super(e)}call(e,t){return j(()=>{this.cell.dropoutMask!=null&&(Xe(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Xe(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=t==null?null:t.mask,r=t==null?null:t.training,a=t==null?null:t.initialState;return super.call(e,{mask:s,training:r,initialState:a})})}static fromConfig(e,t){return new e(t)}}GT.className="SimpleRNN";re(GT);class h0 extends Pg{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new W("GRUCell does not support reset_after parameter set to true.");this.units=e.units,xn(this.units,"units"),this.activation=lo(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=lo(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=Ft(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ft(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ft(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Pt(e.kernelRegularizer),this.recurrentRegularizer=Pt(e.recurrentRegularizer),this.biasRegularizer=Pt(e.biasRegularizer),this.kernelConstraint=pn(e.kernelConstraint),this.recurrentConstraint=pn(e.recurrentConstraint),this.biasConstraint=pn(e.biasConstraint),this.dropout=Su([1,io([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=Su([1,io([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=ct(e);const t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return j(()=>{if(e=e,e.length!==2)throw new W(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const s=t.training==null?!1:t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=co({ones:()=>Ls(e),rate:this.dropout,training:s,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=co({ones:()=>Ls(r),rate:this.recurrentDropout,training:s,count:3,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,o=this.recurrentDropoutMask;let i,u,c;0<this.dropout&&this.dropout<1&&(e=B(e,a[0]));let l=Gr(e,this.kernel.read());this.useBias&&(l=$r(l,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=B(r,o[0]));const d=this.recurrentKernel.read(),[h,p]=bs(d,[2*this.units,this.units],d.rank-1),f=Gr(r,h),[m,g,y]=bs(l,3,l.rank-1),[b,x]=bs(f,2,f.rank-1);i=this.recurrentActivation.apply(se(m,b)),u=this.recurrentActivation.apply(se(g,x));const w=Gr(B(u,r),p);c=this.activation.apply(se(y,w));const v=se(B(i,r),B(se(1,Dt(i)),c));return[v,v]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:uo(this.activation),recurrentActivation:uo(this.recurrentActivation),useBias:this.useBias,kernelInitializer:zt(this.kernelInitializer),recurrentInitializer:zt(this.recurrentInitializer),biasInitializer:zt(this.biasInitializer),kernelRegularizer:Nt(this.kernelRegularizer),recurrentRegularizer:Nt(this.recurrentRegularizer),biasRegularizer:Nt(this.biasRegularizer),activityRegularizer:Nt(this.activityRegularizer),kernelConstraint:hn(this.kernelConstraint),recurrentConstraint:hn(this.recurrentConstraint),biasConstraint:hn(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}}h0.className="GRUCell";re(h0);class HT extends So{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new h0(e),super(e)}call(e,t){return j(()=>{this.cell.dropoutMask!=null&&(Xe(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Xe(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=t==null?null:t.mask,r=t==null?null:t.training,a=t==null?null:t.initialState;return super.call(e,{mask:s,training:r,initialState:a})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}}HT.className="GRU";re(HT);class Lg extends Pg{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,xn(this.units,"units"),this.activation=lo(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=lo(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=Ft(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ft(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ft(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=Pt(e.kernelRegularizer),this.recurrentRegularizer=Pt(e.recurrentRegularizer),this.biasRegularizer=Pt(e.biasRegularizer),this.kernelConstraint=pn(e.kernelConstraint),this.recurrentConstraint=pn(e.recurrentConstraint),this.biasConstraint=pn(e.biasConstraint),this.dropout=Su([1,io([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=Su([1,io([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;e=ct(e);const s=e[e.length-1];this.kernel=this.addWeight("kernel",[s,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let r;if(this.useBias){if(this.unitForgetBias){const a=this.biasInitializer,o=this.units;r=new(t=class extends ar{apply(u,c){const l=a.apply([o]),d=new Jw().apply([o]),h=a.apply([o*2]);return N1(N1(l,d),h)}},t.className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return j(()=>{const s=t.training==null?!1:t.training;if(e=e,e.length!==3)throw new W(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const a=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=co({ones:()=>Ls(e),rate:this.dropout,training:s,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=co({ones:()=>Ls(r),rate:this.recurrentDropout,training:s,count:4,dropoutFunc:this.dropoutFunc}));const o=this.dropoutMask,i=this.recurrentDropoutMask;let u,c,l,d;0<this.dropout&&this.dropout<1&&(e=B(e,o[0]));let h=Gr(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=B(r,i[0])),h=se(h,Gr(r,this.recurrentKernel.read())),this.useBias&&(h=$r(h,this.bias.read()));const[p,f,m,g]=bs(h,4,h.rank-1);u=this.recurrentActivation.apply(p),c=this.recurrentActivation.apply(f),l=se(B(c,a),B(u,this.activation.apply(m))),d=this.recurrentActivation.apply(g);const y=B(d,this.activation.apply(l));return[y,y,l]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:uo(this.activation),recurrentActivation:uo(this.recurrentActivation),useBias:this.useBias,kernelInitializer:zt(this.kernelInitializer),recurrentInitializer:zt(this.recurrentInitializer),biasInitializer:zt(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Nt(this.kernelRegularizer),recurrentRegularizer:Nt(this.recurrentRegularizer),biasRegularizer:Nt(this.biasRegularizer),activityRegularizer:Nt(this.activityRegularizer),kernelConstraint:hn(this.kernelConstraint),recurrentConstraint:hn(this.recurrentConstraint),biasConstraint:hn(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}}Lg.className="LSTMCell";re(Lg);class jT extends So{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Lg(e),super(e)}call(e,t){return j(()=>{this.cell.dropoutMask!=null&&(Xe(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Xe(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=t==null?null:t.mask,r=t==null?null:t.training,a=t==null?null:t.initialState;return super.call(e,{mask:s,training:r,initialState:a})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}}jT.className="LSTM";re(jT);class p0 extends Pg{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return j(()=>{e=e;let s=e.slice(1);const r=[];for(const i of this.cells.slice().reverse())Array.isArray(i.stateSize)?r.push(s.splice(0,i.stateSize.length)):r.push(s.splice(0,1));r.reverse();const a=[];let o;for(let i=0;i<this.cells.length;++i){const u=this.cells[i];s=r[i],i===0?o=[e[0]].concat(s):o=[o[0]].concat(s),o=u.call(o,t),a.push(o.slice(1))}s=[];for(const i of a.slice().reverse())s.push(...i);return[o[0]].concat(s)})}build(e){fb(e)&&(e=e[0]),e=e;let t;this.cells.forEach((s,r)=>{Ho(`RNNCell_${r}`,()=>{s.build(e),Array.isArray(s.stateSize)?t=s.stateSize[0]:t=s.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){const e=super.getConfig(),t=a=>({className:a.getClassName(),config:a.getConfig()}),r={cells:this.cells.map(t)};return Object.assign(Object.assign({},e),r)}static fromConfig(e,t,s={}){const r=[];for(const a of t.cells)r.push(ba(a,s));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const s of this.cells)t.push(...s.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return mb(e)}setWeights(e){const t=[];for(const s of this.cells){const r=s.weights.length,a=e.splice(r);for(let o=0;o<s.weights.length;++o)t.push([s.weights[o],a[o]])}a0(t)}}p0.className="StackedRNNCells";re(p0);function co(n){const{ones:e,rate:t,training:s=!1,count:r=1,dropoutFunc:a}=n,o=()=>a!=null?a(e(),t):LC(e(),t),i=()=>op(o,e,s);return!r||r<=1?bn(i().clone()):Array(r).fill(void 0).map(i).map(c=>bn(c.clone()))}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var fq=function(n,e){var t={};for(var s in n)Object.prototype.hasOwnProperty.call(n,s)&&e.indexOf(s)<0&&(t[s]=n[s]);if(n!=null&&typeof Object.getOwnPropertySymbols=="function")for(var r=0,s=Object.getOwnPropertySymbols(n);r<s.length;r++)e.indexOf(s[r])<0&&Object.prototype.propertyIsEnumerable.call(n,s[r])&&(t[s[r]]=n[s[r]]);return t};class qT extends So{constructor(e){if(e.unroll)throw new Ge("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Ge("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new cn({ndim:5})]}call(e,t){return j(()=>{if(this.cell.dropoutMask!=null&&(Xe(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Xe(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new W("ConvRNN2D cell does not support constants");const s=t==null?null:t.mask,r=t==null?null:t.training,a=t==null?null:t.initialState;return super.call(e,{mask:s,training:r,initialState:a})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return j(()=>{const{stateSize:t}=this.cell,s=e.shape,r=this.computeSingleOutputShape(s),a=[r[0],...r.slice(2)],o=un(a);return Array.isArray(t)?Array(t.length).fill(o):[o]})}resetStates(e,t=!1){j(()=>{if(!this.stateful)throw new Fr("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape,r=this.computeSingleOutputShape(s),a=[r[0],...r.slice(2)];if(s[0]==null)throw new W("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>un(a)):this.states_=[un(a)];else if(e==null)Xe(this.states_),this.keptStates!=null&&(Xe(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>un(a)):this.states_[0]=un(a);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new W(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):Xe(this.states_);for(let i=0;i<this.states_.length;++i){const u=e[i],c=a;if(!Qe(u.shape,c))throw new W(`State ${i} is incompatible with layer ${this.name}: expected shape=${c}, received shape=${u.shape}`);this.states_[i]=u}}this.states_=this.states_.map(i=>bn(i.clone()))})}computeSingleOutputShape(e){const{dataFormat:t,filters:s,kernelSize:r,padding:a,strides:o,dilationRate:i}=this.cell,u=t==="channelsFirst",c=e[u?3:2],l=e[u?4:3],d=mr(c,r[0],a,o[0],i[0]),h=mr(l,r[1],a,o[1],i[1]);return[...e.slice(0,2),...u?[s,d,h]:[d,h,s]]}}qT.className="ConvRNN2D";class f0 extends Lg{constructor(e){const{filters:t,kernelSize:s,strides:r,padding:a,dataFormat:o,dilationRate:i}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,xn(this.filters,"filters"),this.kernelSize=su(s,2,"kernelSize"),this.kernelSize.forEach(u=>xn(u,"kernelSize")),this.strides=su(r||1,2,"strides"),this.strides.forEach(u=>xn(u,"strides")),this.padding=a||"valid",zs(this.padding),this.dataFormat=o||"channelsLast",Xt(this.dataFormat),this.dilationRate=su(i||1,2,"dilationRate"),this.dilationRate.forEach(u=>xn(u,"dilationRate"))}build(e){var t;e=ct(e);const s=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[s]==null)throw new W(`The channel dimension of the input should be defined. Found ${e[s]}`);const r=e[s],a=4,o=this.kernelSize.concat([r,this.filters*a]);this.kernel=this.addWeight("kernel",o,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const i=this.kernelSize.concat([this.filters,this.filters*a]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",i,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let u;if(this.unitForgetBias){const c=this.biasInitializer,l=this.filters;u=new(t=class extends ar{apply(h,p){const f=c.apply([l]),m=gs([l]),g=c.apply([l*2]);return Zw([f,m,g])}},t.className="CustomInit",t)}else u=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*a],null,u,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return j(()=>{if(e.length!==3)throw new W(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const s=t.training||!1,r=e[0],a=e[1],o=e[2],i=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=co({ones:()=>Ls(r),rate:this.dropout,training:s,count:i,dropoutFunc:this.dropoutFunc}));const u=this.dropoutMask,c=(X,Z,ne)=>!Z||!Z[ne]?X:B(Z[ne],X);let l=c(r,u,0),d=c(r,u,1),h=c(r,u,2),p=c(r,u,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=co({ones:()=>Ls(a),rate:this.recurrentDropout,training:s,count:i,dropoutFunc:this.dropoutFunc}));const f=this.recurrentDropoutMask;let m=c(a,f,0),g=c(a,f,1),y=c(a,f,2),b=c(a,f,3);const x=3,[w,v,S,N]=bs(this.kernel.read(),i,x),[$,T,C,k]=this.useBias?bs(this.bias.read(),i):[null,null,null,null];l=this.inputConv(l,w,$,this.padding),d=this.inputConv(d,v,T,this.padding),h=this.inputConv(h,S,C,this.padding),p=this.inputConv(p,N,k,this.padding);const[A,D,R,F]=bs(this.recurrentKernel.read(),i,x);m=this.recurrentConv(m,A),g=this.recurrentConv(g,D),y=this.recurrentConv(y,R),b=this.recurrentConv(b,F);const z=this.recurrentActivation.apply(se(l,m)),H=this.recurrentActivation.apply(se(d,g)),P=se(B(H,o),B(z,this.activation.apply(se(h,y)))),G=B(this.recurrentActivation.apply(se(p,b)),this.activation.apply(P));return[G,G,P]})}getConfig(){const e=super.getConfig(),{units:t}=e,s=fq(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},s),r)}inputConv(e,t,s,r){const a=oo(e,t,this.strides,r||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return s?$r(a,s,this.dataFormat):a}recurrentConv(e,t){return oo(e,t,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}}f0.className="ConvLSTM2DCell";re(f0);class KT extends qT{constructor(e){const t=new f0(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}}KT.className="ConvLSTM2D";re(KT);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class m0 extends Ye{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;const t=e.shape,s=[];for(let r=0;r<this.noiseShape.length;++r)s.push(this.noiseShape[r]==null?t[r]:this.noiseShape[r]);return s}call(e,t){return j(()=>{this.invokeCallHook(e,t);const s=Fe(e);if(0<this.rate&&this.rate<1){const r=t.training==null?!1:t.training,a=this.getNoiseShape(s);return op(()=>LC(s,this.rate,a,this.seed),()=>s,r)}return e})}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}m0.className="Dropout";re(m0);class XT extends m0{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}XT.className="SpatialDropout1D";re(XT);class YT extends Ye{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let t=null;e.batchSize!=null&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,xn(this.units,"units"),this.activation=lo(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=Ft(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Ft(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=pn(e.kernelConstraint),this.biasConstraint=pn(e.biasConstraint),this.kernelRegularizer=Pt(e.kernelRegularizer),this.biasRegularizer=Pt(e.biasRegularizer),this.activityRegularizer=Pt(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=ct(e);const t=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){e=ct(e);const t=e.slice();return t[t.length-1]=this.units,t}call(e,t){return j(()=>{this.invokeCallHook(e,t);const s=Fe(e),r=EC(this.activation.getClassName());let a;return r!=null?a=Gr(s,this.kernel.read(),r,this.bias?this.bias.read():null):(a=Gr(s,this.kernel.read()),this.bias!=null&&(a=$r(a,this.bias.read())),this.activation!=null&&(a=this.activation.apply(a))),a})}getConfig(){const e={units:this.units,activation:uo(this.activation),useBias:this.useBias,kernelInitializer:zt(this.kernelInitializer),biasInitializer:zt(this.biasInitializer),kernelRegularizer:Nt(this.kernelRegularizer),biasRegularizer:Nt(this.biasRegularizer),activityRegularizer:Nt(this.activityRegularizer),kernelConstraint:hn(this.kernelConstraint),biasConstraint:hn(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}YT.className="Dense";re(YT);class ZT extends Ye{constructor(e){e=e||{},super(e),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=ct(e);for(const t of e.slice(1))if(t==null)throw new W(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Ya(e,1)]}call(e,t){return j(()=>{this.invokeCallHook(e,t);let s=Fe(e);if(this.dataFormat==="channelsFirst"&&s.rank>1){const r=[0];for(let a=2;a<s.rank;++a)r.push(a);r.push(1),s=nt(s,r)}return KH(s)})}getConfig(){const e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}ZT.className="Flatten";re(ZT);class JT extends Ye{constructor(e){super(e),this.supportsMasking=!0,this.activation=lo(e.activation)}call(e,t){return j(()=>{this.invokeCallHook(e,t);const s=Fe(e);return this.activation.apply(s)})}getConfig(){const e={activation:uo(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}JT.className="Activation";re(JT);class QT extends Ye{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return j(()=>(e=Fe(e),jH(e,this.n)))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}QT.className="RepeatVector";re(QT);class e$ extends Ye{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,t){const s="Total size of new array must be unchanged.",r=t.slice();let a=1,o=null;for(let u=0;u<r.length;++u){const c=r[u];if(this.isUnknown(c))if(o===null)o=u;else throw new W("Can only specifiy one unknown dimension.");else a*=c}const i=Ya(e);if(o!==null){if(a===0||i%a!==0)throw new W(s);r[o]=i/a}else if(i!==a)throw new W(s);return r}computeOutputShape(e){let t=!1;for(let s=0;s<e.length;++s)if(this.isUnknown(e[s])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return j(()=>{this.invokeCallHook(e,t);const s=Fe(e),r=s.shape,a=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return V(s,a)})}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}e$.className="Reshape";re(e$);class t$ extends Ye{constructor(e){if(super(e),e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=vr(1,e.dims.length+1);if(!Qe(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new cn({ndim:this.dims.length+1})]}computeOutputShape(e){e=ct(e);const t=e.slice();return this.dims.forEach((s,r)=>{t[r+1]=e[s]}),t}call(e,t){return nt(Fe(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}t$.className="Permute";re(t$);class n$ extends Ye{constructor(e){super(e??{}),this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const s=Fe(e);return vf(vu(s,this.maskValue),-1)}call(e,t){return j(()=>{this.invokeCallHook(e,t);const s=Fe(e),o=vf(vu(s,this.maskValue),-1,!0);return B(s,fe(o,s.dtype))})}}n$.className="Masking";re(n$);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class s$ extends Ye{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",e.batchInputShape==null&&e.inputShape==null){let t=null;e.batchSize!=null&&(t=e.batchSize),e.inputLength==null?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(bt(e.inputLength))}this.inputDim=e.inputDim,xn(this.inputDim,"inputDim"),this.outputDim=e.outputDim,xn(this.outputDim,"outputDim"),this.embeddingsInitializer=Ft(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Pt(e.embeddingsRegularizer),this.activityRegularizer=Pt(e.activityRegularizer),this.embeddingsConstraint=pn(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return j(()=>this.maskZero?(e=Fe(e),vu(e,st(e))):null)}computeOutputShape(e){if(e=ct(e),this.inputLength==null)return[...e,this.outputDim];const t=bt(this.inputLength);if(t.length!==e.length-1)throw new W(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let s=0;for(let r=0;r<t.length;++r){const a=t[r],o=e[r+1];if(a!=null&&o!=null&&a!==o)throw new W(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);a==null&&(t[s]=o),s++}}return[e[0],...t,this.outputDim]}call(e,t){return j(()=>{this.invokeCallHook(e,t);let s=Fe(e);s.dtype!=="int32"&&(s=Ur(s,"int32"));const r=PC(this.embeddings.read(),V(s,[s.size]));return V(r,ct(this.computeOutputShape(s.shape)))})}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:zt(this.embeddingsInitializer),embeddingsRegularizer:Nt(this.embeddingsRegularizer),activityRegularizer:Nt(this.activityRegularizer),embeddingsConstraint:hn(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}s$.className="Embedding";re(s$);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Ti extends Ye{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new Ge}computeElementwiseOpOutputShape(e,t){if(e==null||t==null)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(t.length===0)return e;const s=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const a=e[e.length-t.length+r],o=t[r];if(a==null||o==null||a<0||o<0)s.push(null);else if(a===1)s.push(o);else if(o===1)s.push(a);else{if(a!==o)throw new W("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));s.push(a)}}return s}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[ct(e)]),e=e,e.length<2)throw new W(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const a of e)a!=null&&a[0]!==null&&t.push(a[0]);if(t=Xa(t),t.length>1)throw new W(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let s=e[0]==null?null:e[0].slice(1);for(let a=1;a<e.length;++a){const o=e[a]==null?null:e[a].slice(1);s=this.computeElementwiseOpOutputShape(s,o)}const r=e.map(a=>a.length);e.indexOf(null)===-1&&Xa(r).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return j(()=>{if(e=e,this.reshapeRequired){const s=[],r=e.map(a=>a.rank);if(r.indexOf(null)===-1){const a=io(r);for(let o of e){const i=o.rank;for(let u=0;u<a-i;++u)o=rp(o,1);s.push(o)}return this.mergeFunction(s)}else{let a=!1;for(const u of e){const c=u.rank;if(c==null){const l=u.shape,d=l[0],h=l.slice(1).concat([d]);let p=V(u,[d].concat(Ya(l.slice(1))));p=nt(p,[1,0]),p=V(p,h),s.push(p),a=!0}else if(c>1){const l=vr(1,c).concat([0]);s.push(nt(u,l)),a=!0}else s.push(u)}let o=this.mergeFunction(s);const i=o.rank;if(a){if(i==null){const u=o.shape,c=u.length,l=u[c-1],d=[l].concat(u.slice(0,u.length-1));o=V(nt(V(o,[-1,l]),[1,0]),d)}else if(i>1){const u=[i-1].concat(vr(0,i-1));o=nt(o,u)}}return o}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let t;e[0]==null?t=null:t=e[0].slice(1);for(let r=1;r<e.length;++r){const a=e[r]==null?null:e[r].slice(1);t=this.computeElementwiseOpOutputShape(t,a)}let s=[];for(const r of e)r!=null&&r[0]!==null&&s.push(r[0]);return s=Xa(s),s.length===1?t=s.concat(t):t=[null].concat(t),t}computeMask(e,t){return j(()=>{if(t==null)return null;if(!Array.isArray(t))throw new W("`mask` should be an Array");if(!Array.isArray(e))throw new W("`inputs` should be an Array");if(t.length!==e.length)throw new W(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(r=>r==null))return null;t=t.map(r=>r==null?r:Hn(r,0));let s=t[0];for(let r=1;r<t.length-1;++r)s=Xr(s,t[r]);return s})}}class r$ extends Ti{constructor(e){super(e)}mergeFunction(e){return j(()=>{let t=e[0].clone();for(let s=1;s<e.length;++s)t=se(t,e[s]);return t})}}r$.className="Add";re(r$);class a$ extends Ti{constructor(e){super(e)}mergeFunction(e){return j(()=>{let t=e[0].clone();for(let s=1;s<e.length;++s)t=B(t,e[s]);return t})}}a$.className="Multiply";re(a$);class o$ extends Ti{constructor(e){super(e)}mergeFunction(e){return j(()=>{let t=e[0].clone();for(let s=1;s<e.length;++s)t=se(t,e[s]);return B(1/e.length,t)})}}o$.className="Average";re(o$);class i$ extends Ti{constructor(e){super(e)}mergeFunction(e){return j(()=>{let t=e[0];for(let s=1;s<e.length;++s)t=$a(t,e[s]);return t})}}i$.className="Maximum";re(i$);class u$ extends Ti{constructor(e){super(e)}mergeFunction(e){return j(()=>{let t=e[0];for(let s=1;s<e.length;++s)t=ni(t,e[s]);return t})}}u$.className="Minimum";re(u$);class l$ extends Ti{constructor(e){super(e),this.DEFAULT_AXIS=-1,e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new W("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(const r of e)if(r!=null){t=!1;break}if(t)return;const s=[];for(let r=0;r<e.length;++r){const a=e[r].slice();a.splice(this.axis,1);let o=!1;for(const i of s)if(Qe(i,a)){o=!0;break}o||s.push(a)}if(s.length>1)throw new W("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return j(()=>Zw(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new W("A `Concatenate` layer should be called on a list of inputs.");const t=e,s=t[0].slice(),r=this.axis<0?s.length+this.axis:this.axis;for(const a of t.slice(1)){if(s[r]==null||a[r]==null){s[r]=null;break}s[r]+=a[r]}return s}computeMask(e,t){if(t==null)return null;if(!Array.isArray(t))throw new W("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new W("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new W(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return j(()=>{let s=!0;if(t.forEach(o=>{if(o!=null){s=!1;return}}),s)return null;const r=[];for(let o=0;o<e.length;++o)t[o]==null?r.push(fe(Ls(e[o]),"bool")):t[o].rank<e[o].rank?r.push(Hn(t[o],-1)):r.push(t[o]);const a=tn(r,this.axis);return Lx(a,-1,!1)})}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}l$.className="Concatenate";re(l$);function vc(n,e){for(;n<0;)n+=e;return n}function mq(n,e,t){if(n.shape.length>3||e.shape.length>3)throw new Ge("batchDot is not implemented for tensors of 4D or higher rank yet");if(_(n.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${n.shape.length}`),_(n.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${e.shape.length}`),typeof t=="number"&&(t=[t,t]),n.dtype==="complex64"||e.dtype==="complex64")throw new Ge("batchDot is not implemented for complex64-type Tensors yet.");const s=n.shape.length,r=e.shape.length;t==null&&(t=[s-1,r-2]);const a=t;return j(()=>{let o;if(s>r){o=s-r;const u=[];for(let c=0;c<o;++c)u.push(1);e=V(e,e.shape.concat(u))}else if(r>s){o=r-s;const u=[];for(let c=0;c<o;++c)u.push(1);n=V(n,n.shape.concat(u))}else o=0;let i;if(n.shape.length===2&&e.shape.length===2)a[0]===a[1]?i=Ne(B(n,e),a[0]):i=Ne(B(nt(n,[1,0]),e),a[1]);else{const u=a[0]!==n.shape.length-1,c=a[1]===e.shape.length-1;i=Ke(n,e,u,c)}if(o>0){let u;s>r?u=s+r-3:u=s-1;const c=[];for(let l=u;l<u+o;++l)c.push(l);i=Ii(i,c)}return i.shape.length===1&&(i=Hn(i,1)),i})}class c$ extends Ti{constructor(e){super(e),this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){_(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0],s=e[1];if(t.length>3||s.length>3)throw new Ge("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,s);if(t[r[0]]!==s[r[1]])throw new W(`Dimension incompatibility: ${t[r[0]]} !== ${s[r[1]]}`)}mergeFunction(e){if(e.length!==2)throw new W(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t=e[0],s=e[1],r;return Array.isArray(this.axes)?r=this.axes.map((a,o)=>vc(a,e[o].shape.length)):r=[vc(this.axes,t.shape.length),vc(this.axes,s.shape.length)],this.normalize&&(t=Tf(t,r[0]),s=Tf(s,r[1])),mq(t,s,r)}interpretAxes(e,t){let s;return Array.isArray(this.axes)?s=this.axes:s=[vc(this.axes,e.length),vc(this.axes,t.length)],s}computeOutputShape(e){_(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0].slice(),s=e[1].slice();if(t.length>3||s.length>3)throw new Ge("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,s);t.splice(r[0],1),s.splice(r[1],1),s.splice(0,1);const a=t.concat(s);return a.length===1&&a.push(1),a}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}c$.className="Dot";re(c$);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class d$ extends Ye{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return j(()=>{this.invokeCallHook(e,t);const s=Fe(e);return op(()=>se(Eg(s.shape,0,this.stddev),s),()=>s,t.training||!1)})}}d$.className="GaussianNoise";re(d$);class h$ extends Ye{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return j(()=>{this.invokeCallHook(e,t);const s=Fe(e);return this.rate>0&&this.rate<1?op(()=>{const a=Math.sqrt(this.rate/(1-this.rate));return B(s,Eg(s.shape,1,a))},()=>s,t.training||!1):s})}}h$.className="GaussianDropout";re(h$);class p$ extends Ye{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Fe(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return j(()=>{if(this.rate<1&&this.rate>0){const s=this._getNoiseShape(e);return op(()=>{const a=Fe(e),i=-1.6732632423543772*1.0507009873554805;let u=wo(vi(s),this.rate);u=Ur(u,"float32");const c=((1-this.rate)*(1+this.rate*i**2))**-.5,l=-c*i*this.rate,d=se(B(a,u),B(se(u,-1),i));return se(B(d,c),l)},()=>Fe(e),t.training||!1)}return e})}}p$.className="AlphaDropout";re(p$);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function td(n,e,t,s,r,a=.001){let o;if(n.rank===2)o=Zk(n,e,t,s,r,a);else if(n.rank===3)o=Jk(n,e,t,s,r,a);else if(n.rank===4)o=Qk(n,e,t,s,r,a);else throw new Ge(`batchNormalization is not implemented for array of rank ${n.rank} yet`);return o}function gq(n,e,t,s,r=.001){return j(()=>{const a=ng(n,s),o=a.mean,i=a.variance;return[td(n,o,i,t,e,r),o,i]})}function yq(n,e,t,s,r=.001){return j(()=>{const a=ng(n,s),o=a.mean,i=a.variance,u=[];for(const f of vr(0,n.rank))s.indexOf(f)!==-1?u.push(1):u.push(n.shape[f]);const c=V(o,u),l=V(i,u),d=e==null?null:V(e,u),h=t==null?null:V(t,u);return[td(n,c,l,h,d,r),o,i]})}function bq(n,e,t,s,r=.001){return Qe(s.slice().sort(),vr(0,n.rank-1))?gq(n,e,t,s,r):yq(n,e,t,s,r)}class f$ extends Ye{constructor(e){e==null&&(e={}),super(e),this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=Ft(e.betaInitializer||"zeros"),this.gammaInitializer=Ft(e.gammaInitializer||"ones"),this.movingMeanInitializer=Ft(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Ft(e.movingVarianceInitializer||"ones"),this.betaConstraint=pn(e.betaConstraint),this.gammaConstraint=pn(e.gammaConstraint),this.betaRegularizer=Pt(e.betaRegularizer),this.gammaRegularizer=Pt(e.gammaRegularizer)}build(e){e=ct(e);const t=this.axis>=0?this.axis:this.axis+e.length,s=e[t];if(s==null)throw new W(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new cn({ndim:e.length,axes:{[t]:s}})];const r=[s];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return j(()=>{const s=t.training==null?!1:t.training,r=Fe(e),a=r.shape,o=a.length,i=vr(0,o),u=this.axis>=0?this.axis:this.axis+o;i.splice(u,1);const c=ri(1,o);c[u]=a[u];const l=i.slice();l.sort();const d=!Qe(l,vr(0,o).slice(0,o-1)),h=()=>{if(d){const b=V(this.movingMean.read(),c),x=V(this.movingVariance.read(),c),w=this.center?V(this.beta.read(),c):null,v=this.scale?V(this.gamma.read(),c):null;return td(r,b,x,w,v,this.epsilon)}else return td(r,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!s)return h();const[p,f,m]=bq(r,this.gamma.read(),this.beta.read(),i,this.epsilon),g=(b,x,w)=>{j(()=>{const v=1-w,S=b.read(),N=B(we(S,x),v);b.write(we(S,N))})};return(()=>{g(this.movingMean,f,this.momentum),g(this.movingVariance,m,this.momentum)})(),p})}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:zt(this.betaInitializer),gammaInitializer:zt(this.gammaInitializer),movingMeanInitializer:zt(this.movingMeanInitializer),movingVarianceInitializer:zt(this.movingVarianceInitializer),betaRegularizer:Nt(this.betaRegularizer),gammaRegularizer:Nt(this.gammaRegularizer),betaConstraint:hn(this.betaConstraint),gammaConstraint:hn(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}f$.className="BatchNormalization";re(f$);class m$ extends Ye{constructor(e){if(e==null&&(e={}),super(e),this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(const t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=Ft(e.betaInitializer||"zeros"),this.gammaInitializer=Ft(e.gammaInitializer||"ones"),this.betaRegularizer=Pt(e.betaRegularizer),this.gammaRegularizer=Pt(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=ct(e);const t=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let a=0;a<this.axis.length;++a)this.axis[a]<0&&(this.axis[a]+=t);for(const a of this.axis)if(a<0||a>=t)throw new Error(`Invalid axis: ${a}`);if(this.axis.length!==Xa(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const s=this.axis.map(a=>e[a]),r=!0;this.scale?this.gamma=this.addWeight("gamma",s,"float32",this.gammaInitializer,this.gammaRegularizer,r):this.gamma=null,this.center?this.beta=this.addWeight("beta",s,"float32",this.betaInitializer,this.betaRegularizer,r):this.beta=null,this.built=!0}call(e,t){const s=Fe(e),r=s.shape,a=r.length;return j(()=>{let{mean:i,variance:u}=ng(s,this.axis,!0);const c=ri(1,a);for(const m of this.axis)c[m]=r[m];const l=m=>m!=null&&m.shape.length!==a?V(m,c):m;let d=this.scale?l(this.gamma.read()):null,h=this.center?l(this.beta.read()):null;const p=[],f=[];for(let m=0;m<a;++m)this.axis.indexOf(m)!==-1?(p.push(r[m]),f.push(1)):(p.push(1),f.push(r[m]));return i=Xs(i,p),u=Xs(u,p),d!=null&&(d=Xs(d,f)),h!=null&&(h=Xs(h,f)),td(s,i,u,h,d,this.epsilon)})}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:zt(this.betaInitializer),gammaInitializer:zt(this.gammaInitializer),betaRegularizer:Nt(this.betaRegularizer),gammaRegularizer:Nt(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}m$.className="LayerNormalization";re(m$);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function xq(n,e,t){return j(()=>{if(n.rank!==4)throw new W(`temporalPadding expects input tensor to be 4-D, but received a ${n.rank}-D tensor.`);if(e==null&&(e=[[1,1],[1,1]]),e.length!==2||e[0].length!==2||e[1].length!==2)throw new W("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(t==null&&(t=Ir()),t!=="channelsLast"&&t!=="channelsFirst")throw new W(`Unknown data format: ${t}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let s;return t==="channelsFirst"?s=[[0,0],[0,0],e[0],e[1]]:s=[[0,0],e[0],e[1],[0,0]],vo(n,s)})}class g$ extends Ye{constructor(e){if(e==null&&(e={}),super(e),this.dataFormat=e.dataFormat==null?Ir():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new W(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,s;if(typeof e.padding[0]=="number")t=[e.padding[0],e.padding[0]],s=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new W(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],e.padding[1].length!==2)throw new W(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);s=e.padding[1]}this.padding=[t,s]}this.inputSpec=[new cn({ndim:4})]}computeOutputShape(e){e=ct(e);let t,s;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?t=e[2]+this.padding[0][0]+this.padding[0][1]:t=null,e[3]!=null&&e[3]>=0?s=e[3]+this.padding[1][0]+this.padding[1][1]:s=null,[e[0],e[1],t,s]):(e[1]!=null&&e[1]>=0?t=e[1]+this.padding[0][0]+this.padding[0][1]:t=null,e[2]!=null&&e[2]>=0?s=e[2]+this.padding[1][0]+this.padding[1][1]:s=null,[e[0],t,s,e[3]])}call(e,t){return j(()=>xq(Fe(e),this.padding,this.dataFormat))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}g$.className="ZeroPadding2D";re(g$);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Mg(n,e,t,s,r,a){return j(()=>{Xt(r),DC(a),zs(s),t==null&&(t=[1,1]),s==null&&(s="valid"),r==null&&(r=Ir()),a==null&&(a="max"),n=c0(n,r);let o;const i=s==="same"?"same":"valid";return a==="max"?o=tg(n,e,t,i):o=qm(n,e,t,i),r==="channelsFirst"&&(o=nt(o,[0,3,1,2])),o})}function y$(n,e,t,s,r,a){return j(()=>{Xt(r),DC(a),zs(s),t==null&&(t=[1,1,1]),s==null&&(s="valid"),r==null&&(r=Ir()),a==null&&(a="max"),n=OT(n,r);let o;const i=s==="same"?"same":"valid";return a==="max"?o=SN(n,e,t,i):o=Yk(n,e,t,i),r==="channelsFirst"&&(o=nt(o,[0,4,1,2,3])),o})}class b$ extends Ye{constructor(e){if(e.poolSize==null&&(e.poolSize=2),super(e),typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new W(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(xn(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new W(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);xn(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,zs(this.padding),this.inputSpec=[new cn({ndim:3})]}computeOutputShape(e){e=ct(e);const t=mr(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return j(()=>{this.invokeCallHook(e,t),e=rp(Fe(e),2);const s=this.poolingFunction(Fe(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Ii(s,[2])})}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class x$ extends b${constructor(e){super(e)}poolingFunction(e,t,s,r,a){return Xt(a),zs(r),Mg(e,t,s,r,a,"max")}}x$.className="MaxPooling1D";re(x$);class w$ extends b${constructor(e){super(e)}poolingFunction(e,t,s,r,a){return Xt(a),zs(r),Mg(e,t,s,r,a,"avg")}}w$.className="AveragePooling1D";re(w$);class v$ extends Ye{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new W(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];xn(this.poolSize,"poolSize"),xn(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Xt(this.dataFormat),zs(this.padding),this.inputSpec=[new cn({ndim:4})]}computeOutputShape(e){e=ct(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2];return t=mr(t,this.poolSize[0],this.padding,this.strides[0]),s=mr(s,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,s]:[e[0],t,s,e[3]]}call(e,t){return j(()=>(this.invokeCallHook(e,t),this.poolingFunction(Fe(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class I$ extends v${constructor(e){super(e)}poolingFunction(e,t,s,r,a){return Xt(a),zs(r),Mg(e,t,s,r,a,"max")}}I$.className="MaxPooling2D";re(I$);class S$ extends v${constructor(e){super(e)}poolingFunction(e,t,s,r,a){return Xt(a),zs(r),Mg(e,t,s,r,a,"avg")}}S$.className="AveragePooling2D";re(S$);class k$ extends Ye{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new W(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];xn(this.poolSize,"poolSize"),xn(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Xt(this.dataFormat),zs(this.padding),this.inputSpec=[new cn({ndim:5})]}computeOutputShape(e){e=ct(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2],r=this.dataFormat==="channelsFirst"?e[4]:e[3];return t=mr(t,this.poolSize[0],this.padding,this.strides[0]),s=mr(s,this.poolSize[1],this.padding,this.strides[1]),r=mr(r,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,s,r]:[e[0],t,s,r,e[4]]}call(e,t){return j(()=>(this.invokeCallHook(e,t),this.poolingFunction(Fe(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class N$ extends k${constructor(e){super(e)}poolingFunction(e,t,s,r,a){return Xt(a),zs(r),y$(e,t,s,r,a,"max")}}N$.className="MaxPooling3D";re(N$);class C$ extends k${constructor(e){super(e)}poolingFunction(e,t,s,r,a){return Xt(a),zs(r),y$(e,t,s,r,a,"avg")}}C$.className="AveragePooling3D";re(C$);class T$ extends Ye{constructor(e){super(e),this.inputSpec=[new cn({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Ge}}class $$ extends T${constructor(e){super(e||{})}call(e,t){return j(()=>{const s=Fe(e);return Wt(s,1)})}}$$.className="GlobalAveragePooling1D";re($$);class _$ extends T${constructor(e){super(e||{})}call(e,t){return j(()=>{const s=Fe(e);return er(s,1)})}}_$.className="GlobalMaxPooling1D";re(_$);class E$ extends Ye{constructor(e){super(e),this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Xt(this.dataFormat),this.inputSpec=[new cn({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Ge}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class A$ extends E${call(e,t){return j(()=>{const s=Fe(e);return this.dataFormat==="channelsLast"?Wt(s,[1,2]):Wt(s,[2,3])})}}A$.className="GlobalAveragePooling2D";re(A$);class D$ extends E${call(e,t){return j(()=>{const s=Fe(e);return this.dataFormat==="channelsLast"?er(s,[1,2]):er(s,[2,3])})}}D$.className="GlobalMaxPooling2D";re(D$);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class R$ extends Ye{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,s={}){const r=t.layer,a=ba(r,s);delete t.layer;const o={layer:a};return Object.assign(o,t),new e(o)}}class O$ extends R${constructor(e){super(e),this.supportsMasking=!0}build(e){if(e=ct(e),e.length<3)throw new W(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=ct(e);const t=[e[0]].concat(e.slice(2)),s=this.layer.computeOutputShape(t),r=e[1];return[s[0],r].concat(s.slice(1))}call(e,t){return j(()=>(e=Fe(e),UT((o,i)=>[Fe(this.layer.call(o,t)),[]],e,[],!1,null,null,!1,!0)[1]))}}O$.className="TimeDistributed";re(O$);function wq(n){Ci(VH,"BidirectionalMergeMode",n)}const vq="concat";class F$ extends R${constructor(e){super(e);const t=e.layer.getConfig(),s={};s.className=e.layer.getClassName(),s.config=t,this.forwardLayer=ba(s),t.goBackwards=t.goBackwards!==!0;const r={};if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=ba(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?vq:e.mergeMode,wq(this.mergeMode),e.weights)throw new Ge("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,s=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,s)),this.backwardLayer.setWeights(e.slice(s))}computeOutputShape(e){let t=this.forwardLayer.computeOutputShape(e);Array.isArray(t)&&Array.isArray(t[0])||(t=[t]),t=t;let s,r,a;return this.returnState&&(a=t.slice(1)),s=t[0],s=s,this.mergeMode==="concat"?(s[s.length-1]*=2,r=[s]):this.mergeMode==null?r=[s,s.slice()]:r=[s],this.returnState?this.mergeMode==null?r.concat(a).concat(a.slice()):[s].concat(a).concat(a.slice()):es(r)}apply(e,t){let s=t==null?null:t.initialState,r=t==null?null:t.constants;t==null&&(t={});const a=WT(e,s,r,this.numConstants);if(e=a.inputs,s=a.initialState,r=a.constants,Array.isArray(e)&&(s=e.slice(1),e=e[0]),(s==null||s.length===0)&&r==null)return super.apply(e,t);const o=[],i=[];if(s!=null){const c=s.length;if(c%2>0)throw new W("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=s,o.push(...s);const l=s.map(d=>new cn({shape:d.shape}));this.forwardLayer.stateSpec=l.slice(0,c/2),this.backwardLayer.stateSpec=l.slice(c/2),i.push(...l)}if(r!=null)throw new Ge("Support for constants in Bidirectional layers is not implemented yet.");const u=o[0]instanceof Yr;for(const c of o)if(c instanceof Yr!==u)throw new W("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(u){const c=[e].concat(o),l=this.inputSpec.concat(i),d=this.inputSpec;this.inputSpec=l;const h=super.apply(c,t);return this.inputSpec=d,h}else return super.apply(e,t)}call(e,t){return j(()=>{const s=t.initialState;let r,a;if(s==null)r=this.forwardLayer.call(e,t),a=this.backwardLayer.call(e,t);else{const u=s.slice(0,s.length/2),c=s.slice(s.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:u})),a=this.backwardLayer.call(e,Object.assign(t,{initialState:c}))}let o;this.returnState&&(Array.isArray(r)&&(o=r.slice(1).concat(a.slice(1))),r=r[0],a=a[0]),this.returnSequences&&(a=sr(a,1));let i;return this.mergeMode==="concat"?i=Zw([r,a]):this.mergeMode==="sum"?i=se(r,a):this.mergeMode==="ave"?i=B(.5,se(r,a)):this.mergeMode==="mul"?i=B(r,a):this.mergeMode==null&&(i=[r,a]),this.returnState?this.mergeMode==null?i.concat(o):[i].concat(o):i})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Ho(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),Ho(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){Array.isArray(t)&&(t=t[0]);let s;if(this.returnSequences?this.mergeMode==null?s=[t,t]:s=t:this.mergeMode==null?s=[null,null]:s=null,this.returnState){const a=this.forwardLayer.states.map(o=>null);return Array.isArray(s)?s.concat(a).concat(a):[s].concat(a).concat(a)}else return s}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const s=ba(t.layer);if(delete t.layer,t.numConstants!=null)throw new Ge("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=s,new e(r)}}F$.className="Bidirectional";re(F$);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class P$ extends Ye{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return j(()=>(e=Fe(e),e.dtype!=="float32"&&(e=Ur(e,"float32")),se(B(e,this.scale),this.offset)))}}P$.className="Rescaling";re(P$);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const{resizeBilinear:Iq,cropAndResize:Sq}=Mr;class L$ extends Ye{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,s,r,a,o,i,u){return j(()=>{let c,l=!1;const d=t/o,h=s/i,p=(r+t)/o,f=(a+s)/i,m=[d,h,p,f],g=[];e.rank===3?(l=!0,c=Ss([e])):c=e;for(let v=0;v<c.shape[0];v++)g.push(m);const y=Qs(g,[g.length,4]),b=Iu(0,g.length,1,"int32"),w=Sq(c,y,b,[r,a],"nearest");return Ur(l?Fe(rr(w)):w,u)})}upsize(e,t,s,r){return j(()=>{const a=Iq(e,[t,s]);return Ur(a,r)})}call(e,t){return j(()=>{const s=Fe(e),r=s.dtype,a=s.shape,o=a[a.length-3],i=a[a.length-2];let u=0;o!==this.height&&(u=Math.floor((o-this.height)/2));let c=0;return i!==this.width&&(c=Math.floor((i-this.width)/2),c===0&&(c=1)),u>=0&&c>=0?this.centerCrop(s,u,c,this.height,this.width,o,i,r):this.upsize(e,this.height,this.width,r)})}getConfig(){const e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){e=ct(e);const t=e.length-3,s=e.length-2;return e[t]=this.height,e[s]=this.width,e}}L$.className="CenterCrop";re(L$);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function kq(n,e,t,s){let r=Fe(n);if(r.dtype!=="int32"&&(r=Ur(r,"int32")),e==="int")return r;const a=r.shape;if(r.rank===0&&(r=Hn(r,-1)),e==="oneHot"&&r.shape[r.shape.length-1]!==1&&(r=Hn(r,-1)),r.rank>2)throw new W(`When outputMode is not int, maximum output rank is 2 Received outputMode ${e} and input shape ${a} which would result in output rank ${r.rank}.`);const o=["multiHot","oneHot"].includes(e),i=r;let u;if(typeof s<"u"&&e==="count"?u=ib(i,s,t,o):u=ib(i,[],t,o),e!=="tfIdf")return u;if(s)return B(u,s);throw new W("When outputMode is 'tfIdf', weights must be provided.")}/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class M$ extends Ye{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return e=ct(e),e==null?[this.numTokens]:this.outputMode==="oneHot"&&e[e.length-1]!==1?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return j(()=>{e=Fe(e),e.dtype!=="int32"&&(e=Ur(e,"int32"));let s;if(typeof t.countWeights<"u"){if(this.outputMode!=="count")throw new W(`countWeights is not used when outputMode !== count.
              Received countWeights=${t.countWeights}`);s=Fe(t.countWeights)}const r=er(e),a=jc(e),o=Cs(this.numTokens,r).bufferSync().get(0),i=wo(a,0).bufferSync().get(0);if(!(o&&i))throw new W(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return kq(e,this.outputMode,this.numTokens,s)})}}M$.className="CategoryEncoding";re(M$);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Nq=["bilinear","nearest"],U1=new Set(Nq);class B$ extends Ye{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation)if(U1.has(e.interpolation))this.interpolation=e.interpolation;else throw new W(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);else this.interpolation="bilinear";this.cropToAspectRatio=!!e.cropToAspectRatio}computeOutputShape(e){e=ct(e);const t=e[2];return[this.height,this.width,t]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return j(()=>{const s=[this.height,this.width];if(this.interpolation==="bilinear")return Mr.resizeBilinear(e,s,!this.cropToAspectRatio);if(this.interpolation==="nearest")return Mr.resizeNearestNeighbor(e,s,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...U1]} are supported`)})}}B$.className="Resizing";re(B$);/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class z${constructor(e){this.seed=e}next(){if(this.seed!==void 0)return this.seed++}}z$.className="RandomSeed";/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class V$ extends Ye{constructor(e){super(e),this.randomGenerator=new z$(e.seed)}getConfig(){const e={seed:this.randomGenerator.seed},t=super.getConfig();return Object.assign(e,t),e}}V$.className="BaseRandomLayer";/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Cq=["bilinear","nearest"],G1=new Set(Cq);class W$ extends V${constructor(e){super(e);const{factor:t,interpolation:s="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&this.factor.length===2)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else if(!Array.isArray(this.factor)&&this.factor>0)this.widthLower=-this.factor,this.widthUpper=this.factor;else throw new W(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);if(this.widthLower<-1||this.widthUpper<-1)throw new W(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new W(`factor cannot have upper bound less than lower bound.
        Got upper bound: ${this.widthUpper}.
        Got lower bound: ${this.widthLower}
      `);if(s)if(G1.has(s))this.interpolation=s;else throw new W(`Invalid interpolation parameter: ${s} is not implemented`)}getConfig(){const e={factor:this.factor,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){e=ct(e);const t=e[2];return[this.imgHeight,-1,t]}call(e,t){return j(()=>{const s=Fe(e);this.imgHeight=s.shape[s.shape.length-3];const r=s.shape[s.shape.length-2];this.widthFactor=vi([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let a=this.widthFactor.dataSync()[0]*r;a=Math.round(a);const o=[this.imgHeight,a];switch(this.interpolation){case"bilinear":return Mr.resizeBilinear(e,o);case"nearest":return Mr.resizeNearestNeighbor(e,o);default:throw new Error(`Interpolation is ${this.interpolation}
          but only ${[...G1]} are supported`)}})}}W$.className="RandomWidth";re(W$);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tq=Y();Tq.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,n=>{n&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var ps;(function(n){n[n.DT_INVALID=0]="DT_INVALID",n[n.DT_FLOAT=1]="DT_FLOAT",n[n.DT_DOUBLE=2]="DT_DOUBLE",n[n.DT_INT32=3]="DT_INT32",n[n.DT_UINT8=4]="DT_UINT8",n[n.DT_INT16=5]="DT_INT16",n[n.DT_INT8=6]="DT_INT8",n[n.DT_STRING=7]="DT_STRING",n[n.DT_COMPLEX64=8]="DT_COMPLEX64",n[n.DT_INT64=9]="DT_INT64",n[n.DT_BOOL=10]="DT_BOOL",n[n.DT_QINT8=11]="DT_QINT8",n[n.DT_QUINT8=12]="DT_QUINT8",n[n.DT_QINT32=13]="DT_QINT32",n[n.DT_BFLOAT16=14]="DT_BFLOAT16",n[n.DT_QINT16=15]="DT_QINT16",n[n.DT_QUINT16=16]="DT_QUINT16",n[n.DT_UINT16=17]="DT_UINT16",n[n.DT_COMPLEX128=18]="DT_COMPLEX128",n[n.DT_HALF=19]="DT_HALF",n[n.DT_RESOURCE=20]="DT_RESOURCE",n[n.DT_VARIANT=21]="DT_VARIANT",n[n.DT_UINT32=22]="DT_UINT32",n[n.DT_UINT64=23]="DT_UINT64",n[n.DT_FLOAT_REF=101]="DT_FLOAT_REF",n[n.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",n[n.DT_INT32_REF=103]="DT_INT32_REF",n[n.DT_UINT8_REF=104]="DT_UINT8_REF",n[n.DT_INT16_REF=105]="DT_INT16_REF",n[n.DT_INT8_REF=106]="DT_INT8_REF",n[n.DT_STRING_REF=107]="DT_STRING_REF",n[n.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",n[n.DT_INT64_REF=109]="DT_INT64_REF",n[n.DT_BOOL_REF=110]="DT_BOOL_REF",n[n.DT_QINT8_REF=111]="DT_QINT8_REF",n[n.DT_QUINT8_REF=112]="DT_QUINT8_REF",n[n.DT_QINT32_REF=113]="DT_QINT32_REF",n[n.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",n[n.DT_QINT16_REF=115]="DT_QINT16_REF",n[n.DT_QUINT16_REF=116]="DT_QUINT16_REF",n[n.DT_UINT16_REF=117]="DT_UINT16_REF",n[n.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",n[n.DT_HALF_REF=119]="DT_HALF_REF",n[n.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",n[n.DT_VARIANT_REF=121]="DT_VARIANT_REF",n[n.DT_UINT32_REF=122]="DT_UINT32_REF",n[n.DT_UINT64_REF=123]="DT_UINT64_REF"})(ps||(ps={}));var H1;(function(n){(function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"})(n.CheckpointFormatVersion||(n.CheckpointFormatVersion={}))})(H1||(H1={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $q={};function U$(n){return $q[n]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I(n,e,t,s,r){const a=e.inputParams[n];if(a&&a.inputIndexStart!==void 0){const i=a.inputIndexStart,u=a.inputIndexEnd===0?void 0:a.inputIndexEnd===void 0?i+1:a.inputIndexEnd,c=i<0?e.inputNames.length+i:i;if(a.type==="tensor")return Sn(e.inputNames[c],t,s,r);if(a.type==="tensors"){const h=e.inputs.slice(i,u);return e.inputNames.slice(i,u).filter((f,m)=>{var g;return((g=h[m])===null||g===void 0?void 0:g.op)!=="NoOp"}).map(f=>Sn(f,t,s,r))}const l=Sn(e.inputNames[c],t,s,r),d=l.dataSync();return a.type==="number"?d[0]:Js(l.shape,d)}const o=e.attrParams[n];return o&&o.value}function Sn(n,e,t,s){const[r,a]=fs(n,t);if(s!=null){const i=s.getHashTableHandleByName(r);if(i!=null)return i}const o=t.currentContextIds.find(i=>!!e[Df(r,i)]);return o!==void 0?e[Df(r,o)][a]:void 0}function j1(n,e,t){return e[Df(n,t.currentContextId)]}function ua(n,e){const[t,s,r]=fs(n,e);return[Df(t,e&&e.currentContextId),s,r]}function Df(n,e){return e?`${n}-${e}`:n}function fs(n,e){if(n==="")return["",0,void 0];const t=e!=null&&e.parseNodeNameCache!=null;if(t){const a=e.parseNodeNameCache.get(n);if(a!=null)return a}const s=n.split(":");let r;if(s.length===1)r=[n,0,void 0];else{const a=s[0],o=s.length===3?s[1]:void 0,i=Number(s[s.length-1]);r=[a,i,o]}return t&&e.parseNodeNameCache.set(n,r),r}function nf(n,e,t){let s=I("pad",n,e,t);if(s==="explicit"){s=I("explicitPaddings",n,e,t);const r=[[0,0],[0,0],[0,0],[0,0]];for(let a=0;a<4;a++)r[a][0]=s[a*2],r[a][1]=s[a*2+1];return r}return s}function la(n){return n.kept?n:ya(n)}/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _q=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Eq=Object.freeze(Object.defineProperty({__proto__:null,json:_q},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Aq=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Dq=Object.freeze(Object.defineProperty({__proto__:null,json:Aq},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rq=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],Oq=Object.freeze(Object.defineProperty({__proto__:null,json:Rq},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fq=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],Pq=Object.freeze(Object.defineProperty({__proto__:null,json:Fq},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lq=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],Mq=Object.freeze(Object.defineProperty({__proto__:null,json:Lq},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bq=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],zq=Object.freeze(Object.defineProperty({__proto__:null,json:Bq},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vq=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],Wq=Object.freeze(Object.defineProperty({__proto__:null,json:Vq},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uq=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],Gq=Object.freeze(Object.defineProperty({__proto__:null,json:Uq},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hq=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],jq=Object.freeze(Object.defineProperty({__proto__:null,json:Hq},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qq=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],Kq=Object.freeze(Object.defineProperty({__proto__:null,json:qq},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xq=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],Yq=Object.freeze(Object.defineProperty({__proto__:null,json:Xq},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zq=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],Jq=Object.freeze(Object.defineProperty({__proto__:null,json:Zq},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qq=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],e6=Object.freeze(Object.defineProperty({__proto__:null,json:Qq},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const t6=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],n6=Object.freeze(Object.defineProperty({__proto__:null,json:t6},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const s6=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],r6=Object.freeze(Object.defineProperty({__proto__:null,json:s6},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a6=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],o6=Object.freeze(Object.defineProperty({__proto__:null,json:a6},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i6=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],u6=Object.freeze(Object.defineProperty({__proto__:null,json:i6},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l6=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],c6=Object.freeze(Object.defineProperty({__proto__:null,json:l6},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d6=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],h6=Object.freeze(Object.defineProperty({__proto__:null,json:d6},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class q1{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[Eq,Dq,Oq,Pq,Mq,zq,Wq,Gq,jq,Kq,Yq,Jq,e6,n6,r6,o6,u6,c6,h6],t=[].concat(...e.map(s=>s.json));this.opMappers=t.reduce((s,r)=>(s[r.tfOpName]=r,s),{})}transformGraph(e,t={}){const s=e.node,r=[],a=[],o=[],i=s.reduce((m,g)=>(m[g.name]=this.mapNode(g),g.op.startsWith("Placeholder")?r.push(m[g.name]):g.op==="Const"?a.push(m[g.name]):(g.input==null||g.input.length===0)&&o.push(m[g.name]),m),{});let u=[];const c=[];let l={},d={};t!=null&&(l=this.mapSignatureEntries(t.inputs),d=this.mapSignatureEntries(t.outputs));const h=Object.keys(i);h.forEach(m=>{const g=i[m];g.inputNames.forEach((y,b)=>{const[x,,w]=ua(y),v=i[x];if(v.outputs!=null){const S=v.outputs.indexOf(w);if(S!==-1){const N=`${x}:${S}`;g.inputNames[b]=N}}g.inputs.push(v),v.children.push(g)})}),Object.keys(d).length===0?h.forEach(m=>{const g=i[m];g.children.length===0&&c.push(g)}):Object.keys(d).forEach(m=>{const[g]=ua(m),y=i[g];y!=null&&(y.signatureKey=d[m],c.push(y))}),Object.keys(l).length>0?Object.keys(l).forEach(m=>{const[g]=ua(m),y=i[g];y&&(y.signatureKey=l[m],u.push(y))}):u=r;let p={};e.library!=null&&e.library.function!=null&&(p=e.library.function.reduce((m,g)=>(m[g.signature.name]=this.mapFunction(g),m),{}));const f={nodes:i,inputs:u,outputs:c,weights:a,placeholders:r,signature:t,functions:p};return o.length>0&&(f.initNodes=o),f}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,s)=>(t[e[s].name]=s,t),{})}mapNode(e){const t=U$(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});const s={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(r=>r.startsWith("^")?r.slice(1):r),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return t.inputs!=null&&(s.inputParams=t.inputs.reduce((r,a)=>(r[a.name]={type:a.type,inputIndexStart:a.start,inputIndexEnd:a.end},r),{})),t.attrs!=null&&(s.attrParams=t.attrs.reduce((r,a)=>{const o=a.type;let i;switch(a.type){case"string":i=vb(e.attr,a.tfName,a.defaultValue),i===void 0&&a.tfDeprecatedName&&(i=vb(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"string[]":i=$b(e.attr,a.tfName,a.defaultValue),i===void 0&&a.tfDeprecatedName&&(i=$b(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"number":i=Sb(e.attr,a.tfName,a.defaultValue||0),i===void 0&&a.tfDeprecatedName&&(i=Sb(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"number[]":i=Tb(e.attr,a.tfName,a.defaultValue),i===void 0&&a.tfDeprecatedName&&(i=Tb(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"bool":i=Ib(e.attr,a.tfName,a.defaultValue),i===void 0&&a.tfDeprecatedName&&(i=Ib(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"bool[]":i=Eb(e.attr,a.tfName,a.defaultValue),i===void 0&&a.tfDeprecatedName&&(i=Eb(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"shape":i=Cb(e.attr,a.tfName,a.defaultValue),i===void 0&&a.tfDeprecatedName&&(i=Cb(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"shape[]":i=_b(e.attr,a.tfName,a.defaultValue),i===void 0&&a.tfDeprecatedName&&(i=_b(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"dtype":i=kb(e.attr,a.tfName,a.defaultValue),i===void 0&&a.tfDeprecatedName&&(i=kb(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"dtype[]":i=Nb(e.attr,a.tfName,a.defaultValue),i===void 0&&a.tfDeprecatedName&&(i=Nb(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"func":i=K1(e.attr,a.tfName,a.defaultValue),i===void 0&&a.tfDeprecatedName&&(i=K1(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${a.type} for op: ${e.op}`)}return r[a.name]={value:i,type:o},r},{})),s}mapFunction(e){const t=e.nodeDef,s=[],r=[];let a={};t!=null&&(a=t.reduce((d,h)=>(d[h.name]=this.mapNode(h),h.op==="Const"&&r.push(d[h.name]),d),{}));const o=[],i=[];e.signature.inputArg.forEach(d=>{const[h]=ua(d.name),p={name:h,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:g0(d.type),type:"dtype"}},children:[]};p.signatureKey=d.name,o.push(p),a[h]=p}),Object.keys(a).forEach(d=>{const h=a[d];h.inputNames.forEach((p,f)=>{const[m,,g]=ua(p),y=a[m];if(y.outputs!=null){const b=y.outputs.indexOf(g);if(b!==-1){const x=`${m}:${b}`;h.inputNames[f]=x}}h.inputs.push(y),y.children.push(h)})});const c=e.ret;e.signature.outputArg.forEach(d=>{const[h,p]=ua(c[d.name]),f=a[h];f!=null&&(f.defaultOutput=p,i.push(f))});const l=this.mapArgsToSignature(e);return{nodes:a,inputs:o,outputs:i,weights:r,placeholders:s,signature:l}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((t,s)=>(t[s.name]=this.mapArgToTensorInfo(s),t),{}),outputs:e.signature.outputArg.reduce((t,s)=>(t[s.name]=this.mapArgToTensorInfo(s,e.ret),t),{})}}mapArgToTensorInfo(e,t){let s=e.name;return t!=null&&(s=t[s]),{name:s,dtype:e.type}}}function p6(n){const e=Y().global;if(typeof e.atob<"u")return e.atob(n);if(typeof Buffer<"u")return new Buffer(n,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function G$(n,e){const t=Array.isArray(n)?String.fromCharCode.apply(null,n):p6(n);return e?t:t.toLowerCase()}function vb(n,e,t,s=!1){const r=n[e];return r!=null?G$(r.s,s):t}function Ib(n,e,t){const s=n[e];return s?s.b:t}function Sb(n,e,t){const s=n[e]||{},r=s.i!=null?s.i:s.f!=null?s.f:t;return typeof r=="number"?r:parseInt(r,10)}function g0(n){switch(typeof n=="string"&&(n=ps[n]),n){case ps.DT_FLOAT:case ps.DT_HALF:return"float32";case ps.DT_INT32:case ps.DT_INT64:case ps.DT_INT8:case ps.DT_UINT8:return"int32";case ps.DT_BOOL:return"bool";case ps.DT_DOUBLE:return"float32";case ps.DT_STRING:return"string";case ps.DT_COMPLEX64:case ps.DT_COMPLEX128:return"complex64";default:return null}}function K1(n,e,t){const s=n[e];return s&&s.func?s.func.name:t}function kb(n,e,t){const s=n[e];return s&&s.type?g0(s.type):t}function Nb(n,e,t){const s=n[e];return s&&s.list&&s.list.type?s.list.type.map(r=>g0(r)):t}function H$(n){if(!n.unknownRank)return n.dim!=null?n.dim.map(e=>typeof e.size=="number"?e.size:parseInt(e.size,10)):[]}function Cb(n,e,t){const s=n[e];return s&&s.shape?H$(s.shape):t}function Tb(n,e,t){const s=n[e];return s?((s.list.f&&s.list.f.length?s.list.f:s.list.i)||[]).map(r=>typeof r=="number"?r:parseInt(r,10)):t}function $b(n,e,t,s=!1){const r=n[e];return r&&r.list&&r.list.s?r.list.s.map(a=>G$(a,s)):t}function _b(n,e,t){const s=n[e];return s&&s.list&&s.list.shape?s.list.shape.map(r=>H$(r)):t}function Eb(n,e,t){const s=n[e];return s&&s.list&&s.list.b?s.list.b:t}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class f6{constructor(e,t,s){this.node=e,this.tensorMap=t,this.context=s,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(r=>this.getInput(r)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((r,a)=>(r[a]=this.getAttr(a),r),{}))}getInput(e){return Sn(e,this.tensorMap,this.context)}getAttr(e,t){const s=this.node.rawAttrs[e];if(s.tensor!=null)return Sn(e,this.tensorMap,this.context);if(s.i!=null||s.f!=null)return Sb(this.node.rawAttrs,e,t);if(s.s!=null)return vb(this.node.rawAttrs,e,t);if(s.b!=null)return Ib(this.node.rawAttrs,e,t);if(s.shape!=null)return Cb(this.node.rawAttrs,e,t);if(s.type!=null)return kb(this.node.rawAttrs,e,t);if(s.list!=null){if(s.list.i!=null||s.list.f!=null)return Tb(this.node.rawAttrs,e,t);if(s.list.s!=null)return $b(this.node.rawAttrs,e,t);if(s.list.shape!=null)return _b(this.node.rawAttrs,e,t);if(s.list.b!=null)return Eb(this.node.rawAttrs,e,t);if(s.list.type!=null)return Nb(this.node.rawAttrs,e,t)}return t}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $n=Object.freeze(Object.defineProperty({__proto__:null,OP_SCOPE_SUFFIX:Nk,abs:an,acos:Wk,acosh:Uk,add:se,addN:R3,all:Lx,any:vf,argMax:xu,argMin:Gk,asin:Hk,asinh:jk,atan:qk,atan2:Kk,atanh:Xk,avgPool:qm,avgPool3d:Yk,basicLSTMCell:nM,batchNorm:Yh,batchNorm2d:Zk,batchNorm3d:Jk,batchNorm4d:Qk,batchToSpaceND:Km,bincount:eN,bitwiseAnd:dM,booleanMaskAsync:XV,broadcastArgs:pM,broadcastTo:tu,buffer:He,cast:fe,ceil:tN,clipByValue:vs,clone:ya,complex:so,concat:tn,concat1d:nN,concat2d:sN,concat3d:rN,concat4d:aN,conv1d:Bx,conv2d:oo,conv2dTranspose:Vx,conv3d:oN,conv3dTranspose:uN,cos:Xm,cosh:Wx,cosineWindow:pw,cumprod:If,cumsum:Ux,denseBincount:ib,depthToSpace:lN,depthwiseConv2d:Zh,diag:PM,dilation2d:cN,div:$e,divNoNan:dN,dot:hN,dropout:LN,einsum:Xi,elu:Jh,enclosingPowerOfTwo:MN,ensureShape:jM,equal:wr,erf:Gx,euclideanNorm:mN,exp:Is,expandDims:Hn,expm1:gN,eye:jx,fft:lg,fill:Ql,floor:ep,floorDiv:Px,fused:yW,gather:tp,gatherND:aW,greater:Cs,greaterEqual:wo,ifft:Yc,imag:Ym,image:Mr,inTopKAsync:lW,irfft:iw,isFinite:yN,isInf:bN,isNaN:xN,leakyRelu:Zm,less:qc,lessEqual:wi,linalg:jN,linspace:bB,localResponseNormalization:wN,log:Ps,log1p:Jm,logSigmoid:vN,logSoftmax:qx,logSumExp:Qm,logicalAnd:Xr,logicalNot:eg,logicalOr:Kx,logicalXor:IN,losses:KU,lowerBound:OB,matMul:Ke,max:er,maxPool:tg,maxPool3d:SN,maxPoolWithArgmax:MB,maximum:$a,mean:Wt,meshgrid:VB,min:jc,minimum:ni,mirrorPad:kN,mod:NN,moments:ng,movingAverage:JV,mul:B,multiRNNCell:qB,multinomial:XB,neg:Dt,norm:Qh,notEqual:vu,oneHot:Yx,ones:gs,onesLike:Ls,op:L,outerProduct:ez,pad:vo,pad1d:sz,pad2d:az,pad3d:iz,pad4d:lz,pool:CN,pow:Sa,prelu:rg,print:Vk,prod:TN,raggedGather:yz,raggedRange:xz,raggedTensorToTensor:vz,rand:Sz,randomGamma:Gz,randomNormal:Jx,randomStandardNormal:qz,randomUniform:vi,randomUniformInt:Yz,range:Iu,real:Kc,reciprocal:$N,relu:ea,relu6:Qx,reshape:V,reverse:sr,reverse1d:sV,reverse2d:aV,reverse3d:iV,reverse4d:lV,rfft:cg,round:ew,rsqrt:tw,scalar:Ae,scatterND:eW,searchSorted:Xx,selu:nw,separableConv2d:sw,setdiff1dAsync:mV,sigmoid:Wr,sign:_N,signal:qU,sin:rw,sinh:aw,slice:tt,slice1d:og,slice2d:ow,slice3d:ig,slice4d:Xc,softmax:ug,softplus:ec,spaceToBatchND:sg,sparse:XU,sparseToDense:sW,spectral:jU,split:bs,sqrt:Tn,square:kt,squaredDifference:uw,squeeze:Ii,stack:Ss,step:tc,stridedSlice:EN,string:YU,sub:we,sum:Ne,tan:AN,tanh:ti,tensor:Qs,tensor1d:On,tensor2d:Go,tensor3d:FV,tensor4d:PV,tensor5d:LV,tensor6d:MV,tensorScatterUpdate:zV,tile:Xs,topk:RN,transpose:nt,truncatedNormal:cw,unique:ON,unsortedSegmentSum:dw,unstack:rr,upperBound:jV,variable:FN,where:Pn,whereAsync:PN,zeros:un,zerosLike:st},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const m6=(n,e,t,s=$n)=>{switch(n.op){case"BiasAdd":case"AddV2":case"Add":return[s.add(I("a",n,e,t),I("b",n,e,t))];case"AddN":return[s.addN(I("tensors",n,e,t))];case"FloorMod":case"Mod":return[s.mod(I("a",n,e,t),I("b",n,e,t))];case"Mul":return[s.mul(I("a",n,e,t),I("b",n,e,t))];case"RealDiv":case"Div":return[s.div(I("a",n,e,t),I("b",n,e,t))];case"DivNoNan":return[s.divNoNan(I("a",n,e,t),I("b",n,e,t))];case"FloorDiv":return[s.floorDiv(I("a",n,e,t),I("b",n,e,t))];case"Sub":return[s.sub(I("a",n,e,t),I("b",n,e,t))];case"Minimum":return[s.minimum(I("a",n,e,t),I("b",n,e,t))];case"Maximum":return[s.maximum(I("a",n,e,t),I("b",n,e,t))];case"Pow":return[s.pow(I("a",n,e,t),I("b",n,e,t))];case"SquaredDifference":return[s.squaredDifference(I("a",n,e,t),I("b",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g6=(n,e,t,s=$n)=>{switch(n.op){case"Abs":case"ComplexAbs":return[s.abs(I("x",n,e,t))];case"Acos":return[s.acos(I("x",n,e,t))];case"Acosh":return[s.acosh(I("x",n,e,t))];case"Asin":return[s.asin(I("x",n,e,t))];case"Asinh":return[s.asinh(I("x",n,e,t))];case"Atan":return[s.atan(I("x",n,e,t))];case"Atan2":return[s.atan2(I("x",n,e,t),I("y",n,e,t))];case"Atanh":return[s.atanh(I("x",n,e,t))];case"Ceil":return[s.ceil(I("x",n,e,t))];case"Complex":return[s.complex(I("real",n,e,t),I("imag",n,e,t))];case"Cos":return[s.cos(I("x",n,e,t))];case"Cosh":return[s.cosh(I("x",n,e,t))];case"Elu":return[s.elu(I("x",n,e,t))];case"Erf":return[s.erf(I("x",n,e,t))];case"Exp":return[s.exp(I("x",n,e,t))];case"Expm1":return[s.expm1(I("x",n,e,t))];case"Floor":return[s.floor(I("x",n,e,t))];case"Log":return[s.log(I("x",n,e,t))];case"Log1p":return[s.log1p(I("x",n,e,t))];case"Imag":return[s.imag(I("x",n,e,t))];case"Neg":return[s.neg(I("x",n,e,t))];case"Reciprocal":return[s.reciprocal(I("x",n,e,t))];case"Real":return[s.real(I("x",n,e,t))];case"Relu":return[s.relu(I("x",n,e,t))];case"Round":return[s.round(I("x",n,e,t))];case"Selu":return[s.selu(I("x",n,e,t))];case"Sigmoid":return[s.sigmoid(I("x",n,e,t))];case"Sin":return[s.sin(I("x",n,e,t))];case"Sign":return[s.sign(I("x",n,e,t))];case"Sinh":return[s.sinh(I("x",n,e,t))];case"Softplus":return[s.softplus(I("x",n,e,t))];case"Sqrt":return[s.sqrt(I("x",n,e,t))];case"Square":return[s.square(I("x",n,e,t))];case"Tanh":return[s.tanh(I("x",n,e,t))];case"Tan":return[s.tan(I("x",n,e,t))];case"ClipByValue":return[s.clipByValue(I("x",n,e,t),I("clipValueMin",n,e,t),I("clipValueMax",n,e,t))];case"Relu6":return[s.relu6(I("x",n,e,t))];case"Rsqrt":return[s.rsqrt(Sn(n.inputNames[0],e,t))];case"LeakyRelu":return[s.leakyRelu(I("x",n,e,t),I("alpha",n,e,t))];case"Prelu":return[s.prelu(I("x",n,e,t),I("alpha",n,e,t))];case"IsNan":return[s.isNaN(Sn(n.inputNames[0],e,t))];case"IsInf":return[s.isInf(Sn(n.inputNames[0],e,t))];case"IsFinite":return[s.isFinite(Sn(n.inputNames[0],e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qs(n,e,t=""){if(!(typeof n=="number"||typeof e=="number")){_(n.length===e.length,()=>t+` Shapes ${n} and ${e} must match`);for(let s=0;s<n.length;s++){const r=n[s],a=e[s];_(r<0||a<0||r===a,()=>t+` Shapes ${n} and ${e} must match`)}}}function X1(n){return!(typeof n=="number"||n.some(e=>e<0))}function Ic(n,e,t){let s=Ab(n,t);const r=!X1(s);if(r&&e.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${s}`);if(r&&e.forEach(a=>{s=Ab(a.shape,s)}),!X1(s))throw new Error(`Non-fully-defined elementShape: ${s}`);return s}function Ab(n,e){if(typeof n=="number")return e;if(typeof e=="number")return n;if(n.length!==e.length)throw new Error(`Incompatible ranks during merge: ${n} vs. ${e}`);const t=[];for(let s=0;s<n.length;++s){const r=n[s],a=e[s];if(r>=0&&a>=0&&r!==a)throw new Error(`Incompatible shape during merge: ${n} vs. ${e}`);t[s]=r>=0?r:a}return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class y6{constructor(e,t,s,r,a,o,i){this.name=e,this.dtype=t,this.maxSize=s,this.elementShape=r,this.identicalElementShapes=a,this.dynamicSize=o,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=Ae(0),bn(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(t=>this.read(t))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const s=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=t.shape),qs(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),s.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(s.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);s.tensor=t,bn(t),s.written=!0,this.tensors[e]=s}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((s,r)=>this.write(s,t[r]))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let r=0;r<this.size();r++)e.push(r)}if(e.length===0)return Qs([],[0].concat(this.elementShape));const s=this.readMany(e);return qs(this.elementShape,s[0].shape,"TensorArray shape mismatch: "),Ss(s,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return Qs([],[0].concat(this.elementShape));const t=[];for(let r=0;r<this.size();r++)t.push(r);const s=this.readMany(t);return qs(this.elementShape,s[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${s[0].shape})`),tn(s,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const s=Math.max(...e);if(!this.dynamicSize&&s>=this.maxSize)throw new Error(`Max index must be < array size (${s}  vs. ${this.maxSize})`);this.writeMany(e,rr(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let s=0;const r=e.map(u=>(s+=u,s));if(s!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${s}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const a=s===0?0:t.size/s,o=[];j(()=>{t=V(t,[1,s,a]);for(let u=0;u<e.length;++u){const l=[0,u===0?0:r[u-1],0],d=[1,e[u],a];o[u]=V(tt(t,l,d),this.elementShape)}return o});const i=[];for(let u=0;u<e.length;u++)i[u]=u;this.writeMany(i,o)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ai{get id(){return this.idTensor.id}constructor(e,t,s,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=s,e!=null&&e.forEach(a=>{if(s!==a.dtype)throw new Error(`Invalid data types; op elements ${s}, but list elements ${a.dtype}`);qs(t,a.shape,"TensorList shape mismatch: "),bn(a)}),this.idTensor=Ae(0),this.maxNumElements=r,bn(this.idTensor)}copy(){return new ai([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.id))&&t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,s=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(s!==-1&&this.tensors.length!==s)throw new Error(`Operation expected a list with ${s} elements but got a list with ${this.tensors.length} elements.`);qs(e,this.elementShape,"TensorList shape mismatch: ");const r=Ic(this.elementShape,this.tensors,e);return j(()=>{const a=this.tensors.map(o=>V(o,r));return Ss(a,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");const s=Ic(this.elementShape,this.tensors,e),r=this.tensors.pop();return r.kept=!1,qs(r.shape,e,"TensorList shape mismatch: "),V(r,s)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(qs(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");bn(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(this.maxNumElements!==-1&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);const t=new ai([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let s=0;s<Math.min(this.tensors.length,e);++s)t.tensors[s]=this.tensors[s];return t}getItem(e,t,s){if(s!==this.elementDtype)throw new Error(`Invalid data types; op elements ${s}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(this.tensors[e]==null)throw new Error(`element at index ${e} is null.`);qs(this.tensors[e].shape,t,"TensorList shape mismatch: ");const r=Ic(this.elementShape,this.tensors,t);return V(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||this.maxNumElements!==-1&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);qs(this.elementShape,t.shape,"TensorList shape mismatch: "),bn(t),this.tensors[e]!=null&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,s){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);qs(this.elementShape,s,"TensorList shape mismatch: "),e=e.slice(0,this.size());const r=Ic(this.elementShape,this.tensors,s);return e.length===0?Qs([],[0].concat(r)):j(()=>{const a=e.map(o=>V(this.tensors[o],r));return Ss(a,0)})}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);qs(this.elementShape,t,"TensorList shape mismatch: ");const s=Ic(this.elementShape,this.tensors,t);return this.size()===0?Qs([],[0].concat(s)):j(()=>{const r=this.tensors.map(a=>V(a,s));return tn(r,0)})}}function b6(n,e,t){const s=n.dtype;if(n.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${n.shape}`);if(n.dtype!==t)throw new Error(`Invalid data types; op elements ${n.dtype}, but list elements ${t}`);const r=n.shape.slice(1);qs(r,e,"TensorList shape mismatch: ");const a=rr(n);return new ai(a,e,s)}function x6(n,e,t,s){return new ai([],n,e,s)}function w6(n,e,t,s){if(e.length!==n.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${n.shape[0]}`);const r=Math.max(...e);if(s!=null&&s!==-1&&r>=s)throw new Error(`Max index must be < array size (${r}  vs. ${s})`);const a=new ai([],t,n.dtype,s),o=rr(n,0);return e.forEach((i,u)=>{a.setItem(i,o[u])}),a}function v6(n,e,t){let s=0;const r=e.map(l=>(s+=l,s));if(s!==n.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${s}, and tensor's shape is: ${n.shape}`);const a=n.shape.slice(1),o=Ab(a,t),i=s===0?0:n.size/s,u=j(()=>{const l=[];n=V(n,[1,s,i]);for(let d=0;d<e.length;++d){const p=[0,d===0?0:r[d-1],0],f=[1,e[d],i];l[d]=V(tt(n,p,f),o)}return n.dispose(),l}),c=new ai([],t,n.dtype,e.length);for(let l=0;l<u.length;l++)c.setItem(l,u[l]);return c}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I6=async(n,e,t)=>{switch(n.op){case"If":case"StatelessIf":{const s=I("thenBranch",n,e,t),r=I("elseBranch",n,e,t),a=I("cond",n,e,t),o=I("args",n,e,t);return(await a.data())[0]?t.functionMap[s].executeFunctionAsync(o,t.tensorArrayMap,t.tensorListMap):t.functionMap[r].executeFunctionAsync(o,t.tensorArrayMap,t.tensorListMap)}case"While":case"StatelessWhile":{const s=I("body",n,e,t),r=I("cond",n,e,t),a=I("args",n,e,t),o=await t.functionMap[r].executeFunctionAsync(a,t.tensorArrayMap,t.tensorListMap),i=a.map(l=>l.id);let u=await o[0].data();o.forEach(l=>{!l.kept&&i.indexOf(l.id)===-1&&l.dispose()});let c=a;for(;u[0];){const l=c;c=await t.functionMap[s].executeFunctionAsync(c,t.tensorArrayMap,t.tensorListMap);const d=c.map(p=>p.id);l.forEach(p=>{!p.kept&&i.indexOf(p.id)===-1&&d.indexOf(p.id)===-1&&p.dispose()});const h=await t.functionMap[r].executeFunctionAsync(c,t.tensorArrayMap,t.tensorListMap);u=await h[0].data(),h.forEach(p=>{!p.kept&&i.indexOf(p.id)===-1&&d.indexOf(p.id)===-1&&p.dispose()})}return c}case"LoopCond":{const s=I("pred",n,e,t);return[la(s)]}case"Switch":{const s=I("pred",n,e,t);let r=I("data",n,e,t);return r.kept||(r=la(r)),(await s.data())[0]?[void 0,r]:[r,void 0]}case"Merge":{const s=n.inputNames.find(r=>Sn(r,e,t)!==void 0);if(s){const r=Sn(s,e,t);return[la(r)]}return}case"Enter":{const s=I("frameName",n,e,t),r=I("tensor",n,e,t);return t.enterFrame(s),[la(r)]}case"Exit":{const s=I("tensor",n,e,t);return t.exitFrame(),[la(s)]}case"NextIteration":{const s=I("tensor",n,e,t);return t.nextIteration(),[la(s)]}case"TensorArrayV3":{const s=I("size",n,e,t),r=I("dtype",n,e,t),a=I("elementShape",n,e,t),o=I("dynamicSize",n,e,t),i=I("clearAfterRead",n,e,t),u=I("identicalElementShapes",n,e,t),c=I("name",n,e,t),l=new y6(c,r,s,a,u,o,i);return t.addTensorArray(l),[l.idTensor,Ae(1)]}case"TensorArrayWriteV3":{const s=I("tensorArrayId",n,e,t),r=I("index",n,e,t),a=I("tensor",n,e,t),o=t.getTensorArray(s.id);return o.write(r,a),[o.idTensor]}case"TensorArrayReadV3":{const s=I("tensorArrayId",n,e,t),r=I("index",n,e,t);return[t.getTensorArray(s.id).read(r)]}case"TensorArrayGatherV3":{const s=I("tensorArrayId",n,e,t),r=I("indices",n,e,t),a=I("dtype",n,e,t);return[t.getTensorArray(s.id).gather(r,a)]}case"TensorArrayScatterV3":{const s=I("tensorArrayId",n,e,t),r=I("indices",n,e,t),a=I("tensor",n,e,t),o=t.getTensorArray(s.id);return o.scatter(r,a),[o.idTensor]}case"TensorArrayConcatV3":{const s=I("tensorArrayId",n,e,t),r=t.getTensorArray(s.id),a=I("dtype",n,e,t);return[r.concat(a)]}case"TensorArraySplitV3":{const s=I("tensorArrayId",n,e,t),r=I("tensor",n,e,t),a=I("lengths",n,e,t),o=t.getTensorArray(s.id);return o.split(a,r),[o.idTensor]}case"TensorArraySizeV3":{const s=I("tensorArrayId",n,e,t),r=t.getTensorArray(s.id);return[Ae(r.size(),"int32")]}case"TensorArrayCloseV3":{const s=I("tensorArrayId",n,e,t),r=t.getTensorArray(s.id);return r.clearAndClose(),[r.idTensor]}case"TensorListSetItem":{const s=I("tensorListId",n,e,t),r=I("index",n,e,t),a=I("tensor",n,e,t),o=t.getTensorList(s.id);return o.setItem(r,a),[o.idTensor]}case"TensorListGetItem":{const s=I("tensorListId",n,e,t),r=I("index",n,e,t),a=I("elementShape",n,e,t),o=I("elementDType",n,e,t);return[t.getTensorList(s.id).getItem(r,a,o)]}case"TensorListScatterV2":case"TensorListScatter":{const s=I("indices",n,e,t),r=I("tensor",n,e,t),a=I("elementShape",n,e,t),o=I("numElements",n,e,t),i=w6(r,s,a,o);return t.addTensorList(i),[i.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const s=I("elementShape",n,e,t),r=I("elementDType",n,e,t);let a;n.op==="TensorListReserve"?a="numElements":a="maxNumElements";const o=I(a,n,e,t),i=n.op==="TensorListReserve"?-1:o,u=x6(s,r,o,i);return t.addTensorList(u),[u.idTensor]}case"TensorListGather":{const s=I("tensorListId",n,e,t),r=I("indices",n,e,t),a=I("elementShape",n,e,t),o=I("elementDType",n,e,t);return[t.getTensorList(s.id).gather(r,o,a)]}case"TensorListStack":{const s=I("tensorListId",n,e,t),r=I("elementShape",n,e,t),a=I("elementDType",n,e,t),o=I("numElements",n,e,t);return[t.getTensorList(s.id).stack(r,a,o)]}case"TensorListFromTensor":{const s=I("tensor",n,e,t),r=I("elementShape",n,e,t),a=I("elementDType",n,e,t),o=b6(s,r,a);return t.addTensorList(o),[o.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const s=I("tensorListId",n,e,t),r=t.getTensorList(s.id),a=I("dtype",n,e,t),o=I("elementShape",n,e,t);return[r.concat(a,o)]}case"TensorListPushBack":{const s=I("tensorListId",n,e,t),r=I("tensor",n,e,t),a=t.getTensorList(s.id);return a.pushBack(r),[a.idTensor]}case"TensorListPopBack":{const s=I("tensorListId",n,e,t),r=I("elementShape",n,e,t),a=I("elementDType",n,e,t);return[t.getTensorList(s.id).popBack(r,a)]}case"TensorListSplit":{const s=I("tensor",n,e,t),r=I("elementShape",n,e,t),a=I("lengths",n,e,t),o=v6(s,a,r);return t.addTensorList(o),[o.idTensor]}case"TensorListLength":{const s=I("tensorListId",n,e,t),r=t.getTensorList(s.id);return[Ae(r.size(),"int32")]}case"TensorListResize":{const s=I("tensorListId",n,e,t),r=I("size",n,e,t),o=t.getTensorList(s.id).resize(r);return t.addTensorList(o),[o.idTensor]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y1(n,e,t){const[s,r]=I("fusedOps",n,e,t),a=s==="biasadd",o=!a,i=r==="prelu",u=s==="fusedbatchnorm",c=I("numArgs",n,e,t);if(a){if(i&&c!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&a&&c!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(u)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const l=I("strides",n,e,t),d=nf(n,e,t),h=I("dataFormat",n,e,t).toUpperCase(),p=I("dilations",n,e,t);let[f,m]=I("args",n,e,t);o&&(m=f,f=void 0);const g=I("leakyreluAlpha",n,e,t);return{stride:l,pad:d,dataFormat:h,dilations:p,biasArg:f,preluArg:m,activationFunc:r,leakyreluAlpha:g}}const S6=(n,e,t,s=$n)=>{switch(n.op){case"Conv1D":{const r=I("stride",n,e,t),a=I("pad",n,e,t),o=I("dataFormat",n,e,t).toUpperCase(),i=I("dilation",n,e,t);return[s.conv1d(I("x",n,e,t),I("filter",n,e,t),r,a,o,i)]}case"Conv2D":{const r=I("strides",n,e,t),a=nf(n,e,t),o=I("dataFormat",n,e,t).toUpperCase(),i=I("dilations",n,e,t);return[s.conv2d(I("x",n,e,t),I("filter",n,e,t),[r[1],r[2]],a,o,[i[1],i[2]])]}case"_FusedConv2D":{const{stride:r,pad:a,dataFormat:o,dilations:i,biasArg:u,preluArg:c,activationFunc:l,leakyreluAlpha:d}=Y1(n,e,t);return[s.fused.conv2d({x:I("x",n,e,t),filter:I("filter",n,e,t),strides:[r[1],r[2]],pad:a,dataFormat:o,dilations:[i[1],i[2]],bias:u,activation:l,preluActivationWeights:c,leakyreluAlpha:d})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:a,dataFormat:o,dilations:i,biasArg:u,preluArg:c,activationFunc:l,leakyreluAlpha:d}=Y1(n,e,t);return[s.fused.depthwiseConv2d({x:I("x",n,e,t),filter:I("filter",n,e,t),strides:[r[1],r[2]],pad:a,dataFormat:o,dilations:[i[1],i[2]],bias:u,activation:l,preluActivationWeights:c,leakyreluAlpha:d})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=I("outputShape",n,e,t),a=I("strides",n,e,t),o=nf(n,e,t);return[s.conv2dTranspose(I("x",n,e,t),I("filter",n,e,t),r,[a[1],a[2]],o)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=I("strides",n,e,t),a=nf(n,e,t),o=I("dilations",n,e,t),i=I("dataFormat",n,e,t).toUpperCase();return[s.depthwiseConv2d(I("input",n,e,t),I("filter",n,e,t),[r[1],r[2]],a,i,[o[1],o[2]])]}case"Conv3D":{const r=I("strides",n,e,t),a=I("pad",n,e,t),o=I("dataFormat",n,e,t).toUpperCase(),i=I("dilations",n,e,t);return[s.conv3d(I("x",n,e,t),I("filter",n,e,t),[r[1],r[2],r[3]],a,o,[i[1],i[2],i[3]])]}case"AvgPool":{const r=I("strides",n,e,t),a=I("pad",n,e,t),o=I("kernelSize",n,e,t);return[s.avgPool(I("x",n,e,t),[o[1],o[2]],[r[1],r[2]],a)]}case"MaxPool":{const r=I("strides",n,e,t),a=I("pad",n,e,t),o=I("kernelSize",n,e,t);return[s.maxPool(I("x",n,e,t),[o[1],o[2]],[r[1],r[2]],a)]}case"MaxPoolWithArgmax":{const r=I("strides",n,e,t),a=I("pad",n,e,t),o=I("kernelSize",n,e,t),i=I("includeBatchInIndex",n,e,t),{result:u,indexes:c}=s.maxPoolWithArgmax(I("x",n,e,t),[o[1],o[2]],[r[1],r[2]],a,i);return[u,c]}case"AvgPool3D":{const r=I("strides",n,e,t),a=I("pad",n,e,t),o=I("kernelSize",n,e,t);return[s.avgPool3d(I("x",n,e,t),[o[1],o[2],o[3]],[r[1],r[2],r[3]],a)]}case"MaxPool3D":{const r=I("strides",n,e,t),a=I("pad",n,e,t),o=I("kernelSize",n,e,t);return[s.maxPool3d(I("x",n,e,t),[o[1],o[2],o[3]],[r[1],r[2],r[3]],a)]}case"Dilation2D":{const r=I("strides",n,e,t),a=I("pad",n,e,t),o=I("dilations",n,e,t),i=r[1],u=r[2],c=o[1],l=o[2];return[s.dilation2d(I("x",n,e,t),I("filter",n,e,t),[i,u],a,[c,l],"NHWC")]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k6=(n,e,t,s=$n)=>{switch(n.op){case"Fill":{const r=I("shape",n,e,t),a=I("dtype",n,e,t),o=I("value",n,e,t);return[s.fill(r,o,a)]}case"LinSpace":{const r=I("start",n,e,t),a=I("stop",n,e,t),o=I("num",n,e,t);return[s.linspace(r,a,o)]}case"Multinomial":{const r=I("logits",n,e,t),a=I("numSamples",n,e,t),o=I("seed",n,e,t);return[s.multinomial(r,a,o)]}case"OneHot":{const r=I("indices",n,e,t),a=I("depth",n,e,t),o=I("onValue",n,e,t),i=I("offValue",n,e,t),u=I("dtype",n,e,t);return[s.oneHot(r,a,o,i,u)]}case"Ones":return[s.ones(I("shape",n,e,t),I("dtype",n,e,t))];case"OnesLike":return[s.onesLike(I("x",n,e,t))];case"RandomStandardNormal":return[s.randomStandardNormal(I("shape",n,e,t),I("dtype",n,e,t),I("seed",n,e,t))];case"RandomUniform":return[s.randomUniform(I("shape",n,e,t),I("minval",n,e,t),I("maxval",n,e,t),I("dtype",n,e,t))];case"RandomUniformInt":return[s.randomUniformInt(I("shape",n,e,t),I("minval",n,e,t),I("maxval",n,e,t),I("seed",n,e,t))];case"Range":{const r=I("start",n,e,t),a=I("stop",n,e,t),o=I("step",n,e,t);return[s.range(r,a,o,I("dtype",n,e,t))]}case"TruncatedNormal":{const r=I("shape",n,e,t),a=I("mean",n,e,t),o=I("stdDev",n,e,t),i=I("seed",n,e,t);return[s.truncatedNormal(r,a,o,I("dtype",n,e,t),i)]}case"Zeros":return[s.zeros(I("shape",n,e,t),I("dtype",n,e,t))];case"ZerosLike":return[s.zerosLike(I("x",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vy(n,e,t){const s=I("boxes",n,e,t),r=I("scores",n,e,t),a=I("maxOutputSize",n,e,t),o=I("iouThreshold",n,e,t),i=I("scoreThreshold",n,e,t),u=I("softNmsSigma",n,e,t);return{boxes:s,scores:r,maxOutputSize:a,iouThreshold:o,scoreThreshold:i,softNmsSigma:u}}const N6=async(n,e,t,s,r=$n)=>{switch(n.op){case"NonMaxSuppressionV5":{const{boxes:a,scores:o,maxOutputSize:i,iouThreshold:u,scoreThreshold:c,softNmsSigma:l}=vy(n,e,t),d=await r.image.nonMaxSuppressionWithScoreAsync(a,o,i,u,c,l);return[d.selectedIndices,d.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:a,scores:o,maxOutputSize:i,iouThreshold:u,scoreThreshold:c}=vy(n,e,t),l=I("padToMaxOutputSize",n,e,t),d=await r.image.nonMaxSuppressionPaddedAsync(a,o,i,u,c,l);return[d.selectedIndices,d.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:a,scores:o,maxOutputSize:i,iouThreshold:u,scoreThreshold:c}=vy(n,e,t);return[await r.image.nonMaxSuppressionAsync(a,o,i,u,c)]}case"Where":{const a=r.cast(I("condition",n,e,t),"bool"),o=[await r.whereAsync(a)];return a.dispose(),o}case"ListDiff":return r.setdiff1dAsync(I("x",n,e,t),I("y",n,e,t));default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C6=(n,e,t,s=$n)=>{switch(n.op){case"LowerBound":{const r=I("sortedSequence",n,e,t),a=I("values",n,e,t);return[s.lowerBound(r,a)]}case"TopKV2":{const r=I("x",n,e,t),a=I("k",n,e,t),o=I("sorted",n,e,t),i=s.topk(r,a,o);return[i.values,i.indices]}case"UpperBound":{const r=I("sortedSequence",n,e,t),a=I("values",n,e,t);return[s.upperBound(r,a)]}case"Unique":{const r=I("x",n,e,t),a=s.unique(r);return[a.values,a.indices]}case"UniqueV2":{const r=I("x",n,e,t),a=I("axis",n,e,t),o=s.unique(r,a);return[o.values,o.indices]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const T6=(n,e,t,s=$n)=>{switch(n.op){case"Const":return e[n.name];case"PlaceholderWithDefault":const r=I("default",n,e,t);return[Sn(n.name,e,t)||r];case"Placeholder":return[Sn(n.name,e,t)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{const l=I("x",n,e,t);return[la(l)]}case"IdentityN":return I("x",n,e,t).map(l=>la(l));case"Snapshot":const a=I("x",n,e,t);return[la(a)];case"Shape":return[s.tensor1d(I("x",n,e,t).shape,"int32")];case"ShapeN":return I("x",n,e,t).map(l=>s.tensor1d(l.shape));case"Size":return[s.scalar(I("x",n,e,t).size,"int32")];case"Rank":return[s.scalar(I("x",n,e,t).rank,"int32")];case"NoOp":return[s.scalar(1)];case"Print":const o=I("x",n,e,t),i=I("data",n,e,t),u=I("message",n,e,t),c=I("summarize",n,e,t);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(u);for(let l=0;l<i.length;l++)console.log(Array.prototype.slice.call(i[l].dataSync()).slice(0,c));return[o];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $6{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=Ae(0),this.tensorMap=new Map,bn(this.handle)}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Ae(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const s=await e.data();return this.tensorMap.forEach(r=>r.dispose()),this.tensorMap.clear(),j(()=>{const r=rr(t),a=s.length,o=r.length;_(a===o,()=>`The number of elements doesn't match, keys has ${a} elements, the values has ${o} elements.`);for(let i=0;i<a;i++){const u=s[i],c=r[i];bn(c),this.tensorMap.set(u,c)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);const s=await e.data();return j(()=>{const r=[];for(let a=0;a<s.length;a++){const o=s[a],i=this.findWithDefault(o,t);r.push(i)}return Ss(r)})}findWithDefault(e,t){const s=this.tensorMap.get(e);return s??t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _6=async(n,e,t,s)=>{switch(n.op){case"HashTable":case"HashTableV2":{const r=s.getHashTableHandleByName(n.name);if(r!=null)return[r];{const a=I("keyDType",n,e,t),o=I("valueDType",n,e,t),i=new $6(a,o);return s.addHashTable(n.name,i),[i.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const r=I("tableHandle",n,e,t,s),a=I("keys",n,e,t),o=I("values",n,e,t);return[await s.getHashTableById(r.id).import(a,o)]}case"LookupTableFind":case"LookupTableFindV2":{const r=I("tableHandle",n,e,t,s),a=I("keys",n,e,t),o=I("defaultValue",n,e,t);return[await s.getHashTableById(r.id).find(a,o)]}case"LookupTableSize":case"LookupTableSizeV2":{const r=I("tableHandle",n,e,t,s);return[s.getHashTableById(r.id).tensorSize()]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E6=(n,e,t,s=$n)=>{switch(n.op){case"ResizeBilinear":{const r=I("images",n,e,t),a=I("size",n,e,t),o=I("alignCorners",n,e,t),i=I("halfPixelCenters",n,e,t);return[s.image.resizeBilinear(r,[a[0],a[1]],o,i)]}case"ResizeNearestNeighbor":{const r=I("images",n,e,t),a=I("size",n,e,t),o=I("alignCorners",n,e,t),i=I("halfPixelCenters",n,e,t);return[s.image.resizeNearestNeighbor(r,[a[0],a[1]],o,i)]}case"CropAndResize":{const r=I("image",n,e,t),a=I("boxes",n,e,t),o=I("boxInd",n,e,t),i=I("cropSize",n,e,t),u=I("method",n,e,t),c=I("extrapolationValue",n,e,t);return[s.image.cropAndResize(r,a,o,i,u,c)]}case"ImageProjectiveTransformV3":{const r=I("images",n,e,t),a=I("transforms",n,e,t),o=I("outputShape",n,e,t),i=I("fillValue",n,e,t),u=I("interpolation",n,e,t),c=I("fillMode",n,e,t);return[s.image.transform(r,a,u.toLowerCase(),c.toLowerCase(),i,o)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A6=(n,e,t,s=$n)=>{switch(n.op){case"Equal":return[s.equal(I("a",n,e,t),I("b",n,e,t))];case"NotEqual":return[s.notEqual(I("a",n,e,t),I("b",n,e,t))];case"Greater":return[s.greater(I("a",n,e,t),I("b",n,e,t))];case"GreaterEqual":return[s.greaterEqual(I("a",n,e,t),I("b",n,e,t))];case"Less":return[s.less(I("a",n,e,t),I("b",n,e,t))];case"LessEqual":return[s.lessEqual(I("a",n,e,t),I("b",n,e,t))];case"LogicalAnd":return[s.logicalAnd(I("a",n,e,t),I("b",n,e,t))];case"LogicalNot":return[s.logicalNot(I("a",n,e,t))];case"LogicalOr":return[s.logicalOr(I("a",n,e,t),I("b",n,e,t))];case"Select":case"SelectV2":return[s.where(I("condition",n,e,t),I("a",n,e,t),I("b",n,e,t))];case"BitwiseAnd":return[s.bitwiseAnd(I("a",n,e,t),I("b",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D6=(n,e,t,s=$n)=>{switch(n.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[s.matMul(I("a",n,e,t),I("b",n,e,t),I("transposeA",n,e,t),I("transposeB",n,e,t))];case"Einsum":return[s.einsum(I("equation",n,e,t),...I("tensors",n,e,t))];case"Transpose":return[s.transpose(I("x",n,e,t),I("perm",n,e,t))];case"_FusedMatMul":const[r,a]=I("fusedOps",n,e,t),o=r==="biasadd",i=a==="prelu",u=I("numArgs",n,e,t),c=I("leakyreluAlpha",n,e,t);if(o){if(i&&u!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&u!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[l,d]=I("args",n,e,t);return[s.fused.matMul({a:I("a",n,e,t),b:I("b",n,e,t),transposeA:I("transposeA",n,e,t),transposeB:I("transposeB",n,e,t),bias:l,activation:a,preluActivationWeights:d,leakyreluAlpha:c})];case"MatrixBandPart":return[s.linalg.bandPart(I("a",n,e,t),I("numLower",n,e,t),I("numUpper",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R6=(n,e,t,s=$n)=>{switch(n.op){case"EuclideanNorm":return[s.euclideanNorm(I("x",n,e,t),I("axis",n,e,t),I("keepDims",n,e,t))];case"FusedBatchNorm":case"FusedBatchNormV2":return[s.batchNorm(I("x",n,e,t),I("mean",n,e,t),I("variance",n,e,t),I("offset",n,e,t),I("scale",n,e,t),I("epsilon",n,e,t))];case"FusedBatchNormV3":return[s.batchNorm(I("x",n,e,t),I("mean",n,e,t),I("variance",n,e,t),I("offset",n,e,t),I("scale",n,e,t),I("epsilon",n,e,t))];case"LRN":return[s.localResponseNormalization(I("x",n,e,t),I("radius",n,e,t),I("bias",n,e,t),I("alpha",n,e,t),I("beta",n,e,t))];case"Softmax":return[s.softmax(I("x",n,e,t))];case"LogSoftmax":return[s.logSoftmax(I("x",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O6=(n,e,t,s=$n)=>{switch(n.op){case"RaggedGather":{const{outputNestedSplits:r,outputDenseValues:a}=s.raggedGather(I("paramsNestedSplits",n,e,t),I("paramsDenseValues",n,e,t),I("indices",n,e,t),I("outputRaggedRank",n,e,t));return r.concat(a)}case"RaggedRange":{const{rtNestedSplits:r,rtDenseValues:a}=s.raggedRange(I("starts",n,e,t),I("limits",n,e,t),I("splits",n,e,t));return[r,a]}case"RaggedTensorToTensor":return[s.raggedTensorToTensor(I("shape",n,e,t),I("values",n,e,t),I("defaultValue",n,e,t),I("rowPartitionTensors",n,e,t),I("rowPartitionTypes",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F6=(n,e,t,s=$n)=>{switch(n.op){case"Max":{const i=I("axis",n,e,t),u=I("keepDims",n,e,t);return[s.max(I("x",n,e,t),i,u)]}case"Mean":{const i=I("axis",n,e,t),u=I("keepDims",n,e,t);return[s.mean(I("x",n,e,t),i,u)]}case"Min":{const i=I("axis",n,e,t),u=I("keepDims",n,e,t);return[s.min(I("x",n,e,t),i,u)]}case"Sum":{const i=I("axis",n,e,t),u=I("keepDims",n,e,t);return[s.sum(I("x",n,e,t),i,u)]}case"All":{const i=I("axis",n,e,t),u=I("keepDims",n,e,t);return[s.all(I("x",n,e,t),i,u)]}case"Any":{const i=I("axis",n,e,t),u=I("keepDims",n,e,t);return[s.any(I("x",n,e,t),i,u)]}case"ArgMax":{const i=I("axis",n,e,t);return[s.argMax(I("x",n,e,t),i)]}case"ArgMin":{const i=I("axis",n,e,t);return[s.argMin(I("x",n,e,t),i)]}case"Prod":{const i=I("axis",n,e,t),u=I("keepDims",n,e,t);return[s.prod(I("x",n,e,t),i,u)]}case"Cumprod":{const i=I("axis",n,e,t),u=I("exclusive",n,e,t),c=I("reverse",n,e,t);return[s.cumprod(I("x",n,e,t),i,u,c)]}case"Cumsum":{const i=I("axis",n,e,t),u=I("exclusive",n,e,t),c=I("reverse",n,e,t);return[s.cumsum(I("x",n,e,t),i,u,c)]}case"Bincount":const r=I("x",n,e,t),a=I("weights",n,e,t),o=I("size",n,e,t);return[s.bincount(r,a,o)];case"DenseBincount":{const i=I("x",n,e,t),u=I("weights",n,e,t),c=I("size",n,e,t),l=I("binaryOutput",n,e,t);return[s.denseBincount(i,u,c,l)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P6=(n,e,t,s=$n)=>{switch(n.op){case"ConcatV2":case"Concat":{const r=I("n",n,e,t),a=I("axis",n,e,t);let o=I("tensors",n,e,t);return o=o.slice(0,r),[s.concat(o,a)]}case"Gather":{const r=I("x",n,e,t),a=I("indices",n,e,t);return[s.gather(r,s.cast(a,"int32"),0)]}case"GatherV2":{const r=I("axis",n,e,t),a=I("batchDims",n,e,t),o=I("x",n,e,t),i=I("indices",n,e,t);return[s.gather(o,s.cast(i,"int32"),r,a)]}case"Reverse":{const r=I("dims",n,e,t),a=[];for(let i=0;i<r.length;i++)r[i]&&a.push(i);const o=I("x",n,e,t);return[s.reverse(o,a)]}case"ReverseV2":{const r=I("axis",n,e,t),a=I("x",n,e,t);return[s.reverse(a,r)]}case"Slice":{const r=I("begin",n,e,t),a=I("size",n,e,t);return[s.slice(I("x",n,e,t),r,a)]}case"StridedSlice":{const r=I("begin",n,e,t),a=I("end",n,e,t),o=I("strides",n,e,t),i=I("beginMask",n,e,t),u=I("endMask",n,e,t),c=I("ellipsisMask",n,e,t),l=I("newAxisMask",n,e,t),d=I("shrinkAxisMask",n,e,t),h=I("x",n,e,t);return[s.stridedSlice(h,r,a,o,i,u,c,l,d)]}case"Pack":return j(()=>{const r=I("axis",n,e,t),a=I("tensors",n,e,t),o=a[0].shape,i=s.squeeze(a[0]).shape,u=a.map(c=>{const l=Qe(c.shape,o);if(!l&&!Qe(s.squeeze(c).shape,i))throw new Error("the input tensors shape does not match");return l?c:s.reshape(c,o)});return[s.stack(u,r)]});case"Unpack":{const r=I("axis",n,e,t),a=I("tensor",n,e,t);return s.unstack(a,r)}case"Tile":{const r=I("reps",n,e,t);return[s.tile(I("x",n,e,t),r)]}case"Split":case"SplitV":{const r=I("axis",n,e,t),a=I("numOrSizeSplits",n,e,t),o=I("x",n,e,t);return s.split(o,a,r)}case"ScatterNd":{const r=I("indices",n,e,t),a=I("values",n,e,t),o=I("shape",n,e,t);return[s.scatterND(r,a,o)]}case"GatherNd":{const r=I("x",n,e,t),a=I("indices",n,e,t);return[s.gatherND(r,a)]}case"SparseToDense":{const r=I("sparseIndices",n,e,t),a=I("outputShape",n,e,t),o=I("sparseValues",n,e,t),i=I("defaultValue",n,e,t);return[s.sparseToDense(r,o,a,o.dtype===i.dtype?i:s.cast(i,o.dtype))]}case"TensorScatterUpdate":{const r=I("indices",n,e,t),a=I("values",n,e,t),o=I("tensor",n,e,t);return[s.tensorScatterUpdate(o,r,a)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L6=(n,e,t,s=$n)=>{switch(n.op){case"SparseFillEmptyRows":{const{outputIndices:r,outputValues:a,emptyRowIndicator:o,reverseIndexMap:i}=s.sparse.sparseFillEmptyRows(I("indices",n,e,t),I("values",n,e,t),I("denseShape",n,e,t),I("defaultValue",n,e,t));return[r,a,o,i]}case"SparseReshape":{const{outputIndices:r,outputShape:a}=s.sparse.sparseReshape(I("inputIndices",n,e,t),I("inputShape",n,e,t),I("newShape",n,e,t));return[r,a]}case"SparseSegmentMean":return[s.sparse.sparseSegmentMean(I("data",n,e,t),I("indices",n,e,t),I("segmentIds",n,e,t))];case"SparseSegmentSum":return[s.sparse.sparseSegmentSum(I("data",n,e,t),I("indices",n,e,t),I("segmentIds",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M6=(n,e,t,s=$n)=>{switch(n.op){case"FFT":return[s.fft(I("x",n,e,t))];case"IFFT":return[s.ifft(I("x",n,e,t))];case"RFFT":return[s.rfft(I("x",n,e,t))];case"IRFFT":return[s.irfft(I("x",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B6=(n,e,t,s=$n)=>{switch(n.op){case"StaticRegexReplace":return[s.string.staticRegexReplace(I("input",n,e,t),I("pattern",n,e,t),I("rewrite",n,e,t),I("replaceGlobal",n,e,t))];case"StringNGrams":{const{nGrams:r,nGramsSplits:a}=s.string.stringNGrams(I("data",n,e,t),I("dataSplits",n,e,t),I("separator",n,e,t),I("nGramWidths",n,e,t),I("leftPad",n,e,t),I("rightPad",n,e,t),I("padWidth",n,e,t),I("preserveShortSequences",n,e,t));return[r,a]}case"StringSplit":{const{indices:r,values:a,shape:o}=s.string.stringSplit(I("input",n,e,t),I("delimiter",n,e,t),I("skipEmpty",n,e,t));return[r,a,o]}case"StringToHashBucketFast":return[s.string.stringToHashBucketFast(I("input",n,e,t),I("numBuckets",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z6=(n,e,t,s=$n)=>{switch(n.op){case"Cast":return[s.cast(I("x",n,e,t),I("dtype",n,e,t))];case"ExpandDims":{const r=I("axis",n,e,t);return[s.expandDims(I("x",n,e,t),r)]}case"Squeeze":{const r=I("axis",n,e,t);return[s.squeeze(I("x",n,e,t),r)]}case"Reshape":return[s.reshape(I("x",n,e,t),I("shape",n,e,t))];case"EnsureShape":return[s.ensureShape(I("x",n,e,t),I("shape",n,e,t))];case"MirrorPad":return[s.mirrorPad(I("x",n,e,t),I("padding",n,e,t),I("mode",n,e,t))];case"PadV2":case"Pad":return[s.pad(I("x",n,e,t),I("padding",n,e,t),I("constantValue",n,e,t))];case"SpaceToBatchND":{const r=I("blockShape",n,e,t),a=I("paddings",n,e,t);return[s.spaceToBatchND(I("x",n,e,t),r,a)]}case"BatchToSpaceND":{const r=I("blockShape",n,e,t),a=I("crops",n,e,t);return[s.batchToSpaceND(I("x",n,e,t),r,a)]}case"DepthToSpace":{const r=I("blockSize",n,e,t),a=I("dataFormat",n,e,t).toUpperCase();return[s.depthToSpace(I("x",n,e,t),r,a)]}case"BroadcastTo":return[s.broadcastTo(I("x",n,e,t),I("shape",n,e,t))];case"BroadcastArgs":return[s.broadcastArgs(I("s0",n,e,t),I("s1",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z1(n,e,t,s,r=j){const a=((o,i,u)=>{switch(o.category){case"arithmetic":return r(()=>m6(o,i,u));case"basic_math":return r(()=>g6(o,i,u));case"control":return I6(o,i,u);case"convolution":return r(()=>S6(o,i,u));case"creation":return r(()=>k6(o,i,u));case"dynamic":return N6(o,i,u);case"evaluation":return r(()=>C6(o,i,u));case"image":return r(()=>E6(o,i,u));case"graph":return r(()=>T6(o,i,u));case"logical":return r(()=>A6(o,i,u));case"matrices":return r(()=>D6(o,i,u));case"normalization":return r(()=>R6(o,i,u));case"ragged":return r(()=>O6(o,i,u));case"reduction":return r(()=>F6(o,i,u));case"slice_join":return r(()=>P6(o,i,u));case"sparse":return r(()=>L6(o,i,u));case"spectral":return r(()=>M6(o,i,u));case"string":return r(()=>B6(o,i,u));case"transformation":return r(()=>z6(o,i,u));case"hash_table":return _6(o,i,u,s);case"custom":const c=U$(o.op);if(c&&c.customExecutor)return c.customExecutor(new f6(o,i,u));throw TypeError(`Custom op ${o.op} is not registered.`);default:throw TypeError(`Unknown op '${o.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(n,e,t);return Yo(a)?a.then(o=>[].concat(o)):[].concat(a)}class J1{constructor(e={},t={},s={},r={},a){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=s,this.functionMap=r,this.parseNodeNameCache=a,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const s=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(s))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(t=>t.id===0&&t.iterationId===0?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q1(n,e,t,s){const r=new Set,a=[];let o=null,i=null;const u=new Set,c=new Set(Object.keys(n).map(h=>fs(h)[0]));s=s||[];const l=new Set(s.map(h=>fs(h.name)[0])),d=[...e];for(;d.length>0;){const h=d.pop();if((Po(h)||K6(h)||X6(h))&&o==null&&(o=h,i=o.children.map(p=>p.name).filter(p=>r.has(p))),r.add(h.name),t[h.name]==null&&!c.has(h.name)&&!l.has(h.name)){if(h.inputs.length===0){a.push(h.name);continue}h.inputs.forEach(p=>{u.has(p.name)||(u.add(p.name),d.push(p))})}}return{inputs:n,outputs:e,usedNodes:r,missingInputs:a,dynamicNode:o,syncInputs:i}}function V6(n,e){const{usedNodes:t,inputs:s}=e,r=Object.keys(s).map(g=>fs(g)[0]).map(g=>n.nodes[g]),a=n.initNodes||[],o=g=>t.has(typeof g=="string"?g:g.name);function i(g){return[...new Map(g.map(y=>[y.name,y])).values()]}const u=i([...r,...n.weights,...a]).filter(o),c=i([...u,...Object.values(n.nodes)]).filter(o),l=new Map(c.map(g=>[g.name,g])),d={};for(const g of c){d[g.name]=d[g.name]||0;for(const y of g.children)o(y)||(d[y.name]=Number.POSITIVE_INFINITY),d[y.name]=(d[y.name]||0)+1}const h=Object.entries(d).filter(([,g])=>g===0).map(([g])=>g),p=[...h];for(;h.length>0;){const g=h.pop(),y=l.get(g);for(const b of y.children.filter(o))--d[b.name]===0&&(p.push(b.name),h.push(b.name))}const f=p.map(g=>l.get(g)),m=W6(f,u);return U6(m,u),m}function W6(n,e){const t=new Map(n.map(o=>[o.name,o])),s=e.map(o=>o.name),r=new Set(s);for(;s.length>0;){const o=s.pop(),i=t.get(o);for(const u of i.children)!t.has(u.name)||r.has(u.name)||(r.add(u.name),s.push(u.name))}return n.filter(o=>r.has(o.name))}class Fp extends Error{constructor(e){super(`NodesExecutionOrderError: ${e}`)}}function U6(n,e){const t=new Map(n.map((i,u)=>[i.name,u])),s=new Set(e.map(i=>i.name)),r=i=>s.has(typeof i=="string"?i:i.name),a=new Set(n.map(i=>i.name)),o=i=>a.has(typeof i=="string"?i:i.name);for(const i of n){for(const u of i.children.filter(o)){if(!t.has(u.name))throw new Fp(`Child ${u.name} of node ${i.name} is unreachable.`);if(t.get(i.name)>t.get(u.name))throw new Fp(`Node ${i.name} is scheduled to run after its child ${u.name}.`)}if(!r(i))for(const u of i.inputs){if(!t.has(u.name))throw new Fp(`Input ${u.name} of node ${i.name} is unreachable.`);if(t.get(u.name)>t.get(i.name))throw new Fp(`Node ${i.name} is scheduled to run before its input ${u.name}.`)}}}function G6(n){const e=new Map(n.map((i,u)=>[i.name,u])),t=Number.MAX_SAFE_INTEGER,s=n.map((i,u)=>Po(i)?t:u),r=i=>{const u=s[e.get(i.name)];return u??-1},a=n.map((i,u)=>i.children.map(r).reduce((c,l)=>Math.max(c,l),s[u])),o=new Map;for(let i=0;i<n.length;++i){const u=a[i];if(u===t)continue;const c=n[i],l=n[u];o.has(l.name)||o.set(l.name,[]),o.get(l.name).push(c)}return o}const H6=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),j6=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),q6=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function Po(n){return H6.has(n.op)}function K6(n){return j6.has(n.op)}function X6(n){return q6.has(n.op)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Rf{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map(s=>e[s].map(r=>r.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,e.functions!=null&&Object.keys(e.functions).forEach(s=>{this._functionExecutorMap[s]=new Rf(e.functions[s],this)})}getCompilationKey(e,t){const s=e.map(a=>a.name).sort(),r=t.map(a=>a.name).sort();return s.join(this.SEPARATOR)+"--"+r.join(this.SEPARATOR)}compile(e,t){const s=Q1(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:a,syncInputs:o}=s;if(a!=null)throw new Error(`This execution contains the node '${a.name}', which has the dynamic op '${a.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${o}]`);if(r.length>0){const c=t.map(d=>d.name),l=Object.keys(e);throw new Error(`Cannot compute the outputs [${c}] from the provided inputs [${l}]. Missing the following inputs: [${r}]`)}const i=V6(this.graph,s),u=G6(i);return{orderedNodes:i,nodeLiveUntilMap:u}}cloneAndKeepTensor(e){if(e==null)return null;const t=e.clone();return bn(t),t}cloneTensorList(e){return e?e.map(s=>this.cloneAndKeepTensor(s)):null}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map(([t,s])=>[t,this.cloneTensorList(s)]))}execute(e,t){this.disposeIntermediateTensors(),e=this.mapInputs(e);const s=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=s.map(h=>this.graph.nodes[fs(h)[0]]),a=t.map(h=>fs(h)[0]),o=new Set(a);let i=a.map(h=>this.graph.nodes[h]);i.length===0&&(i=this._outputs);const u=this.getCompilationKey(r,i);let c=this.compiledMap.get(u);c==null&&(c=this.compile(e,i),this.compiledMap.set(u,c));try{this.keepIntermediateTensors=Y().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(h){this.keepIntermediateTensors=!1,console.warn(h.message)}const l={},d={};return j(()=>{const h=new J1(this.weightMap,l,d,this.functionExecutorMap,this.parseNodeNameCache),p=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach(y=>{const[b,x]=fs(y,h),w=[];w[x]=e[y],p[b]=w,this.keepIntermediateTensors&&(this.clonedTensorsMap[b]=this.cloneTensorList(w))});const f=this.getFrozenTensorIds(p),{orderedNodes:m,nodeLiveUntilMap:g}=c;for(const y of m){if(p[y.name])continue;const b=Z1(y,p,h,this._resourceManager);if(Yo(b))throw new Error(`The execution of the op '${y.op}' returned a promise. Please use model.executeAsync() instead.`);p[y.name]=b,this.keepIntermediateTensors&&(this.clonedTensorsMap[y.name]=this.cloneTensorList(b)),this.checkTensorForDisposalWithNodeLiveUntilInfo(y,p,h,f,o,g.get(y.name))}return this.parent==null&&h.dispose(f),t.map(y=>Sn(y,p,h))})}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map(s=>e[s]).map(s=>s.map(r=>r.id)));return new Set(t)}checkTensorForDisposal(e,t,s,r,a,o,i){if(!(Po(t)||o.has(e))){for(const u of s[e])u!=null&&(i[u.id]=(i[u.id]||0)+t.children.length);for(const u of t.inputs){if(Po(u))continue;const c=j1(u.name,s,r);if(c!=null)for(const l of c){if(!l||l.kept||a.has(l.id))continue;const d=i[l.id];d===1?(l.dispose(),delete i[l.id]):d!=null&&i[l.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,t,s,r,a,o){function i(u){return Po(u)||a.has(u.name)}if(!(Po(e)||o==null))for(const u of o){if(i(u))continue;const c=j1(u.name,t,s);for(const l of c)!l||l.kept||r.has(l.id)||l.dispose()}}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach(e=>{for(const t of e)t&&!t.isDisposed&&t.dispose()}),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t,s=!1,r={},a={}){this.disposeIntermediateTensors(),s||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=Y().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(h){this.keepIntermediateTensors=!1,console.warn(h.message)}const o=new J1(this.weightMap,r,a,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));const i=await this.executeWithControlFlow(e,o,t,s),u=t.map(h=>Sn(h,i,o)),c=u.map(h=>h.id),l=Object.keys(e).map(h=>e[h].id),d=new Set([...c,...l,...this.weightIds]);return Object.values(i).forEach(h=>{h.forEach(p=>{p&&!p.isDisposed&&!d.has(p.id)&&p.dispose()})}),this.parent==null&&o.dispose(d),u}async executeFunctionAsync(e,t,s){const r=e.reduce((a,o,i)=>(a[this.inputs[i].name]=o,a),{});return this._executeAsync(r,this.outputNodes,!0,t,s)}async executeWithControlFlow(e,t,s,r){const a=Object.keys(e),o=a.map(w=>this.graph.nodes[fs(w)[0]]),i=s.map(w=>fs(w)[0]),u=new Set(i);let c=i.map(w=>this.graph.nodes[w]);c.length===0&&(c=this._outputs);const{usedNodes:l,missingInputs:d,dynamicNode:h,syncInputs:p}=Q1(e,c,this.weightMap,this._initNodes),f=[...o,...this.graph.weights,...this._initNodes||[]].map(w=>({node:w,contexts:t.currentContext})),m=Object.assign({},this.weightMap);Object.keys(e).forEach(w=>{const[v,S]=fs(w),N=[];N[S]=e[w],m[v]=N});const g={},y=this.getFrozenTensorIds(m),b={};for(;f.length>0;){const w=this.processStack(o,f,t,m,b,y,u,g,l);await Promise.all(w)}h==null&&!r&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const x=c.filter(w=>!Po(w)&&!Sn(w.name,m,t)).map(w=>w.name);if(x.length>0){let w="";throw h!=null&&(w=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${p}]`),new Error(`Cannot compute the outputs [${x}] from the provided inputs [${a}]. Consider providing the following inputs: [${d}]. ${w}`)}return m}processStack(e,t,s,r,a,o,i,u,c){const l=[];for(;t.length>0;){const d=t.pop();s.currentContext=d.contexts;let h="";if(d.node.op==="Enter"&&I("isConstant",d.node,r,s)&&([h]=ua(d.node.name,s)),r[d.node.name]==null){const p=Z1(d.node,r,s,this._resourceManager);h||([h]=ua(d.node.name,s));const f=s.currentContext;Yo(p)?l.push(p.then(m=>(r[h]=m,this.keepIntermediateTensors&&(this.clonedTensorsMap[h]=this.cloneTensorList(m)),s.currentContext=f,this.checkTensorForDisposal(h,d.node,r,s,o,i,u),this.processChildNodes(d.node,t,s,r,a,c),m))):(r[h]=p,this.keepIntermediateTensors&&(this.clonedTensorsMap[h]=this.cloneTensorList(p)),this.checkTensorForDisposal(h,d.node,r,s,o,i,u),this.processChildNodes(d.node,t,s,r,a,c))}else this.processChildNodes(d.node,t,s,r,a,c)}return l}processChildNodes(e,t,s,r,a,o){e.children.forEach(i=>{const[u]=ua(i.name,s);a[u]||!o.has(i.name)||(i.op==="Merge"?i.inputNames.some(c=>!!Sn(c,r,s))&&(a[u]=!0,t.push({contexts:s.currentContext,node:i})):i.inputNames.every(c=>!!Sn(c,r,s))&&(a[u]=!0,t.push({contexts:s.currentContext,node:i})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(t=>t.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{const s=e[t],[r]=fs(t),a=this.graph.nodes[r];if(a.attrParams.shape&&a.attrParams.shape.value){const o=a.attrParams.shape.value,i=o.length===s.shape.length&&s.shape.every((u,c)=>o[c]===-1||o[c]===u);_(i,()=>`The shape of dict['${a.name}'] provided in model.execute(dict) must be [${o}], but was [${s.shape}]`)}a.attrParams.dtype&&a.attrParams.dtype.value&&_(s.dtype===a.attrParams.dtype.value,()=>`The dtype of dict['${a.name}'] provided in model.execute(dict) must be ${a.attrParams.dtype.value}, but was ${s.dtype}`)})}mapInputs(e){var t,s;const r={};for(const a in e){const o=(s=(t=this._signature)===null||t===void 0?void 0:t.inputs)===null||s===void 0?void 0:s[a];o!=null?r[o.name]=e[a]:r[a]=e[a]}return r}checkInputs(e){const t=Object.keys(e).filter(s=>{const[r]=fs(s);return this.graph.nodes[r]==null});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(t=>{var s,r;const a=(r=(s=this._signature)===null||s===void 0?void 0:s.outputs)===null||r===void 0?void 0:r[t];return a!=null?a.name:t},{})}checkOutputs(e){e.forEach(t=>{const[s]=fs(t);if(!this.graph.nodes[s])throw new Error(`The output '${t}' is not found in the graph`)})}}class Y6{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z6="?tfjs-format=file",J6="model.json";class Q6{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(e,t={},s=rC){this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=s,t==null&&(this.loadOptions={}),this.resourceManager=new Y6}findIOHandler(){const e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{const t=this.io.getLoadHandlers(e,this.loadOptions);if(t.length===0)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return Yo(e)?e.then(t=>t.getWeightStream==null?this.loadSync(t):this.loadStreaming(t)):this.loadSync(e)}loadSync(e){const t=this.io.decodeWeights(e.weightData,e.weightSpecs);return this.loadWithWeightMap(e,t)}async loadStreaming(e){if(e.getWeightStream==null)throw new Error("Model artifacts missing streamWeights function");const t=await _k(e.getWeightStream(),e.weightSpecs);return this.loadWithWeightMap(e,t)}loadWithWeightMap(e,t){this.artifacts=e;const s=this.artifacts.modelTopology;let r=this.artifacts.signature;if(this.artifacts.userDefinedMetadata!=null){const a=this.artifacts.userDefinedMetadata;a.signature!=null&&(r=a.signature),a.structuredOutputKeys!=null&&(this.structuredOutputKeys=a.structuredOutputKeys)}if(this.signature=r,this.version=`${s.versions.producer}.${s.versions.minConsumer}`,this.executor=new Rf(q1.Instance.transformGraph(s,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(t),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){const a=q1.Instance.transformGraph(e.modelInitializer);this.initializer=new Rf(a),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if(typeof e=="string"){const s=this.io.getSaveHandlers(e);if(s.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(s.length>1)throw new Error(`Found more than one (${s.length}) save handlers for URL '${e}'`);e=s[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){const t=e instanceof Bt?[e]:e,s={};return t.forEach((r,a)=>s[this.structuredOutputKeys[a]]=r),s}return e}predict(e,t){const s=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(s)}async predictAsync(e,t){const s=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(s)}normalizeInputs(e){var t;if(!(e instanceof Bt)&&!Array.isArray(e)){const a=(t=this.signature)===null||t===void 0?void 0:t.inputs;if(a!=null)for(const o in a){const i=a[o];i.resourceId!=null&&(e[o]=this.resourceIdToCapturedInput[i.resourceId])}return e}e=Array.isArray(e)?e:[e];const s=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+s!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-s} non-resource placeholders, while there are ${e.length} input tensors provided.`);let r=0;return this.inputNodes.reduce((a,o)=>{var i,u,c;const l=(c=(u=(i=this.signature)===null||i===void 0?void 0:i.inputs)===null||u===void 0?void 0:u[o])===null||c===void 0?void 0:c.resourceId;return l!=null?a[o]=this.resourceIdToCapturedInput[l]:a[o]=e[r++],a},{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){const t=this.initializerSignature.outputs,s=Object.keys(t);for(let r=0;r<s.length;r++){const a=s[r],o=t[a];this.resourceIdToCapturedInput[o.resourceId]=e[r]}}}execute(e,t){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const s=this.executor.execute(e,t);return s.length>1?s:s[0]}async executeAsync(e,t){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const s=await this.executor.executeAsync(e,t);return s.length>1?s:s[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,s)=>(t[s]=[e[s]],t),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&Xe(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function eI(n,e={},t=rC){if(n==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");e==null&&(e={}),e.fromTFHub&&typeof n=="string"&&(n=eK(n));const s=new Q6(n,e,t);return await s.load(),s}function eK(n){return n.endsWith("/")||(n=n+"/"),`${n}${J6}${Z6}`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var tI;(function(n){n[n.FAIL=0]="FAIL",n[n.SHORTEST=1]="SHORTEST",n[n.LONGEST=2]="LONGEST"})(tI||(tI={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ce(n,e){Array.isArray(n)||(n=[n]),n.forEach(t=>{t!=null&&_(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the CPU backend.`)})}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tK=hw;class Bg extends km{nextDataId(){return Bg.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new fx(this,cr())}write(e,t,s){this.firstUse&&(this.firstUse=!1,Y().get("IS_NODE")&&As(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));const r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:s,refCount:1}),r}makeTensorInfo(e,t,s){let r;if(t==="string"&&s!=null&&s.length>0&&jd(s[0])){const a=s.map(o=>Ka(o));r=this.write(a,e,t)}else r=this.write(s,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){const t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){const t=this.data.get(e);t.refCount--}}move(e,t,s,r,a){this.data.set(e,{values:t,dtype:r,refCount:a})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:s}=this.data.get(e);if(t==="complex64"){const r=this.readSync(s.real.dataId),a=this.readSync(s.imag.dataId);return Na(r,a)}return aL(this.data.get(e).values,t)}bufferSync(e){const t=this.readSync(e.dataId);if(e.dtype==="string")try{const s=t.map(r=>to(r));return He(e.shape,e.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return He(e.shape,e.dtype,t)}makeOutput(e,t,s){return cr().makeTensorFromTensorInfo(this.makeTensorInfo(t,s,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:s}=this.data.get(e);s!=null&&(this.disposeData(s.real.dataId,!0),this.disposeData(s.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=Rn();return e(),{kernelMs:Rn()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){Ce([e],"where");const t=this.readSync(e.dataId);return tK(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}Bg.nextDataId=0;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j$(n){const e=new Float32Array(n.length);for(let t=0;t<n.length;++t)e[t]=Math.abs(n[t]);return e}const nK=n=>{const{x:e}=n.inputs,t=n.backend;Ce(e,"abs");let s=new Float32Array(U(e.shape));const r=t.data.get(e.dataId).values;return s=j$(r),t.makeOutput(s,e.shape,e.dtype)},sK={kernelName:qd,backendName:"cpu",kernelFunc:nK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yt(n){return(e,t,s,r,a)=>{const o=Me(e,t),i=o.length,u=ve(o),c=U(o),l=Cn(a,c),d=e.length,h=t.length,p=ve(e),f=ve(t),m=wu(e,o),g=wu(t,o);if(m.length+g.length===0)for(let y=0;y<l.length;++y)l[y]=n(s[y%s.length],r[y%r.length]);else for(let y=0;y<l.length;++y){const b=Ou(y,i,u),x=b.slice(-d);m.forEach(N=>x[N]=0);const w=Vr(x,d,p),v=b.slice(-h);g.forEach(N=>v[N]=0);const S=Vr(v,h,f);l[y]=n(s[w],r[S])}return[l,o]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ms(n){const{inputs:e,backend:t}=n,{real:s,imag:r}=e,a=t.data.get(s.dataId).values,o=t.data.get(r.dataId).values,i=t.makeTensorInfo(s.shape,"complex64"),u=t.data.get(i.dataId);return u.complexTensorInfos={real:t.makeTensorInfo(s.shape,"float32",a),imag:t.makeTensorInfo(r.shape,"float32",o)},i}const rK={kernelName:xx,backendName:"cpu",kernelFunc:ms};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Of(n,e,t="float32"){if(t==="complex64"){const r=Of(n,e,"float32"),a=Of(n,e,"float32");return ms({inputs:{real:r,imag:a},backend:n})}const s=Ln(U(e),t);return n.makeTensorInfo(e,t,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zr(n){const{inputs:e,backend:t}=n,{x:s}=e;return t.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const aK={kernelName:cl,backendName:"cpu",kernelFunc:Zr};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oi(n){const{inputs:e,backend:t}=n,{input:s}=e,r=t.data.get(s.dataId).complexTensorInfos.real,a=t.data.get(r.dataId).values;return t.makeTensorInfo(r.shape,r.dtype,a)}const oK={kernelName:Ex,backendName:"cpu",kernelFunc:oi};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q$(n,e,t,s){if(s==="int32"){const r=Int32Array.from(n);return[e,"int32",r]}if(s==="bool"){const r=xi([0],t),[a,o]=Yt((i,u)=>i!==u?1:0)(e,[],n,r,"bool");return[o,"bool",a]}throw new Error(`Error in Cast: failed to cast ${t} to ${s}`)}function ho(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dtype:a}=s;if(a==="complex64"){if(r.dtype==="complex64")return Zr({inputs:{x:r},backend:t});const l=Of(t,r.shape,r.dtype),d=ho({inputs:{x:r},backend:t,attrs:{dtype:"float32"}}),h=ms({inputs:{real:d,imag:l},backend:t});return t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(d),h}if(r.dtype==="complex64"){const l=oi({inputs:{input:r},backend:t}),d=ho({inputs:{x:l},backend:t,attrs:{dtype:a}});return t.disposeIntermediateTensorInfo(l),d}if(!ak(r.dtype,a)){const l=Zr({inputs:{x:r},backend:t});return{dataId:l.dataId,shape:l.shape,dtype:a}}const o=t.data.get(r.dataId).values,[i,u,c]=q$(o,r.shape,r.dtype,a);return t.makeTensorInfo(i,u,c)}const iK={kernelName:Hu,backendName:"cpu",kernelFunc:ho};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gn(n,e,t,s){return t==null?({inputs:r,backend:a})=>{const{a:o,b:i}=r,u=a;Ce([o,i],n);const c=u.data.get(o.dataId).values,l=u.data.get(i.dataId).values,d=o.dtype==="string"?Ca(c):c,h=o.dtype==="string"?Ca(l):l,p=s||o.dtype,[f,m]=e(o.shape,i.shape,d,h,p);return u.makeTensorInfo(m,p,f)}:({inputs:r,backend:a})=>{const{a:o,b:i}=r,u=a;if(o.dtype==="complex64"||i.dtype==="complex64"){const c=ho({inputs:{x:o},backend:u,attrs:{dtype:"complex64"}}),l=u.data.get(c.dataId),d=l.complexTensorInfos.real,h=l.complexTensorInfos.imag,p=u.data.get(d.dataId).values,f=u.data.get(h.dataId).values,m=ho({inputs:{x:i},backend:u,attrs:{dtype:"complex64"}}),g=u.data.get(m.dataId),y=g.complexTensorInfos.real,b=g.complexTensorInfos.imag,x=u.data.get(y.dataId).values,w=u.data.get(b.dataId).values,[v,S,N]=t(o.shape,i.shape,p,f,x,w),$=u.makeTensorInfo(N,"float32",v),T=u.makeTensorInfo(N,"float32",S),C=ms({inputs:{real:$,imag:T},backend:u});return u.disposeIntermediateTensorInfo(c),u.disposeIntermediateTensorInfo(m),u.disposeIntermediateTensorInfo($),u.disposeIntermediateTensorInfo(T),C}else{const c=u.data.get(o.dataId).values,l=u.data.get(i.dataId).values,d=s||o.dtype,[h,p]=e(o.shape,i.shape,c,l,d);return u.makeTensorInfo(p,d,h)}}}function y0(n){return(e,t,s,r,a,o)=>{const i=Me(e,t),u=U(i),c=i.length,l=ve(i),d=Cn("float32",u),h=Cn("float32",u),p=wu(e,i),f=wu(t,i),m=Na(s,r),g=Na(a,o),y=e.length,b=ve(e),x=t.length,w=ve(t);if(p.length+f.length===0)for(let v=0;v<d.length;v++){const S=v%m.length,N=v%g.length,$=n(m[S*2],m[S*2+1],g[N*2],g[N*2+1]);d[v]=$.real,h[v]=$.imag}else for(let v=0;v<d.length;v++){const S=Ou(v,c,l),N=S.slice(-y);p.forEach(A=>N[A]=0);const $=Vr(N,y,b),T=S.slice(-x);f.forEach(A=>T[A]=0);const C=Vr(T,x,w),k=n(m[$*2],m[$*2+1],g[C*2],g[C*2+1]);d[v]=k.real,h[v]=k.imag}return[d,h,i]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const K$=Yt((n,e)=>n+e),uK=y0((n,e,t,s)=>({real:n+t,imag:e+s})),ku=gn(mi,K$,uK),lK={kernelName:mi,backendName:"cpu",kernelFunc:ku};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b0(n,e,t,s,r){const a=U(s),o=Ln(r,t);for(let i=0;i<n.length;i++){const u=n[i];if(u<0)throw new Error("Input x must be non-negative!");u>=r||(a>0?o[u]+=e[i]:o[u]+=1)}return o}function X$(n,e,t,s=!1){const r=n.shape[0],a=n.shape[1],o=He([r,t],e.dtype);for(let i=0;i<r;i++)for(let u=0;u<a;u++){const c=n.get(i,u);if(c<0)throw new Error("Input x must be non-negative!");c>=t||(s?o.set(1,i,c):e.size>0?o.set(o.get(i,c)+e.get(i,u),i,c):o.set(o.get(i,c)+1,i,c))}return o}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y$=Yt((n,e)=>n&e),cK=gn(th,Y$),dK={kernelName:th,backendName:"cpu",kernelFunc:cK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function na(n){return(e,t,s)=>{const r=Ht(t,e.length);for(let a=0;a<e.length;++a)r[a]=n(e[a],s);return r}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xt(n,e,t){const s=na(e);return ko(n,s,t)}function ko(n,e,t){return({inputs:s,attrs:r,backend:a})=>{const{x:o}=s;Ce(o,n);const i=a,u=i.data.get(o.dataId).values;let c;if(o.dtype==="string"){if(!Array.isArray(u))throw new Error("String tensor's value was not an instance of Array");c=Ca(u)}else c=u;const l=t||o.dtype,d=e(c,l,r);return i.makeTensorInfo(o.shape,l,d)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z$=na(n=>Math.ceil(n)),hK=ko(ju,Z$),pK={kernelName:ju,backendName:"cpu",kernelFunc:hK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x0(n,e,t,s){const r=Ht(t,U(e));if(s&&t!=="string"){let a=0;n.forEach(o=>{const i=U(o.shape);r.set(o.vals,a),a+=i})}else{let a=0;n.forEach(o=>{const i=t==="string"?Ca(o.vals):o.vals;let u=0;for(let c=0;c<o.shape[0];++c){const l=c*e[1]+a;for(let d=0;d<o.shape[1];++d)r[l+d]=i[u++]}a+=o.shape[1]})}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const J$=Yt((n,e)=>n===e?1:0),Q$=gn(lh,J$,null,"bool"),fK={kernelName:lh,backendName:"cpu",kernelFunc:Q$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const e2=na(n=>Math.exp(n)),t2=ko(rl,e2,"float32"),mK={kernelName:rl,backendName:"cpu",kernelFunc:t2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const n2=na(n=>Math.expm1(n)),gK=ko(al,n2),yK={kernelName:al,backendName:"cpu",kernelFunc:gK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const s2=na(n=>Math.floor(n)),bK=ko(ol,s2),xK={kernelName:ol,backendName:"cpu",kernelFunc:bK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r2=Yt((n,e)=>Math.floor(n/e)),wK=gn(il,r2,null,"int32"),vK={kernelName:il,backendName:"cpu",kernelFunc:wK};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a2(n,e,t,s,r,a,o,i,u){const c=He([s,a],t);for(let l=0;l<s;l++){const d=[];let h=0;for(let p=0;p<r;p++){const f=n[l*r+p];h+=f*o[p],d.push(f)}if(h<0||h>=u/a)throw new Error(`Invalid indices: ${d} does not index into ${i}`);for(let p=0;p<a;p++)c.values[l*a+p]=e.get(...e.indexToLoc(h*a+p))}return c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o2(n,e,t){const s=He(t,n.dtype);for(let r=0;r<s.size;++r){const o=s.indexToLoc(r).slice(),i=o[0],u=o[2],c=e.locToIndex([i,u]);o[2]=e.values[c];const l=n.locToIndex(o);0<=l&&l<n.values.length&&(s.values[r]=n.values[l])}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i2=Yt((n,e)=>n>e?1:0),IK=gn(fh,i2,null,"bool"),SK={kernelName:fh,backendName:"cpu",kernelFunc:IK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u2=Yt((n,e)=>n>=e?1:0),kK=gn(ll,u2,null,"bool"),NK={kernelName:ll,backendName:"cpu",kernelFunc:kK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l2=Yt((n,e)=>n<e?1:0),CK=gn(mh,l2,null,"bool"),TK={kernelName:mh,backendName:"cpu",kernelFunc:CK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c2=Yt((n,e)=>n<=e?1:0),$K=gn(gh,c2,null,"bool"),_K={kernelName:gh,backendName:"cpu",kernelFunc:$K};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d2(n,e,t){const s=(e-n)/(t-1),r=Ln(t,"float32");r[0]=n;for(let a=1;a<r.length;a++)r[a]=r[a-1]+s;return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h2=na(n=>Math.log(n)),EK=ko(ml,h2),AK={kernelName:ml,backendName:"cpu",kernelFunc:EK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p2(n,e,t,s){const r=Cn(s,U(t));for(let a=0;a<r.length;++a){const o=a*e;let i=n[o];for(let u=0;u<e;++u){const c=n[o+u];(Number.isNaN(c)||c>i)&&(i=c)}r[a]=i}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const f2=Yt((n,e)=>Math.max(n,e)),DK=gn(xl,f2),RK={kernelName:xl,backendName:"cpu",kernelFunc:DK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const m2=Yt((n,e)=>Math.min(n,e)),OK=gn(Sl,m2),FK={kernelName:Sl,backendName:"cpu",kernelFunc:OK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w0=Yt((n,e)=>n*e),PK=y0((n,e,t,s)=>({real:n*t-e*s,imag:n*s+e*t})),zg=gn(Cl,w0,PK),LK={kernelName:Cl,backendName:"cpu",kernelFunc:zg};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g2(n,e,t){const s=go(-1,t);return w0([],e,s,n,t)}function MK(n){const{inputs:e,backend:t}=n,{x:s}=e;Ce(s,"neg");const r=t.data.get(s.dataId).values,[a,o]=g2(r,s.shape,s.dtype);return t.makeTensorInfo(o,s.dtype,a)}const BK={kernelName:kh,backendName:"cpu",kernelFunc:MK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y2=Yt((n,e)=>n!==e?1:0),zK=gn(Nh,y2,null,"bool"),VK={kernelName:Nh,backendName:"cpu",kernelFunc:zK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v0(n,e,t,s,r){const a=e.length,o=U(e),i=ve(e),u=ve(r),c=Cn(t,U(r));for(let l=0;l<o;++l){const d=Ou(l,a,i),h=new Array(d.length);for(let f=0;f<h.length;f++)h[f]=d[s[f]];const p=Vr(h,a,u);c[p]=n[l]}return c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function is(n){const{inputs:e,attrs:t,backend:s}=n,{x:r}=e,{perm:a}=t;Ce(r,"transpose");const o=r.shape.length,i=new Array(o);for(let d=0;d<i.length;d++)i[d]=r.shape[a[d]];const u=s.data.get(r.dataId).values,c=v0(u,r.shape,r.dtype,a,i);return{dataId:s.write(c,i,r.dtype),shape:i,dtype:r.dtype}}const WK={kernelName:ja,backendName:"cpu",kernelFunc:is};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b2(n,e,t,s){const[r,a]=Rt(n,s),o=ws(e,"int32"),i=Ln(U(r),o),u=U(a);for(let c=0;c<i.length;++c){const l=c*u;let d=1;for(let h=0;h<u;++h)d*=t[l+h];i[c]=d}return{outVals:i,outShape:r,outDtype:o}}function UK(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:a,keepDims:o}=s;Ce(r,"prod");const i=r.shape.length,u=ze(a,r.shape),c=At(u,i);let l=u,d=r;const h=[];c!=null&&(d=is({inputs:{x:r},backend:t,attrs:{perm:c}}),h.push(d),l=Ct(l.length,i));const p=t.data.get(d.dataId).values,{outVals:f,outShape:m,outDtype:g}=b2(d.shape,d.dtype,p,l);let y=m;return o&&(y=wt(m,u)),h.forEach(b=>t.disposeIntermediateTensorInfo(b)),t.makeTensorInfo(y,g,f)}const GK={kernelName:Al,backendName:"cpu",kernelFunc:UK};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HK(n,e,t){n.forEach((s,r)=>{if(s<0||s>=t){const a=Ou(r,e.length,ve(e)).join(",");throw new Error(`indices[${a}] = ${s} is not in [0, ${t})`)}})}function jK(n,e){for(let t=0;t<n.length;++t){const s=n[t],r=t===n.length-1?e:n[t+1].length;if(s.length===0)throw new Error("Ragged splits may not be empty");if(s[0]<0)throw new Error("Ragged splits must be non-negative");if(s[s.length-1]>r)throw new Error("Ragged splits must not point past values");for(let a=1;a<s.length;++a)if(s[a-1]>s[a])throw new Error("Ragged splits must be sorted in ascending order")}}function qK(n,e,t,s){const r=[];let a=0;const o=e.length-1+t.length,i=new Array(o).fill(null).map(()=>[0]);jK(t,s);let u=1;for(let c=0;c<e.length-1;++c){u*=e[c];const l=e[c+1];for(let d=1;d<u+1;++d)i[c].push(d*l)}for(let c=0;c<n.length;++c){let l=n[c],d=n[c]+1;for(let h=0;h<t.length;++h){const p=t[h],f=h+e.length-1;if(f>=0){const m=i[f],g=m[m.length-1]-p[l];for(let y=l;y<d;++y)i[f].push(p[y+1]+g)}l=p[l],d=p[d]}d!==l&&(r.push([l,d]),a+=d-l)}return{outSplits:i,valueSlices:r,numValues:a}}function KK(n){const e=[];for(let t=0;t<n.length;++t){const s=n[t].length,r=Ht("int32",s);e.push(r),n[t].forEach((a,o)=>r[o]=a)}return e}function nI(n,e){const t=n.slice(0,e);for(;t.length<e;)t.push(1);for(let s=e;s<n.length;s++)t[e-1]*=n[s];return t}function XK(n,e,t,s,r,a){const o=nI(e,2)[1],i=nI(a,2)[1];let u=0;for(const c of t)for(let l=c[0];l<c[1];++l){for(let d=0;d<s;++d)r[u*i+d]=n[l*o+d];++u}}function YK(n,e,t,s,r){const a=e.slice();a[0]=r;const o=Ht(t,U(a)),i=n.length,u=i===0?0:i/e[0];return XK(n,e,s,u,o,a),[o,a]}function x2(n,e,t,s,r,a,o,i){if(n.length===0)throw new Error("paramsNestedSplits must be non empty");if(e[0].length===0)throw new Error("Split tensors must not be scalars");const u=e[0][0]-1;if(HK(a,o,u),s.length===0)throw new Error("params.rank must be nonzero");const c=s[0],{outSplits:l,valueSlices:d,numValues:h}=qK(a,o,n,c),p=KK(l),f=YK(t,s,r,d,h);return[p,f[0],f[1]]}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sI=2147483647;function w2(n,e,t,s,r,a,o){if(e.length>1)throw new Error("starts must be a scalar or vector");if(r.length>1)throw new Error("limits must be a scalar or vector");if(o.length>1)throw new Error("deltas must be a scalar or vector");const i=e.length===0,u=r.length===0,c=o.length===0,l=[];i||l.push(e[0]),u||l.push(r[0]),c||l.push(o[0]);for(let g=1;g<l.length;++g)if(l[g]!==l[g-1])throw new Error("starts, limits, and deltas must have the same shape");const d=l.length===0?1:l[0],h=Ht("int32",d+1);h[0]=0;for(let g=0;g<d;++g){const y=i?n[0]:n[g],b=u?s[0]:s[g],x=c?a[0]:a[g];if(x===0)throw new Error("Requires delta != 0");let w;if(x>0&&b<y||x<0&&b>y)w=0;else if(w=Math.ceil(Math.abs((b-y)/x)),w>sI)throw new Error(`Requires ((limit - start) / delta) <= ${sI}`);h[g+1]=h[g]+w}const p=h[d],f=Ht(t,p);let m=0;for(let g=0;g<d;++g){const y=h[g+1]-h[g];let b=i?n[0]:n[g];const x=c?a[0]:a[g];for(let w=0;w<y;++w)f[m++]=b,b+=x}return[h,f]}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Gs=pr;class Ff{constructor(e,t,s,r,a,o,i,u,c,l){this.shape=e,this.shapeShape=t,this.values=s,this.valuesShape=r,this.valuesDType=a,this.defaultValue=o,this.defaultValueShape=i,this.rowPartitionValues=u,this.rowPartitionValuesShapes=c,this.rowPartitionTypes=mC(l),this.raggedRank=gC(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===Gs.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===Gs.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case Gs.VALUE_ROWIDS:return Ff.getMaxWidthValueRowID(t);case Gs.ROW_SPLITS:return Ff.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${Gs[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(t===0||t===1)return 0;let s=0;for(let r=0;r<t-1;++r){const a=e[r+1]-e[r];a>s&&(s=a)}return s}static getMaxWidthValueRowID(e){const t=e.length;if(t===0)return 0;let s=0,r=e[0],a=0;for(let o=1;o<t;++o){const i=e[o];i!==r&&(r=i,a=Math.max(o-s,a),s=o)}return Math.max(t-s,a)}tensorShapeFromTensor(e,t,s=!0){if(t.length===0){if(e[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return aI(e,s)}calculateOutputSize(e){const t=this.valuesShape,s=this.defaultValueShape;yC(s,t);const r=this.tensorShapeFromTensor(this.shape,this.shapeShape),o=fC(this.raggedRank,r,t);o[0]<0&&(o[0]=e);for(let i=1;i<=this.raggedRank;++i)o[i]<0&&(o[i]=this.getMaxWidth(i));return o}calculateFirstParentOutputIndex(e,t,s){const r=Math.min(e,s),a=[];let o=0;for(let i=0;i<r;++i,o+=t)a.push(o);for(let i=r;i<e;++i)a.push(-1);return _(a.length===e,()=>"Final length of result must be equal to firstDimension."),a}calculateOutputIndexRowSplit(e,t,s,r){const a=e.length,o=[];for(let i=0;i<a-1;++i){const u=e[i+1]-e[i];let c=Math.min(r,u),l=t[i];l===-1&&(c=0);for(let d=0;d<c;++d)o.push(l),l+=s;for(let d=0;d<u-c;++d)o.push(-1)}if(a>0&&o.length!==e[a-1])throw new Error("Invalid row split size.");return o}calculateOutputIndexValueRowID(e,t,s,r){const a=e.length,o=[];if(a===0)return[];let i=0,u=e[0];if(u>=t.length)throw new Error(`Got currentValueRowId=${u}, which is not less than ${t.length}`);let c=t[u];o.push(c);for(let l=1;l<a;++l){const d=e[l];if(d===u)c>=0&&(++i,i<r?c+=s:c=-1);else{if(i=0,u=d,d>=t.length)throw new Error(`Got nextValueRowId=${d} which is not less than ${t.length}`);c=t[d]}o.push(c)}if(o.length!==e.length)throw new Error("Invalid row ids.");return o}calculateOutputIndex(e,t,s,r){const a=this.getRowPartitionTensor(e),o=this.getRowPartitionTypeByDimension(e);switch(o){case Gs.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(a,t,s,r);case Gs.ROW_SPLITS:if(a.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${a.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(a,t,s,r);default:throw new Error(`Unsupported partition type: ${Gs[o]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case Gs.FIRST_DIM_SIZE:return e[0];case Gs.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case Gs.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${Gs[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const t=this.getFirstDimensionSize(),s=this.calculateOutputSize(t),r=new Array(this.raggedRank+1);r[r.length-1]=1;for(let u=r.length-2;u>=0;--u)r[u]=r[u+1]*s[u+1];const a=aI(s,!1),o=Ht(this.valuesDType,U(a));if(r[0]*s[0]>0){let u=this.calculateFirstParentOutputIndex(t,r[0],s[0]);for(let c=1;c<=this.raggedRank;++c)u=this.calculateOutputIndex(c-1,u,r[c],s[c]);this.setOutput(this.raggedRank,u,o,a)}return[a,o]}setOutput(e,t,s,r){if(s.length===0)return;const a=this.values,o=s;let i=r.slice();i=i.slice(e+1);const u=U(i),c=t.length;let l=this.defaultValue;if(l.length!==u&&l.length!==1){const f=this.defaultValueShape;j(()=>{const m=V(l,f);l=tu(m,i).dataSync()})}let d=0,h=0,p=0;for(let f=0;f<=c;++f){let m=f<c?t[f]:-1;if(m===p){++p;continue}if(h<p){const g=a.subarray(d*u),y=o.subarray(h*u),b=(p-h)*u;rI(y,g,b)}if(f>=c){const g=s.length;m=Math.floor(g/u)}if(m>p)if(this.defaultValue.length===1)o.subarray(p*u,m*u).fill(this.defaultValue[0]),p=m;else for(;m>p;){const g=o.slice(p*u);rI(g,l,u),++p}m<0?(d=f+1,h=p):(d=f,h=p,p=h+1)}}}function rI(n,e,t){for(let s=0;s<t;s++)n[s]=e[s]}function aI(n,e){const t=[];for(let s of n){if(s<0){if(!e)throw new Error(`Dimension ${s} must be >= 0`);if(s<-1)throw new Error(`Dimension ${s} must be >= -1`);s=-1}t.push(s)}return t}function v2(n,e,t,s,r,a,o,i,u,c){return new Ff(n,e,t,s,r,a,o,i,u,c).compute()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I0(n,e,t,s){const r=n===e,a=n<e&&t<0,o=e<n&&t>1;if(r||a||o)return Ln(0,s);const i=Math.abs(Math.ceil((e-n)/t)),u=Ln(i,s);e<n&&t===1&&(t=-1),u[0]=n;for(let c=1;c<u.length;c++)u[c]=u[c-1]+t;return u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I2=na(n=>1/Math.sqrt(n)),ZK=ko(Bl,I2),JK={kernelName:Bl,backendName:"cpu",kernelFunc:ZK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bo(n,e,t,s,r,a,o,i,u,c){const l=[s/r,r],d=n.values,h=e.values;if(s===0)return He(t,e.dtype);const p=u instanceof dn?u:He(l,e.dtype);typeof u=="string"||typeof u=="number"?p.values.fill(u):typeof u=="boolean"&&p.values.fill(+u);for(let f=0;f<a;f++){const m=[];let g=0;for(let y=0;y<o;y++){const b=d[f*o+y];m.push(b),g+=b*i[y]}if(g<0||g>=s/r)throw new Error(`Invalid indices: ${m} does not index into ${t}`);for(let y=0;y<r;y++)c?p.values[g*r+y]+=h[f*r+y]:p.values[g*r+y]=e.rank===0?h[0]:h[f*r+y]}return p}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QK=na(n=>1/(1+Math.exp(-n))),S2=xt(Gl,n=>1/(1+Math.exp(-n))),e5={kernelName:Gl,backendName:"cpu",kernelFunc:S2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pf(n,e,t,s,r){const a=yg(s,e,t),o=U(t),i=ve(s);if(a){const d=bg(e,i);return r==="string"?n.slice(d,d+o):n.subarray(d,d+o)}const u=r==="string"?Ca(n):n,c=He(s,r,u),l=He(t,r);for(let d=0;d<l.size;++d){const h=l.indexToLoc(d),p=h.map((f,m)=>f+e[m]);l.set(c.get(...p),...h)}return r==="string"?qw(l.values):l.values}function ii(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{begin:a,size:o}=s;Ce(r,"slice");const[i,u]=np(r,a,o);Iw(r,i,u);const c=t.data.get(r.dataId).values,l=Pf(c,i,u,r.shape,r.dtype);return t.makeTensorInfo(u,r.dtype,l)}const t5={kernelName:Mh,backendName:"cpu",kernelFunc:ii};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k2(n,e,t,s,r,a,o){const i=e[0],u=a[0],c=new Array(u),l=new Array(i),d=e[1];if(u===0){if(i!==0)throw new Error(Pw(i));const g=Ht(t,0),y=Ht(r,0);return[g,[0,d],y,c,l]}let h=!0,p=0;const f=new Array(u).fill(0);for(let g=0;g<i;++g){const y=n[g*d];if(y<0)throw new Error(Lw(g,y));if(y>=u)throw new Error(Mw(g,y,u));++f[y],h=h&&y>=p,p=y}let m=!0;for(let g=0;g<u;++g){const y=f[g]===0;c[g]=y,m=m&&!y,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(m&&h){const g=n,y=s;for(let b=0;b<i;++b)l[b]=b;return[g,[i,d],y,c,l]}else{const g=f[u-1],y=Ht(t,g*d),b=Ht(r,g),x=new Array(u).fill(0);for(let w=0;w<i;++w){const v=n[w*d],S=x[v],N=(v===0?0:f[v-1])+S;x[v]++;for(let $=0;$<d;++$)y[N*d+$]=n[w*d+$];b[N]=s[w],l[w]=N}for(let w=0;w<u;++w)if(x[w]===0){const S=w===0?0:f[w-1];y[S*d+0]=w;for(let N=1;N<d;++N)y[S*d+N]=0;b[S]=o}return[y,[g,d],b,c,l]}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N2(n,e,t,s,r){const a=U(s),o=e[0],i=r.length,u=[];let c=1,l=-1;for(let g=0;g<i;++g){const y=r[g];if(y===-1){if(l!==-1)throw new Error(Bw(l,g));l=g,u.push(1)}else{if(y<0)throw new Error(zw(g,y));c*=y,u.push(y)}}if(l!==-1){if(c<=0)throw new Error(Vw());const g=Math.trunc(a/c);if(c*g!==a)throw new Error(Ww(s,u));u[l]=g}if(U(u)!==a)throw new Error(Uw(s,u));const h=s.length,p=[];if(h>0){p[h-1]=1;for(let g=h-2;g>=0;--g)p[g]=p[g+1]*s[g+1]}const f=[];if(i>0){f[i-1]=1;for(let g=i-2;g>=0;--g)f[g]=f[g+1]*u[g+1]}const m=Ht(t,o*i);for(let g=0;g<o;++g){let y=0;for(let b=0;b<h;++b)y+=n[g*h+b]*p[b];for(let b=0;b<i;++b)m[g*i+b]=Math.trunc(y/f[b]),y%=f[b]}return[m,[o,i],u]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S0(n,e,t,s,r,a=!1,o=0){const i=s.length,u=[e[0],n.length/e[0]],c=u[1],d=i>0?r[i-1]+1:0;if(d<0)throw new Error(Zc());const h=e.slice();h[0]=d;const p=h.reduce((x,w)=>x*w,1),f=Ht(t,p);if(i===0)return d>0&&f.fill(o),[f,h];if(d<=0)throw new Error(Zc());let m=0,g=1,y=0,b=r[m];for(;;){let x=0;if(g<i){if(x=r[g],b===x){++g;continue}if(b>=x)throw new Error(Gw())}if(b<0||b>=d)throw new Error(Hw(b,d));b>y&&f.fill(o,y*c,b*c);for(let w=m;w<g;++w){const v=s[w];if(v<0||v>=u[0])throw new Error(jw(w,s[w],u[0]));for(let S=0;S<c;S++)f[b*c+S]+=n[v*c+S]}if(a)for(let w=0;w<c;w++)f[b*c+w]/=g-m;if(m=g,++g,y=b+1,b=x,g>i)break}return y<d&&f.fill(o,y*c,d*c),[f,h]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const n5=na(n=>Math.sqrt(n)),s5=xt(jl,n=>Math.sqrt(n)),r5={kernelName:jl,backendName:"cpu",kernelFunc:s5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C2=Yt((n,e)=>{const t=n-e;return t*t}),a5=gn(Xl,C2),o5={kernelName:Xl,backendName:"cpu",kernelFunc:a5};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const T2=na((n,e)=>{const{pattern:t,replaceGlobal:s,rewrite:r}=e;return n.replace(new RegExp(t,s?"g":""),r)}),i5=ko(zm,T2),u5={kernelName:zm,backendName:"cpu",kernelFunc:i5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $2(n,e,t,s){const r=He(n,e.dtype);for(let a=0;a<r.size;a++){const o=r.indexToLoc(a),i=new Array(o.length);for(let u=0;u<i.length;u++)i[u]=o[u]*t[u]+s[u];r.set(e.get(...i),...o)}return r}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class l5{constructor(e,t,s,r,a,o){this.separator=Ka(e),this.nGramWidths=t,this.leftPad=Ka(s),this.rightPad=Ka(r),this.padWidth=a,this.preserveShort=o}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const s=this.getPadWidth(t);return Math.max(0,e+2*s-t+1)}createNGrams(e,t,s,r,a,o){for(let i=0;i<a;++i){const u=this.getPadWidth(o),c=Math.max(0,u-i),l=Math.max(0,u-(a-(i+1))),d=o-(c+l),h=t+(c>0?0:i-u);let p=0;p+=c*this.leftPad.length;for(let b=0;b<d;++b)p+=e[h+b].length;p+=l*this.rightPad.length;const f=c+l+d-1;p+=f*this.separator.length,s[r+i]=new Uint8Array(p);const m=s[r+i];let g=0;const y=b=>b.forEach(x=>m[g++]=x);for(let b=0;b<c;++b)y(this.leftPad),y(this.separator);for(let b=0;b<d-1;++b)y(e[h+b]),y(this.separator);if(d>0){y(e[h+d-1]);for(let b=0;b<l;++b)y(this.separator),y(this.rightPad)}else{for(let b=0;b<l-1;++b)y(this.rightPad),y(this.separator);y(this.rightPad)}}}compute(e,t){const s=e.length,r=t.length;if(r>0){let u=t[0];if(u!==0)throw new Error(`First split value must be 0, got ${u}`);for(let c=1;c<r;++c){let l=t[c]>=u;if(l=l&&t[c]<=s,!l)throw new Error(`Invalid split value ${t[c]}, must be in [${u}, ${s}]`);u=t[c]}if(u!==s)throw new Error(`Last split value must be data size. Expected ${s}, got ${u}`)}const a=r-1,o=Ht("int32",r);if(s===0||r===0){const u=new Array(s);for(let c=0;c<=a;++c)o[c]=0;return[u,o]}o[0]=0;for(let u=1;u<=a;++u){const c=t[u]-t[u-1];let l=0;this.nGramWidths.forEach(d=>{l+=this.getNumNGrams(c,d)}),this.preserveShort&&c>0&&l===0&&(l=1),o[u]=o[u-1]+l}const i=new Array(o[a]);for(let u=0;u<a;++u){const c=t[u];let l=o[u];if(this.nGramWidths.forEach(d=>{const h=t[u+1]-t[u],p=this.getNumNGrams(h,d);this.createNGrams(e,c,i,l,p,d),l+=p}),this.preserveShort&&l===o[u]){const d=t[u+1]-t[u];if(d===0)continue;const h=d+2*this.padWidth;this.createNGrams(e,c,i,l,1,h)}}return[i,o]}}function k0(n,e,t,s,r,a,o,i){return new l5(t,s,r,a,o,i).compute(n,e)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c5(n,e,t,s){if(!n.length)return;if(e.length===0){for(let a=0;a<n.length;++a)s.push(n.subarray(a,a+1));return}if(e.length===1){const a=e[0];let o=n.indexOf(a);for(;o!==-1;){const i=n.subarray(0,o);(!t||i.length!==0)&&s.push(i),n=n.subarray(o+1),o=n.indexOf(a)}(!t||n.length!==0)&&s.push(n);return}let r=0;for(let a=0;a<n.length+1;a++)if(a===n.length||e.indexOf(n[a])!==-1){const o=n.subarray(r,a);(!t||o.length!==0)&&s.push(o),r=a+1}}function N0(n,e,t){const s=n.length,r=[];let a=0,o=0;const i=new Array(s);for(let h=0;h<s;++h){const p=r.length;c5(n[h],e,t,r);const f=r.length-p;i[h]=f,a+=f,o=Math.max(o,f)}const u=Ht("int32",a*2),c=new Array(a),l=[s,o];let d=0;for(let h=0;h<s;++h)for(let p=0;p<i[h];++p)u[d*2]=h,u[d*2+1]=p,c[d]=r[d],++d;return[u,c,l]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C0(n,e){const t=Ht("int32",n.length);for(let s=0;s<n.length;++s)t[s]=NL(n[s]).modulo(e).getLowBitsUnsigned();return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _2=Yt((n,e)=>n-e),d5=y0((n,e,t,s)=>({real:n-t,imag:e-s})),T0=gn(Yl,_2,d5),h5={kernelName:Yl,backendName:"cpu",kernelFunc:T0};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E2(n,e){const t=new Array(n.rank);for(let r=0;r<t.length;r++)t[r]=n.shape[r]*e[r];const s=He(t,n.dtype);for(let r=0;r<s.values.length;++r){const a=s.indexToLoc(r),o=new Array(n.rank);for(let u=0;u<o.length;u++)o[u]=a[u]%n.shape[u];const i=n.locToIndex(o);s.values[r]=n.values[i]}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $c=(n,e)=>{const t=e.value-n.value;return t===0?n.index-e.index:t};function A2(n,e,t=0,s=n.length-1){for(;s>t;){if(s-t>600){const i=s-t+1,u=e-t+1,c=Math.log(i),l=.5*Math.exp(2*c/3),d=.5*Math.sqrt(c*l*(i-l)/i)*Math.sign(u-i/2),h=Math.max(t,Math.floor(e-u*l/i+d)),p=Math.min(s,Math.floor(e+(i-u)*l/i+d));A2(n,e,h,p)}const r=n[e];let a=t,o=s;for(ji(n,t,e),$c(n[s],r)>0&&ji(n,t,s);a<o;){for(ji(n,a,o),a++,o--;$c(n[a],r)<0;)a=a+1;for(;$c(n[o],r)>0;)o=o-1}$c(n[t],r)===0?ji(n,t,o):(o=o+1,ji(n,o,s)),o<=e&&(t=o+1),e<=o&&(s=o-1)}}function D2(n,e,t,s,r){const a=e[e.length-1],[o,i]=[n.length/a,a],u=Cn(t,o*s),c=Cn("int32",o*s);for(let d=0;d<o;d++){const h=d*i,p=n.subarray(h,h+i);let f=new Array(p.length);p.forEach((b,x)=>f[x]={value:b,index:x}),s<f.length&&(A2(f,s),f=f.slice(0,s)),r&&f.sort($c);const m=d*s,g=u.subarray(m,m+s),y=c.subarray(m,m+s);for(let b=0;b<s;b++)g[b]=f[b].value,y[b]=f[b].index}const l=e.slice();return l[l.length-1]=s,[He(l,t,u),He(l,"int32",c)]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $0(n,e,t,s){const r=ze(e,t)[0],a=[1,t[0],1];for(let f=0;f<r;f++)a[0]*=t[f];a[1]=t[r];for(let f=r+1;f<t.length;f++)a[2]*=t[f];const o=new Map,i=new Int32Array(t[r]),u=new dn(a,s,n),c=[],l=a[0]===1&&a[2]===1;for(let f=0;f<t[r];f++){let m;if(l)m=n[f].toString();else{const y=[];for(let b=0;b<a[0];b++)for(let x=0;x<a[2];x++)y.push(u.get(b,f,x));m=y.join(",")}const g=o.get(m);if(g!=null)i[f]=g;else{const y=o.size;o.set(m,y),i[f]=y,c.push(f)}}const d=a.slice();d[1]=o.size;const h=new dn(d,s);c.forEach((f,m)=>{for(let g=0;g<a[0];g++)for(let y=0;y<a[2];y++)h.set(u.get(g,f,y),g,m,y)});const p=t.slice();return p[r]=d[1],{outputValues:h.values,outputShape:p,indices:i}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p5=Object.freeze(Object.defineProperty({__proto__:null,addImpl:K$,bincountImpl:b0,bincountReduceImpl:X$,bitwiseAndImpl:Y$,castImpl:q$,ceilImpl:Z$,concatImpl:x0,equalImpl:J$,expImpl:e2,expm1Impl:n2,floorDivImpl:r2,floorImpl:s2,gatherNdImpl:a2,gatherV2Impl:o2,greaterEqualImpl:u2,greaterImpl:i2,lessEqualImpl:c2,lessImpl:l2,linSpaceImpl:d2,logImpl:h2,maxImpl:p2,maximumImpl:f2,minimumImpl:m2,multiplyImpl:w0,negImpl:g2,notEqualImpl:y2,prodImpl:b2,raggedGatherImpl:x2,raggedRangeImpl:w2,raggedTensorToTensorImpl:v2,rangeImpl:I0,rsqrtImpl:I2,scatterImpl:Bo,sigmoidImpl:QK,simpleAbsImpl:j$,sliceImpl:Pf,sparseFillEmptyRowsImpl:k2,sparseReshapeImpl:N2,sparseSegmentReductionImpl:S0,sqrtImpl:n5,squaredDifferenceImpl:C2,staticRegexReplaceImpl:T2,stridedSliceImpl:$2,stringNGramsImpl:k0,stringSplitImpl:N0,stringToHashBucketFastImpl:C0,subImpl:_2,tileImpl:E2,topKImpl:D2,transposeImpl:v0,uniqueImpl:$0},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Rx("cpu",()=>new Bg,1);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R2=xt(nl,n=>n>=0?n:Math.exp(n)-1),f5={kernelName:nl,backendName:"cpu",kernelFunc:R2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O2(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{alpha:a}=s;Ce([r],"leakyRelu");const o=U(r.shape),i=t.data.get(r.dataId).values,u=Cn("float32",o);for(let c=0;c<i.length;c++)u[c]=i[c]<0?a*i[c]:i[c];return t.makeTensorInfo(r.shape,"float32",u)}const m5={kernelName:fl,backendName:"cpu",kernelFunc:O2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g5=Yt((n,e)=>n<0?e*n:n);function F2(n){const{inputs:e,backend:t}=n,{x:s,alpha:r}=e;Ce([s,r],"prelu");const a=t.data.get(s.dataId).values,o=t.data.get(r.dataId).values,[i,u]=g5(s.shape,r.shape,a,o,"float32");return t.makeTensorInfo(u,"float32",i)}const y5={kernelName:El,backendName:"cpu",kernelFunc:F2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P2=xt(Rl,n=>Math.max(0,n)),b5={kernelName:Rl,backendName:"cpu",kernelFunc:P2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L2=xt(Pl,n=>Math.min(Math.max(0,n),6)),x5={kernelName:Pl,backendName:"cpu",kernelFunc:L2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lf(n,e,t,s,r){if(t==="linear")return Zr({inputs:{x:e},backend:n});if(t==="relu")return P2({inputs:{x:e},backend:n});if(t==="elu")return R2({inputs:{x:e},backend:n});if(t==="relu6")return L2({inputs:{x:e},backend:n});if(t==="prelu")return F2({inputs:{x:e,alpha:s},backend:n});if(t==="leakyrelu")return O2({inputs:{x:e},backend:n,attrs:{alpha:r}});if(t==="sigmoid")return S2({inputs:{x:e},backend:n});throw new Error(`Activation ${t} has not been implemented for the CPU backend.`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _t(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{shape:a}=s,o=U(r.shape),i=gx(a,o),u=U(i);_(o===u,()=>`The new shape (${i}) has ${u} elements and the old shape (${r.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`),t.incRef(r.dataId);const c=t.data.get(r.dataId);if(c.complexTensorInfos!=null){const l=c.complexTensorInfos.real,d=c.complexTensorInfos.imag;l.shape=i,d.shape=i}return{dataId:r.dataId,shape:i,dtype:r.dtype}}const w5={kernelName:Ah,backendName:"cpu",kernelFunc:_t};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M2(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:a}=e,{transposeA:o,transposeB:i}=s;Ce([r,a],"matMul");const u=r.shape.length,c=a.shape.length,l=o?r.shape[u-2]:r.shape[u-1],d=i?a.shape[c-1]:a.shape[c-2],h=o?r.shape[u-1]:r.shape[u-2],p=i?a.shape[c-2]:a.shape[c-1],f=r.shape.slice(0,-2),m=a.shape.slice(0,-2),g=U(f),y=U(m),x=Me(r.shape.slice(0,-2),a.shape.slice(0,-2)).concat([h,p]);_(l===d,()=>`Error in matMul: inner shapes (${l}) and (${d}) of Tensors with shapes ${r.shape} and ${a.shape} and transposeA=${o} and transposeB=${i} must match.`);const w=o?[g,l,h]:[g,h,l],v=i?[y,p,d]:[y,d,p],S=_t({inputs:{x:r},backend:t,attrs:{shape:w}}),N=_t({inputs:{x:a},backend:t,attrs:{shape:v}}),$=o?S.shape[1]:S.shape[2],T=o?S.shape[2]:S.shape[1],C=i?N.shape[1]:N.shape[2],k=Math.max(g,y),A=t.data.get(S.dataId).values,D=t.data.get(N.dataId).values,R=ve(S.shape),F=ve(N.shape),[z,H,P]=o?[R[0],1,R[1]]:[R[0],R[1],1],[G,X,Z]=i?[1,F[1],F[0]]:[F[1],1,F[0]],ne=T*C,te=He([k,T,C],S.dtype),ae=te.values,oe=t.blockSize;for(let pe=0;pe<k;pe++){const Ie=pe%g,me=pe%y;for(let Se=0;Se<T;Se+=oe){const Pe=Math.min(Se+oe,T);for(let Be=0;Be<C;Be+=oe){const qe=Math.min(Be+oe,C);for(let ot=0;ot<$;ot+=oe){const et=Math.min(ot+oe,$);for(let Ze=Se;Ze<Pe;Ze++)for(let Le=Be;Le<qe;Le++){let ft=0;for(let ht=ot;ht<et;ht++){const En=A[Ie*z+Ze*H+ht*P],It=D[ht*G+Le*X+me*Z];ft+=En*It}ae[pe*ne+(Ze*C+Le)]+=ft}}}}}return t.disposeIntermediateTensorInfo(S),t.disposeIntermediateTensorInfo(N),t.makeTensorInfo(x,te.dtype,te.values)}const v5={kernelName:Gu,backendName:"cpu",kernelFunc:M2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I5(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:a,bias:o,preluActivationWeights:i}=e,{transposeA:u,transposeB:c,activation:l,leakyreluAlpha:d}=s;let h,p,f;const m=[];h=M2({inputs:{a:r,b:a},attrs:{transposeA:u,transposeB:c},backend:t}),o&&(p=ku({inputs:{a:h,b:o},backend:t}),m.push(h),h=p),l&&(f=Lf(t,h,l,i,d),m.push(h),h=f);for(const y of m)t.disposeIntermediateTensorInfo(y);return h}const S5={kernelName:mu,backendName:"cpu",kernelFunc:I5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k5=xt(Fu,n=>Math.acos(n)),N5={kernelName:Fu,backendName:"cpu",kernelFunc:k5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C5=xt(Pu,n=>Math.acosh(n)),T5={kernelName:Pu,backendName:"cpu",kernelFunc:C5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $5(n){const{inputs:e,backend:t}=n,s=e;Ce(e,"addN");const r=s.map(i=>t.data.get(i.dataId).values),a=He(s[0].shape,s[0].dtype),o=a.values;for(let i=0;i<s.length;i++){const u=r[i];for(let c=0;c<o.length;c++)o[c]+=u[c]}return t.makeTensorInfo(a.shape,a.dtype,a.values)}const _5={kernelName:Lu,backendName:"cpu",kernelFunc:$5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E5(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:a,keepDims:o}=s;Ce(r,"all");const i=ze(a,r.shape);let u=i;const c=At(u,r.shape.length);let l=r;c!=null&&(l=is({inputs:{x:r},backend:t,attrs:{perm:c}}),u=Ct(u.length,r.shape.length)),Et("all",u,l.shape.length);const[d,h]=Rt(l.shape,u),p=U(h),f=Ln(U(d),l.dtype),m=t.data.get(l.dataId).values;for(let y=0;y<f.length;++y){const b=y*p;let x=m[b];for(let w=0;w<p;++w){const v=m[b+w];x=x&&v}f[y]=x}c!=null&&t.disposeIntermediateTensorInfo(l);const g=t.makeTensorInfo(d,l.dtype,f);if(o){const y=wt(d,i),b=_t({inputs:{x:g},backend:t,attrs:{shape:y}});return t.disposeIntermediateTensorInfo(g),b}return g}const A5={kernelName:Kd,backendName:"cpu",kernelFunc:E5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D5(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:a,keepDims:o}=s;Ce(r,"any");const i=ze(a,r.shape);let u=i;const c=At(u,r.shape.length);let l=r;c!=null&&(l=is({inputs:{x:r},backend:t,attrs:{perm:c}}),u=Ct(u.length,r.shape.length)),Et("any",u,l.shape.length);const[d,h]=Rt(l.shape,u),p=U(h),f=Ln(U(d),l.dtype),m=t.data.get(l.dataId).values;for(let y=0;y<f.length;++y){const b=y*p;let x=m[b];for(let w=0;w<p;++w){const v=m[b+w];x=x||v}f[y]=x}c!=null&&t.disposeIntermediateTensorInfo(l);const g=t.makeTensorInfo(d,l.dtype,f);if(o){const y=wt(d,i),b=_t({inputs:{x:g},backend:t,attrs:{shape:y}});return t.disposeIntermediateTensorInfo(g),b}return g}const R5={kernelName:Xd,backendName:"cpu",kernelFunc:D5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O5(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:a}=s;Ce(r,"argMax");let o=ze(a,r.shape);const i=At(o,r.shape.length);let u=r;const c=[];i!=null&&(u=is({inputs:{x:r},backend:t,attrs:{perm:i}}),c.push(u),o=Ct(o.length,u.shape.length)),o=[o[0]],Et("argMax",o,u.shape.length);const[l,d]=Rt(u.shape,o),h=U(l),p=Ln(h,"int32"),f=U(d),m=t.data.get(u.dataId).values;for(let g=0;g<p.length;++g){const y=g*f;let b=m[y],x=0;for(let w=0;w<f;++w){const v=m[y+w];v>b&&(b=v,x=w)}p[g]=x}return c.forEach(g=>t.disposeIntermediateTensorInfo(g)),t.makeTensorInfo(l,"int32",p)}const F5={kernelName:Yd,backendName:"cpu",kernelFunc:O5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P5(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:a}=s;Ce(r,"argMin");let o=ze(a,r.shape);const i=At(o,r.shape.length);let u=r;const c=[];i!=null&&(u=is({inputs:{x:r},backend:t,attrs:{perm:i}}),c.push(u),o=Ct(o.length,u.shape.length)),o=[o[0]],Et("argMin",o,u.shape.length);const[l,d]=Rt(u.shape,o),h=U(l),p=Ln(h,"int32"),f=U(d),m=t.data.get(u.dataId).values;for(let g=0;g<p.length;++g){const y=g*f;let b=m[y],x=0;for(let w=0;w<f;++w){const v=m[y+w];v<b&&(b=v,x=w)}p[g]=x}return c.forEach(g=>t.disposeIntermediateTensorInfo(g)),t.makeTensorInfo(l,"int32",p)}const L5={kernelName:Zd,backendName:"cpu",kernelFunc:P5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M5=xt(Mu,n=>Math.asin(n)),B5={kernelName:Mu,backendName:"cpu",kernelFunc:M5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z5=xt(Bu,n=>Math.asinh(n)),V5={kernelName:Bu,backendName:"cpu",kernelFunc:z5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W5=xt(zu,n=>Math.atan(n)),U5={kernelName:zu,backendName:"cpu",kernelFunc:W5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const G5=Yt((n,e)=>Math.atan2(n,e)),H5=gn(Wu,G5),j5={kernelName:Wu,backendName:"cpu",kernelFunc:H5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q5=xt(Vu,n=>Math.atanh(n)),K5={kernelName:Vu,backendName:"cpu",kernelFunc:q5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _0(n,e,t,s,r,a){const o=r.strideHeight,i=r.strideWidth,u=r.dilationHeight,c=r.dilationWidth,l=r.effectiveFilterHeight,d=r.effectiveFilterWidth,h=r.padInfo.top,p=r.padInfo.left,f=a==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=He(r.outShape,t),g=m.values,y=r.outShape[1]*r.outShape[2]*r.outShape[3],b=r.outShape[2]*r.outShape[3],x=r.outShape[3];for(let w=0;w<r.batchSize;++w){const v=w*y,S=w*s[0];for(let N=0;N<r.inChannels;++N)for(let $=0;$<r.outHeight;++$){const T=$*o-h,C=Math.max(0,T),k=Math.min(r.inHeight,l+T),A=v+$*b;for(let D=0;D<r.outWidth;++D){const R=D*i-p,F=Math.max(0,R),z=Math.min(r.inWidth,d+R);let H=f,P=0,G=0;for(let Z=C;Z<k;Z+=u){const ne=S+Z*s[1];for(let te=F;te<z;te+=c){const ae=ne+te*s[2],oe=n[ae+N];a==="max"&&oe>H?H=oe:a==="avg"&&(P+=oe,G++)}if(isNaN(H))break}const X=A+D*x+N;g[X]=a==="avg"?P/G:H}}}return m}function B2(n,e,t,s,r=!1,a=!1){const o=He(s.outShape,"int32"),i=s.strideHeight,u=s.strideWidth,c=s.dilationHeight,l=s.dilationWidth,d=s.effectiveFilterHeight,h=s.effectiveFilterWidth,p=s.padInfo.top,f=s.padInfo.left,m=He(e,t,n);for(let g=0;g<s.batchSize;++g)for(let y=0;y<s.inChannels;++y)for(let b=0;b<s.outHeight;++b){const x=b*i-p;let w=x;for(;w<0;)w+=c;const v=Math.min(s.inHeight,d+x);for(let S=0;S<s.outWidth;++S){const N=S*u-f;let $=N;for(;$<0;)$+=l;const T=Math.min(s.inWidth,h+N);let C=Number.NEGATIVE_INFINITY,k=-1;for(let A=w;A<v;A+=c){const D=A-x;for(let R=$;R<T;R+=l){const F=R-N,z=m.get(g,A,R,y);z>C&&(C=z,r?k=a?((g*s.inHeight+A)*s.inWidth+R)*s.inChannels+y:(A*s.inWidth+R)*s.inChannels+y:k=D*h+F)}}o.set(k,g,b,S,y)}}return o}function z2(n,e,t,s,r,a){const o=r.strideDepth,i=r.strideHeight,u=r.strideWidth,c=r.dilationDepth,l=r.dilationHeight,d=r.dilationWidth,h=r.effectiveFilterDepth,p=r.effectiveFilterHeight,f=r.effectiveFilterWidth,m=r.padInfo.front,g=r.padInfo.top,y=r.padInfo.left,b=a==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=He(r.outShape,t),w=x.values,v=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],S=r.outShape[2]*r.outShape[3]*r.outShape[4],N=r.outShape[3]*r.outShape[4],$=r.outShape[4];for(let T=0;T<r.batchSize;++T){const C=T*v,k=T*s[0];for(let A=0;A<r.inChannels;++A)for(let D=0;D<r.outDepth;++D){const R=D*o-m;let F=R;for(;F<0;)F+=c;const z=Math.min(r.inDepth,h+R),H=C+D*S;for(let P=0;P<r.outHeight;++P){const G=P*i-g;let X=G;for(;X<0;)X+=l;const Z=Math.min(r.inHeight,p+G),ne=H+P*N;for(let te=0;te<r.outWidth;++te){const ae=te*u-y;let oe=ae;for(;oe<0;)oe+=d;const pe=Math.min(r.inWidth,f+ae),Ie=ne+te*$;let me=b,Se=0,Pe=0;for(let qe=F;qe<z;qe+=c){const ot=k+qe*s[1];for(let et=X;et<Z;et+=l){const Ze=ot+et*s[2];for(let Le=oe;Le<pe;Le+=d){const ft=Ze+Le*s[3],ht=n[ft+A];if(a==="max"&&ht>me?me=ht:a==="avg"&&(Se+=ht,Pe++),isNaN(me))break}if(isNaN(me))break}if(isNaN(me))break}const Be=Ie+A;w[Be]=a==="avg"?Se/Math.max(Pe,1):me}}}}return x}function X5(n,e){const t=He(e.outShape,"int32"),s=e.strideDepth,r=e.strideHeight,a=e.strideWidth,o=e.dilationDepth,i=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterDepth,l=e.effectiveFilterHeight,d=e.effectiveFilterWidth,h=e.padInfo.front,p=e.padInfo.top,f=e.padInfo.left;for(let m=0;m<e.batchSize;++m)for(let g=0;g<e.inChannels;++g)for(let y=0;y<e.outDepth;++y){const b=y*s-h;let x=b;for(;x<0;)x+=o;const w=Math.min(e.inDepth,c+b);for(let v=0;v<e.outHeight;++v){const S=v*r-p;let N=S;for(;N<0;)N+=i;const $=Math.min(e.inHeight,l+S);for(let T=0;T<e.outWidth;++T){const C=T*a-f;let k=C;for(;k<0;)k+=u;const A=Math.min(e.inWidth,d+C);let D=Number.NEGATIVE_INFINITY,R=-1;for(let F=x;F<w;F+=o){const z=F-b;for(let H=N;H<$;H+=i){const P=H-S;for(let G=k;G<A;G+=u){const X=G-C,Z=n.get(m,F,H,G,g);Z>=D&&(D=Z,R=z*l*d+P*l+X)}}}t.set(R,m,y,v,T,g)}}}return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y5(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e;Ce(r,"avgPool");const{filterSize:a,strides:o,pad:i,dimRoundingMode:u}=s,c=1;_(wn(o,c),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);const l=Mn(r.shape,a,o,c,i,u);let d;if(l.filterWidth===1&&l.filterHeight===1&&Qe(l.inShape,l.outShape))d=Zr({inputs:{x:r},backend:t});else{const h=t.data.get(r.dataId).values,p=ve(r.shape),f=_0(h,r.shape,r.dtype,p,l,"avg");d=t.makeTensorInfo(l.outShape,r.dtype,f.values)}return d}const Z5={kernelName:Uu,backendName:"cpu",kernelFunc:Y5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J5(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:a,strides:o,pad:i,dimRoundingMode:u,dataFormat:c}=s;Ce(r,"avgPool3d");const l=Bs(r.shape,a,o,1,i,u,c),d=t.data.get(r.dataId).values,h=z2(d,r.shape,r.dtype,ve(r.shape),l,"avg");return t.makeTensorInfo(h.shape,"float32",h.values)}const Q5={kernelName:Jd,backendName:"cpu",kernelFunc:J5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eX(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:a}=e,{filterSize:o,strides:i,pad:u,dimRoundingMode:c}=s;Ce([r,a],"avgPool3DGrad");const l=Bs(a.shape,o,i,1,u,c),d=l.strideDepth,h=l.strideHeight,p=l.strideWidth,f=l.filterDepth,m=l.filterHeight,g=l.filterWidth,y=l.dilationDepth,b=l.dilationHeight,x=l.dilationWidth,w=l.effectiveFilterDepth,v=l.effectiveFilterHeight,S=l.effectiveFilterWidth,N=w-1-l.padInfo.front,$=S-1-l.padInfo.left,T=v-1-l.padInfo.top,C=He(a.shape,"float32"),k=1/(f*m*g),A=t.bufferSync(r);for(let D=0;D<l.batchSize;++D)for(let R=0;R<l.inChannels;++R)for(let F=0;F<l.inDepth;++F)for(let z=0;z<l.inHeight;++z)for(let H=0;H<l.inWidth;++H){const P=F-N,G=z-T,X=H-$;let Z=0;for(let ne=0;ne<w;ne+=y){const te=(P+ne)/d;if(!(te<0||te>=l.outDepth||Math.floor(te)!==te))for(let ae=0;ae<v;ae+=b){const oe=(G+ae)/h;if(!(oe<0||oe>=l.outHeight||Math.floor(oe)!==oe))for(let pe=0;pe<S;pe+=x){const Ie=(X+pe)/p;if(Ie<0||Ie>=l.outWidth||Math.floor(Ie)!==Ie)continue;const me=A.get(D,te,oe,Ie,R);Z+=me}}}C.set(Z*k,D,F,z,H,R)}return t.makeTensorInfo(C.shape,C.dtype,C.values)}const tX={kernelName:Cm,backendName:"cpu",kernelFunc:eX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nX(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:a}=e,o=a;Ce([r,a],"avgPoolGrad");const{filterSize:i,strides:u,pad:c}=s,l=Mn(o.shape,i,u,1,c),d=l.strideHeight,h=l.strideWidth,p=l.filterHeight,f=l.filterWidth,m=l.dilationHeight,g=l.dilationWidth,y=l.effectiveFilterHeight,b=l.effectiveFilterWidth,x=b-1-l.padInfo.left,w=y-1-l.padInfo.top,v=He(o.shape,"float32"),S=1/(p*f),N=t.data.get(r.dataId).values,$=He(r.shape,"float32",N);for(let T=0;T<l.batchSize;++T)for(let C=0;C<l.inChannels;++C)for(let k=0;k<l.inHeight;++k)for(let A=0;A<l.inWidth;++A){const D=k-w,R=A-x;let F=0;for(let z=0;z<y;z+=m){const H=(D+z)/d;if(!(H<0||H>=l.outHeight||Math.floor(H)!==H))for(let P=0;P<b;P+=g){const G=(R+P)/h;if(G<0||G>=l.outWidth||Math.floor(G)!==G)continue;const X=$.get(T,H,G,C);F+=X}}v.set(F*S,T,k,A,C)}return t.makeTensorInfo(v.shape,v.dtype,v.values)}const sX={kernelName:Nm,backendName:"cpu",kernelFunc:nX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rX(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,scale:a,offset:o,mean:i,variance:u}=e;_(i.shape.length===u.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),_(o==null||i.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),_(a==null||i.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),Ce([r,i,u,a,o],"batchNorm");let{varianceEpsilon:c}=s;c==null&&(c=.001);const l=t.data.get(r.dataId).values,d=t.data.get(i.dataId).values,h=t.data.get(u.dataId).values,p=a?t.data.get(a.dataId).values:new Float32Array([1]),f=o?t.data.get(o.dataId).values:new Float32Array([0]),m=new Float32Array(l.length),g=f.length,y=p.length,b=h.length,x=d.length;let w=0,v=0,S=0,N=0;for(let $=0;$<l.length;++$)m[$]=f[w++]+(l[$]-d[v++])*p[S++]/Math.sqrt(h[N++]+c),w>=g&&(w=0),v>=x&&(v=0),S>=y&&(S=0),N>=b&&(N=0);return t.makeTensorInfo(r.shape,r.dtype,m)}const aX={kernelName:ul,backendName:"cpu",kernelFunc:rX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oX(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:a,crops:o}=s;Ce([r],"batchToSpaceND");const i=a.reduce((y,b)=>y*b),u=Si(r.shape,a,i),c=ki(u.length,a.length),l=Ni(r.shape,a,i),d=Sg(o,a.length),h=kg(l,o,a.length),p=_t({inputs:{x:r},backend:t,attrs:{shape:u}}),f=is({inputs:{x:p},backend:t,attrs:{perm:c}}),m=_t({inputs:{x:f},backend:t,attrs:{shape:l}}),g=ii({inputs:{x:m},backend:t,attrs:{begin:d,size:h}});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(m),g}const iX={kernelName:Qd,backendName:"cpu",kernelFunc:oX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uX(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,weights:a}=e,{size:o}=s,i=t.data.get(r.dataId).values,u=t.data.get(a.dataId).values,c=b0(i,u,a.dtype,a.shape,o);return t.makeTensorInfo([o],a.dtype,c)}const lX={kernelName:eh,backendName:"cpu",kernelFunc:uX};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cX(n){const{inputs:e,backend:t}=n,{s0:s,s1:r}=e,a=t.data.get(s.dataId).values,o=t.data.get(r.dataId).values,i=Me(Array.from(a),Array.from(o));return t.makeTensorInfo([i.length],"int32",Int32Array.from(i))}const dX={kernelName:Tm,backendName:"cpu",kernelFunc:cX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hX=xt(gi,(n,e)=>{const t=e;return n>t.clipValueMax?t.clipValueMax:n<t.clipValueMin?t.clipValueMin:n}),pX={kernelName:gi,backendName:"cpu",kernelFunc:hX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fX=n=>{const{x:e}=n.inputs,t=n.backend,s=new Float32Array(U(e.shape)),r=t.data.get(e.dataId),a=r.complexTensorInfos.real,o=r.complexTensorInfos.imag,i=t.data.get(a.dataId).values,u=t.data.get(o.dataId).values;for(let c=0;c<i.length;c++){const l=i[c],d=u[c];s[c]=Math.hypot(l,d)}return t.makeOutput(s,e.shape,"float32")},mX={kernelName:$m,backendName:"cpu",kernelFunc:fX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nu(n){const{inputs:e,backend:t}=n,{input:s}=e,r=t.data.get(s.dataId).complexTensorInfos.imag,a=t.data.get(r.dataId).values;return t.makeTensorInfo(r.shape,r.dtype,a)}const gX={kernelName:Cx,backendName:"cpu",kernelFunc:Nu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cu(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s,a=ze(r,e[0].shape)[0],o=e.map(m=>m.shape);wg(o,a);let i=Fs(e.map(m=>m.shape),a);if(U(i)===0)return t.makeTensorInfo(i,e[0].dtype,[]);const u=e.filter(m=>U(m.shape)>0);if(u.length===1)return Zr({inputs:{x:u[0]},backend:t});if(u[0].dtype==="complex64"){const m=u.map(w=>oi({inputs:{input:w},backend:t})),g=u.map(w=>Nu({inputs:{input:w},backend:t})),y=Cu({inputs:m,backend:t,attrs:{axis:a}}),b=Cu({inputs:g,backend:t,attrs:{axis:a}}),x=ms({inputs:{real:y,imag:b},backend:t});return m.forEach(w=>t.disposeIntermediateTensorInfo(w)),g.forEach(w=>t.disposeIntermediateTensorInfo(w)),t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(b),x}const c=u.map(m=>{const y=[-1,U(m.shape.slice(a))];return _t({inputs:{x:m},backend:t,attrs:{shape:y}})}),l=c.map(m=>({vals:t.data.get(m.dataId).values,shape:m.shape}));i=Fs(c.map(m=>m.shape),1);const d=c[0].shape[0]===1,h=x0(l,i,e[0].dtype,d),p=Fs(u.map(m=>m.shape),a),f=t.makeTensorInfo(p,e[0].dtype,h);return c.forEach(m=>t.disposeIntermediateTensorInfo(m)),f}const yX={kernelName:nh,backendName:"cpu",kernelFunc:Cu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V2(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:a}=e,{strides:o,pad:i,dataFormat:u,dilations:c,dimRoundingMode:l}=s;Ce([r,a],"conv2d");const d=Tr(u),h=Vt(r.shape,a.shape,o,c,i,l,!1,d),p=h.filterHeight,f=h.filterWidth,m=h.dilationHeight,g=h.dilationWidth,y=h.padInfo.left,b=h.padInfo.top,x=h.dataFormat==="channelsLast",w=new dn(h.outShape,r.dtype),v=ve(r.shape),S=ve(a.shape),N=v[0],$=x?v[1]:v[2],T=x?v[2]:1,C=x?1:v[1],k=w.strides[0],A=x?w.strides[1]:w.strides[2],D=x?w.strides[2]:1,R=x?1:w.strides[1],F=t.data.get(r.dataId).values,z=t.data.get(a.dataId).values,H=w.values;for(let P=0;P<h.batchSize;++P){const G=P*N,X=P*k;for(let Z=0;Z<h.outHeight;++Z){const ne=X+Z*A,te=Z*h.strideHeight-b;for(let ae=0;ae<p;++ae){const oe=te+ae*m;if(oe<0||oe>=h.inHeight)continue;const pe=ae*S[0],Ie=G+oe*$;for(let me=0;me<h.outWidth;++me){const Se=ne+me*D,Pe=me*h.strideWidth-y;for(let Be=0;Be<f;++Be){const qe=Pe+Be*g;if(qe<0||qe>=h.inWidth)continue;const ot=pe+Be*S[1],et=Ie+qe*T;let Ze=ot;for(let Le=0;Le<h.inChannels;++Le){const ft=F[et+Le*C];for(let ht=0;ht<h.outChannels;++ht)H[Se+ht*R]+=ft*z[Ze+ht];Ze+=h.outChannels}}}}}}return t.makeTensorInfo(w.shape,w.dtype,H)}const bX={kernelName:qu,backendName:"cpu",kernelFunc:V2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xX(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:a}=e,{strides:o,pad:i,dataFormat:u,dimRoundingMode:c,filterShape:l}=s;Ce([r,a],"conv2dBackpropFilter");const d=Tr(u),h=Vt(r.shape,l,o,1,i,c,!1,d),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=h,y=h.dataFormat==="channelsLast",b=new dn(h.filterShape,"float32"),x=h.padInfo.left,w=h.padInfo.top,v=t.data.get(r.dataId).values,S=t.data.get(a.dataId).values,N=new dn(r.shape,r.dtype,v),$=new dn(a.shape,a.dtype,S);for(let T=0;T<m;++T){const C=Math.max(0,Math.ceil((w-T)/p)),k=Math.min(h.outHeight,(h.inHeight+w-T)/p);for(let A=0;A<g;++A){const D=Math.max(0,Math.ceil((x-A)/f)),R=Math.min(h.outWidth,(h.inWidth+x-A)/f);for(let F=0;F<h.inChannels;++F)for(let z=0;z<h.outChannels;++z){let H=0;for(let P=0;P<h.batchSize;++P)for(let G=C;G<k;++G){const X=T+G*p-w;for(let Z=D;Z<R;++Z){const ne=A+Z*f-x;y?H+=N.get(P,X,ne,F)*$.get(P,G,Z,z):H+=N.get(P,F,X,ne)*$.get(P,z,G,Z)}}b.set(H,T,A,F,z)}}}return t.makeTensorInfo(b.shape,b.dtype,b.values)}const wX={kernelName:wx,backendName:"cpu",kernelFunc:xX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vX(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:a}=e,{inputShape:o,strides:i,pad:u,dataFormat:c,dimRoundingMode:l}=s;Ce([r,a],"conv2dBackpropInput");const d=ve(a.shape),h=ve(r.shape);let p=Tr(c);const f=Vt(o,a.shape,i,1,u,l,!1,p),m=new dn(f.inShape,"float32"),g=m.values,y=t.data.get(r.dataId).values,b=t.data.get(a.dataId).values,[x,w,v]=d,{batchSize:S,filterHeight:N,filterWidth:$,inChannels:T,inHeight:C,inWidth:k,outChannels:A,outHeight:D,outWidth:R,strideHeight:F,strideWidth:z}=f;p=f.dataFormat;const H=N-1-f.padInfo.top,P=$-1-f.padInfo.left,G=p==="channelsLast",X=m.strides[0],Z=G?m.strides[1]:m.strides[2],ne=G?m.strides[2]:1,te=G?1:m.strides[1],ae=h[0],oe=G?h[1]:h[2],pe=G?h[2]:1,Ie=G?1:h[1];for(let me=0;me<S;++me)for(let Se=0;Se<T;++Se)for(let Pe=0;Pe<C;++Pe){const Be=Pe-H,qe=Math.max(0,Math.ceil(Be/F)),ot=Math.min(D,(N+Be)/F);for(let et=0;et<k;++et){const Ze=et-P,Le=Math.max(0,Math.ceil(Ze/z)),ft=Math.min(R,($+Ze)/z);let ht=0;for(let It=qe;It<ot;++It){const Vn=It*F-Be;for(let sn=Le;sn<ft;++sn){const ls=sn*z-Ze,An=ae*me+oe*It+pe*sn,Wn=x*(N-1-Vn)+w*($-1-ls)+v*Se;for(let Yn=0;Yn<A;++Yn){const Zt=y[An+Ie*Yn],Jt=b[Wn+Yn];ht+=Zt*Jt}}}const En=X*me+Z*Pe+ne*et+te*Se;g[En]=ht}}return t.makeTensorInfo(m.shape,m.dtype,m.values)}const IX={kernelName:Ku,backendName:"cpu",kernelFunc:vX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SX(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:a}=e,{strides:o,pad:i,dilations:u}=s;Ce([r,a],"conv3d");const c=Cr(r.shape,a.shape,o,u,i),{filterDepth:l,filterHeight:d,filterWidth:h,dilationDepth:p,dilationHeight:f,dilationWidth:m,padInfo:g}=c,y=g.front,b=g.left,x=g.top,w=new dn(c.outShape,r.dtype),v=t.data.get(r.dataId).values,S=t.data.get(a.dataId).values,N=w.values,$=ve(r.shape),T=ve(a.shape);for(let C=0;C<c.batchSize;++C){const k=C*$[0],A=C*w.strides[0];for(let D=0;D<c.outDepth;++D){const R=A+D*w.strides[1],F=D*c.strideDepth-y;for(let z=0;z<l;++z){const H=F+z*p;if(H<0||H>=c.inDepth)continue;const P=z*T[0],G=k+H*$[1];for(let X=0;X<c.outHeight;++X){const Z=R+X*w.strides[2],ne=X*c.strideHeight-x;for(let te=0;te<d;++te){const ae=ne+te*f;if(ae<0||ae>=c.inHeight)continue;const oe=P+te*T[1],pe=G+ae*$[2];for(let Ie=0;Ie<c.outWidth;++Ie){const me=Z+Ie*c.outChannels,Se=Ie*c.strideWidth-b;for(let Pe=0;Pe<h;++Pe){const Be=Se+Pe*m;if(Be<0||Be>=c.inWidth)continue;const qe=oe+Pe*T[2],ot=pe+Be*c.inChannels;let et=qe;for(let Ze=0;Ze<c.inChannels;++Ze){const Le=v[ot+Ze];for(let ft=0;ft<c.outChannels;++ft)N[me+ft]+=Le*S[et+ft];et+=c.outChannels}}}}}}}}return t.makeTensorInfo(w.shape,w.dtype,w.values)}const kX={kernelName:Xu,backendName:"cpu",kernelFunc:SX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NX(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:a}=e,{strides:o,pad:i,filterShape:u}=s;Ce([r,a],"conv3dBackpropFilterV2");const c=ve(r.shape),l=ve(a.shape),d=Cr(r.shape,u,o,1,i),h=d.strideDepth,p=d.strideHeight,f=d.strideWidth,m=d.filterDepth,g=d.filterHeight,y=d.filterWidth,b=new dn(d.filterShape,"float32"),x=b.values,[w,v,S,N]=b.strides,$=t.data.get(a.dataId).values,[T,C,k,A]=l,D=t.data.get(r.dataId).values,[R,F,z,H]=c,P=d.padInfo.front,G=d.padInfo.left,X=d.padInfo.top;for(let Z=0;Z<m;++Z){const ne=Math.max(0,Math.ceil((P-Z)/h)),te=Math.min(d.outDepth,(d.inDepth+P-Z)/h),ae=Z*w;for(let oe=0;oe<g;++oe){const pe=Math.max(0,Math.ceil((X-oe)/p)),Ie=Math.min(d.outHeight,(d.inHeight+X-oe)/p),me=oe*v+ae;for(let Se=0;Se<y;++Se){const Pe=Math.max(0,Math.ceil((G-Se)/f)),Be=Math.min(d.outWidth,(d.inWidth+G-Se)/f),qe=Se*S+me;for(let ot=0;ot<d.inChannels;++ot){const et=ot*N+qe;for(let Ze=0;Ze<d.outChannels;++Ze){let Le=0;for(let ft=0;ft<d.batchSize;++ft){const ht=ft*R,En=ft*T;for(let It=ne;It<te;++It){const sn=(Z+It*h-P)*F+ht,ls=It*C+En;for(let An=pe;An<Ie;++An){const Yn=(oe+An*p-X)*z+sn,Zt=An*k+ls;for(let Jt=Pe;Jt<Be;++Jt){const sa=(Se+Jt*f-G)*H+Yn,Ts=Jt*A+Zt;Le+=D[sa+ot]*$[Ts+Ze]}}}}x[et+Ze]=Le}}}}}return t.makeTensorInfo(b.shape,b.dtype,b.values)}const CX={kernelName:sh,backendName:"cpu",kernelFunc:NX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TX(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:a}=e,{pad:o,strides:i,inputShape:u}=s;Ce([r],"conv3dBackpropInputV2");const c=ve(r.shape),l=ve(a.shape),d=Cr(u,a.shape,i,1,o),h=new dn(d.inShape,"float32"),p=h.values,[f,m,g,y]=h.strides,b=t.data.get(r.dataId).values,[x,w,v,S]=c,N=t.data.get(a.dataId).values,[$,T,C,k]=l,{batchSize:A,filterDepth:D,filterHeight:R,filterWidth:F,inChannels:z,inDepth:H,inHeight:P,inWidth:G,outChannels:X,outDepth:Z,outHeight:ne,outWidth:te,strideDepth:ae,strideHeight:oe,strideWidth:pe}=d,Ie=D-1-d.padInfo.front,me=R-1-d.padInfo.top,Se=F-1-d.padInfo.left;for(let Pe=0;Pe<A;++Pe)for(let Be=0;Be<z;++Be)for(let qe=0;qe<H;++qe){const ot=qe-Ie,et=Math.max(0,Math.ceil(ot/ae)),Ze=Math.min(Z,(D+ot)/ae);for(let Le=0;Le<P;++Le){const ft=Le-me,ht=Math.max(0,Math.ceil(ft/oe)),En=Math.min(ne,(R+ft)/oe);for(let It=0;It<G;++It){const Vn=It-Se,sn=Math.max(0,Math.ceil(Vn/pe)),ls=Math.min(te,(F+Vn)/pe);let An=0;for(let Wn=et;Wn<Ze;++Wn){const Yn=Wn*ae-ot;for(let Zt=ht;Zt<En;++Zt){const Jt=Zt*oe-ft;for(let Vs=sn;Vs<ls;++Vs){const sa=Vs*pe-Vn,Ts=x*Pe+w*Wn+v*Zt+S*Vs,$o=$*(D-1-Yn)+T*(R-1-Jt)+C*(F-1-sa)+k*Be;for(let Ws=0;Ws<X;++Ws){const _r=b[Ts+Ws],Qt=N[$o+Ws];An+=_r*Qt}}}}p[f*Pe+m*qe+g*Le+y*It+Be]=An}}}return t.makeTensorInfo(h.shape,h.dtype,h.values)}const $X={kernelName:rh,backendName:"cpu",kernelFunc:TX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _X=xt(Yu,n=>Math.cos(n)),EX={kernelName:Yu,backendName:"cpu",kernelFunc:_X};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AX=xt(Zu,n=>Math.cosh(n)),DX={kernelName:Zu,backendName:"cpu",kernelFunc:AX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RX(n){const{inputs:e,backend:t,attrs:s}=n,{image:r,boxes:a,boxInd:o}=e,{cropSize:i,method:u,extrapolationValue:c}=s,[l,d,h,p]=r.shape,f=a.shape[0],[m,g]=i,y=He([f,m,g,p],"float32"),b=t.data.get(a.dataId).values,x=t.data.get(o.dataId).values,w=t.data.get(r.dataId).values,v=ve(r.shape),S=ve(y.shape);for(let N=0;N<f;N++){const $=N*4,T=b[$],C=b[$+1],k=b[$+2],A=b[$+3],D=x[N];if(D>=l)continue;const R=m>1?(k-T)*(d-1)/(m-1):0,F=g>1?(A-C)*(h-1)/(g-1):0;for(let z=0;z<m;z++){const H=m>1?T*(d-1)+z*R:.5*(T+k)*(d-1);if(H<0||H>d-1){for(let P=0;P<g;P++)for(let G=0;G<p;G++){const X=G+P*S[2]+z*S[1]+N*S[0];y.values[X]=c}continue}if(u==="bilinear"){const P=Math.floor(H),G=Math.ceil(H),X=H-P;for(let Z=0;Z<g;Z++){const ne=g>1?C*(h-1)+Z*F:.5*(C+A)*(h-1);if(ne<0||ne>h-1){for(let pe=0;pe<p;pe++){const Ie=pe+Z*S[2]+z*S[1]+N*S[0];y.values[Ie]=c}continue}const te=Math.floor(ne),ae=Math.ceil(ne),oe=ne-te;for(let pe=0;pe<p;pe++){let Ie=pe+te*v[2]+P*v[1]+D*v[0];const me=w[Ie];Ie=pe+ae*v[2]+P*v[1]+D*v[0];const Se=w[Ie];Ie=pe+te*v[2]+G*v[1]+D*v[0];const Pe=w[Ie];Ie=pe+ae*v[2]+G*v[1]+D*v[0];const Be=w[Ie],qe=me+(Se-me)*oe,ot=Pe+(Be-Pe)*oe;Ie=pe+Z*S[2]+z*S[1]+N*S[0],y.values[Ie]=qe+(ot-qe)*X}}}else for(let P=0;P<g;++P){const G=g>1?C*(h-1)+P*F:.5*(C+A)*(h-1);if(G<0||G>h-1){for(let ne=0;ne<p;ne++){const te=ne+P*S[2]+z*S[1]+N*S[0];y.values[te]=c}continue}const X=Math.round(G),Z=Math.round(H);for(let ne=0;ne<p;ne++){const te=ne+X*v[2]+Z*v[1]+D*v[0],ae=ne+P*S[2]+z*S[1]+N*S[0];y.values[ae]=w[te]}}}}return t.makeTensorInfo(y.shape,y.dtype,y.values)}const OX={kernelName:oh,backendName:"cpu",kernelFunc:RX};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FX(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:a,exclusive:o,reverse:i}=s;Ce(r,"cumprod");const u=At([a],r.shape.length);let c=r;u!=null&&(c=is({inputs:{x:r},backend:t,attrs:{perm:u}}));const l=Ct(1,r.shape.length)[0];if(l!==c.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${l}`);const d=ws(c.dtype,"int32"),h=yx(U(c.shape),d),p=t.data.get(c.dataId).values,f=c.shape[c.shape.length-1],m=i?(y,b)=>y+f-b-1:(y,b)=>y+b;for(let y=0;y<p.length;y+=f)for(let b=0;b<f;b++){const x=m(y,b);if(b===0)h[x]=o?1:p[x];else{const w=m(y,b-1);h[x]=o?p[w]*h[w]:p[x]*h[w]}}const g=t.makeTensorInfo(c.shape,d,h);if(u!=null){const y=Qr(u),b=is({inputs:{x:g},backend:t,attrs:{perm:y}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(c),b}return g}const PX={kernelName:ah,backendName:"cpu",kernelFunc:FX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LX(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:a,exclusive:o,reverse:i}=s;Ce(r,"cumsum");const u=At([a],r.shape.length);let c=r;u!=null&&(c=is({inputs:{x:r},backend:t,attrs:{perm:u}}));const l=Ct(1,r.shape.length)[0];if(l!==c.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${l}`);const d=ws(c.dtype,"int32"),h=Ln(U(c.shape),d),p=t.data.get(c.dataId).values,f=c.shape[c.shape.length-1],m=i?(y,b)=>y+f-b-1:(y,b)=>y+b;for(let y=0;y<p.length;y+=f)for(let b=0;b<f;b++){const x=m(y,b);if(b===0)h[x]=o?0:p[x];else{const w=m(y,b-1);h[x]=o?p[w]+h[w]:p[x]+h[w]}}const g=t.makeTensorInfo(c.shape,d,h);if(u!=null){const y=Qr(u),b=is({inputs:{x:g},backend:t,attrs:{perm:y}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(c),b}return g}const MX={kernelName:Ju,backendName:"cpu",kernelFunc:LX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BX(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,weights:a}=e,{size:o,binaryOutput:i}=s;if(r.shape.length===1){const u=t.data.get(r.dataId).values,c=t.data.get(a.dataId).values,l=b0(u,c,a.dtype,a.shape,o);return t.makeTensorInfo([o],a.dtype,l)}else if(r.shape.length===2){const u=t.bufferSync(r),c=t.bufferSync(a),l=X$(u,c,o,i);return t.makeTensorInfo(l.shape,a.dtype,l.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}const zX={kernelName:_m,backendName:"cpu",kernelFunc:BX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VX(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockSize:a,dataFormat:o}=s;_(o==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${o}`);const i=r.shape[0],u=r.shape[1],c=r.shape[2],l=r.shape[3],d=u*a,h=c*a,p=l/(a*a),f=t.data.get(r.dataId).values,m=new Float32Array(i*d*h*p);let g=0;for(let y=0;y<i;++y)for(let b=0;b<d;++b){const x=Math.floor(b/a),w=b%a;for(let v=0;v<h;++v){const S=Math.floor(v/a),N=v%a,$=(w*a+N)*p;for(let T=0;T<p;++T){const k=T+$+l*(S+c*(x+u*y));m[g++]=f[k]}}}return t.makeTensorInfo([i,d,h,p],r.dtype,m)}const WX={kernelName:ih,backendName:"cpu",kernelFunc:VX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W2(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:a}=e,{strides:o,pad:i,dilations:u,dimRoundingMode:c}=s;Ce([r,a],"depthwiseConv2DNative");const l=ve(r.shape),d=ve(a.shape);let h=u;h==null&&(h=[1,1]),_(wn(o,h),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${h}'`);const p=Vt(r.shape,a.shape,o,h,i,c,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=p,x=b.left,w=b.top,v=p.outChannels/p.inChannels,S=new dn(p.outShape,r.dtype),N=t.data.get(r.dataId).values,$=t.data.get(a.dataId).values,T=S.values;for(let C=0;C<p.batchSize;++C){const k=C*l[0],A=C*S.strides[0];for(let D=0;D<p.outHeight;++D){const R=A+D*S.strides[1],F=D*p.strideHeight-w;for(let z=0;z<f;++z){const H=F+z*g;if(H<0||H>=p.inHeight)continue;const P=z*d[0],G=k+H*l[1];for(let X=0;X<p.outWidth;++X){const Z=R+X*S.strides[2],ne=X*p.strideWidth-x;for(let te=0;te<m;++te){const ae=ne+te*y;if(ae<0||ae>=p.inWidth)continue;const oe=P+te*d[1],pe=G+ae*p.inChannels;let Ie=Z,me=oe;for(let Se=0;Se<p.inChannels;++Se){const Pe=N[pe+Se];for(let Be=0;Be<v;++Be)T[Ie+Be]+=Pe*$[me+Be];Ie+=v,me+=v}}}}}}return t.makeTensorInfo(S.shape,S.dtype,S.values)}const UX={kernelName:Qu,backendName:"cpu",kernelFunc:W2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GX(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:a}=e,{strides:o,dilations:i,pad:u,dimRoundingMode:c,filterShape:l}=s;Ce([r,a],"depthwiseConv2dNativeBackpropFilter");const d=Vt(r.shape,l,o,i,u,c,!0),{strideHeight:h,strideWidth:p,filterHeight:f,filterWidth:m}=d,g=new dn(d.filterShape,"float32"),y=d.padInfo.left,b=d.padInfo.top,x=d.outChannels/d.inChannels,w=t.data.get(r.dataId).values,v=new dn(r.shape,r.dtype,w),S=t.data.get(a.dataId).values,N=new dn(a.shape,a.dtype,S);for(let $=0;$<f;++$){const T=Math.max(0,Math.ceil((b-$)/h)),C=Math.min(d.outHeight,(d.inHeight+b-$)/h);for(let k=0;k<m;++k){const A=Math.max(0,Math.ceil((y-k)/p)),D=Math.min(d.outWidth,(d.inWidth+y-k)/p);for(let R=0;R<d.outChannels;++R){const F=Math.trunc(R/x),z=R%x;let H=0;for(let P=0;P<d.batchSize;++P)for(let G=T;G<C;++G){const X=$+G*h-b;for(let Z=A;Z<D;++Z){const ne=k+Z*p-y;H+=v.get(P,X,ne,F)*N.get(P,G,Z,R)}}g.set(H,$,k,F,z)}}}return t.makeTensorInfo(g.shape,g.dtype,g.values)}const HX={kernelName:vx,backendName:"cpu",kernelFunc:GX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jX(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:a}=e,{strides:o,dilations:i,pad:u,dimRoundingMode:c,inputShape:l}=s;Ce([r,a],"depthwiseConv2DNativeBackpropInput");const d=ve(r.shape),h=ve(a.shape),p=Vt(l,a.shape,o,i,u,c,!0),f=new dn(p.inShape,"float32"),m=f.values,[g,y,b]=f.strides,x=t.data.get(r.dataId).values,[w,v,S]=d,N=t.data.get(a.dataId).values,[$,T,C]=h,{batchSize:k,filterHeight:A,filterWidth:D,inChannels:R,inHeight:F,inWidth:z,outChannels:H,outHeight:P,outWidth:G,strideHeight:X,strideWidth:Z}=p,ne=A-1-p.padInfo.top,te=D-1-p.padInfo.left,ae=H/R;for(let oe=0;oe<k;++oe)for(let pe=0;pe<R;++pe)for(let Ie=0;Ie<F;++Ie){const me=Ie-ne,Se=Math.max(0,Math.ceil(me/X)),Pe=Math.min(P,(A+me)/X);for(let Be=0;Be<z;++Be){const qe=Be-te,ot=Math.max(0,Math.ceil(qe/Z)),et=Math.min(G,(D+qe)/Z);let Ze=0;for(let Le=Se;Le<Pe;++Le){const ft=Le*X-me;for(let ht=ot;ht<et;++ht){const En=ht*Z-qe,It=w*oe+v*Le+S*ht,Vn=$*(A-1-ft)+T*(D-1-En)+C*pe;for(let sn=0;sn<ae;++sn){const ls=pe*ae+sn,An=x[It+ls],Wn=N[Vn+sn];Ze+=An*Wn}}}m[g*oe+y*Ie+b*Be+pe]=Ze}}return t.makeTensorInfo(f.shape,f.dtype,f.values)}const qX={kernelName:Ix,backendName:"cpu",kernelFunc:jX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KX(n){const{inputs:e,backend:t}=n,{x:s}=e,r=U(s.shape),a=t.data.get(s.dataId).values,o=He([r,r],s.dtype),i=o.values;for(let c=0;c<a.length;c++)i[c*r+c]=a[c];const u=[...s.shape,...s.shape];return t.makeTensorInfo(u,o.dtype,o.values)}const XX={kernelName:Em,backendName:"cpu",kernelFunc:KX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YX={kernelName:el,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:s,filter:r}=n,{strides:a,pad:o,dilations:i}=t,u=e,c=u.data.get(s.dataId).values,l=s.shape.length,d=u.data.get(r.dataId).values,h=r.shape.length,{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:w,strideWidth:v,filterHeight:S,filterWidth:N,dilationHeight:$,dilationWidth:T,outShape:C}=xo(s.shape,r.shape,a,o,"NHWC",i),k=U(C),A=C.length,D=Ht(s.dtype,k);for(let F=0;F<p;++F)for(let z=0;z<y;++z){const H=z*w-x.top;for(let P=0;P<b;++P){const G=P*v-x.left;for(let X=0;X<g;++X){let Z=Number.MIN_SAFE_INTEGER;for(let te=0;te<S;++te){const ae=H+te*$;if(ae>=0&&ae<f)for(let oe=0;oe<N;++oe){const pe=G+oe*T;if(pe>=0&&pe<m){const Ie=Vr([F,ae,pe,X],l,ve(s.shape)),me=Vr([te,oe,X],h,ve(r.shape)),Se=c[Ie]+d[me];Se>Z&&(Z=Se)}}}const ne=Vr([F,z,P,X],A,ve(C));D[ne]=Z}}}return{dataId:u.write(xi(D,s.dtype),C,s.dtype),shape:C,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZX={kernelName:Uc,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:s,filter:r,dy:a}=n,{strides:o,pad:i,dilations:u}=t,c=e,l=Js(s.shape,c.data.get(s.dataId).values),d=Js(r.shape,c.data.get(r.dataId).values),{batchSize:h,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:w,filterHeight:v,filterWidth:S,dilationHeight:N,dilationWidth:$,outShape:T}=xo(s.shape,r.shape,o,i,"NHWC",u);_(a.rank===T.length,()=>`Error in ${Uc}, dy must have the same rank as output ${T.length}, but got ${a.rank}`);const C=Js(T,c.data.get(a.dataId).values),k=ik(r.shape,r.dtype);for(let D=0;D<h;++D)for(let R=0;R<g;++R){const F=R*x-b.top;for(let z=0;z<y;++z){const H=z*w-b.left;for(let P=0;P<m;++P){let G=Number.MIN_SAFE_INTEGER,X=0,Z=0;for(let ne=0;ne<v;++ne){const te=F+ne*N;if(te>=0&&te<p)for(let ae=0;ae<S;++ae){const oe=H+ae*$;if(oe>=0&&oe<f){const pe=l[D][te][oe][P]+d[ne][ae][P];pe>G&&(G=pe,X=ne,Z=ae)}}}k[X][Z][P]+=C[D][R][z][P]}}}return{dataId:c.write(xi(k,s.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JX={kernelName:Wc,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:s,filter:r,dy:a}=n,{strides:o,pad:i,dilations:u}=t,c=e,l=Js(s.shape,c.data.get(s.dataId).values),d=Js(r.shape,c.data.get(r.dataId).values),{batchSize:h,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:w,filterHeight:v,filterWidth:S,dilationHeight:N,dilationWidth:$,outShape:T}=xo(s.shape,r.shape,o,i,"NHWC",u);_(a.rank===T.length,()=>`Error in ${Wc}, dy must have the same rank as output ${T.length}, but got ${a.rank}`);const C=Js(T,c.data.get(a.dataId).values),k=ik(s.shape,s.dtype);for(let D=0;D<h;++D)for(let R=0;R<g;++R){const F=R*x-b.top;for(let z=0;z<y;++z){const H=z*w-b.left;for(let P=0;P<m;++P){let G=Number.MIN_SAFE_INTEGER,X=F<0?0:F,Z=H<0?0:H;for(let ne=0;ne<v;++ne){const te=F+ne*N;if(te>=0&&te<p)for(let ae=0;ae<S;++ae){const oe=H+ae*$;if(oe>=0&&oe<f){const pe=l[D][te][oe][P]+d[ne][ae][P];pe>G&&(G=pe,X=te,Z=oe)}}}k[D][X][Z][P]+=C[D][R][z][P]}}}return{dataId:c.write(xi(k,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QX(n){const{inputs:e,backend:t,attrs:s}=n,{image:r}=e,{canvas:a,options:o}=s,{contextOptions:i,imageOptions:u}=o||{},c=(u==null?void 0:u.alpha)||1,l=(i==null?void 0:i.contextType)||"2d";if(l!=="2d")throw new Error(`Context type ${i.contextType} is not supported by the CPU backend.`);const d=a.getContext(l,(i==null?void 0:i.contextAttributes)||{});if(d==null)throw new Error(`Could not get the context with ${l} type.`);const[h,p]=r.shape.slice(0,2),f=r.shape.length===2?1:r.shape[2],m=t.data.get(r.dataId).values,g=r.dtype==="float32"?255:1,y=new Uint8ClampedArray(p*h*4);for(let x=0;x<h*p;++x){const w=[0,0,0,255*c];for(let S=0;S<f;S++){const N=m[x*f+S];if(r.dtype==="float32"){if(N<0||N>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${N}.`)}else if(r.dtype==="int32"&&(N<0||N>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${N}.`);f===1?(w[0]=N*g,w[1]=N*g,w[2]=N*g):w[S]=N*g}const v=x*4;y[v+0]=Math.round(w[0]),y[v+1]=Math.round(w[1]),y[v+2]=Math.round(w[2]),y[v+3]=Math.round(w[3])}a.width=p,a.height=h;const b=new ImageData(y,p,h);return d.putImageData(b,0,0),r}const e8={kernelName:pL,backendName:"cpu",kernelFunc:QX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dp(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:a,keepDims:o}=s;Ce(r,"sum");let i;r.dtype==="bool"?i=ho({inputs:{x:r},backend:t,attrs:{dtype:"int32"}}):i=Zr({inputs:{x:r},backend:t});const u=i.shape.length,c=ze(a,i.shape),l=At(c,u);let d=c,h=i;l!=null&&(h=is({inputs:{x:i},backend:t,attrs:{perm:l}}),d=Ct(d.length,u)),Et("sum",d,h.shape.length);const[p,f]=Rt(h.shape,d),m=ws(h.dtype,"int32");let g=Of(t,p,m);const y=U(f),b=t.data.get(g.dataId).values,x=t.data.get(h.dataId).values;for(let w=0;w<b.length;++w){const v=w*y;let S=0;for(let N=0;N<y;++N)S+=x[v+N];b[w]=S}if(o){const w=wt(g.shape,c),v=g;g=_t({inputs:{x:g},backend:t,attrs:{shape:w}}),t.disposeIntermediateTensorInfo(v)}return t.disposeIntermediateTensorInfo(i),l!=null&&t.disposeIntermediateTensorInfo(h),g}const t8={kernelName:ql,backendName:"cpu",kernelFunc:dp};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n8(n){const{inputs:e,backend:t,attrs:s}=n,{equation:r}=s,a=e,{allDims:o,summedDims:i,idDims:u}=Aw(r,a.length);Rw(o.length,u,a);const{path:c,steps:l}=Ow(i,u),d=l.length;let h=null,p=o.length;const f=[];for(let m=0;m<d;++m){for(const g of l[m]){const{permutationIndices:y,expandDims:b}=Dw(p,u[g]);let x;Fw(y)?x=a[g]:(x=is({inputs:{x:a[g]},backend:t,attrs:{perm:y}}),f.push(x));const w=x.shape.slice();for(let v=0;v<b.length;++v)w.splice(b[v],0,1);Qe(x.shape,w)||(x=_t({inputs:{x},backend:t,attrs:{shape:w}}),f.push(x)),h===null?h=x:(h=zg({inputs:{a:x,b:h},backend:t}),f.push(h))}m<d-1&&(c[m]>=0&&(h=dp({inputs:{x:h},backend:t,attrs:{axis:c[m]-(o.length-p),keepDims:!1}}),f.push(h)),p--)}for(const m of f)m!==h&&t.disposeIntermediateTensorInfo(m);return h}const s8={kernelName:Sx,backendName:"cpu",kernelFunc:n8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r8(n){const{inputs:e,backend:t}=n,{dy:s,y:r}=e;Ce([s,r],"eluGrad");const a=new Float32Array(U(r.shape)),o=t.data.get(r.dataId).values,i=t.data.get(s.dataId).values;for(let u=0;u<o.length;++u){const c=o[u];c>=0?a[u]=i[u]:a[u]=i[u]*(c+1)}return t.makeTensorInfo(r.shape,"float32",a)}const a8={kernelName:uh,backendName:"cpu",kernelFunc:r8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o8=kw,i8=Nw,u8=Cw,l8=Tw,c8=$w,d8=_w,h8=xt(sl,n=>{const e=Math.sign(n),t=Math.abs(n),s=1/(1+o8*t);return e*(1-((((d8*s+c8)*s+l8)*s+u8)*s+i8)*s*Math.exp(-t*t))}),p8={kernelName:sl,backendName:"cpu",kernelFunc:h8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mf(n){const{inputs:e,backend:t,attrs:s}=n,{input:r}=e,{dim:a}=s,o=r.shape.length,i=r.shape.slice();let u=a;return a<0&&(_(-(o+1)<=a,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),u=o+a+1),i.splice(u,0,1),_t({inputs:{x:r},backend:t,attrs:{shape:i}})}const f8={kernelName:ch,backendName:"cpu",kernelFunc:Mf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const m8=Yt((n,e)=>n/e),E0=gn(tl,m8),Db={kernelName:tl,backendName:"cpu",kernelFunc:E0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U2(n,e,t){const s=n.shape,r=s[0],a=s[1],o=t.data.get(n.dataId),i=o.complexTensorInfos.real,u=o.complexTensorInfos.imag,c=[r,a],l=U(c),d=Cn("float32",l),h=Cn("float32",l);for(let g=0;g<r;g++){const y=ii({inputs:{x:i},backend:t,attrs:{begin:[g,0],size:[1,a]}}),b=ii({inputs:{x:u},backend:t,attrs:{begin:[g,0],size:[1,a]}}),x=ms({inputs:{real:y,imag:b},backend:t}),{real:w,imag:v}=g8(x,e,t),S=Na(w,v);for(let N=0;N<a;N++){const $=Ew(S,N);d[g*a+N]=$.real,h[g*a+N]=$.imag}t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(b),t.disposeIntermediateTensorInfo(x)}const p=t.makeTensorInfo(c,"float32",d),f=t.makeTensorInfo(c,"float32",h),m=ms({inputs:{real:p,imag:f},backend:t});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),m}function g8(n,e,t){const s=U(n.shape),r=t.data.get(n.dataId),a=t.data.get(r.complexTensorInfos.real.dataId).values,o=t.data.get(r.complexTensorInfos.imag.dataId).values;if(y8(s)){const i=Rb(a,o,s,e,t),u=[n.shape[0],n.shape[1]];if(e){const c=t.makeTensorInfo(u,"float32",i.real),l=t.makeTensorInfo(u,"float32",i.imag),d=t.makeTensorInfo([],"float32",go(s,"float32")),h=Zr({inputs:{x:d},backend:t}),p=Db.kernelFunc({inputs:{a:c,b:d},backend:t}),f=Db.kernelFunc({inputs:{a:l,b:h},backend:t}),m=t.data.get(p.dataId).values,g=t.data.get(f.dataId).values;return t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),{real:m,imag:g}}return i}else{const i=Na(a,o),u=b8(i,s,e);return bC(u)}}function y8(n){return(n&n-1)===0}function Rb(n,e,t,s,r){if(t===1)return{real:n,imag:e};const a=Na(n,e),o=t/2,i=xC(a),u=i.real,c=i.imag,l=[u.length],d=r.makeTensorInfo(l,"float32",u),h=r.makeTensorInfo(l,"float32",c),p=ms({inputs:{real:d,imag:h},backend:r}),f=wC(a),m=f.real,g=f.imag,y=[m.length],b=r.makeTensorInfo(y,"float32",m),x=r.makeTensorInfo(y,"float32",g),w=ms({inputs:{real:b,imag:x},backend:r}),v=Rb(u,c,o,s,r),S=v.real,N=v.imag,$=[S.length],T=r.makeTensorInfo($,"float32",S),C=r.makeTensorInfo($,"float32",N),k=ms({inputs:{real:T,imag:C},backend:r}),A=Rb(m,g,o,s,r),D=A.real,R=A.imag,F=[D.length],z=r.makeTensorInfo(F,"float32",D),H=r.makeTensorInfo(F,"float32",R),P=ms({inputs:{real:z,imag:H},backend:r}),G=IC(t,s),X=[G.real.length],Z=r.makeTensorInfo(X,"float32",G.real),ne=r.makeTensorInfo(X,"float32",G.imag),te=ms({inputs:{real:Z,imag:ne},backend:r}),ae=zg({inputs:{a:te,b:P},backend:r}),oe=ku({inputs:{a:k,b:ae},backend:r}),pe=T0({inputs:{a:k,b:ae},backend:r}),Ie=oi({inputs:{input:oe},backend:r}),me=oi({inputs:{input:pe},backend:r}),Se=Nu({inputs:{input:oe},backend:r}),Pe=Nu({inputs:{input:pe},backend:r}),Be=Cu({inputs:[Ie,me],backend:r,attrs:{axis:0}}),qe=Cu({inputs:[Se,Pe],backend:r,attrs:{axis:0}}),ot=r.data.get(Be.dataId).values,et=r.data.get(qe.dataId).values;return r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(w),r.disposeIntermediateTensorInfo(T),r.disposeIntermediateTensorInfo(C),r.disposeIntermediateTensorInfo(k),r.disposeIntermediateTensorInfo(z),r.disposeIntermediateTensorInfo(H),r.disposeIntermediateTensorInfo(P),r.disposeIntermediateTensorInfo(Z),r.disposeIntermediateTensorInfo(ne),r.disposeIntermediateTensorInfo(te),r.disposeIntermediateTensorInfo(ae),r.disposeIntermediateTensorInfo(oe),r.disposeIntermediateTensorInfo(pe),r.disposeIntermediateTensorInfo(Ie),r.disposeIntermediateTensorInfo(Se),r.disposeIntermediateTensorInfo(me),r.disposeIntermediateTensorInfo(Pe),r.disposeIntermediateTensorInfo(Be),r.disposeIntermediateTensorInfo(qe),{real:ot,imag:et}}function b8(n,e,t){const s=new Float32Array(e*2);for(let r=0;r<e;r++){let a=0,o=0;for(let i=0;i<e;i++){const u=SC(r*i,e,t),c=Ew(n,i);a+=c.real*u.real-c.imag*u.imag,o+=c.real*u.imag+c.imag*u.real}t&&(a/=e,o/=e),vC(s,a,o,r)}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x8(n){const{inputs:e,backend:t}=n,{input:s}=e,r=U(s.shape),a=s.shape[s.shape.length-1],o=r/a,i=_t({inputs:{x:s},backend:t,attrs:{shape:[o,a]}}),u=U2(i,!1,t),c=_t({inputs:{x:u},backend:t,attrs:{shape:s.shape}});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(u),c}const w8={kernelName:kx,backendName:"cpu",kernelFunc:x8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A0(n){const{backend:e,attrs:t}=n,{shape:s,value:r,dtype:a}=t,o=a||fi(r),i=Ht(o,U(s));return I8(i,r,o),e.makeTensorInfo(s,o,i)}const v8={kernelName:Am,backendName:"cpu",kernelFunc:A0};function I8(n,e,t){n.fill(e)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S8={kernelName:dh,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:s}=n,r=t,a=Cn(s.dtype,U(s.shape)),[o,i,u,c]=s.shape,l=r.data.get(s.dataId).values;for(let h=0;h<o;h++){const p=h*u*i*c;for(let f=0;f<i;f++){const m=f*(u*c);for(let g=0;g<u;g++){const y=g*c;for(let b=0;b<c;b++){const x=Math.round(u-g-1),w=p+m+y+b;let v=l[w];if(x>=0&&x<u){const S=x*c,N=p+m+S+b;v=l[N]}a[w]=v}}}}return{dataId:r.write(a,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k8(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:a,bias:o,preluActivationWeights:i}=e,{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=s;let m=V2({inputs:{x:r,filter:a},backend:t,attrs:{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:h}});if(o){const g=m;if(l==="NCHW"&&o.shape.length===1&&o.shape[0]!==1){const y=_t({inputs:{x:o},backend:t,attrs:{shape:[o.shape[0],1,1]}});m=ku({inputs:{a:m,b:y},backend:t}),t.disposeIntermediateTensorInfo(y)}else m=ku({inputs:{a:m,b:o},backend:t});t.disposeIntermediateTensorInfo(g)}if(p){const g=m;if(l==="NCHW"&&p==="prelu"&&i.shape.length===1&&i.shape[0]!==1){const y=_t({inputs:{x:i},backend:t,attrs:{shape:[i.shape[0],1,1]}});m=Lf(t,m,p,y,f),t.disposeIntermediateTensorInfo(y)}else m=Lf(t,m,p,i,f);t.disposeIntermediateTensorInfo(g)}return m}const N8={kernelName:gu,backendName:"cpu",kernelFunc:k8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C8(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:a,bias:o,preluActivationWeights:i}=e,{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=s;let m=W2({inputs:{x:r,filter:a},backend:t,attrs:{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:h}});if(o){const g=m;m=ku({inputs:{a:m,b:o},backend:t}),t.disposeIntermediateTensorInfo(g)}if(p){const g=m;m=Lf(t,m,p,i,f),t.disposeIntermediateTensorInfo(g)}return m}const T8={kernelName:yu,backendName:"cpu",kernelFunc:C8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $8(n){const{inputs:e,backend:t}=n,{params:s,indices:r}=e,a=U(s.shape),o=r.shape,i=o[o.length-1],[u,c,l,d]=mg(s,r);if(c===0)return t.makeTensorInfo(u,s.dtype,[]);const h=t.data.get(r.dataId).values,p=t.bufferSync(s),f=a2(h,p,s.dtype,c,i,l,d,s.shape,a);return t.makeTensorInfo(u,s.dtype,f.values)}const _8={kernelName:ph,backendName:"cpu",kernelFunc:$8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E8(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,indices:a}=e,{axis:o,batchDims:i}=s;Ce([r,a],"gatherV2");const u=ze(o,r.shape)[0],c=t.data.get(a.dataId).values,l=r.shape[u];for(let w=0;w<c.length;++w){const v=c[w];_(v<=l-1&&v>=0,()=>`GatherV2: the index value ${v} is not in [0, ${l-1}]`)}let d=i;i==null&&(d=0);const h=U(a.shape),p=$g(r,a,u,d),f=_t({inputs:{x:r},backend:t,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),m=_t({inputs:{x:a},backend:t,attrs:{shape:[p.batchSize,h/p.batchSize]}}),g=[p.batchSize,p.outerSize,h/p.batchSize,p.sliceSize],y=t.bufferSync(m),b=t.bufferSync(f),x=o2(b,y,g);return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(m),t.makeTensorInfo(p.outputShape,x.dtype,x.values)}const A8={kernelName:hh,backendName:"cpu",kernelFunc:E8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D8(n){const{inputs:e,backend:t}=n,{input:s}=e,r=U(s.shape),a=s.shape[s.shape.length-1],o=r/a,i=_t({inputs:{x:s},backend:t,attrs:{shape:[o,a]}}),u=U2(i,!0,t),c=_t({inputs:{x:u},backend:t,attrs:{shape:s.shape}});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(u),c}const R8={kernelName:Nx,backendName:"cpu",kernelFunc:D8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O8=xt(dl,n=>Number.isFinite(n)?1:0,"bool"),F8={kernelName:dl,backendName:"cpu",kernelFunc:O8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P8=xt(hl,n=>Math.abs(n)===1/0?1:0,"bool"),L8={kernelName:hl,backendName:"cpu",kernelFunc:P8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M8=xt(pl,n=>Number.isNaN(n)?1:0,"bool"),B8={kernelName:pl,backendName:"cpu",kernelFunc:M8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z8(n){const{backend:e,attrs:t}=n,{start:s,stop:r,num:a}=t,o=d2(s,r,a);return e.makeTensorInfo([o.length],"float32",o)}const V8={kernelName:yh,backendName:"cpu",kernelFunc:z8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W8=xt(gl,n=>Math.log1p(n)),U8={kernelName:gl,backendName:"cpu",kernelFunc:W8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const G8=Yt((n,e)=>n&&e),H8=gn(bh,G8,null,"bool"),j8={kernelName:bh,backendName:"cpu",kernelFunc:H8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q8=xt(xh,n=>n?0:1,"bool"),K8={kernelName:xh,backendName:"cpu",kernelFunc:q8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X8=Yt((n,e)=>n||e),Y8=gn(wh,X8,null,"bool"),Z8={kernelName:wh,backendName:"cpu",kernelFunc:Y8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J8(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{depthRadius:a,bias:o,alpha:i,beta:u}=s;Ce(r,"LRN");const c=r.shape[3],l=c-1,d=t.data.get(r.dataId).values,h=U(r.shape),p=new Float32Array(h);function f(m){const g=m%c;let y=m-g+Math.max(0,g-a);const b=m-g+Math.min(g+a,l);let x=0;for(;y<=b;y++){const w=d[y];x+=w*w}return x}for(let m=0;m<h;m++){const g=f(m),y=d[m]*Math.pow(o+i*g,-u);p[m]=y}return t.makeTensorInfo(r.shape,r.dtype,p)}const Q8={kernelName:yl,backendName:"cpu",kernelFunc:J8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eY(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,y:a,dy:o}=e,{depthRadius:i,bias:u,alpha:c,beta:l}=s;Ce(o,"LRNGrad");const d=U(o.shape),h=o.shape[3],p=t.data.get(o.dataId).values,f=t.data.get(r.dataId).values,m=t.data.get(a.dataId).values,g=new Float32Array(d),y=d;for(let b=0;b<y;b++){const x=b%h,w=b-x+Math.max(0,x-i),v=b-x+Math.min(h,x+i+1);let S=0;for(let N=w;N<v;N++)S+=Math.pow(f[N],2);S=c*S+u;for(let N=w;N<v;N++){let $=-2*c*l*f[N]*m[b]/S;b===N&&($+=Math.pow(S,-l)),$*=p[b],g[N]+=$}}return t.makeTensorInfo(o.shape,r.dtype,g)}const tY={kernelName:vh,backendName:"cpu",kernelFunc:eY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G2(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{reductionIndices:a,keepDims:o}=s,i=t;let u=r.shape;const c=u.length,l=ze(a,u);let d=l;const h=At(d,c);let p=i.data.get(r.dataId).values;if(h!=null){const w=new Array(c);for(let v=0;v<w.length;v++)w[v]=u[h[v]];p=v0(p,u,r.dtype,h,w),d=Ct(d.length,c),u=w}Ce(r,"max"),Et("max",d,c);const[f,m]=Rt(u,d),g=U(m),y=p2(p,g,f,r.dtype),b=i.write(y,f,r.dtype);let x=f;return o&&(x=wt(f,l)),{dataId:b,shape:x,dtype:r.dtype}}const nY={kernelName:bl,backendName:"cpu",kernelFunc:G2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sY(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e;Ce(r,"maxPool");const{filterSize:a,strides:o,pad:i,dimRoundingMode:u}=s,c=1;_(wn(o,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);const l=Mn(r.shape,a,o,c,i,u);let d;if(l.filterWidth===1&&l.filterHeight===1&&Qe(l.inShape,l.outShape))d=Zr({inputs:{x:r},backend:t});else{const h=t.data.get(r.dataId).values,p=ve(r.shape),f=_0(h,r.shape,r.dtype,p,l,"max");d=t.makeTensorInfo(l.outShape,r.dtype,f.values)}return d}const rY={kernelName:wl,backendName:"cpu",kernelFunc:sY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aY(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:a,strides:o,pad:i,dimRoundingMode:u,dataFormat:c}=s;Ce(r,"maxPool3d");const l=Bs(r.shape,a,o,1,i,u,c),d=t.data.get(r.dataId).values,h=z2(d,r.shape,r.dtype,ve(r.shape),l,"max");return t.makeTensorInfo(h.shape,"float32",h.values)}const oY={kernelName:Ih,backendName:"cpu",kernelFunc:aY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iY(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:a}=e,{filterSize:o,strides:i,pad:u,dimRoundingMode:c}=s;Ce([r,a],"maxPool3DGrad");const l=Bs(a.shape,o,i,1,u,c),d=t.bufferSync(a),h=X5(d,l),p=l.strideDepth,f=l.strideHeight,m=l.strideWidth,g=l.dilationDepth,y=l.dilationHeight,b=l.dilationWidth,x=l.effectiveFilterDepth,w=l.effectiveFilterHeight,v=l.effectiveFilterWidth,S=x-1-l.padInfo.front,N=v-1-l.padInfo.left,$=w-1-l.padInfo.top,T=He(a.shape,"float32"),C=t.bufferSync(r);for(let k=0;k<l.batchSize;++k)for(let A=0;A<l.inChannels;++A)for(let D=0;D<l.inDepth;++D)for(let R=0;R<l.inHeight;++R)for(let F=0;F<l.inWidth;++F){const z=D-S,H=R-$,P=F-N;let G=0;for(let X=0;X<x;X+=g){const Z=(z+X)/p;if(!(Z<0||Z>=l.outDepth||Math.floor(Z)!==Z))for(let ne=0;ne<w;ne+=y){const te=(H+ne)/f;if(!(te<0||te>=l.outHeight||Math.floor(te)!==te))for(let ae=0;ae<v;ae+=b){const oe=(P+ae)/m;if(oe<0||oe>=l.outWidth||Math.floor(oe)!==oe)continue;const pe=x*w*v-1-h.get(k,Z,te,oe,A),Ie=X*w*v+ne*v+ae,me=pe===Ie?1:0;if(me===0)continue;const Se=C.get(k,Z,te,oe,A);G+=Se*me}}}T.set(G,k,D,R,F,A)}return t.makeTensorInfo(T.shape,T.dtype,T.values)}const uY={kernelName:Rm,backendName:"cpu",kernelFunc:iY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lY(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:a,output:o}=e,i=a;Ce([a,o],"maxPoolGrad");const{filterSize:u,strides:c,pad:l,dimRoundingMode:d}=s,h=Mn(i.shape,u,c,1,l,d),p=t.data.get(i.dataId).values,f=He(h.outShape,i.dtype,B2(p,i.shape,i.dtype,h).values),m=h.strideHeight,g=h.strideWidth,y=h.dilationHeight,b=h.dilationWidth,x=h.effectiveFilterHeight,w=h.effectiveFilterWidth,v=w-1-h.padInfo.left,S=x-1-h.padInfo.top,N=He(i.shape,"float32"),$=t.data.get(r.dataId).values,T=He(r.shape,"float32",$);for(let C=0;C<h.batchSize;++C)for(let k=0;k<h.inChannels;++k)for(let A=0;A<h.inHeight;++A)for(let D=0;D<h.inWidth;++D){const R=A-S,F=D-v;let z=0;for(let H=0;H<x;H+=y){const P=(R+H)/m;if(!(P<0||P>=h.outHeight||Math.floor(P)!==P))for(let G=0;G<w;G+=b){const X=(F+G)/g;if(X<0||X>=h.outWidth||Math.floor(X)!==X)continue;const Z=x*w-1-f.get(C,P,X,k),ne=H*w+G,te=Z===ne?1:0;if(te===0)continue;const ae=T.get(C,P,X,k);z+=ae*te}}N.set(z,C,A,D,k)}return t.makeTensorInfo(N.shape,N.dtype,N.values)}const cY={kernelName:Dm,backendName:"cpu",kernelFunc:lY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dY(n,e,t,s,r){const a=ve(e),o=_0(n,e,t,a,r,"max"),i=B2(n,e,t,r,!0,s);return[o.values,i.values]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hY={kernelName:Om,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s}=n,{filterSize:r,strides:a,pad:o,includeBatchInIndex:i}=e,u=t;Ce(s,"MaxPoolWithArgmax");const c=u.data.get(s.dataId).values,l=Mn(s.shape,r,a,[1,1],o),[d,h]=dY(c,s.shape,s.dtype,i,l),p=u.write(d,l.outShape,s.dtype),f=u.write(h,l.outShape,s.dtype);return[{dataId:p,shape:l.outShape,dtype:s.dtype},{dataId:f,shape:l.outShape,dtype:"int32"}]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pY(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:a,keepDims:o}=s,i=ze(a,r.shape),c=Rt(r.shape,i)[1],l=U(c),d=[],h=t.makeTensorInfo([],"float32",new Float32Array([l]));d.push(h);const p=ho({inputs:{x:r},backend:t,attrs:{dtype:"float32"}});d.push(p);const f=E0({inputs:{a:p,b:h},backend:t});d.push(f);const m=dp({inputs:{x:f},backend:t,attrs:{axis:a,keepDims:o}});return d.forEach(g=>t.disposeIntermediateTensorInfo(g)),m}const fY={kernelName:vl,backendName:"cpu",kernelFunc:pY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mY(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:a,keepDims:o}=s;Ce(r,"min");const i=ze(a,r.shape);let u=i;const c=At(u,r.shape.length);let l=r;c!=null&&(l=is({inputs:{x:r},backend:t,attrs:{perm:c}}),u=Ct(u.length,r.shape.length)),Et("min",u,l.shape.length);const[d,h]=Rt(l.shape,u),p=U(h),f=Ln(U(d),l.dtype),m=t.data.get(l.dataId).values;for(let y=0;y<f.length;++y){const b=y*p;let x=m[b];for(let w=0;w<p;++w){const v=m[b+w];(Number.isNaN(v)||v<x)&&(x=v)}f[y]=x}c!=null&&t.disposeIntermediateTensorInfo(l);const g=t.makeTensorInfo(d,l.dtype,f);if(o){const y=wt(d,i),b=_t({inputs:{x:g},backend:t,attrs:{shape:y}});return t.disposeIntermediateTensorInfo(g),b}return g}const gY={kernelName:Il,backendName:"cpu",kernelFunc:mY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yY(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{paddings:a,mode:o}=s;Ce(r,"mirrorPad");const i=a.map((x,w)=>x[0]+r.shape[w]+x[1]),u=a.map(x=>x[0]),c=a.map((x,w)=>x[0]+r.shape[w]),l=o==="reflect"?0:1,d=t.data.get(r.dataId).values,h=r.shape.length,p=ve(r.shape),f=U(i),m=i.length,g=ve(i),y=Cn(r.dtype,f);for(let x=0;x<f;x++){let w=Ou(x,m,g);for(let S=0;S<m;S++)w[S]<u[S]?w[S]=u[S]*2-w[S]-l:w[S]>=c[S]&&(w[S]=(c[S]-1)*2-w[S]+l);w=w.map((S,N)=>S-u[N]);const v=Vr(w,h,p);y[x]=d[v]}return{dataId:t.write(y,i,r.dtype),shape:i,dtype:r.dtype}}const bY={kernelName:kl,backendName:"cpu",kernelFunc:yY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xY=Yt((n,e)=>{const t=n%e;return n<0&&e<0||n>=0&&e>=0?t:(t+e)%e}),wY=gn(Nl,xY),vY={kernelName:Nl,backendName:"cpu",kernelFunc:wY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H2(n){const{inputs:e,backend:t,attrs:s}=n,{logits:r}=e,{dim:a}=s,o=r.shape.length;let i=a;if(i===-1&&(i=o-1),i!==o-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${o} and dim was ${i}`);const u=ze([i],r.shape),c=G2({inputs:{x:r},backend:t,attrs:{reductionIndices:u,keepDims:!1}}),l=wt(c.shape,u),d=_t({inputs:{x:c},backend:t,attrs:{shape:l}}),h=T0({inputs:{a:r,b:d},backend:t}),p=t2({inputs:{x:h},backend:t}),f=dp({inputs:{x:p},backend:t,attrs:{axis:u,keepDims:!1}}),m=_t({inputs:{x:f},backend:t,attrs:{shape:l}}),g=E0({inputs:{a:p,b:m},backend:t});return t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(m),g}const IY={kernelName:Kl,backendName:"cpu",kernelFunc:H2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SY(n){const{inputs:e,backend:t,attrs:s}=n,{logits:r}=e,{numSamples:a,seed:o,normalized:i}=s;Ce(r,"multinomial");const u=i?r:H2({inputs:{logits:r},backend:t,attrs:{dim:-1}}),c=u.shape[0],l=u.shape[1],d=t.data.get(u.dataId).values,h=[c,a],p=Ln(U(h),"int32");for(let f=0;f<c;++f){const m=f*l,g=new Float32Array(l-1);g[0]=d[m];for(let x=1;x<g.length;++x)g[x]=g[x-1]+d[m+x];const y=ag.alea(o.toString()),b=f*a;for(let x=0;x<a;++x){const w=y();p[b+x]=g.length;for(let v=0;v<g.length;v++)if(w<g[v]){p[b+x]=v;break}}}return i||t.disposeIntermediateTensorInfo(u),t.makeTensorInfo(h,"int32",p)}const kY={kernelName:Sh,backendName:"cpu",kernelFunc:SY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NY=mw;function CY(n){const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:a}=e,{maxOutputSize:o,iouThreshold:i,scoreThreshold:u}=s;Ce(r,"NonMaxSuppression");const c=t.data.get(r.dataId).values,l=t.data.get(a.dataId).values,{selectedIndices:d}=NY(c,l,o,i,u);return t.makeTensorInfo([d.length],"int32",new Int32Array(d))}const TY={kernelName:Ch,backendName:"cpu",kernelFunc:CY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $Y=gw;function _Y(n){const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:a}=e,{maxOutputSize:o,iouThreshold:i,scoreThreshold:u,padToMaxOutputSize:c}=s;Ce(r,"NonMaxSuppressionPadded");const l=t.data.get(r.dataId).values,d=t.data.get(a.dataId).values,{selectedIndices:h,validOutputs:p}=$Y(l,d,o,i,u,c);return[t.makeTensorInfo([h.length],"int32",new Int32Array(h)),t.makeTensorInfo([],"int32",new Int32Array([p]))]}const EY={kernelName:Th,backendName:"cpu",kernelFunc:_Y};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AY=yw;function DY(n){const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:a}=e,{maxOutputSize:o,iouThreshold:i,scoreThreshold:u,softNmsSigma:c}=s;Ce(r,"NonMaxSuppressionWithScore");const l=t.data.get(r.dataId).values,d=t.data.get(a.dataId).values,h=o,p=i,f=u,m=c,{selectedIndices:g,selectedScores:y}=AY(l,d,h,p,f,m);return[t.makeTensorInfo([g.length],"int32",new Int32Array(g)),t.makeTensorInfo([y.length],"float32",new Float32Array(y))]}const RY={kernelName:$h,backendName:"cpu",kernelFunc:DY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OY(n){const{inputs:e,backend:t,attrs:s}=n,{indices:r}=e,{dtype:a,depth:o,onValue:i,offValue:u}=s;Ce(r,"oneHot");const c=U(r.shape),l=new Float32Array(c*o);l.fill(u);const d=t.data.get(r.dataId).values;for(let h=0;h<c;++h)d[h]>=0&&d[h]<o&&(l[h*o+d[h]]=i);return t.makeTensorInfo([...r.shape,o],a,l)}const FY={kernelName:Tl,backendName:"cpu",kernelFunc:OY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bf(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(s.dtype==="complex64"){const r=oi({inputs:{input:s},backend:t}),a=Bf({inputs:{x:r},backend:t}),o=Nu({inputs:{input:s},backend:t}),i=Bf({inputs:{x:o},backend:t}),u=ms({inputs:{real:a,imag:i},backend:t});return t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(i),u}else return A0({backend:t,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}const PY={kernelName:qh,backendName:"cpu",kernelFunc:Bf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j2(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(s.dtype==="complex64"){const r=oi({inputs:{input:s},backend:t}),a=j2({inputs:{x:r},backend:t}),o=Nu({inputs:{input:s},backend:t}),i=Bf({inputs:{x:o},backend:t}),u=ms({inputs:{real:a,imag:i},backend:t});return t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(i),u}else return A0({backend:t,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}const LY={kernelName:_h,backendName:"cpu",kernelFunc:j2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q2(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s;if(e.length===1)return Mf({inputs:{input:e[0]},backend:t,attrs:{dim:r}});const a=e[0].shape,o=e[0].dtype;e.forEach(l=>{us(a,l.shape,"All tensors passed to stack must have matching shapes"),_(o===l.dtype,()=>"All tensors passed to stack must have matching dtypes")});const i=[],u=e.map(l=>{const d=Mf({inputs:{input:l},backend:t,attrs:{dim:r}});return i.push(d),d}),c=Cu({inputs:u,backend:t,attrs:{axis:r}});return i.forEach(l=>t.disposeIntermediateTensorInfo(l)),c}const MY={kernelName:Eh,backendName:"cpu",kernelFunc:q2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BY(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{paddings:a,constantValue:o}=s;Ce(r,"pad");const i=a.map((b,x)=>b[0]+r.shape[x]+b[1]),u=a.map(b=>b[0]),c=t.data.get(r.dataId).values,l=U(r.shape),d=r.shape.length,h=ve(r.shape),p=U(i),f=i.length,m=ve(i),g=Cn(r.dtype,p);o!==0&&g.fill(o);for(let b=0;b<l;b++){const w=Ou(b,d,h).map((S,N)=>S+u[N]),v=Vr(w,f,m);g[v]=c[b]}return{dataId:t.write(g,i,r.dtype),shape:i,dtype:r.dtype}}const K2={kernelName:$l,backendName:"cpu",kernelFunc:BY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zY=Yt((n,e)=>Math.pow(n,e)),VY=gn(_l,zY),WY={kernelName:_l,backendName:"cpu",kernelFunc:VY};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UY(n){const{inputs:e,backend:t,attrs:s}=n,{paramsNestedSplits:r,paramsDenseValues:a,indices:o}=e,{outputRaggedRank:i}=s,u=r.map(y=>t.data.get(y.dataId).values),c=r.map(y=>y.shape),l=t.data.get(a.dataId).values,d=t.data.get(o.dataId).values,[h,p,f]=x2(u,c,l,a.shape,a.dtype,d,o.shape),m=h.map(y=>t.makeTensorInfo([y.length],"int32",y)),g=t.makeTensorInfo(f,a.dtype,p);return m.concat([g])}const GY={kernelName:Tx,backendName:"cpu",kernelFunc:UY};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HY(n){const{inputs:e,backend:t}=n,{starts:s,limits:r,deltas:a}=e,o=t.data.get(s.dataId).values,i=t.data.get(r.dataId).values,u=t.data.get(a.dataId).values,[c,l]=w2(o,s.shape,s.dtype,i,r.shape,u,a.shape),d=t.makeTensorInfo([c.length],"int32",c),h=t.makeTensorInfo([l.length],s.dtype,l);return[d,h]}const jY={kernelName:$x,backendName:"cpu",kernelFunc:HY};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qY(n){const{inputs:e,backend:t,attrs:s}=n,{shape:r,values:a,defaultValue:o,rowPartitionTensors:i}=e,{rowPartitionTypes:u}=s,c=t.data.get(r.dataId).values,l=t.data.get(a.dataId).values,d=t.data.get(o.dataId).values,h=i.map(g=>t.data.get(g.dataId).values),p=i.map(g=>g.shape),[f,m]=v2(c,r.shape,l,a.shape,a.dtype,d,o.shape,h,p,u);return t.makeTensorInfo(f,a.dtype,m)}const KY={kernelName:_x,backendName:"cpu",kernelFunc:qY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XY(n){const{backend:e,attrs:t}=n,{start:s,stop:r,dtype:a,step:o}=t,i=I0(s,r,o,a);return e.makeTensorInfo([i.length],a,i)}const YY={kernelName:Fm,backendName:"cpu",kernelFunc:XY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZY=xt(Dl,n=>1/n),JY={kernelName:Dl,backendName:"cpu",kernelFunc:ZY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QY(n){const{inputs:e,backend:t,attrs:s}=n,{images:r}=e,{alignCorners:a,halfPixelCenters:o,size:i}=s;Ce(r,"resizeBilinear");const u=ve(r.shape),[c,l]=i,[d,h,p,f]=r.shape,m=t.data.get(r.dataId).values,g=new Float32Array(U([d,c,l,f])),y=[a&&c>1?h-1:h,a&&l>1?p-1:p],b=[a&&c>1?c-1:c,a&&l>1?l-1:l];let x=0;const w=y[0]/b[0],v=y[1]/b[1];for(let S=0;S<d;S++)for(let N=0;N<c;N++){let $;o?$=w*(N+.5)-.5:$=w*N;const T=Math.max(0,Math.floor($)),C=$-T,k=Math.min(h-1,Math.ceil($)),A=S*u[0]+T*u[1],D=S*u[0]+k*u[1];for(let R=0;R<l;R++){let F;o?F=v*(R+.5)-.5:F=v*R;const z=Math.max(0,Math.floor(F)),H=F-z,P=Math.min(p-1,Math.ceil(F)),G=A+z*u[2],X=D+z*u[2],Z=A+P*u[2],ne=D+P*u[2];for(let te=0;te<f;te++){const ae=m[G+te],oe=m[X+te],pe=m[Z+te],Ie=m[ne+te],me=ae+(pe-ae)*H,Se=oe+(Ie-oe)*H,Pe=me+(Se-me)*C;g[x++]=Pe}}}return t.makeTensorInfo([d,c,l,f],"float32",g)}const e7={kernelName:Fl,backendName:"cpu",kernelFunc:QY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t7(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:a}=e,{alignCorners:o}=s;Ce([a,r],"resizeBilinearGrad");const i=ve(r.shape),[u,c,l,d]=r.shape,[,h,p]=a.shape,f=new Float32Array(u*c*l*d),m=[o&&h>1?c-1:c,o&&p>1?l-1:l],g=[o&&h>1?h-1:h,o&&p>1?p-1:p],y=m[0]/g[0],b=m[1]/g[1],x=t.data.get(a.dataId).values;let w=0;for(let v=0;v<u;v++){const S=v*i[0];for(let N=0;N<h;N++){const $=N*y,T=Math.floor($),C=Math.min(Math.ceil($),c-1),k=S+T*i[1],A=S+C*i[1],D=$-T,R=1-D;for(let F=0;F<p;F++){const z=F*b,H=Math.floor(z),P=Math.min(Math.ceil(z),l-1),G=z-H,X=1-G,Z=k+H*i[2],ne=k+P*i[2],te=A+H*i[2],ae=A+P*i[2],oe=R*X,pe=R*G,Ie=D*X,me=D*G;for(let Se=0;Se<d;Se++){const Pe=x[w++];f[Z+Se]+=Pe*oe,f[ne+Se]+=Pe*pe,f[te+Se]+=Pe*Ie,f[ae+Se]+=Pe*me}}}}return t.makeTensorInfo([u,l,c,d],"float32",f)}const n7={kernelName:Rh,backendName:"cpu",kernelFunc:t7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s7(n){const{inputs:e,backend:t,attrs:s}=n,{images:r}=e,{alignCorners:a,halfPixelCenters:o,size:i}=s;Ce(r,"resizeNearestNeighbor");const u=ve(r.shape),[c,l]=i,[d,h,p,f]=r.shape,m=t.data.get(r.dataId).values,g=new Float32Array(d*c*l*f),y=[a&&c>1?h-1:h,a&&l>1?p-1:p],b=[a&&c>1?c-1:c,a&&l>1?l-1:l],x=y[0]/b[0],w=y[1]/b[1];let v=0;for(let S=0;S<d;S++){const N=S*u[0];for(let $=0;$<c;$++){const T=o?x*($+.5):x*$;let C=Math.min(h-1,a?Math.round(T):Math.floor(T));o&&(C=Math.max(0,C));const k=N+C*u[1];for(let A=0;A<l;A++){const D=o?w*(A+.5):w*A;let R=Math.min(p-1,a?Math.round(D):Math.floor(D));o&&(R=Math.max(0,R));const F=k+R*u[2];for(let z=0;z<f;z++){const H=m[F+z];g[v++]=H}}}}return t.makeTensorInfo([d,c,l,f],r.dtype,g)}const r7={kernelName:Ol,backendName:"cpu",kernelFunc:s7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a7(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:a}=e,{alignCorners:o}=s;Ce([a,r],"resizeNearestNeighborGrad");const i=ve(r.shape),u=ve(a.shape),[c,l,d,h]=r.shape,[,p,f]=a.shape,m=new Float32Array(c*l*d*h),g=t.data.get(a.dataId).values,y=[o&&p>1?l-1:l,o&&f>1?d-1:d],b=[o&&p>1?p-1:p,o&&f>1?f-1:f],x=y[0]/b[0],w=y[1]/b[1],v=1/x,S=1/w,N=Math.ceil(v)*2+2,$=Math.ceil(S)*2+2;for(let T=0;T<c;T++){const C=T*i[0];for(let k=0;k<l;k++){const A=C+k*i[1],D=Math.floor(k*v),R=Math.floor(D-N/2);for(let F=0;F<d;F++){const z=A+F*i[2],H=Math.floor(F*S),P=Math.floor(H-$/2);for(let G=0;G<h;G++){let X=0;for(let Z=0;Z<N;Z++){const ne=Z+R;if(ne<0||ne>=p)continue;const te=C+ne*u[1],ae=ne*x,oe=Math.min(l-1,o?Math.round(ae):Math.floor(ae));if(k===oe)for(let pe=0;pe<$;pe++){const Ie=pe+P;if(Ie<0||Ie>=f)continue;const me=te+Ie*u[2],Se=Ie*w,Pe=Math.min(d-1,o?Math.round(Se):Math.floor(Se));F===Pe&&(X+=g[me+G])}}m[z+G]=X}}}}return t.makeTensorInfo(r.shape,r.dtype,m)}const o7={kernelName:Dh,backendName:"cpu",kernelFunc:a7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i7(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dims:a}=s;Ce(r,"reverse");const o=r.shape.length,i=ze(a,r.shape);if(o===0)return Zr({inputs:{x:r},backend:t});const u=new dn(r.shape,r.dtype),c=t.bufferSync(r);for(let l=0;l<u.size;l++){const d=u.indexToLoc(l),h=d.slice();i.forEach(p=>h[p]=r.shape[p]-1-h[p]),u.set(c.get(...h),...d)}return t.makeTensorInfo(u.shape,u.dtype,u.values)}const u7={kernelName:Ll,backendName:"cpu",kernelFunc:i7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l7={kernelName:Kh,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:s}=n,{radians:r,fillValue:a,center:o}=e,i=t,u=Cn(s.dtype,U(s.shape)),[c,l,d,h]=s.shape,[p,f]=Ig(o,l,d),m=255,g=Math.sin(r),y=Math.cos(r),b=i.data.get(s.dataId).values;for(let w=0;w<c;w++){const v=w*d*l*h;for(let S=0;S<l;S++){const N=S*(d*h);for(let $=0;$<d;$++){const T=$*h;for(let C=0;C<h;C++){const k=[c,S,$,C],A=k[2],D=k[1];let R=(A-p)*y-(D-f)*g,F=(A-p)*g+(D-f)*y;R=Math.round(R+p),F=Math.round(F+f);let z=a;if(typeof a!="number"&&(C===3?z=m:z=a[C]),R>=0&&R<d&&F>=0&&F<l){const P=F*(d*h),G=R*h,X=v+P+G+C;z=b[X]}const H=v+N+T+C;u[H]=z}}}}return{dataId:i.write(u,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c7=xt(Ml,n=>{const e=Math.floor(n);return n-e<.5?Math.floor(n):n-e>.5?Math.ceil(n):e%2===0?e:e+1}),d7={kernelName:Ml,backendName:"cpu",kernelFunc:c7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h7(n){const{inputs:e,backend:t,attrs:s}=n,{indices:r,updates:a}=e,{shape:o}=s,{sliceRank:i,numUpdates:u,sliceSize:c,strides:l,outputSize:d}=ta(a,r,o),h=!0,p=t.bufferSync(r),f=t.bufferSync(a),m=Bo(p,f,o,d,c,u,i,l,0,h);return t.makeTensorInfo(o,m.dtype,m.values)}const p7={kernelName:Oh,backendName:"cpu",kernelFunc:h7};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f7(n,e){let t=0,s=n.length,r=0;for(;t<s;)r=Math.floor((t+s)/2),n[r]<e?t=r+1:s=r;return s}function m7(n,e){let t=0,s=n.length,r=0;for(;t<s;)r=Math.floor((t+s)/2),n[r]<=e?t=r+1:s=r;return s}function g7(n,e,t,s,r,a){const o=Ht("int32",t*r);for(let i=0;i<t;++i){const u=n.slice(i*s,(i+1)*s),c=i*r;for(let l=0;l<r;++l)o[c+l]=a==="left"?f7(u,e[l+c]):m7(u,e[l+c])}return o}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y7(n){const{inputs:e,backend:t,attrs:s}=n,{sortedSequence:r,values:a}=e,{side:o}=s,i=t.data.get(r.dataId).values,u=t.data.get(a.dataId).values,c=g7(i,u,r.shape[0],r.shape[1],a.shape[1],o);return t.makeTensorInfo(a.shape,"int32",c)}const b7={kernelName:Ph,backendName:"cpu",kernelFunc:y7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x7(n){const{inputs:e,backend:t}=n,{condition:s,t:r,e:a}=e;Ce([s,r,a],"select");const o=s.shape.length,i=t.data.get(s.dataId).values,u=t.data.get(r.dataId).values,c=t.data.get(a.dataId).values,l=ws(r.dtype,a.dtype),d=Ln(U(r.shape),l);let h=0;const p=o===0||o>1||r.shape.length===1?1:U(r.shape.slice(1));for(let f=0;f<i.length;f++)for(let m=0;m<p;m++)i[f]===1?d[h++]=u[f]:d[h++]=c[f];return t.makeTensorInfo(r.shape,l,d)}const w7={kernelName:Lh,backendName:"cpu",kernelFunc:x7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v7=Ng,I7=Cg,S7=xt(zl,n=>n>=0?I7*n:v7*(Math.exp(n)-1)),k7={kernelName:zl,backendName:"cpu",kernelFunc:S7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N7=xt(Ul,n=>n<0?-1:n>0?1:0),C7={kernelName:Ul,backendName:"cpu",kernelFunc:N7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const T7=xt(Vl,n=>Math.sin(n)),$7={kernelName:Vl,backendName:"cpu",kernelFunc:T7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _7=xt(Wl,n=>Math.sinh(n)),E7={kernelName:Wl,backendName:"cpu",kernelFunc:_7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A7=11920928955078125e-23,oI=Math.log(A7)+2,D7=xt(Hl,n=>{const e=n>-oI,t=n<oI,s=Math.exp(n);let r;return t?r=s:e?r=n:r=Math.log(1+s),r}),R7={kernelName:Hl,backendName:"cpu",kernelFunc:D7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O7(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:a,paddings:o}=s;Ce([r],"spaceToBatchND");const i=U(a),u=[[0,0]];u.push(...o);for(let S=1+a.length;S<r.shape.length;++S)u.push([0,0]);const c=K2.kernelFunc({inputs:{x:r},backend:t,attrs:{paddings:u,constantValue:0}}),l=Si(c.shape,a,i,!1),d=ki(l.length,a.length,!1),h=Ni(c.shape,a,i,!1),m=_t({inputs:{x:c},backend:t,attrs:{shape:l}}),b=is({inputs:{x:m},backend:t,attrs:{perm:d}}),v=_t({inputs:{x:b},backend:t,attrs:{shape:h}});return t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(b),v}const F7={kernelName:Bh,backendName:"cpu",kernelFunc:O7};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P7(n){const{inputs:e,backend:t}=n,{indices:s,values:r,denseShape:a,defaultValue:o}=e;if(a.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${a.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${r.shape}`);if(o.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${o.shape}`);const i=t.data.get(s.dataId).values,u=t.data.get(r.dataId).values,c=t.data.get(a.dataId).values,l=t.data.get(o.dataId).values[0],[d,h,p,f,m]=k2(i,s.shape,s.dtype,u,r.dtype,c,l);return[t.makeTensorInfo(h,s.dtype,d),t.makeTensorInfo([h[0]],r.dtype,p),t.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),t.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}const L7={kernelName:Pm,backendName:"cpu",kernelFunc:P7};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M7(n){const{inputs:e,backend:t}=n,{inputIndices:s,inputShape:r,newShape:a}=e;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${r.shape}`);if(a.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const o=Array.from(t.data.get(r.dataId).values),i=t.data.get(s.dataId).values,u=Array.from(t.data.get(a.dataId).values),[c,l,d]=N2(i,s.shape,s.dtype,o,u);return[t.makeTensorInfo(l,s.dtype,c),t.makeTensorInfo([d.length],a.dtype,new Int32Array(d))]}const B7={kernelName:Vh,backendName:"cpu",kernelFunc:M7};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z7(n){const{inputs:e,backend:t}=n,{data:s,indices:r,segmentIds:a}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${r.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${a.shape}`);if(r.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");const o=t.data.get(s.dataId).values,i=t.data.get(r.dataId).values,u=t.data.get(a.dataId).values,[c,l]=S0(o,s.shape,s.dtype,i,u,!0);return t.makeTensorInfo(l,s.dtype,c)}const V7={kernelName:Lm,backendName:"cpu",kernelFunc:z7};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W7(n){const{inputs:e,backend:t}=n,{data:s,indices:r,segmentIds:a}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${r.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${a.shape}`);if(r.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");const o=t.data.get(s.dataId).values,i=t.data.get(r.dataId).values,u=t.data.get(a.dataId).values,[c,l]=S0(o,s.shape,s.dtype,i,u);return t.makeTensorInfo(l,s.dtype,c)}const U7={kernelName:Mm,backendName:"cpu",kernelFunc:W7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G7(n){const{inputs:e,backend:t,attrs:s}=n,{sparseIndices:r,sparseValues:a,defaultValue:o}=e,{outputShape:i}=s,{sliceRank:u,numUpdates:c,sliceSize:l,strides:d,outputSize:h}=ta(a,r,i),p=!1,f=t.bufferSync(r);let m;switch(a.dtype){case"bool":{const g=t.bufferSync(a),y=!!t.data.get(o.dataId).values[0];m=Bo(f,g,i,h,l,c,u,d,y,p);break}case"float32":{const g=t.bufferSync(a),y=t.data.get(o.dataId).values[0];m=Bo(f,g,i,h,l,c,u,d,y,p);break}case"int32":{const g=t.bufferSync(a),y=t.data.get(o.dataId).values[0];m=Bo(f,g,i,h,l,c,u,d,y,p);break}case"string":{const g=t.bufferSync(a),y=to(t.data.get(o.dataId).values[0]);m=Bo(f,g,i,h,l,c,u,d,y,p);break}default:throw new Error(`Unsupported type ${a.dtype}`)}return t.makeTensorInfo(i,m.dtype,m.values)}const H7={kernelName:Wh,backendName:"cpu",kernelFunc:G7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j7(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{numOrSizeSplits:a,axis:o}=s,i=ze(o,r.shape)[0],u=Tg(r,a,i),c=new Array(r.shape.length).fill(0),l=r.shape.slice();return u.map(d=>{const h=[...l];h[i]=d;const p=ii({inputs:{x:r},backend:t,attrs:{begin:c,size:h}});return c[i]+=d,p})}const q7={kernelName:zh,backendName:"cpu",kernelFunc:j7};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const K7={kernelName:Bm,backendName:"cpu",kernelFunc:({inputs:n,backend:e})=>{const{x:t}=n,s=e;Ce(t,"square");const r=s.data.get(t.dataId).values,a=new Float32Array(r.length);for(let i=0;i<r.length;++i){const u=r[i];a[i]=u*u}return{dataId:s.write(a,t.shape,t.dtype),shape:t.shape,dtype:t.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X7=xt(bi,(n,e)=>{const t=e;return isNaN(n)?NaN:n>0?1:t.alpha}),Y7={kernelName:bi,backendName:"cpu",kernelFunc:X7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z7(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{begin:a,end:o,strides:i,beginMask:u,endMask:c,ellipsisMask:l,newAxisMask:d,shrinkAxisMask:h}=s;Ce(r,"stridedSlice");const{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:w}=xg(r.shape,a,o,i,u,c,l,d,h);let v;if(m)v=_t({inputs:{x:r},backend:t,attrs:{shape:f}});else if(g||y){_(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);const S=gg(b,x,w),N=ii({inputs:{x:r},backend:t,attrs:{begin:b,size:S}});v=_t({inputs:{x:N},backend:t,attrs:{shape:f}}),t.disposeIntermediateTensorInfo(N)}else{const S=t.bufferSync(r),N=$2(p,S,w,b);v=t.makeTensorInfo(f,N.dtype,N.values)}return v}const J7={kernelName:Uh,backendName:"cpu",kernelFunc:Z7};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q7(n){const{inputs:e,backend:t,attrs:s}=n,{separator:r,nGramWidths:a,leftPad:o,rightPad:i,padWidth:u,preserveShortSequences:c}=s,{data:l,dataSplits:d}=e,h=t.data.get(l.dataId).values,p=t.data.get(d.dataId).values,[f,m]=k0(h,p,r,a,o,i,u,c);return[t.makeTensorInfo([f.length],"string",f),t.makeTensorInfo(d.shape,"int32",m)]}const e9={kernelName:Vm,backendName:"cpu",kernelFunc:Q7};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t9(n){const{inputs:e,backend:t,attrs:s}=n,{skipEmpty:r}=s,{input:a,delimiter:o}=e;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(a.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(o.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);const i=t.data.get(a.dataId).values,u=t.data.get(o.dataId).values[0],[c,l,d]=N0(i,u,r),h=l.length;return[t.makeTensorInfo([h,2],"int32",c),t.makeTensorInfo([h],"string",l),t.makeTensorInfo([2],"int32",new Int32Array(d))]}const n9={kernelName:Wm,backendName:"cpu",kernelFunc:t9};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s9(n){const{inputs:e,backend:t,attrs:s}=n,{numBuckets:r}=s,{input:a}=e;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const o=t.data.get(a.dataId).values,i=C0(o,r);return t.makeTensorInfo(a.shape,"int32",i)}const r9={kernelName:Um,backendName:"cpu",kernelFunc:s9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a9=xt(Zl,n=>Math.tan(n)),o9={kernelName:Zl,backendName:"cpu",kernelFunc:a9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i9=xt(Jl,n=>Math.tanh(n)),u9={kernelName:Jl,backendName:"cpu",kernelFunc:i9};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l9(n){const{inputs:e,backend:t}=n,{tensor:s,indices:r,updates:a}=e,{sliceRank:o,numUpdates:i,sliceSize:u,strides:c,outputSize:l}=ta(a,r,s.shape),d=!1,h=t.bufferSync(r),p=t.bufferSync(a),f=t.bufferSync(s),m=Bo(h,p,s.shape,l,u,i,o,c,f,d);return t.makeTensorInfo(s.shape,m.dtype,m.values)}const c9={kernelName:Fh,backendName:"cpu",kernelFunc:l9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d9(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{reps:a}=s;Ce(r,"tile");const o=E2(t.bufferSync(r),a);return t.makeTensorInfo(o.shape,o.dtype,o.values)}const h9={kernelName:yi,backendName:"cpu",kernelFunc:d9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p9(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{k:a,sorted:o}=s;Ce(r,"topk");const i=t.data.get(r.dataId).values,[u,c]=D2(i,r.shape,r.dtype,a,o);return[t.makeTensorInfo(u.shape,u.dtype,u.values),t.makeTensorInfo(c.shape,c.dtype,c.values)]}const f9={kernelName:Gh,backendName:"cpu",kernelFunc:p9};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m9(n){const{inputs:e,attrs:t,backend:s}=n,{image:r,transforms:a}=e,{interpolation:o,fillMode:i,fillValue:u,outputShape:c}=t,[l,d,h,p]=r.shape,[f,m]=c??[d,h],g=[l,f,m,p],y=ve(r.shape),b=y[0],x=y[1],w=y[2],v=ve(g),S=v[0],N=v[1],$=v[2],T=Cn(r.dtype,U(g));T.fill(u);const C=s.data.get(r.dataId).values,k=s.data.get(a.dataId).values;for(let D=0;D<l;++D){const R=a.shape[0]===1?k:k.subarray(D*8,D*8+8);for(let F=0;F<f;++F)for(let z=0;z<m;++z)for(let H=0;H<p;++H){let P;const G=R[6]*z+R[7]*F+1;if(G===0)continue;const X=(R[0]*z+R[1]*F+R[2])/G,Z=(R[3]*z+R[4]*F+R[5])/G,ne=iI(X,h,i),te=iI(Z,d,i);switch(o){case"nearest":P=v9(C,d,h,b,x,w,D,te,ne,H,u);break;case"bilinear":P=I9(C,d,h,b,x,w,D,te,ne,H,u);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${o}`)}const ae=D*S+F*N+z*$+H;T[ae]=P}return s.makeTensorInfo(g,r.dtype,T)}return{dataId:s.write(T,g,r.dtype),shape:r.shape,dtype:r.dtype}}const g9={kernelName:Hh,backendName:"cpu",kernelFunc:m9};function iI(n,e,t){switch(t){case"reflect":return y9(n,e);case"wrap":return b9(n,e);case"nearest":return w9(n,e);case"constant":default:return x9(n)}}function y9(n,e){let t=n;if(t<0)if(e<=1)t=0;else{const s=2*e;t<s&&(t=s*Math.trunc(-t/s)+t),t=t<-e?t+s:-t-1}else if(t>e-1)if(e<=1)t=0;else{const s=2*e;t-=s*Math.trunc(t/s),t>=e&&(t=s-t-1)}return Xo(0,t,e-1)}function b9(n,e){let t=n;if(t<0)if(e<=1)t=0;else{const s=e-1;t+=e*(Math.trunc(-t/s)+1)}else if(t>e-1)if(e<=1)t=0;else{const s=e-1;t-=e*Math.trunc(t/s)}return Xo(0,t,e-1)}function x9(n,e){return n}function w9(n,e){return Xo(0,n,e-1)}function _c(n,e,t,s,r,a,o,i,u,c,l){const d=o*s+i*r+u*a+c;return 0<=i&&i<e&&0<=u&&u<t?n[d]:l}function v9(n,e,t,s,r,a,o,i,u,c,l){const d=Math.round(i),h=Math.round(u);return _c(n,e,t,s,r,a,o,d,h,c,l)}function I9(n,e,t,s,r,a,o,i,u,c,l){const d=Math.floor(i),h=Math.floor(u),p=d+1,f=h+1,m=(f-u)*_c(n,e,t,s,r,a,o,d,h,c,l)+(u-h)*_c(n,e,t,s,r,a,o,d,f,c,l),g=(f-u)*_c(n,e,t,s,r,a,o,p,h,c,l)+(u-h)*_c(n,e,t,s,r,a,o,p,f,c,l);return(p-i)*m+(i-d)*g}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S9(n){const{inputs:e,attrs:t,backend:s}=n,{axis:r}=t,{x:a}=e;Ce(a,"unique");const o=s.data.get(a.dataId).values,{outputValues:i,outputShape:u,indices:c}=$0(o,r,a.shape,a.dtype);return[s.makeTensorInfo(u,a.dtype,i),s.makeTensorInfo([c.length],"int32",c)]}const k9={kernelName:Gm,backendName:"cpu",kernelFunc:S9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N9(n){const{inputs:e,backend:t,attrs:s}=n,{value:r}=e;let{axis:a}=s;a<0&&(a+=r.shape.length);const o=r.shape.length,i=r.shape[a],u=new Array(o-1);let c=0;for(let p=0;p<o;p++)p!==a&&(u[c++]=r.shape[p]);const l=new Array(o).fill(0),d=r.shape.slice();d[a]=1;const h=new Array(i);for(let p=0;p<h.length;p++){l[a]=p;const f=ii({inputs:{x:r},backend:t,attrs:{begin:l,size:d}});h[p]=_t({inputs:{x:f},backend:t,attrs:{shape:u}}),t.disposeIntermediateTensorInfo(f)}return h}const C9={kernelName:jh,backendName:"cpu",kernelFunc:N9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T9(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,segmentIds:a}=e,{numSegments:o}=s;Ce(r,"unsortedSegmentSum");const i=r.shape.length,u=a.shape.length,c=[],l=[],d=i-u;let h=a;for(let f=0;f<d;++f){const m=Mf({inputs:{input:h},backend:t,attrs:{dim:f+1}});h=m,l.push(m)}for(let f=0;f<o;++f){const m=go(f,"int32"),g=t.makeTensorInfo([],"int32",m),y=Q$({inputs:{a:g,b:h},backend:t}),b=ho({inputs:{x:y},backend:t,attrs:{dtype:"float32"}}),x=zg({inputs:{a:b,b:r},backend:t}),w=dp({inputs:{x},backend:t,attrs:{axis:0,keepDims:!1}});c.push(w),l.push(g),l.push(y),l.push(b),l.push(x),l.push(w)}const p=q2({inputs:c,backend:t,attrs:{axis:0}});return l.forEach(f=>t.disposeIntermediateTensorInfo(f)),p}const $9={kernelName:Hm,backendName:"cpu",kernelFunc:T9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _9=[S5,sK,N5,T5,lK,_5,A5,R5,F5,L5,B5,V5,U5,j5,K5,Z5,Q5,tX,sX,v5,aX,iX,lX,dK,dX,iK,pK,pX,rK,mX,yX,bX,wX,IX,kX,CX,$X,EX,DX,OX,PX,MX,zX,WX,UX,HX,qX,XX,YX,ZX,JX,e8,s8,f5,a8,fK,p8,mK,f8,yK,w8,v8,S8,xK,vK,N8,T8,_8,A8,SK,NK,aK,R8,gX,F8,L8,B8,m5,TK,_K,V8,AK,U8,j8,K8,Z8,Q8,tY,nY,RK,rY,oY,uY,cY,hY,fY,gY,FK,bY,vY,kY,LK,BK,TY,EY,RY,VK,FY,LY,MY,K2,WY,y5,GK,GY,jY,KY,YY,oK,Db,JY,b5,x5,w5,e7,n7,r7,o7,u7,l7,d7,JK,p7,b7,w7,k7,e5,C7,$7,E7,t5,IY,R7,F7,L7,B7,V7,U7,H7,q7,r5,K7,o5,u5,Y7,J7,e9,n9,r9,h5,t8,o9,u9,c9,h9,f9,g9,WK,k9,C9,$9,PY];for(const n of _9)Ax(n);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lo={},Pp={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function E9(n,e){Lo[n]=e}function Sr(n,e){if(!(n in Lo)||e!=null){const s=D9(n,e);if(s!==null)Lo[n]=s;else return console.log("Could not get context for WebGL version",n),null}const t=Lo[n];return t==null||t.isContextLost()?(delete Lo[n],Sr(n)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),Lo[n])}function A9(n){if(!Y().getBool("IS_SAFARI")&&typeof OffscreenCanvas<"u"&&n===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function D9(n,e){if(n!==1&&n!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=e??A9(n);return t.addEventListener("webglcontextlost",s=>{s.preventDefault(),delete Lo[n]},!1),Y().getBool("SOFTWARE_WEBGL_ENABLED")&&(Pp.failIfMajorPerformanceCaveat=!1),n===1?t.getContext("webgl",Pp)||t.getContext("experimental-webgl",Pp):t.getContext("webgl2",Pp)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var nd;(function(n){n[n.DENSE=0]="DENSE",n[n.SHARED_BATCH=1]="SHARED_BATCH"})(nd||(nd={}));var Ds;(function(n){n[n.RENDER=0]="RENDER",n[n.UPLOAD=1]="UPLOAD",n[n.PIXELS=2]="PIXELS",n[n.DOWNLOAD=3]="DOWNLOAD"})(Ds||(Ds={}));var kn;(function(n){n[n.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",n[n.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",n[n.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",n[n.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",n[n.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(kn||(kn={}));function hp(n,e){return[e,n]}function R9(n,e){return n*e}function Lp(n){const e=U(n),t=Math.ceil(e/4);return Hy(t)}function ac(n,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(n/2))]}function O9(n,e){const[t,s]=ac(n,e);return t*s*4}function D0(n,e){const t=n;let s,r,a,o,i,u,c,l,d,h;return Y().getNumber("WEBGL_VERSION")===2?(s=t.R32F,r=t.R16F,a=t.RGBA16F,o=t.RGBA32F,i=t.RED,c=4,l=1,d=t.HALF_FLOAT,h=t.FLOAT,u=t.RGBA8):(s=n.RGBA,r=n.RGBA,a=n.RGBA,o=t.RGBA,i=n.RGBA,c=4,l=4,d=e!=null?e.HALF_FLOAT_OES:null,h=n.FLOAT,u=n.RGBA),{internalFormatFloat:s,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:o,textureFormatFloat:i,downloadTextureFormat:u,downloadUnpackNumChannels:c,defaultNumChannels:l,textureTypeHalfFloat:d,textureTypeFloat:h}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ge(n,e){const t=e();return Y().getBool("DEBUG")&&F9(n),t}function F9(n){const e=n.getError();if(e!==n.NO_ERROR)throw new Error("WebGL Error: "+B9(n,e))}const P9=596e-10,L9=65504;function M9(n){return!!(Y().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||n===0||P9<Math.abs(n)&&Math.abs(n)<L9)}function B9(n,e){switch(e){case n.NO_ERROR:return"NO_ERROR";case n.INVALID_ENUM:return"INVALID_ENUM";case n.INVALID_VALUE:return"INVALID_VALUE";case n.INVALID_OPERATION:return"INVALID_OPERATION";case n.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case n.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case n.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}function Mp(n,e){return Ea(n,()=>n.getExtension(e),'Extension "'+e+'" not supported on this browser.')}function z9(n,e){const t=Ea(n,()=>n.createShader(n.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(ge(n,()=>n.shaderSource(t,e)),ge(n,()=>n.compileShader(t)),n.getShaderParameter(t,n.COMPILE_STATUS)===!1)throw console.log(n.getShaderInfoLog(t)),new Error("Failed to compile vertex shader.");return t}function V9(n,e){const t=Ea(n,()=>n.createShader(n.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(ge(n,()=>n.shaderSource(t,e)),ge(n,()=>n.compileShader(t)),Y().get("ENGINE_COMPILE_ONLY"))return t;if(n.getShaderParameter(t,n.COMPILE_STATUS)===!1)throw X2(e,n.getShaderInfoLog(t)),new Error("Failed to compile fragment shader.");return t}const W9=/ERROR: [0-9]+:([0-9]+):/g;function X2(n,e){const t=W9.exec(e);if(t==null){console.log(`Couldn't parse line number in error: ${e}`),console.log(n);return}const s=+t[1],r=n.split(`
`),a=r.length.toString().length+2,o=r.map((d,h)=>Ji((h+1).toString(),a)+d);let i=0;for(let d=0;d<o.length;d++)i=Math.max(o[d].length,i);const u=o.slice(0,s-1),c=o.slice(s-1,s),l=o.slice(s);console.log(u.join(`
`)),console.log(e.split(`
`)[0]),console.log(`%c ${Ji(c[0],i)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(l.join(`
`))}function U9(n){return Ea(n,()=>n.createProgram(),"Unable to create WebGLProgram.")}function G9(n,e){if(ge(n,()=>n.linkProgram(e)),!Y().get("ENGINE_COMPILE_ONLY")&&n.getProgramParameter(e,n.LINK_STATUS)===!1)throw console.log(n.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}function Iy(n,e){if(ge(n,()=>n.validateProgram(e)),n.getProgramParameter(e,n.VALIDATE_STATUS)===!1)throw console.log(n.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function H9(n,e){const t=Ea(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return ge(n,()=>n.bindBuffer(n.ARRAY_BUFFER,t)),ge(n,()=>n.bufferData(n.ARRAY_BUFFER,e,n.STATIC_DRAW)),t}function j9(n,e){const t=Ea(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return ge(n,()=>n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,t)),ge(n,()=>n.bufferData(n.ELEMENT_ARRAY_BUFFER,e,n.STATIC_DRAW)),t}function q9(n){return Ea(n,()=>n.createTexture(),"Unable to create WebGLTexture.")}function K9(n,e){const t=Y().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(n<=0||e<=0){const s=`[${n}x${e}]`;throw new Error("Requested texture size "+s+" is invalid.")}if(n>t||e>t){const s=`[${n}x${e}]`,r=`[${t}x${t}]`;throw new Error("Requested texture size "+s+" greater than WebGL maximum on this browser / GPU "+r+".")}}function X9(n){return Ea(n,()=>n.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function uI(n,e,t,s,r,a,o){const i=n.getAttribLocation(e,t);return i===-1?!1:(ge(n,()=>n.bindBuffer(n.ARRAY_BUFFER,s)),ge(n,()=>n.vertexAttribPointer(i,r,n.FLOAT,!1,a,o)),ge(n,()=>n.enableVertexAttribArray(i)),!0)}function Y9(n,e,t){tZ(n,t),ge(n,()=>n.activeTexture(n.TEXTURE0+t)),ge(n,()=>n.bindTexture(n.TEXTURE_2D,e))}function Z9(n,e,t){return Ea(n,()=>n.getUniformLocation(e,t),'uniform "'+t+'" not present in program.')}function J9(n,e,t){return n.getUniformLocation(e,t)}function Q9(n,e,t,s){ge(n,()=>Y9(n,e,s)),ge(n,()=>n.uniform1i(t,s))}function Sy(n,e,t){ge(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,t)),ge(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,e,0))}function lI(n,e){ge(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,e)),ge(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,null,0))}function Bp(n){const e=n.checkFramebufferStatus(n.FRAMEBUFFER);if(e!==n.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+eZ(n,e))}function eZ(n,e){switch(e){case n.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case n.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}function Ea(n,e,t){const s=ge(n,()=>e());if(s==null)throw new Error(t);return s}function tZ(n,e){const t=n.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=e+n.TEXTURE0;if(s<n.TEXTURE0||s>t){const r=`[gl.TEXTURE0, gl.TEXTURE${t}]`;throw new Error(`textureUnit must be in ${r}.`)}}function Tu(n,e=2){return U(n.slice(0,n.length-e))}function $u(n){if(n.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[n.length>1?n[n.length-2]:1,n[n.length-1]]}function zp(n){let e=[1,1,1];return n.length===0||n.length===1&&n[0]===1||(e=[Tu(n),...$u(n)]),e}function nZ(n,e=!1){let t=Y().getNumber("WEBGL_MAX_TEXTURE_SIZE"),s=Y().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");s===1/0&&Y().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(s=t/2),e&&(t=t*2,s=s*2,n=n.map((i,u)=>u>=n.length-2?mx(n[u]):n[u]),n.length===1&&(n=[2,n[0]])),n.length!==2&&(n=mo(n).newShape);let r=U(n),a=null;n.length<=1&&r<=t?a=[1,r]:n.length===2&&n[0]<=t&&n[1]<=t?a=n:n.length===3&&n[0]*n[1]<=t&&n[2]<=t?a=[n[0]*n[1],n[2]]:n.length===3&&n[0]<=t&&n[1]*n[2]<=t?a=[n[0],n[1]*n[2]]:n.length===4&&n[0]*n[1]*n[2]<=t&&n[3]<=t?a=[n[0]*n[1]*n[2],n[3]]:n.length===4&&n[0]<=t&&n[1]*n[2]*n[3]<=t&&(a=[n[0],n[1]*n[2]*n[3]]);const o=a!=null&&Math.max(...a)>s&&Math.min(...a)<=(e?2:1)&&Math.min(...a)>0;if(a==null||o)if(e){const i=Tu(n);let u=2,c=2;n.length&&([u,c]=$u(n)),r=i*(u/2)*(c/2),a=Hy(r).map(l=>l*2)}else a=Hy(r);return a}function Vp(n){return n%2===0}function zf(n,e){if(n=n.slice(-2),e=e.slice(-2),Qe(n,e)||!n.length||!e.length||n[0]===0||n[1]===0||e[0]===0||e[1]===0)return!0;if(n.length!==e.length){const t=n[n.length-1],s=e[e.length-1];if(t===s||Vp(t)&&Vp(s)&&(n[0]===1||e[0]===1))return!0}return n[1]===e[1]&&Vp(n[0])&&Vp(e[0])}let ky,Ny;function sZ(n){if(ky==null){const e=Sr(n);ky=e.getParameter(e.MAX_TEXTURE_SIZE)}return ky}function rZ(n){if(Ny==null){const e=Sr(n);Ny=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Ny)}function aZ(n){if(n===0)return 0;let e;const t=Sr(n);return Zs(t,"EXT_disjoint_timer_query_webgl2")&&n===2?e=2:Zs(t,"EXT_disjoint_timer_query")?e=1:e=0,e}function Zs(n,e){return n.getExtension(e)!=null}function cI(n){try{if(Sr(n)!=null)return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function oZ(n){if(n===0)return!1;const e=Sr(n);if(n===1){if(!Zs(e,"OES_texture_float"))return!1}else if(!Zs(e,"EXT_color_buffer_float"))return!1;return Ob(e)}function iZ(n){if(n===0)return!1;const e=Sr(n);if(n===1){if(!Zs(e,"OES_texture_float")||!Zs(e,"WEBGL_color_buffer_float"))return!1}else{if(Zs(e,"EXT_color_buffer_float"))return Ob(e);const s="EXT_color_buffer_half_float";if(Zs(e,s)){const r=e.getExtension(s);return uZ(e,r)}return!1}return Ob(e)}function Ob(n){const e=D0(n),t=n.createTexture();n.bindTexture(n.TEXTURE_2D,t),n.texImage2D(n.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);const a=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,a),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,t,0);const o=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(t),n.deleteFramebuffer(a),o}function uZ(n,e){const t=D0(n,e),s=n.createTexture();n.bindTexture(n.TEXTURE_2D,s),n.texImage2D(n.TEXTURE_2D,0,t.internalFormatHalfFloat,1,1,0,t.textureFormatFloat,t.textureTypeHalfFloat,null);const o=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,o),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,s,0);const i=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(s),n.deleteFramebuffer(o),i}function lZ(n){return n!==2?!1:Sr(n).fenceSync!=null}function pp(n,e){Array.isArray(n)||(n=[n]),n.forEach(t=>{t!=null&&_(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the WebGL backend.`)})}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Te=Y();Te.registerFlag("HAS_WEBGL",()=>Te.getNumber("WEBGL_VERSION")>0);Te.registerFlag("WEBGL_VERSION",()=>cI(2)?2:cI(1)?1:0);Te.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);Te.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>Te.get("WEBGL_VERSION")===2);Te.registerFlag("WEBGL_CPU_FORWARD",()=>!0);Te.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);Te.registerFlag("WEBGL_PACK",()=>Te.getBool("HAS_WEBGL"));Te.registerFlag("WEBGL_PACK_NORMALIZATION",()=>Te.getBool("WEBGL_PACK"));Te.registerFlag("WEBGL_PACK_CLIP",()=>Te.getBool("WEBGL_PACK"));Te.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>Te.getBool("WEBGL_PACK"));Te.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>Te.getBool("WEBGL_PACK"));Te.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>Te.getBool("WEBGL_PACK"));Te.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>Te.getBool("WEBGL_PACK"));Te.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>Te.getBool("WEBGL_PACK"));Te.registerFlag("WEBGL_PACK_REDUCE",()=>Te.getBool("WEBGL_PACK"));Te.registerFlag("WEBGL_LAZILY_UNPACK",()=>Te.getBool("WEBGL_PACK"));Te.registerFlag("WEBGL_CONV_IM2COL",()=>Te.getBool("WEBGL_PACK"));Te.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",()=>Te.getBool("WEBGL_PACK"));Te.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>sZ(Te.getNumber("WEBGL_VERSION")));Te.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>rZ(Te.getNumber("WEBGL_VERSION")));Te.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const n=Te.getNumber("WEBGL_VERSION");return n===0?0:aZ(n)});Te.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>Te.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Ik());Te.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>oZ(Te.getNumber("WEBGL_VERSION")));Te.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>Te.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:Te.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));Te.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>iZ(Te.getNumber("WEBGL_VERSION")));Te.registerFlag("WEBGL_FENCE_API_ENABLED",()=>lZ(Te.getNumber("WEBGL_VERSION")));Te.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>Te.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);Te.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,n=>{if(typeof n!="number")throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${n}.`);if(n<0&&n!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${n}.`)});Te.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>Ik()?1:-1,n=>{if(typeof n!="number")throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${n}.`);if(n<0&&n!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${n}.`)});Te.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);Te.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);Te.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);Te.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);Te.registerFlag("WEBGL_EXP_CONV",()=>!1);Te.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>Te.getBool("IS_TEST"));Te.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0);Te.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1);Te.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);Te.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xn(){let n,e,t,s,r,a,o,i,u,c;return Y().getNumber("WEBGL_VERSION")===2?(n="#version 300 es",e="in",t="out",s="in",r="texture",a="outputColor",o="out vec4 outputColor;",i=Y().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",u="",c=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(n="",e="attribute",t="varying",s="varying",r="texture2D",a="gl_FragColor",o="",i=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,u=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,c=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:n,attribute:e,varyingVs:t,varyingFs:s,texture2D:r,output:a,defineOutput:o,defineSpecialNaN:i,defineSpecialInf:u,defineRound:c}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $i(n,e,t="index"){const s=ve(e);return s.map((r,a)=>{const o=`int ${n[a]} = ${t} / ${r}`,i=a===s.length-1?`int ${n[a+1]} = ${t} - ${n[a]} * ${r}`:`index -= ${n[a]} * ${r}`;return`${o}; ${i};`}).join("")}function Vg(n,e,t="index"){const s=ve(e);return s.map((r,a)=>{const o=`int ${n[a]} = ${t} / outShapeStrides[${a}]`,i=a===s.length-1?`int ${n[a+1]} = ${t} - ${n[a]} * outShapeStrides[${a}]`:`index -= ${n[a]} * outShapeStrides[${a}]`;return`${o}; ${i};`}).join("")}function cZ(n,e){const t=n.length,s=n.map(a=>`${e}[${a}]`),r=new Array(t-1);r[t-2]=s[t-1];for(let a=t-3;a>=0;--a)r[a]=`(${r[a+1]} * ${s[a+1]})`;return r}function dZ(n,e,t="index"){const s=n.map((a,o)=>o),r=cZ(s,e);return r.map((a,o)=>{const i=`int ${n[o]} = ${t} / ${r[o]}`,u=o===r.length-1?`int ${n[o+1]} = ${t} - ${n[o]} * ${r[o]}`:`index -= ${n[o]} * ${r[o]}`;return`${i}; ${u};`}).join("")}function R0(n){const e=ve(n).map(t=>t.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;
  }
`}function O0(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}const Y2=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{getBroadcastDims:Z2}=$4;function hZ(n,e,t){const s=[];if(n.forEach(p=>{const f=U(p.shapeInfo.logicalShape);if(p.shapeInfo.isUniform?s.push(`uniform float ${p.name}${f>1?`[${f}]`:""};`):(s.push(`uniform sampler2D ${p.name};`),s.push(`uniform int offset${p.name};`)),t.enableShapeUniforms){const{uniformShape:m}=F0(t.packedInputs,p.shapeInfo.logicalShape,p.shapeInfo.texShape);switch(m.length){case 1:s.push(`uniform int ${p.name}Shape;`);break;case 2:s.push(`uniform ivec2 ${p.name}Shape;`);break;case 3:s.push(`uniform ivec3 ${p.name}Shape;`);break;case 4:s.push(`uniform ivec4 ${p.name}Shape;`);break}s.push(`uniform ivec2 ${p.name}TexShape;`)}}),t.enableShapeUniforms){switch(e.logicalShape.length){case 1:s.push("uniform int outShape;");break;case 2:s.push("uniform ivec2 outShape;"),s.push("uniform int outShapeStrides;");break;case 3:s.push("uniform ivec3 outShape;"),s.push("uniform ivec2 outShapeStrides;");break;case 4:s.push("uniform ivec4 outShape;"),s.push("uniform ivec3 outShapeStrides;");break}s.push("uniform ivec2 outTexShape;")}t.customUniforms&&t.customUniforms.forEach(p=>{s.push(`uniform ${p.type} ${p.name}${p.arrayIndex?`[${p.arrayIndex}]`:""};`)});const r=s.join(`
`),a=n.map(p=>pZ(p,e,t.packedInputs,t.enableShapeUniforms)).join(`
`),o=e.texShape,i=Xn(),u=gZ(i);let c,l,d=xZ(i);return e.isPacked?(c=fZ(e.logicalShape,o,t.enableShapeUniforms),l=bZ(i)):(c=mZ(e.logicalShape,o,t.enableShapeUniforms),l=yZ(i)),t.packedInputs&&(d+=SZ),[d,u,l,r,c,a,t.userCode].join(`
`)}function oc(n,e=!1){const t=n.shapeInfo.logicalShape;switch(t.length){case 0:return FZ(n,e);case 1:return LZ(n,e);case 2:return BZ(n,e);case 3:return VZ(n,e);case 4:return UZ(n,e);case 5:return GZ(n);case 6:return HZ(n);default:throw new Error(`${t.length}-D input sampling is not yet supported`)}}function J2(n,e){switch(n.shapeInfo.logicalShape.length){case 0:return OZ(n);case 1:return PZ(n,e);case 2:return MZ(n,e);case 3:return zZ(n,e);default:return WZ(n,e)}}function pZ(n,e,t=!1,s){let r="";t?r+=J2(n,s):r+=oc(n,s);const a=n.shapeInfo.logicalShape,o=e.logicalShape;return a.length<=o.length&&(t?r+=jZ(n,e):r+=qZ(n,e)),r}function fZ(n,e,t){switch(n.length){case 0:return Q2();case 1:return kZ(n,e,t);case 2:return DZ(n,e,t);case 3:return CZ(n,e,t);default:return $Z(n,e,t)}}function mZ(n,e,t){switch(n.length){case 0:return Q2();case 1:return NZ(n,e,t);case 2:return RZ(n,e,t);case 3:return TZ(n,e,t);case 4:return _Z(n,e,t);case 5:return EZ(n,e);case 6:return AZ(n,e);default:throw new Error(`${n.length}-D output sampling is not yet supported`)}}function gZ(n){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${n.texture2D}(textureSampler, uv).r;
    }
  `}function yZ(n){return`
    void setOutput(float val) {
      ${n.output} = vec4(val, 0, 0, 0);
    }
  `}function bZ(n){return`
    void setOutput(vec4 val) {
      ${n.output} = val;
    }
  `}function xZ(n){return`${n.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${n.varyingFs} vec2 resultUV;
    ${n.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${n.defineSpecialNaN}
    ${n.defineSpecialInf}
    ${n.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${wZ}
    ${vZ}
    ${IZ}
  `}const wZ=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,vZ=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,IZ=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,SZ=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function Q2(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function kZ(n,e,t){const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return s[0]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${s[1]}.0);
      }
    `:s[1]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${s[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      return 2 * (resTexRC.x * ${s[1]} + resTexRC.y);
    }
  `}function NZ(n,e,t){return e[0]===1?t?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${e[1]}.0);
      }
    `:e[1]===1?t?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${e[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      return resTexRC.x * ${e[1]} + resTexRC.y;
    }
  `}function CZ(n,e,t){if(t)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(n[2]/2),a=r*Math.ceil(n[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      int b = index / ${a};
      index -= b * ${a};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec3(b, r, c);
    }
  `}function TZ(n,e,t){if(t)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${Vg(["r","c","d"],n)}
    return ivec3(r, c, d);
  }
`;const s=$i(["r","c","d"],n);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${s}
      return ivec3(r, c, d);
    }
  `}function $Z(n,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(n[n.length-1]/2),a=r*Math.ceil(n[n.length-2]/2);let o=a,i="",u="b, r, c";for(let c=2;c<n.length-1;c++)o*=n[n.length-c-1],i=`
      int b${c} = index / ${o};
      index -= b${c} * ${o};
    `+i,u=`b${c}, `+u;return`
    ivec${n.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      ${i}

      int b = index / ${a};
      index -= b * ${a};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec${n.length}(${u});
    }
  `}function _Z(n,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${Vg(["r","c","d","d2"],n)}
      return ivec4(r, c, d, d2);
    }
  `;const s=$i(["r","c","d","d2"],n);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${s}
      return ivec4(r, c, d, d2);
    }
  `}function EZ(n,e){const t=$i(["r","c","d","d2","d3"],n);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},
                             ${e[1]}));

      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function AZ(n,e){const t=$i(["r","c","d","d2","d3","d4"],n);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function DZ(n,e,t){const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(Qe(n,e))return t?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${s[0]}, ${s[1]}));
      }
    `;const r=Math.ceil(n[1]/2);return t?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));

      int index = resTexRC.x * ${s[1]} + resTexRC.y;
      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec2(r, c);
    }
  `}function RZ(n,e,t){return Qe(n,e)?t?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));
      }
    `:n[1]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:n[0]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:t?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      int r = index / ${n[1]};
      int c = index - r * ${n[1]};
      return ivec2(r, c);
    }
  `}function _i(n){return`offset${n}`}function OZ(n){const e=n.name,t="get"+e.charAt(0).toUpperCase()+e.slice(1),s=Xn();return`
    vec4 ${t}() {
      return ${s.texture2D}(${e}, halfCR);
    }
  `}function FZ(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1);if(n.shapeInfo.isUniform)return`float ${s}() {return ${t};}`;const[r,a]=n.shapeInfo.texShape;if(r===1&&a===1)return`
      float ${s}() {
        return sampleTexture(${t}, halfCR);
      }
    `;const o=_i(t);if(e)return`
    float ${s}() {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], ${o});
      return sampleTexture(${t}, uv);
    }
  `;const[i,u]=n.shapeInfo.texShape;return`
    float ${s}() {
      vec2 uv = uvFromFlat(${i}, ${u}, ${o});
      return sampleTexture(${t}, uv);
    }
  `}function PZ(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),r=n.shapeInfo.texShape,a=Xn();if(e)return`
    vec4 ${s}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${a.texture2D}(${t}, uv);
    }
  `;const o=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return`
    vec4 ${s}(int index) {
      vec2 uv = packedUVfrom1D(
        ${o[0]}, ${o[1]}, index);
      return ${a.texture2D}(${t}, uv);
    }
  `}function LZ(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1);if(n.shapeInfo.isUniform)return`
      float ${s}(int index) {
        ${ic(n)}
      }
    `;const r=n.shapeInfo.texShape,a=r[0],o=r[1];if(o===1&&a===1)return`
      float ${s}(int index) {
        return sampleTexture(${t}, halfCR);
      }
    `;const i=_i(t);return o===1?e?`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / float(${t}TexShape[0]));
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${a}.0);
        return sampleTexture(${t}, uv);
      }
    `:a===1?e?`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / float(${t}TexShape[1]), 0.5);
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${o}.0, 0.5);
        return sampleTexture(${t}, uv);
      }
    `:e?`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], index + ${i});
      return sampleTexture(${t}, uv);
    }
  `:`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${a}, ${o}, index + ${i});
      return sampleTexture(${t}, uv);
    }
  `}function MZ(n,e){const t=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=n.shapeInfo.texShape,o=a[0],i=a[1],u=Xn();if(a!=null&&Qe(t,a))return e?`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);

        return ${u.texture2D}(${s}, uv);
      }
    `:`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${o}.0);

        return ${u.texture2D}(${s}, uv);
      }
    `;if(e)return`
    vec4 ${r}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${u.texture2D}(${s}, uv);
    }
  `;const c=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],l=Math.ceil(t[1]/2);return`
    vec4 ${r}(int row, int col) {
      vec2 uv = packedUVfrom2D(${l}, ${c[0]}, ${c[1]}, row, col);
      return ${u.texture2D}(${s}, uv);
    }
  `}function BZ(n,e){const t=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=n.shapeInfo.texShape;if(a!=null&&Qe(t,a)){if(e)return`
      float ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `;const h=a[0],p=a[1];return`
    float ${r}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${p}.0, ${h}.0);
      return sampleTexture(${s}, uv);
    }
  `}const{newShape:o,keptDims:i}=mo(t),u=o;if(u.length<t.length){const h=uc(n,u),p=["row","col"];return`
      ${oc(h,e)}
      float ${r}(int row, int col) {
        return ${r}(${lc(p,i)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));
        ${ic(n)}
      }
    `;const c=a[0],l=a[1],d=_i(s);return l===1?e?`
      float ${r}(int row, int col) {
        float index = dot(vec3(row, col, ${d}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${s}TexShape[0]));
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${d}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${c}.0);
      return sampleTexture(${s}, uv);
    }
  `:c===1?e?`
      float ${r}(int row, int col) {
        float index = dot(vec3(row, col, ${d}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${s}TexShape[1]), 0.5);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${d}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${l}.0, 0.5);
      return sampleTexture(${s}, uv);
    }
  `:e?`
      float ${r}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s}Shape[1] + col + ${d};
        vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
        return sampleTexture(${s}, uv);
      }
    `:`
  float ${r}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${t[1]} + col + ${d};
    vec2 uv = uvFromFlat(${c}, ${l}, index);
    return sampleTexture(${s}, uv);
  }
`}function zZ(n,e){const t=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=n.shapeInfo.texShape,o=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(t[0]===1){const h=t.slice(1),p=[1,2],f=uc(n,h),m=["b","row","col"];return`
        ${J2(f,e)}
        vec4 ${r}(int b, int row, int col) {
          return ${r}(${lc(m,p)});
        }
      `}const i=Xn();if(e)return`
    vec4 ${r}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${i.texture2D}(${s}, uv);
    }
  `;const u=o[0],c=o[1],l=Math.ceil(t[2]/2),d=l*Math.ceil(t[1]/2);return`
    vec4 ${r}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${u}, ${c}, ${d}, ${l}, b, row, col);
      return ${i.texture2D}(${s}, uv);
    }
  `}function VZ(n,e){const t=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=t[1]*t[2],o=t[2],{newShape:i,keptDims:u}=mo(t),c=i;if(c.length<t.length){const m=uc(n,c),g=["row","col","depth"];return`
        ${oc(m,e)}
        float ${r}(int row, int col, int depth) {
          return ${r}(${lc(g,u)});
        }
      `}if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${a}, ${o}, 1)));
        ${ic(n)}
      }
    `;const l=n.shapeInfo.texShape,d=l[0],h=l[1],p=n.shapeInfo.flatOffset;if(h===a&&p==null)return e?`
      float ${r}(int row, int col, int depth) {
        int stride1 = ${s}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
        float ${r}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${o}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${h}.0, ${d}.0);
          return sampleTexture(${s}, uv);
        }
      `;if(h===o&&p==null)return e?`
      float ${r}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${s}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}.0, ${d}.0);
      return sampleTexture(${s}, uv);
    }
  `;const f=_i(s);return e?`
    float ${r}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${s}Shape[1] * ${s}Shape[2];
      int stride1 = ${s}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${f};
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
      return sampleTexture(${s}, uv);
    }
    `:`
      float ${r}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${a} + col * ${o} + depth + ${f};
        vec2 uv = uvFromFlat(${d}, ${h}, index);
        return sampleTexture(${s}, uv);
      }
  `}function WZ(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),r=Xn();if(e)return`
    vec4 ${s}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${t}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${t}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${t}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${r.texture2D}(${t}, uv);
    }
  `;const a=n.shapeInfo.logicalShape,o=a.length,i=n.shapeInfo.texShape,u=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],c=u[0],l=u[1],d=Math.ceil(a[o-1]/2);let h=d*Math.ceil(a[o-2]/2),p="int b, int row, int col",f=`b * ${h} + (row / 2) * ${d} + (col / 2)`;for(let m=2;m<o-1;m++)p=`int b${m}, `+p,h*=a[o-m-1],f=`b${m} * ${h} + `+f;return`
    vec4 ${s}(${p}) {
      int index = ${f};
      int texR = index / ${l};
      int texC = index - texR * ${l};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${l}, ${c});
      return ${r.texture2D}(${t}, uv);
    }
  `}function UZ(n,e){const t=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=t[3],o=t[2]*a,i=t[1]*o,{newShape:u,keptDims:c}=mo(t);if(u.length<t.length){const b=uc(n,u),x=["row","col","depth","depth2"];return`
      ${oc(b,e)}
      float ${r}(int row, int col, int depth, int depth2) {
        return ${r}(${lc(x,c)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${i}, ${o}, ${a}, 1)));
        ${ic(n)}
      }
    `;const l=n.shapeInfo.flatOffset,d=n.shapeInfo.texShape,h=d[0],p=d[1],f=`int stride2 = ${s}Shape[3];`,m=`int stride1 = ${s}Shape[2] * stride2;`,g=`int stride0 = ${s}Shape[1] * stride1;`;if(p===i&&l==null)return e?`
      float ${r}(int row, int col, int depth, int depth2) {
        ${f}
        ${m}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${o}, ${a}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${h}.0);
        return sampleTexture(${s}, uv);
      }
    `;if(p===a&&l==null)return e?`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${s}Shape[1] * ${s}Shape[2], ${s}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${t[1]*t[2]}, ${t[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${h}.0);
        return sampleTexture(${s}, uv);
      }
    `;const y=_i(s);return e?`
    float ${r}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${f}
      ${m}
      ${g}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index + ${y});
      return sampleTexture(${s}, uv);
    }
  `:`
    float ${r}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${o} +
          depth * ${a} + depth2;
      vec2 uv = uvFromFlat(${h}, ${p}, index + ${y});
      return sampleTexture(${s}, uv);
    }
  `}function GZ(n){const e=n.shapeInfo.logicalShape,t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),r=e[4],a=e[3]*r,o=e[2]*a,i=e[1]*o,{newShape:u,keptDims:c}=mo(e);if(u.length<e.length){const m=uc(n,u),g=["row","col","depth","depth2","depth3"];return`
      ${oc(m)}
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        return ${s}(${lc(g,c)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${i}, ${o}, ${a}, ${r})) +
          depth3;
        ${ic(n)}
      }
    `;const l=n.shapeInfo.flatOffset,d=n.shapeInfo.texShape,h=d[0],p=d[1];if(p===i&&l==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${o}, ${a}, ${r}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${h}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(p===r&&l==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]},
               ${e[2]*e[3]}, ${e[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${h}.0);
        return sampleTexture(${t}, uv);
      }
    `;const f=_i(t);return`
    float ${s}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${o} + depth * ${a} +
          depth2 * ${r} + depth3 + ${f};
      vec2 uv = uvFromFlat(${h}, ${p}, index);
      return sampleTexture(${t}, uv);
    }
  `}function HZ(n){const e=n.shapeInfo.logicalShape,t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),{newShape:r,keptDims:a}=mo(e);if(r.length<e.length){const g=uc(n,r),y=["row","col","depth","depth2","depth3","depth4"];return`
      ${oc(g)}
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${s}(${lc(y,a)});
      }
    `}const o=e[5],i=e[4]*o,u=e[3]*i,c=e[2]*u,l=e[1]*c;if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${l}, ${c}, ${u}, ${i})) +
          dot(
            vec2(depth3, depth4),
            vec2(${o}, 1)));
        ${ic(n)}
      }
    `;const d=n.shapeInfo.flatOffset,h=n.shapeInfo.texShape,p=h[0],f=h[1];if(f===l&&d==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${c}, ${u}, ${i}, ${o})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${p}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(f===o&&d==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]*e[4]},
               ${e[2]*e[3]*e[4]},
               ${e[3]*e[4]},
               ${e[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${p}.0);
        return sampleTexture(${t}, uv);
      }
    `;const m=_i(t);return`
    float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${l} + col * ${c} + depth * ${u} +
          depth2 * ${i} + depth3 * ${o} + depth4 + ${m};
      vec2 uv = uvFromFlat(${p}, ${f}, index);
      return sampleTexture(${t}, uv);
    }
  `}function ic(n){const e=n.name,t=U(n.shapeInfo.logicalShape);return t<2?`return ${e};`:`
    for (int i = 0; i < ${t}; i++) {
      if (i == index) {
        return ${e}[i];
      }
    }
  `}function jZ(n,e){const t=n.name,s=t.charAt(0).toUpperCase()+t.slice(1),r="get"+s+"AtOutCoords",a=n.shapeInfo.logicalShape.length,o=e.logicalShape.length,i=Z2(n.shapeInfo.logicalShape,e.logicalShape),u=vt(o),c=o-a;let l;const d=["x","y","z","w","u","v"];a===0?l="":o<2&&i.length>=1?l="coords = 0;":l=i.map(b=>`coords.${d[b+c]} = 0;`).join(`
`);let h="";o<2&&a>0?h="coords":h=n.shapeInfo.logicalShape.map((b,x)=>`coords.${d[x+c]}`).join(", ");let p="return outputValue;";const m=U(n.shapeInfo.logicalShape)===1,y=U(e.logicalShape)===1;if(a===1&&!m&&!y)p=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(m&&!y)o===1?p=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:p=`
        return vec4(outputValue.x);
      `;else if(i.length){const b=a-2,x=a-1;i.indexOf(b)>-1&&i.indexOf(x)>-1?p="return vec4(outputValue.x);":i.indexOf(b)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":i.indexOf(x)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${r}() {
      ${u} coords = getOutputCoords();
      ${l}
      vec4 outputValue = get${s}(${h});
      ${p}
    }
  `}function qZ(n,e){const t=n.name,s=t.charAt(0).toUpperCase()+t.slice(1),r="get"+s+"AtOutCoords",a=e.texShape,o=n.shapeInfo.texShape,i=n.shapeInfo.logicalShape.length,u=e.logicalShape.length;if(!n.shapeInfo.isUniform&&i===u&&n.shapeInfo.flatOffset==null&&Qe(o,a))return`
      float ${r}() {
        return sampleTexture(${t}, resultUV);
      }
    `;const c=vt(u),l=Z2(n.shapeInfo.logicalShape,e.logicalShape),d=u-i;let h;const p=["x","y","z","w","u","v"];i===0?h="":u<2&&l.length>=1?h="coords = 0;":h=l.map(m=>`coords.${p[m+d]} = 0;`).join(`
`);let f="";return u<2&&i>0?f="coords":f=n.shapeInfo.logicalShape.map((m,g)=>`coords.${p[g+d]}`).join(", "),`
    float ${r}() {
      ${c} coords = getOutputCoords();
      ${h}
      return get${s}(${f});
    }
  `}function vt(n){if(n<=1)return"int";if(n===2)return"ivec2";if(n===3)return"ivec3";if(n===4)return"ivec4";if(n===5)return"ivec5";if(n===6)return"ivec6";throw Error(`GPU for rank ${n} is not yet supported`)}function F0(n,e,t){const{newShape:s,keptDims:r}=mo(e),a=e.length,o=n&&a===3&&e[0]===1,i=o?e.slice(1):s,u=!n&&a>1&&!Qe(e,t)&&s.length<a||o;return{useSqueezeShape:u,uniformShape:u?i:e,keptDims:r}}function uc(n,e){const t=JSON.parse(JSON.stringify(n));return t.shapeInfo.logicalShape=e,t}function lc(n,e){return e.map(t=>n[t]).join(", ")}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KZ(n,e,t,s){const r=t.map((l,d)=>{const h={logicalShape:l.shape,texShape:l.isUniform?null:l.texData.texShape,isUniform:l.isUniform,isPacked:l.isUniform?!1:l.texData.isPacked,flatOffset:null};return l.texData!=null&&l.texData.slice!=null&&l.texData.slice.flatOffset>0&&(h.flatOffset=l.texData.slice.flatOffset),{name:e.variableNames[d],shapeInfo:h}}),a=r.map(l=>l.shapeInfo),o={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},i=hZ(r,o,e),u=V9(n.gl,i),c=n.createProgram(u);return Y().get("ENGINE_COMPILE_ONLY")?{program:e,fragmentShader:u,source:i,webGLProgram:c,inShapeInfos:a,outShapeInfo:o,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(n.buildVao(c),Object.assign({program:e,fragmentShader:u,source:i,webGLProgram:c,inShapeInfos:a,outShapeInfo:o},e_(n,e,c)))}function e_(n,e,t){const s=[],r=[];let a,o,i,u=null,c=null;c=n.getUniformLocation(t,"NAN",!1),Y().getNumber("WEBGL_VERSION")===1&&(u=n.getUniformLocation(t,"INFINITY",!1));const l=!1;for(const d of e.variableNames){const h={name:d,uniform:n.getUniformLocation(t,d,l),offset:n.getUniformLocation(t,`offset${d}`,l)};e.enableShapeUniforms&&(h.shape=n.getUniformLocation(t,`${d}Shape`,l),h.texShape=n.getUniformLocation(t,`${d}TexShape`,l)),s.push(h)}if(e.enableShapeUniforms&&(a=n.getUniformLocation(t,"outShape",l),i=n.getUniformLocation(t,"outShapeStrides",l),o=n.getUniformLocation(t,"outTexShape",l)),e.customUniforms)for(const d of e.customUniforms)r.push(n.getUniformLocation(t,d.name,l));return{variablesLocations:s,customUniformLocations:r,infLoc:u,nanLoc:c,outShapeLocation:a,outShapeStridesLocation:i,outTexShapeLocation:o}}function dI(n,e){if(n.length!==e.length)throw Error(`Binary was compiled with ${n.length} inputs, but was executed with ${e.length} inputs`);n.forEach((t,s)=>{const r=t.logicalShape,a=e[s],o=a.shape;if(!Qe(r,o))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${o} must match`);if(t.isUniform&&a.isUniform)return;const i=t.texShape,u=a.isUniform?null:a.texData.texShape;if(!Qe(i,u))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${u} must match`)})}function XZ(n,e,t,s,r){e.program.enableShapeUniforms||(dI(e.inShapeInfos,t),dI([e.outShapeInfo],[s]));const a=s.texData.texture,o=s.texData.texShape;s.texData.isPacked?n.setOutputPackedMatrixTexture(a.texture,o[0],o[1]):n.setOutputMatrixTexture(a.texture,o[0],o[1]),n.setProgram(e.webGLProgram),n.bindVertexArray(e.webGLProgram.vao),Y().getNumber("WEBGL_VERSION")===1&&e.infLoc!==null&&n.gl.uniform1f(e.infLoc,1/0),e.nanLoc!==null&&n.gl.uniform1f(e.nanLoc,NaN);for(let u=0;u<t.length;++u){const c=t[u],{uniform:l,offset:d,shape:h,texShape:p}=e.variablesLocations[u];if(h){const{uniformShape:f}=F0(e.program.packedInputs,c.shape,c.texData.texShape);switch(f.length){case 1:n.gl.uniform1iv(h,new Int32Array(f));break;case 2:n.gl.uniform2iv(h,new Int32Array(f));break;case 3:n.gl.uniform3iv(h,new Int32Array(f));break;case 4:n.gl.uniform4iv(h,new Int32Array(f));break}}if(p&&n.gl.uniform2i(p,c.texData.texShape[0],c.texData.texShape[1]),l!=null){if(c.isUniform){if(U(c.shape)<2)n.gl.uniform1f(l,c.uniformValues[0]);else{let f=c.uniformValues;f instanceof Float32Array||(f=new Float32Array(f)),n.gl.uniform1fv(l,f)}continue}c.texData.slice!=null&&d!=null&&n.gl.uniform1i(d,c.texData.slice.flatOffset),n.setInputMatrixTexture(c.texData.texture.texture,l,u)}}const i=e.outShapeLocation;if(i)switch(s.shape.length){case 1:n.gl.uniform1iv(i,new Int32Array(s.shape));break;case 2:n.gl.uniform2iv(i,new Int32Array(s.shape));break;case 3:n.gl.uniform3iv(i,new Int32Array(s.shape));break;case 4:n.gl.uniform4iv(i,new Int32Array(s.shape));break}if(e.outShapeStridesLocation){const u=ve(s.shape);switch(s.shape.length){case 2:n.gl.uniform1iv(e.outShapeStridesLocation,new Int32Array(u));break;case 3:n.gl.uniform2iv(e.outShapeStridesLocation,new Int32Array(u));break;case 4:n.gl.uniform3iv(e.outShapeStridesLocation,new Int32Array(u));break}}if(e.outTexShapeLocation&&n.gl.uniform2i(e.outTexShapeLocation,s.texData.texShape[0],s.texData.texShape[1]),e.program.customUniforms&&r)for(let u=0;u<e.program.customUniforms.length;++u){const c=e.program.customUniforms[u],l=e.customUniformLocations[u],d=r[u];if(c.type==="float")n.gl.uniform1fv(l,d);else if(c.type==="vec2")n.gl.uniform2fv(l,d);else if(c.type==="vec3")n.gl.uniform3fv(l,d);else if(c.type==="vec4")n.gl.uniform4fv(l,d);else if(c.type==="int")n.gl.uniform1iv(l,d);else if(c.type==="ivec2")n.gl.uniform2iv(l,d);else if(c.type==="ivec3")n.gl.uniform3iv(l,d);else if(c.type==="ivec4")n.gl.uniform4iv(l,d);else throw Error(`uniform type ${c.type} is not supported yet.`)}n.executeProgram()}function YZ(n,e,t){let s="";e.concat(t).forEach(o=>{const i=o.texData!=null&&o.texData.slice!=null&&o.texData.slice.flatOffset>0;if(n.enableShapeUniforms&&!o.isUniform){const u=o.texData.texShape,{useSqueezeShape:c,uniformShape:l,keptDims:d}=F0(n.packedInputs,o.shape,u);let h="",p="",f="";if(l.length===1&&n.packedInputs){const v=[Math.ceil(u[0]/2),Math.ceil(u[1]/2)];h=`${v[0]>1}_${v[1]>1}`}else if(l.length===2&&!n.packedInputs)p=`${l[0]>1}_${l[1]>1}`;else if(l.length>2&&!n.packedInputs){const v=ve(l);f=`${v[0]===u[1]}_${v[v.length-1]===u[1]}`}const m=o.shape.length,g=l.length===2&&Qe(o.shape,u),y=U(o.shape)===1,b=wu(o.shape,t.shape),x=!n.packedInputs&&m===t.shape.length&&Qe(u,t.texData.texShape),w=n.packedInputs||l.length>2?"":`${u[0]>1}_${u[1]>1}`;s+=`${m}_${x}_${c?d:""}_${l.length}_${y}_${b}_${g}_${h}_${p}_${f}_${w}_${i}`}else{const u=o.isUniform?"uniform":o.texData.texShape;s+=`${o.shape}_${u}_${i}`}});const r=n.userCode;let a=n.constructor.name;return a+="_"+s+"_"+r+`${Y().getNumber("WEBGL_VERSION")}`,a}function zn(n){return Y().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&n<=4}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ZZ{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=nd.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=Xn();this.outputShape=e,this.enableShapeUniforms=zn(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Vg(["r","c","d"],e):$i(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class JZ{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=nd.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=Xn();this.outputShape=e,this.enableShapeUniforms=zn(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Vg(["r","c","d"],e):$i(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class QZ{constructor(e){this.variableNames=["A"],this.outTexUsage=Ds.DOWNLOAD;const t=Xn();this.outputShape=e,this.userCode=`
      ${Y2}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class eJ{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=Ds.DOWNLOAD;const t=Xn();this.outputShape=e,this.userCode=`
      ${Y2}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tJ={R:0,G:1,B:2,A:3};class hI{constructor(e,t=!1,s="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const r=Xn();this.outputShape=e,this.enableShapeUniforms=zn(this.outputShape.length);let a="result";t&&(a="floor(result * 255. + 0.5)");let o="";for(let i=0;i<s.length;i++){const u=s[i];o+=`
          if(offset == ${i}) {
            result = values[${tJ[u]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?O0():R0(e)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${s.length});

        flatIndex = idiv(flatIndex, ${s.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${r.texture2D}(A, uv);
          ${o}
        }
        ${r.output} = vec4(${a}, 0., 0., 0.);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nJ{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const s=Xn();this.outputShape=e,this.enableShapeUniforms=zn(this.outputShape.length);let r="",a="result";t&&(a="floor(result * 255. + 0.5)");for(let o=0;o<=1;o++)for(let i=0;i<=1;i++){const u=o*2+i;r+=`
          localCoords = coords;
          if(localCoords[2] + ${i} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${i};
          if (localCoords[1] + ${o} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${o};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${s.texture2D}(A, uv);

            if (offset == 0) {
              result[${u}] = values[0];
            } else if (offset == 1) {
              result[${u}] = values[1];
            } else if (offset == 2) {
              result[${u}] = values[2];
            } else {
              result[${u}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?O0():R0(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${r}

          ${s.output} = ${a};
        }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sJ(n){const e=Xn(),t=`${e.version}
    precision highp float;
    ${e.attribute} vec3 clipSpacePos;
    ${e.attribute} vec2 uv;
    ${e.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return z9(n,t)}function rJ(n){const e=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return H9(n,e)}function aJ(n){const e=new Uint16Array([0,1,2,2,1,3]);return j9(n,e)}function fp(n,e,t,s,r,a){K9(e,t);const o=q9(n),i=n.TEXTURE_2D;return ge(n,()=>n.bindTexture(i,o)),ge(n,()=>n.texParameteri(i,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE)),ge(n,()=>n.texParameteri(i,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE)),ge(n,()=>n.texParameteri(i,n.TEXTURE_MIN_FILTER,n.NEAREST)),ge(n,()=>n.texParameteri(i,n.TEXTURE_MAG_FILTER,n.NEAREST)),Y().getNumber("WEBGL_VERSION")===1?ge(n,()=>n.texImage2D(i,0,s,e,t,0,r,a,null)):ge(n,()=>n.texStorage2D(i,1,s,e,t)),ge(n,()=>n.bindTexture(n.TEXTURE_2D,null)),{texture:o,texShape:[t,e]}}function t_(n){return n.internalFormatFloat}function oJ(n,e,t,s){const[r,a]=hp(e,t);return fp(n,r,a,t_(s),s.textureFormatFloat,n.FLOAT)}function n_(n){return n.internalFormatHalfFloat}function iJ(n,e,t,s){const[r,a]=hp(e,t);return fp(n,r,a,n_(s),s.textureFormatFloat,s.textureTypeHalfFloat)}function s_(n){return n.downloadTextureFormat}function uJ(n,e,t,s){const[r,a]=hp(e,t);return fp(n,r,a,s_(s),n.RGBA,n.UNSIGNED_BYTE)}function r_(n){return n.internalFormatPackedFloat}function lJ(n,e,t,s){const[r,a]=ac(e,t);return fp(n,r,a,r_(s),n.RGBA,n.FLOAT)}function a_(n){return n.internalFormatPackedHalfFloat}function cJ(n,e,t,s){const[r,a]=ac(e,t);return fp(n,r,a,a_(s),n.RGBA,s.textureTypeHalfFloat)}function dJ(n,e,t){return ge(n,()=>n.bindBuffer(n.ARRAY_BUFFER,t)),uI(n,e,"clipSpacePos",t,3,20,0)&&uI(n,e,"uv",t,2,20,12)}function hJ(n,e,t,s,r,a){ge(n,()=>n.bindTexture(n.TEXTURE_2D,e));let o,i,u;r instanceof Uint8Array?(o=new Uint8Array(t*s*4),i=n.UNSIGNED_BYTE,u=n.RGBA):(o=new Float32Array(t*s*4),i=n.FLOAT,u=a.internalFormatPackedFloat),o.set(r),Y().getNumber("WEBGL_VERSION")===2?ge(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,t,s,n.RGBA,i,o)):ge(n,()=>n.texImage2D(n.TEXTURE_2D,0,u,t,s,0,n.RGBA,i,o)),ge(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function pJ(n,e,t){ge(n,()=>n.bindTexture(n.TEXTURE_2D,e)),t.data instanceof Uint8Array?Y().getNumber("WEBGL_VERSION")===2?ge(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,t.width,t.height,n.RGBA,n.UNSIGNED_BYTE,t.data)):ge(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,t.width,t.height,0,n.RGBA,n.UNSIGNED_BYTE,t.data)):Y().getNumber("WEBGL_VERSION")===2?ge(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,n.RGBA,n.UNSIGNED_BYTE,t)):ge(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,n.RGBA,n.UNSIGNED_BYTE,t)),ge(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function fJ(n,e,t,s){const r=n.createBuffer();ge(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,r));const i=4*4*e*t;return ge(n,()=>n.bufferData(n.PIXEL_PACK_BUFFER,i,n.STREAM_READ)),ge(n,()=>n.readPixels(0,0,t,e,n.RGBA,n.FLOAT,0)),ge(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,null)),r}function mJ(n,e,t){const s=n,r=new Float32Array(t);return s.bindBuffer(s.PIXEL_PACK_BUFFER,e),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,r),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),r}function gJ(n,e,t,s){const[r,a]=hp(e,t),o=4,i=new Uint8Array(R9(e*t,o));return ge(n,()=>n.readPixels(0,0,r,a,s.downloadTextureFormat,n.UNSIGNED_BYTE,i)),new Float32Array(i.buffer)}function yJ(n,e,t,s,r,a,o,i){const u=n,c=new Float32Array(O9(a,o));return u.bindBuffer(u.PIXEL_PACK_BUFFER,e),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,c),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),c}function bJ(n,e,t){const s=new Float32Array(e*t*4);return ge(n,()=>n.readPixels(0,0,t,e,n.RGBA,n.FLOAT,s)),s}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Cy{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=Y().getNumber("WEBGL_VERSION");if(e!=null?(this.gl=e,E9(t,e)):this.gl=Sr(t),e=this.gl,Y().getNumber("WEBGL_VERSION")===2){const a=e;this.createVertexArray=()=>ge(a,()=>a.createVertexArray()),this.bindVertexArray=o=>ge(a,()=>a.bindVertexArray(o)),this.deleteVertexArray=o=>ge(a,()=>a.deleteVertexArray(o)),this.getVertexArray=()=>ge(a,()=>a.getParameter(a.VERTEX_ARRAY_BINDING))}else if(e!=null){const a=e.getExtension("OES_vertex_array_object");if(a==null)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>ge(e,()=>a.createVertexArrayOES()),this.bindVertexArray=o=>ge(e,()=>a.bindVertexArrayOES(o)),this.deleteVertexArray=o=>ge(e,()=>a.deleteVertexArrayOES(o)),this.getVertexArray=()=>ge(e,()=>e.getParameter(a.VERTEX_ARRAY_BINDING_OES))}let s="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),Y().getNumber("WEBGL_VERSION")===1){const a="OES_texture_float",o="OES_texture_half_float";if(this.textureFloatExtension=Mp(this.gl,a),Zs(this.gl,o))this.textureHalfFloatExtension=Mp(this.gl,o);else if(Y().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(s),Zs(this.gl,r))this.colorBufferHalfFloatExtension=Mp(this.gl,r);else if(Y().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(s="EXT_color_buffer_float",Zs(this.gl,s))this.colorBufferFloatExtension=this.gl.getExtension(s);else if(Zs(this.gl,r))this.colorBufferHalfFloatExtension=this.gl.getExtension(r);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=rJ(this.gl),this.indexBuffer=aJ(this.gl),this.framebuffer=X9(this.gl),this.textureConfig=D0(this.gl,this.textureHalfFloatExtension)}get debug(){return Y().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;ge(e,()=>e.finish()),ge(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),ge(e,()=>e.deleteFramebuffer(this.framebuffer)),ge(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),ge(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),ge(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),oJ(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),iJ(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),uJ(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),pJ(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,s,r){this.throwIfDisposed(),hJ(this.gl,e,t,s,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),cJ(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),lJ(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(lI(this.gl,this.framebuffer),this.outputTexture=null),ge(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,s){return this.downloadMatrixDriver(e,()=>gJ(this.gl,t,s,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,s,r,a,o){return yJ(this.gl,e,t,s,r,a,o,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return mJ(this.gl,e,t)}createBufferFromTexture(e,t,s){this.bindTextureToFrameBuffer(e);const r=fJ(this.gl,t,s,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,s;if(Y().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,a=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),s=()=>{const o=r.clientWaitSync(a,0,0);return o===r.ALREADY_SIGNALED||o===r.CONDITION_SATISFIED},t=a}else Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),s=()=>this.isQueryAvailable(t,Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):s=()=>!0;return{query:t,isFencePassed:s}}downloadMatrixFromPackedTexture(e,t,s){return this.downloadMatrixDriver(e,()=>bJ(this.gl,t,s))}createProgram(e){this.throwIfDisposed();const t=this.gl;this.vertexShader==null&&(this.vertexShader=sJ(t));const s=U9(t);ge(t,()=>t.attachShader(s,this.vertexShader)),ge(t,()=>t.attachShader(s,e)),G9(t,s);const r=Object.assign(s,{vao:this.createVertexArray()});return this.debug&&Iy(t,r),r}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const t=this.gl;ge(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),dJ(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&(ge(this.gl,()=>this.gl.deleteProgram(e)),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&Iy(this.gl,this.program),ge(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,s=!0){return this.throwIfDisposed(),s?Z9(this.gl,e,t):J9(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),ge(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,s){this.throwIfDisposed(),this.throwIfNoProgram(),Q9(this.gl,e,t,s)}setOutputMatrixTexture(e,t,s){this.setOutputMatrixTextureDriver(e,s,t)}setOutputPackedMatrixTexture(e,t,s){this.throwIfDisposed();const[r,a]=ac(t,s);this.setOutputMatrixTextureDriver(e,r,a)}setOutputMatrixWriteRegion(e,t,s,r){this.setOutputMatrixWriteRegionDriver(s,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,s,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&Iy(this.gl,this.program),Bp(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const t=this.getVertexArray();console.assert(t===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}ge(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),ge(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=Mp(this.gl,Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const s=this.gl,r=this.getQueryTimerExtensionWebGL2(),a=s.createQuery();return s.beginQuery(r.TIME_ELAPSED_EXT,a),a}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const t=this.gl,s=this.getQueryTimerExtensionWebGL2();t.endQuery(s.TIME_ELAPSED_EXT);return}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await Bv(()=>this.disposed||this.isQueryAvailable(e,Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){const s=this.gl;return s.getQueryParameter(e,s.QUERY_RESULT)/1e6}else{const s=this.getQueryTimerExtensionWebGL1();return s.getQueryObjectEXT(e,s.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){const s=this.gl,r=this.getQueryTimerExtensionWebGL2(),a=s.getQueryParameter(e,s.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),a&&!this.disjoint}else{const s=this.getQueryTimerExtensionWebGL1(),r=s.getQueryObjectEXT(e,s.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),r&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){const e=xJ(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){const{resolveFn:s}=this.itemsToPoll[t];s()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let s;"setTimeoutCustom"in Y().platform&&(s=Y().platform.setTimeoutCustom.bind(Y().platform)),Bv(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,s)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),Sy(this.gl,e,this.framebuffer),this.debug&&Bp(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(Sy(this.gl,this.outputTexture,this.framebuffer),this.debug&&Bp(this.gl)):lI(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const s=t();return this.unbindTextureToFrameBuffer(),s}setOutputMatrixTextureDriver(e,t,s){this.throwIfDisposed();const r=this.gl;Sy(r,e,this.framebuffer),this.debug&&Bp(r),this.outputTexture=e,ge(r,()=>r.viewport(0,0,t,s)),ge(r,()=>r.scissor(0,0,t,s))}setOutputMatrixWriteRegionDriver(e,t,s,r){this.throwIfDisposed(),ge(this.gl,()=>this.gl.scissor(e,t,s,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}}function xJ(n){let e=0;for(;e<n.length&&n[e]();++e);return e-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:wJ,bincountImpl:o_,bincountReduceImpl:vJ,bitwiseAndImpl:IJ,castImpl:SJ,ceilImpl:kJ,concatImpl:NJ,equalImpl:CJ,expImpl:TJ,expm1Impl:$J,floorImpl:_J,gatherNdImpl:EJ,gatherV2Impl:AJ,greaterImpl:DJ,greaterEqualImpl:RJ,lessImpl:OJ,lessEqualImpl:FJ,linSpaceImpl:PJ,logImpl:LJ,maxImpl:MJ,maximumImpl:BJ,minimumImpl:zJ,multiplyImpl:VJ,negImpl:WJ,notEqualImpl:UJ,prodImpl:GJ,raggedGatherImpl:HJ,raggedRangeImpl:jJ,raggedTensorToTensorImpl:qJ,rangeImpl:KJ,rsqrtImpl:XJ,scatterImpl:YJ,sigmoidImpl:ZJ,simpleAbsImpl:i_,sliceImpl:JJ,sparseFillEmptyRowsImpl:QJ,sparseReshapeImpl:eQ,sparseSegmentReductionImpl:u_,sqrtImpl:tQ,staticRegexReplaceImpl:nQ,stridedSliceImpl:sQ,stringNGramsImpl:rQ,stringSplitImpl:aQ,stringToHashBucketFastImpl:oQ,subImpl:iQ,tileImpl:uQ,topKImpl:lQ,transposeImpl:P0,uniqueImpl:cQ}=p5;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l_(n,e){return["x","y","z","w","u","v"].slice(0,e).map(t=>`${n}.${t}`)}function jn(n,e){return e===1?[n]:l_(n,e)}function dQ(n,e){if(n===1)return"rc";let t="";for(let s=0;s<n;s++)t+=e[s],s<n-1&&(t+=",");return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hQ{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=zn(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{const t=jn("rc",this.rank),s=vt(this.rank),r=this.getOutOfBoundsCondition(t),a=this.getSetup(t),o=this.getOutput(t);this.userCode=`
        void main() {
          ${s} rc = getOutputCoords();

          if(${r}) {
            setOutput(vec4(0));
          } else {
            ${a}

            setOutput(vec4(${o}));
          }
        }
      `}}getSourceCoordsArr(e){const t=[];for(let s=0;s<=1;s++)for(let r=0;r<=1;r++){let a=`${s===0?"r":"rp1"}, ${r===0?"c":"cp1"}`;for(let o=2;o<this.rank;o++)a=`${e[e.length-1-o]},`+a;t.push(a)}return t}getOutOfBoundsCondition(e){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let s=this.rank-2;s<this.rank;s++)t+=`${e[s]} >= ${this.enableShapeUniforms?`outShape[${s}]`:this.outputShape[s]}`,s<this.rank-1&&(t+="||");return t}getSetup(e){if(this.rank===1)return"";const t=e.slice(-2),s=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${t[0]};
      int c = ${t[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${s};
      bool rEdge = rp1 >= ${r};
    `}getOutput(e){const t=this.getSourceCoordsArr(e);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),
            cEdge ? 0. : getA(${t[1]}),
            rEdge ? 0. : getA(${t[2]}),
            rEdge || cEdge ? 0. : getA(${t[3]})`}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class c_{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=zn(this.outputShape.length);let s="";for(let r=0;r<4;r++){let a="thisRC = rc;";r%2===1&&(a+="thisRC.z += 1;"),r>1&&(a+="thisRC.y += 1;"),s+=`
        ${a}
        ${r>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${r}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${r>0?"}":""}
      `}this.userCode=`
      ${pQ(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?O0():R0(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${s}

        setOutput(result);
      }
    `}}function pQ(n,e){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${e?dZ(["r","c","d"],"inputShape"):$i(["r","c","d"],n)}
      return ivec3(r, c, d);
    }
  `}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fQ{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,s){const r=fI(t,s),a=mI(e,r,s);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);const o=pI(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,s);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=o,this.log();const u=this.freeTextures[a].pop();return this.usedTextures[a].push(u),u}let i;return r===kn.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===kn.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===kn.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===kn.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===kn.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[a].push(i),this.numUsedTextures++,this._numBytesAllocated+=o,this.log(),i}releaseTexture(e,t,s,r){if(this.freeTextures==null)return;const a=fI(s,r),o=mI(t,a,r);o in this.freeTextures||(this.freeTextures[o]=[]);const i=pI(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,r),u=Y().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");u!==-1&&this._numBytesAllocated>u?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[o].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const c=this.usedTextures[o],l=c&&c.indexOf(e);if(l==null||l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");c[l]=c[c.length-1],c.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(const e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});for(const e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function mQ(n,e){const t=n;if(e===t.R32F)return 4;if(e===t.R16F)return 2;if(e===t.RGBA32F)return 16;if(e===n.RGBA)return 16;if(e===t.RGBA16F)return 8;if(e===t.RGBA8)return 4;throw new Error(`Unknown internal format ${e}`)}function pI(n,e,t,s,r){const a=gQ(e,s);let o;if(r){const[u,c]=ac(n[0],n[1]);o=u*c}else{const[u,c]=hp(n[0],n[1]);o=u*c}const i=mQ(t,a);return o*i}function gQ(n,e){switch(n){case kn.PACKED_2X2_FLOAT32:return r_(e);case kn.PACKED_2X2_FLOAT16:return a_(e);case kn.UNPACKED_FLOAT32:return t_(e);case kn.UNPACKED_FLOAT16:return n_(e);case kn.PACKED_4X1_UNSIGNED_BYTE:return s_(e);default:throw new Error(`Unknown physical texture type ${n}`)}}function yQ(n){return Y().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?n?kn.PACKED_2X2_FLOAT32:kn.UNPACKED_FLOAT32:n?kn.PACKED_2X2_FLOAT16:kn.UNPACKED_FLOAT16}function fI(n,e){if(n===Ds.UPLOAD)return kn.PACKED_2X2_FLOAT32;if(n===Ds.RENDER||n==null)return yQ(e);if(n===Ds.DOWNLOAD||n===Ds.PIXELS)return kn.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${n}`)}function mI(n,e,t){return`${n[0]}_${n[1]}_${e}_${t}`}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Br{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=zn(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}}const or="if (isnan(x)) return x;",bQ="return x;",gI="return abs(x);",xQ="return (x >= 0.0) ? x : (exp(x) - 1.0);",wQ=or+`
  return (x < 0.0) ? 0.0 : x;
`,vQ=or+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Pa="return x;",IQ="return 1.0 / (1.0 + exp(-1.0 * x));";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SQ="return x;",kQ=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,NQ=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,CQ=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,TQ="return 1.0 / (1.0 + exp(-1.0 * x));";class Ga{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=zn(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $Q{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=zn(this.outputShape.length);const t=e.length,s=jn("rc",t),r=vt(t),a=dQ(t,s),o=s.slice(-2),i=t<=1?"rc":`vec2(${o.join(",")})`;this.userCode=`
      void main() {
        ${r} rc = getOutputCoords();
        vec4 packedInput = getA(${a});

        setOutput(getChannel(packedInput, ${i}));
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _Q=hw,EQ=1e-7,AQ=1e-4,Wp={};function DQ(n){return n in Wp||(Wp[n]={}),Wp[n]}const RQ=Y().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),OQ=600;function FQ(){return Y().global.screen==null?1024:Y().global.screen.height*Y().global.screen.width*window.devicePixelRatio*OQ/1024/1024}class Wg extends km{nextDataId(){return Wg.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!Y().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(e!=null){if(e instanceof Cy)t=e;else{const s=Sr(Y().getNumber("WEBGL_VERSION"),e);t=new Cy(s)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const s=Sr(Y().getNumber("WEBGL_VERSION"));t=new Cy(s),this.binaryCache=DQ(Y().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new fQ(this.gpgpu),this.numMBBeforeWarning=FQ(),this.texData=new fx(this,cr())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,s,r,a,o){const i=this.makeTensorInfo(t,s),u=this.texData.get(i.dataId);u.isPacked=!1,u.texture={texture:e,texShape:[r,a]},u.texShape=[r,a];const c=zp(t),l=new hI(c,!1,o),d=this.runWebGLProgram(l,[i],s,[[r,a]]);return d.shape=t,u.texture=null,this.disposeIntermediateTensorInfo(i),d.dataId}write(e,t,s){if((Y().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Y().getBool("DEBUG"))&&this.checkNumericalProblems(e),s==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:s,values:e,usage:Ds.UPLOAD,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){const t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){const t=this.texData.get(e);t.refCount--}}move(e,t,s,r,a){if(Y().getBool("DEBUG")&&this.checkNumericalProblems(t),r==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:s,dtype:r,values:t,usage:Ds.UPLOAD,refCount:a})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:s,dtype:r,complexTensorInfos:a,slice:o,shape:i,isPacked:u}=t;if(o!=null){let h;u?h=new Ga(i,Pa):h=new Br(i,Pa);const p=this.runWebGLProgram(h,[{dataId:e,shape:i,dtype:r}],r),f=this.readSync(p.dataId);return this.disposeIntermediateTensorInfo(p),f}if(s!=null)return this.convertAndCacheOnCPU(e);if(r==="string")return s;const c=this.activeTimers!=null;let l;c&&(l=Rn());let d;if(r==="complex64"){const h=this.readSync(a.real.dataId),p=this.readSync(a.imag.dataId);d=Na(h,p)}else d=this.getValuesFromTexture(e);return c&&(this.downloadWaitMs+=Rn()-l),this.convertAndCacheOnCPU(e,d)}async read(e){if(this.pendingRead.has(e)){const f=this.pendingRead.get(e);return new Promise(m=>f.push(m))}const t=this.texData.get(e),{values:s,shape:r,slice:a,dtype:o,complexTensorInfos:i,isPacked:u}=t;if(a!=null){let f;u?f=new Ga(r,Pa):f=new Br(r,Pa);const m=this.runWebGLProgram(f,[{dataId:e,shape:r,dtype:o}],o),g=this.read(m.dataId);return this.disposeIntermediateTensorInfo(m),g}if(s!=null)return this.convertAndCacheOnCPU(e);if(Y().getBool("DEBUG")&&!Y().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&Y().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let c=null,l;if(o!=="complex64"&&Y().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);const f=this.texData.get(l.dataId);c=this.gpgpu.createBufferFromTexture(f.texture.texture,...Lp(r))}this.pendingRead.set(e,[]),o!=="complex64"&&await this.gpgpu.createAndWaitForFence();let d;if(o==="complex64"){const f=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),m=f[0],g=f[1];d=Na(m,g)}else if(c==null)d=this.getValuesFromTexture(e);else{const f=U(r);d=this.gpgpu.downloadFloat32MatrixFromBuffer(c,f)}if(l!=null&&this.disposeIntermediateTensorInfo(l),c!=null){const f=this.gpgpu.gl;ge(f,()=>f.deleteBuffer(c))}const h=this.convertAndCacheOnCPU(e,d),p=this.pendingRead.get(e);return this.pendingRead.delete(e),p.forEach(f=>f(h)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&cr().removeDataId(e,this),this.pendingDeletes--),h}readToGPU(e,t={}){const s=this.texData.get(e),{values:r,shape:a,slice:o,dtype:i,isPacked:u,texture:c}=s;if(i==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(o!=null){let p;u?p=new Ga(a,Pa):p=new Br(a,Pa);const f=this.runWebGLProgram(p,[{dataId:e,shape:a,dtype:i}],i),m=this.readToGPU(f,t);return this.disposeIntermediateTensorInfo(f),m}if(c==null)throw r!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const l=this.decode(e,t.customTexShape),d=cr().makeTensorFromTensorInfo(l),h=this.texData.get(l.dataId);return Object.assign({tensorRef:d},h.texture)}bufferSync(e){const t=this.readSync(e.dataId);if(e.dtype==="string")try{const s=t.map(r=>to(r));return He(e.shape,e.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return He(e.shape,e.dtype,t)}checkNumericalProblems(e){if(e!=null)for(let t=0;t<e.length;t++){const s=e[t];if(!M9(s))throw Y().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${s} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${s} cannot be represented on this device.`)}}getValuesFromTexture(e){const{shape:t,dtype:s,isPacked:r}=this.texData.get(e),a=U(t);if(Y().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const h=this.decode(e),p=this.texData.get(h.dataId),f=this.gpgpu.downloadMatrixFromPackedTexture(p.texture.texture,...Lp(t)).subarray(0,a);return this.disposeIntermediateTensorInfo(h),f}const o=Y().getBool("WEBGL_PACK")&&r===!0,i=o?zp(t):t,u=o?new eJ(i):new QZ(i),c=this.runWebGLProgram(u,[{shape:i,dtype:s,dataId:e}],"float32"),l=this.texData.get(c.dataId),d=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture.texture,l.texShape[0],l.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(c),d}timerAvailable(){return Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,s=[];let r=!1;this.programTimersStack==null?(this.programTimersStack=s,r=!0):this.activeTimers.push(s),this.activeTimers=s,e();const a=no(this.activeTimers.map(u=>u.query)).filter(u=>u!=null),o=no(this.activeTimers.map(u=>u.name)).filter(u=>u!=null);this.activeTimers=t,r&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const u=await Promise.all(a);i.kernelMs=QP(u),i.getExtraProfileInfo=()=>u.map((c,l)=>({name:o[l],ms:c})).map(c=>`${c.name}: ${c.ms}`).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Rn(),endMs:null}}endTimer(e){return Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=Rn(),e)}async getQueryTime(e){if(Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:s}=this.texData.get(e);return s!=null&&(this.disposeData(s.real.dataId,t),this.disposeData(s.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:s,texShape:r,usage:a,isPacked:o,slice:i}=this.texData.get(e),u=i&&i.origDataId||e,c=this.dataRefCount.get(u);c>1?this.dataRefCount.set(u,c-1):(this.dataRefCount.delete(u),t!=null&&(this.numBytesInGPU-=this.computeBytes(r,s),this.textureManager.releaseTexture(t,r,a,o)));const l=this.texData.get(e);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=RQ){return Y().getBool("WEBGL_CPU_FORWARD")&&e.every(s=>this.texData.get(s.dataId).texture==null&&U(s.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){As("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return _Q(e.shape,t)}packedUnaryOp(e,t,s){const r=new Ga(e.shape,t),a=this.compileAndRun(r,[e],s);return cr().makeTensorFromTensorInfo(a)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){const r=i_(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,r)}if(Y().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,gI,e.dtype);const t=new Br(e.shape,gI),s=this.compileAndRun(t,[e]);return cr().makeTensorFromTensorInfo(s)}makeTensorInfo(e,t,s){let r;if(t==="string"&&s!=null&&s.length>0&&jd(s[0])){const a=s.map(o=>Ka(o));r=this.write(a,e,t)}else r=this.write(s,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,s){return cr().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,s),this)}unpackTensor(e){const t=new $Q(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new hQ(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const s=[Tu(e.shape),...$u(e.shape)],r={dtype:e.dtype,shape:s,dataId:e.dataId},a=[Tu(t),...$u(t)],o=new c_(a,s),i=!0,u=[s],c=this.runWebGLProgram(o,[r],e.dtype,u,i);return{dataId:c.dataId,shape:t,dtype:c.dtype}}decode(e,t){const s=this.texData.get(e),{isPacked:r,shape:a,dtype:o}=s;if(t!=null){const h=U(a),p=t[0]*t[1]*4;_(h<=p,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}const i=zp(a);let u;r?u=new JZ(i):u=new ZZ(i);const c=!0,l=[t??Lp(i)],d=this.runWebGLProgram(u,[{shape:i,dtype:o,dataId:e}],o,l,c,t);return{dtype:o,shape:a,dataId:d.dataId}}runWebGLProgram(e,t,s,r,a=!1,o){const i=this.makeTensorInfo(e.outputShape,s),u=this.texData.get(i.dataId);if(e.packedOutput&&(u.isPacked=!0),e.outPackingScheme===nd.DENSE){const y=o??Lp(e.outputShape);u.texShape=y.map(b=>b*2)}if(e.outTexUsage!=null&&(u.usage=e.outTexUsage),U(i.shape)===0)return u.values=Cn(i.dtype,0),i;const c=[],l=t.map(y=>{if(y.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let b=this.texData.get(y.dataId);if(b.texture==null){if(!e.packedInputs&&U(y.shape)<=Y().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:y.shape,texData:null,isUniform:!0,uniformValues:b.values};e.packedInputs&&(b.isPacked=!0,b.shape=y.shape)}if(this.uploadToGPU(y.dataId),!!b.isPacked!=!!e.packedInputs)y=b.isPacked?this.unpackTensor(y):this.packTensor(y),c.push(y),b=this.texData.get(y.dataId);else if(b.isPacked&&!zf(b.shape,y.shape)){const x=y,w=y.shape;y.shape=b.shape,y=this.packedReshape(y,w),c.push(y),b=this.texData.get(y.dataId),x.shape=w}return{shape:y.shape,texData:b,isUniform:!1}});this.uploadToGPU(i.dataId);const d={shape:i.shape,texData:u,isUniform:!1},h=YZ(e,l,d),p=this.getAndSaveBinary(h,()=>KZ(this.gpgpu,e,l,d)),f=this.activeTimers!=null;let m;f&&(m=this.startTimer()),Y().get("ENGINE_COMPILE_ONLY")||XZ(this.gpgpu,p,l,d,r),c.forEach(y=>this.disposeIntermediateTensorInfo(y)),f&&(m=this.endTimer(m),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(m)}));const g=Y().getNumber("WEBGL_FLUSH_THRESHOLD");if(g>0){const y=Rn();y-this.lastGlFlushTime>g&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=y)}if(!Y().getBool("WEBGL_LAZILY_UNPACK")&&u.isPacked&&a===!1){const y=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),y}return i}compileAndRun(e,t,s,r,a=!1){return s=s||t[0].dtype,this.runWebGLProgram(e,t,s,r,a)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(Y().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=j(()=>{if(!Y().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=Y().getBool("DEBUG");Y().set("DEBUG",!1);const t=this.abs(Ae(1e-8)).dataSync()[0];if(Y().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?EQ:AQ}uploadToGPU(e){const t=this.texData.get(e),{shape:s,dtype:r,values:a,texture:o,usage:i,isPacked:u}=t;if(o!=null)return;const c=this.activeTimers!=null;let l;c&&(l=Rn());let d=t.texShape;if(d==null&&(d=nZ(s,u),t.texShape=d),a!=null){const h=zp(s);let p,f=d[1],m=d[0];const g=a instanceof Uint8Array||a instanceof Uint8ClampedArray;(u||!g)&&([f,m]=ac(d[0],d[1])),u?p=new nJ(h,g):p=new hI(h,g);const y=g?[m,f]:d,b=this.makeTensorInfo(y,r),x=this.texData.get(b.dataId);g?x.usage=Ds.PIXELS:x.usage=Ds.UPLOAD,x.texShape=y,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(b.dataId),f,m,a);const w=[[m,f]],S=this.runWebGLProgram(p,[b],r,w,!0),N=this.texData.get(S.dataId);t.texShape=N.texShape,t.isPacked=N.isPacked,t.usage=N.usage,Y().get("ENGINE_COMPILE_ONLY")?this.disposeData(S.dataId):(t.texture=N.texture,t.values=null,this.texData.delete(S.dataId)),this.disposeIntermediateTensorInfo(b),c&&(this.uploadWaitMs+=Rn()-l)}else{const h=this.acquireTexture(d,i,r,u);t.texture=h}}convertAndCacheOnCPU(e,t){const s=this.texData.get(e),{dtype:r}=s;return t!=null&&(s.values=PQ(t,r)),s.values}acquireTexture(e,t,s,r){if(this.numBytesInGPU+=this.computeBytes(e,s),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){const a=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${a} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*fu(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}else{for(const[,t]of Object.entries(this.binaryCache)){const s=new Promise(r=>{try{this.checkCompletion_(t),r(!0)}catch(a){throw a}});e.push(s)}return Promise.all(e)}}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await pC(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(X2(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:t,customUniformLocations:s,infLoc:r,nanLoc:a,outShapeLocation:o,outShapeStridesLocation:i,outTexShapeLocation:u}=e_(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=s,e.infLoc=r,e.nanLoc=a,e.outShapeLocation=o,e.outShapeStridesLocation=i,e.outTexShapeLocation=u}}createTensorFromGPUData(e,t,s){e.channels=e.channels||"RGBA";const{texture:r,height:a,width:o,channels:i}=e,u=cr().backend;if(!u.gpgpu.gl.isTexture(r))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const c=u.writeTexture(r,t,s,a,o,i);return cr().makeTensorFromDataId(c,t,s,u)}}Wg.nextDataId=0;function PQ(n,e){if(e==="float32"||e==="complex64")return n;if(e==="int32"||e==="bool"){const t=e==="int32"?new Int32Array(n.length):new Uint8Array(n.length);for(let s=0;s<t.length;++s)t[s]=Math.round(n[s]);return t}else throw new Error(`Unknown dtype ${e}`)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Sk()&&Rx("webgl",()=>new Wg,2);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L0=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;class ui{constructor(e,t,s){this.variableNames=["A","B"],this.outputShape=Me(t,s),this.enableShapeUniforms=zn(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ei=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;class cc{constructor(e,t,s,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Me(t,s);const a=this.outputShape.length;this.enableShapeUniforms=zn(a);let o="";if(r)if(a===0||U(this.outputShape)===1)o=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(o=`
          ${vt(a)} coords = getOutputCoords();
        `,a===1)this.enableShapeUniforms?o+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:o+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{const u=jn("coords",a);this.enableShapeUniforms?o+=`
            bool nextRowOutOfBounds =
              (${u[a-2]} + 1) >= outShape[${a} - 2];
            bool nextColOutOfBounds =
              (${u[a-1]} + 1) >= outShape[${a} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:o+=`
            bool nextRowOutOfBounds =
              (${u[a-2]} + 1) >= ${this.outputShape[a-2]};
            bool nextColOutOfBounds =
              (${u[a-1]} + 1) >= ${this.outputShape[a-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${o}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ns(n){const{inputs:e,backend:t}=n,{x:s}=e;return t.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const LQ={kernelName:cl,backendName:"webgl",kernelFunc:Ns};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function No(n){const{inputs:e,backend:t}=n,{real:s,imag:r}=e,a=t.makeTensorInfo(s.shape,"complex64"),o=t.texData.get(a.dataId),i=Ns({inputs:{x:s},backend:t}),u=Ns({inputs:{x:r},backend:t});return o.complexTensorInfos={real:i,imag:u},a}const MQ={kernelName:xx,backendName:"webgl",kernelFunc:No};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d_="return (a < 0.) ? b * a : a;",h_=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function BQ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{alpha:a}=s,o=t.makeTensorInfo([],"float32",go(a,"float32")),i=Y().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new cc(h_,r.shape,o.shape):new ui(d_,r.shape,o.shape),u=t.runWebGLProgram(i,[r,o],"float32");return t.disposeIntermediateTensorInfo(o),u}const zQ={kernelName:fl,backendName:"webgl",kernelFunc:BQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p_="return (a < 0.) ? b * a : a;",f_=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function VQ(n){const{inputs:e,backend:t}=n,{x:s,alpha:r}=e,a=Y().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new cc(f_,s.shape,r.shape):new ui(p_,s.shape,r.shape);return t.runWebGLProgram(a,[s,r],"float32")}const WQ={kernelName:El,backendName:"webgl",kernelFunc:VQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dc="if (isnan(x)) return x;";function at({opSnippet:n,packedOpSnippet:e,cpuKernelImpl:t,dtype:s}){return({inputs:r,backend:a})=>{const{x:o}=r,i=a,u=s||o.dtype;if(i.shouldExecuteOnCPU([o])&&t!=null){const d=i.texData.get(o.dataId),h=t(d.values,u);return i.makeTensorInfo(o.shape,u,h)}const c=Y().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&e!=null;let l;return c?l=new Ga(o.shape,e):l=new Br(o.shape,n),i.runWebGLProgram(l,[o],u)}}function _n({opSnippet:n,packedOpSnippet:e,checkOutOfBounds:t=!1,supportsComplex:s=!1,cpuKernelImpl:r,dtype:a}){return({inputs:o,backend:i})=>{const{a:u,b:c}=o,l=i;if(s&&u.dtype==="complex64"){const f=l.texData.get(u.dataId),m=l.texData.get(c.dataId),[g,y]=[[f.complexTensorInfos.real,m.complexTensorInfos.real],[f.complexTensorInfos.imag,m.complexTensorInfos.imag]].map(x=>{const[w,v]=x,S={dataId:w.dataId,dtype:w.dtype,shape:u.shape},N={dataId:v.dataId,dtype:v.dtype,shape:c.shape},$=new ui(n,u.shape,c.shape);return l.runWebGLProgram($,[S,N],ws(w.dtype,v.dtype))}),b=No({inputs:{real:g,imag:y},backend:l});return l.disposeIntermediateTensorInfo(g),l.disposeIntermediateTensorInfo(y),b}const d=a||ws(u.dtype,c.dtype);if((u.dtype==="string"||c.dtype==="string"||l.shouldExecuteOnCPU([u,c]))&&r!=null){const f=l.texData.get(u.dataId).values,m=l.texData.get(c.dataId).values,g=u.dtype==="string"?Ca(f):f,y=u.dtype==="string"?Ca(m):m,[b,x]=r(u.shape,c.shape,g,y,d),w=l.makeTensorInfo(x,d),v=l.texData.get(w.dataId);return v.values=b,w}const h=Y().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&e!=null;let p;return h?p=new cc(e,u.shape,c.shape,t):p=new ui(n,u.shape,c.shape),l.runWebGLProgram(p,[u,c],d)}}function sd(n,e=!1){if(n==="linear")return e?SQ:bQ;if(n==="relu")return e?NQ:wQ;if(n==="elu")return e?kQ:xQ;if(n==="relu6")return e?CQ:vQ;if(n==="prelu")return e?f_:p_;if(n==="leakyrelu")return e?h_:d_;if(n==="sigmoid")return e?TQ:IQ;throw new Error(`Activation ${n} has not been implemented for the WebGL backend.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class m_{constructor(e,t,s,r=!1,a=!1,o=!1,i=null,u=!1,c=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s,this.enableShapeUniforms=zn(this.outputShape.length);const l=r?e[1]:e[2],d=Math.ceil(l/2),h=r?"i * 2, rc.y":"rc.y, i * 2",p=a?"rc.z, i * 2":"i * 2, rc.z",f=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],m=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let g="",y="";i&&(u?g=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${i}
        }`:c?g=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${i}
        }`:g=`vec4 activation(vec4 x) {
          ${i}
        }`,y="result = activation(result);");const b=o?"result += getBiasAtOutCoords();":"";o&&this.variableNames.push("bias"),u&&this.variableNames.push("preluActivationWeights"),c&&this.variableNames.push("leakyreluAlpha");let x="rc.x",w="rc.x";e[0]<t[0]?x=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(w=`imod(rc.x, ${t[0]})`),this.userCode=`
      ${g}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${d}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${x};
        int batchB = ${w};
        for (int i = 0; i < ${d}; i++) {
          vec4 a = getMatrixA(batchA, ${h});
          vec4 b = getMatrixB(batchB, ${p});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${f[0]} * ${m[0]});
          result += (${f[1]} * ${m[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${b}

        ${y}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yI={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class bI{constructor(e,t,s){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Me(t,s),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xI="return a * b;";function M0(n){const{inputs:e,backend:t}=n,{a:s,b:r}=e,a=ws(s.dtype,r.dtype);if(s.dtype==="complex64"){const i=t.texData.get(s.dataId),u=t.texData.get(r.dataId),c=new bI(yI.REAL,s.shape,r.shape),l=new bI(yI.IMAG,s.shape,r.shape),d=[{dataId:i.complexTensorInfos.real.dataId,dtype:i.complexTensorInfos.real.dtype,shape:s.shape},{dataId:i.complexTensorInfos.imag.dataId,dtype:i.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:u.complexTensorInfos.real.dataId,dtype:u.complexTensorInfos.real.dtype,shape:r.shape},{dataId:u.complexTensorInfos.imag.dataId,dtype:u.complexTensorInfos.imag.dtype,shape:r.shape}],h=t.runWebGLProgram(c,d,"float32"),p=t.runWebGLProgram(l,d,"float32"),f=No({inputs:{real:h,imag:p},backend:t});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(p),f}if(t.shouldExecuteOnCPU([s,r])){const i=t.texData.get(s.dataId),u=t.texData.get(r.dataId),[c,l]=VJ(s.shape,r.shape,i.values,u.values,a),d=t.makeTensorInfo(l,a),h=t.texData.get(d.dataId);return h.values=c,d}let o;return Y().getBool("WEBGL_PACK_BINARY_OPERATIONS")?o=new cc(xI,s.shape,r.shape):o=new ui(xI,s.shape,r.shape),t.runWebGLProgram(o,[s,r],a)}const UQ={kernelName:Cl,backendName:"webgl",kernelFunc:M0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GQ(n,e,t){const s=[Tu(n.shape),...$u(n.shape)],r={dtype:n.dtype,shape:s,dataId:n.dataId},a=[Tu(e),...$u(e)],o=new c_(a,s),i=!0,u=[s],c=t.runWebGLProgram(o,[r],n.dtype,u,i);return{dataId:c.dataId,shape:e,dtype:c.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function he(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{shape:a}=s,o=t,i=U(r.shape),u=gx(a,i),c=U(u);_(i===c,()=>`The new shape (${u}) has ${c} elements and the old shape (${r.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`);const l=o.texData.get(r.dataId);return l.isPacked&&!zf(r.shape,u)&&!(l.texture!==null&&zf(l.shape,u))?GQ(r,u,o):(o.incRef(r.dataId),{dataId:r.dataId,shape:u,dtype:r.dtype})}const HQ={kernelName:Ah,backendName:"webgl",kernelFunc:he};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wI{constructor(e,t){this.variableNames=["x"];const{windowSize:s,batchSize:r,inSize:a,outSize:o}=e;this.outputShape=[r,o];const i=Math.floor(s/4)*4,u=s%4;let c="sumValue += dot(values, ones);";if(t!=null){const d=1/t;c=`sumValue += dot(values * ${pu(d)?d.toPrecision(2):d}, ones);`}let l="";a%s>0&&(l=`
        if (inIdx < 0 || inIdx >= ${a}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${l}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        float sumValue = 0.0;

        for (int i = 0; i < ${i}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${c}
        }

        int inIdx = inOffset + ${i};
        if (${u===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${c}
        } else if (${u===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${c}
        } else if (${u===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${c}
        }
        setOutput(sumValue);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jQ{constructor(e,t){this.variableNames=["x"];const{windowSize:s,batchSize:r,inSize:a,outSize:o}=e;this.outputShape=[r,o];let i="0.0",u="";t==="prod"?i="1.0":t==="min"?(i="1.0 / 1e-20",u="min"):t==="max"&&(i="-1.0 / 1e-20",u="max");let c=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?c="sumValue":t==="prod"?c="prodValue":t==="all"?c="allValue":t==="any"&&(c="anyValue");const l=Math.floor(s/4)*4,d=s%4;let h=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${u}(values, minMaxValue);
        if (${t==="min"} || ${t==="max"}) {
          minMaxValue = ${u}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,p="vec4";t==="all"?(i="1.0",h=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,p="bvec4"):t==="any"&&(i="0.0",h=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,p="bvec4");let f="";a%s>0&&(f=`
        if (inIdx < 0 || inIdx >= ${a}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${i};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        vec4 minMaxValue = vec4(${i});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${l}; i += 4) {
          int inIdx = inOffset + i;
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${h}
        }

        int inIdx = inOffset + ${l};
        if (${d===1}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${h}
        } else if (${d===2}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${h}
        } else if (${d===3}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${h}
        }
        setOutput(${c});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qQ(n){const e=[];for(;e.length===0||e[e.length-1].outSize!==1;){const t=e.length?e[e.length-1].outSize:n[1],s=vg(t);e.push({inSize:t,windowSize:s,outSize:Math.ceil(t/s)})}return e}function Ai(n,e,t,s){const r=qQ(n.shape);let a=n;for(let o=0;o<r.length;o++){const{inSize:i,windowSize:u,outSize:c}=r[o];let l,d;t==="mean"?l=o===0?new wI({windowSize:u,inSize:i,batchSize:n.shape[0],outSize:c},i):new wI({windowSize:u,inSize:i,batchSize:n.shape[0],outSize:c}):l=new jQ({windowSize:u,inSize:i,batchSize:n.shape[0],outSize:c},t),d=a,a=s.runWebGLProgram(l,[a],e),d.dataId!==n.dataId&&s.disposeIntermediateTensorInfo(d)}return a}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class KQ{constructor(e,t){this.variableNames=["A"];const s=new Array(e.length);for(let o=0;o<s.length;o++)s[o]=e[t[o]];this.outputShape=s,this.rank=s.length;const r=vt(this.rank),a=XQ(t);this.userCode=`
    void main() {
      ${r} resRC = getOutputCoords();
      setOutput(getA(${a}));
    }
    `}}function XQ(n){const e=n.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(e);for(let r=0;r<n.length;r++)s[n[r]]=t[r];return s.join()}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class YQ{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const s=new Array(e.length);for(let l=0;l<s.length;l++)s[l]=e[t[l]];if(this.outputShape=s,this.rank=s.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=vt(this.rank),a=l_("rc",this.rank),o=new Array(this.rank);for(let l=0;l<t.length;l++)o[t[l]]=a[l];const i=`vec2(${o.slice(-2).join()})`,u=`++${a[this.rank-1]} < ${s[this.rank-1]}`,c=`getChannel(getA(${o.join()}), ${i})`;this.userCode=`
    void main() {
      ${r} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${c};
      if(${u}) {
        result[1] = ${c};
      }
      --${a[this.rank-1]};
      if(++${a[this.rank-2]} < ${s[this.rank-2]}) {
        result[2] = ${c};
        if(${u}) {
          result[3] = ${c};
        }
      }
      setOutput(result);
    }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ug(n,e,t){const s=Y().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new YQ(n.shape,e):new KQ(n.shape,e);return t.runWebGLProgram(s,[n],n.dtype)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZQ(n,e,t,s){const r=e,a=n.shape.length,o=ze(r,n.shape);let i=o;const u=At(i,a),c=u!=null;let l=n;c&&(l=Ug(n,u,s),i=Ct(i.length,a)),Et("sum",i,a);const[d,h]=Rt(l.shape,i);let p=d;t&&(p=wt(d,o));const f=U(h),g=U(n.shape)/f,y=he({inputs:{x:l},attrs:{shape:[g,f]},backend:s}),b=Dx(n.dtype),x=Ai(y,b,"sum",s),w=he({inputs:{x},attrs:{shape:p},backend:s});return s.disposeIntermediateTensorInfo(y),s.disposeIntermediateTensorInfo(x),c&&s.disposeIntermediateTensorInfo(l),w}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gg(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:a,keepDims:o}=s;return ZQ(r,a,o,t)}const JQ={kernelName:ql,backendName:"webgl",kernelFunc:Gg};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qn(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{perm:a}=s,o=t,i=r.shape.length,u=new Array(i);for(let l=0;l<u.length;l++)u[l]=r.shape[a[l]];let c;if(o.shouldExecuteOnCPU([r])){const d=o.texData.get(r.dataId).values,h=P0(d,r.shape,r.dtype,a,u);c=o.makeTensorInfo(u,r.dtype);const p=o.texData.get(c.dataId);p.values=h}else c=Ug(r,a,o);return c}const QQ={kernelName:ja,backendName:"webgl",kernelFunc:qn};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g_=1e3;function Vf({a:n,b:e,transposeA:t,transposeB:s,backend:r,bias:a=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:u=null}){const c=n.shape.length,l=e.shape.length,d=t?n.shape[c-2]:n.shape[c-1],h=s?e.shape[l-1]:e.shape[l-2],p=t?n.shape[c-1]:n.shape[c-2],f=s?e.shape[l-2]:e.shape[l-1],m=n.shape.slice(0,-2),g=e.shape.slice(0,-2),y=U(m),b=U(g),w=Me(n.shape.slice(0,-2),e.shape.slice(0,-2)).concat([p,f]);_(d===h,()=>`Error in matMul: inner shapes (${d}) and (${h}) of Tensors with shapes ${n.shape} and ${e.shape} and transposeA=${t} and transposeB=${s} must match.`);const v=t?[y,d,p]:[y,p,d],S=s?[b,f,h]:[b,h,f],N=he({inputs:{x:n},backend:r,attrs:{shape:v}}),$=he({inputs:{x:e},backend:r,attrs:{shape:S}}),T=[N,$],C=Math.max(y,b),k=t?N.shape[1]:N.shape[2],A=a!=null,D=o!=null,R=u==="leakyrelu",F=u!=null?sd(u,!0):null,z=A||D||R||F!=null;let H;if((p===1||f===1)&&k>g_&&z===!1){let G=N,X=$;t&&(G=qn({inputs:{x:N},backend:r,attrs:{perm:[0,2,1]}}),T.push(G)),s&&(X=qn({inputs:{x:$},backend:r,attrs:{perm:[0,2,1]}}),T.push(X));const Z=f!==1,ne=f===1;let te=G;Z&&(te=he({inputs:{x:G},backend:r,attrs:{shape:[C,k,1]}}),T.push(te));const ae=f===1?2:1;let oe=X;ne&&(oe=he({inputs:{x:X},backend:r,attrs:{shape:[C,1,k]}}),T.push(oe));const pe=M0({inputs:{a:te,b:oe},backend:r});H=Gg({inputs:{x:pe},backend:r,attrs:{axis:ae,keepDims:!0}}),T.push(pe)}else{const G=ws(n.dtype,e.dtype),X=new m_(v,S,[C,p,f],t,s,A,F,D,R),Z=[N,$];if(a!=null&&Z.push(a),D&&Z.push(o),R){const ne=r.makeTensorInfo([],"float32",go(i,"float32"));Z.push(ne),T.push(ne)}H=r.runWebGLProgram(X,Z,G)}const P=he({inputs:{x:H},backend:r,attrs:{shape:w}});T.push(H);for(const G of T)r.disposeIntermediateTensorInfo(G);return P}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eee(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:a,bias:o,preluActivationWeights:i}=e,{transposeA:u,transposeB:c,activation:l,leakyreluAlpha:d}=s;return Vf({a:r,b:a,transposeA:u,transposeB:c,backend:t,bias:o,preluActivationWeights:i,leakyreluAlpha:d,activation:l})}const tee={kernelName:mu,backendName:"webgl",kernelFunc:eee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vI="return abs(x);";function nee(n){const{inputs:e,backend:t}=n,{x:s}=e;if(t.shouldExecuteOnCPU([s])&&s.dtype!=="complex64"){const a=t.texData.get(s.dataId),o=i_(a.values);return t.makeTensorInfo(s.shape,s.dtype,o)}let r;return Y().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new Ga(s.shape,vI):r=new Br(s.shape,vI),t.runWebGLProgram(r,[s],s.dtype)}const see={kernelName:qd,backendName:"webgl",kernelFunc:nee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ree=or+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,aee=at({opSnippet:ree}),oee={kernelName:Fu,backendName:"webgl",kernelFunc:aee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iee=or+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,uee=at({opSnippet:iee}),lee={kernelName:Pu,backendName:"webgl",kernelFunc:uee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const II="return a + b;",cee=_n({opSnippet:II,packedOpSnippet:II,supportsComplex:!0,cpuKernelImpl:wJ}),dee={kernelName:mi,backendName:"webgl",kernelFunc:cee};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hee{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((a,o)=>`T${o}`);const s=[];this.variableNames.forEach(a=>{s.push(`float v${a} = get${a}AtOutCoords();`)});const r=this.variableNames.map(a=>`v${a}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        float result = ${r};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pee{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((a,o)=>`T${o}`);const s=[];this.variableNames.forEach(a=>{s.push(`vec4 v${a} = get${a}AtOutCoords();`)});const r=this.variableNames.map(a=>`v${a}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        vec4 result = ${r};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sf(n){const{inputs:e,backend:t}=n,s=e;if(s.length===1)return Ns({inputs:{x:s[0]},backend:t});if(s.length>Y().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const u=Math.floor(s.length/2),c=sf({inputs:s.slice(0,u),backend:t}),l=sf({inputs:s.slice(u),backend:t});return sf({inputs:[c,l],backend:t})}const r=s.map(u=>u.dtype).reduce((u,c)=>ws(u,c)),a=s.map(u=>u.shape),i=Y().getBool("WEBGL_PACK")?new pee(s[0].shape,a):new hee(s[0].shape,a);return t.runWebGLProgram(i,s,r)}const fee={kernelName:Lu,backendName:"webgl",kernelFunc:sf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mee(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:a,keepDims:o}=s,i=r.shape.length,u=ze(a,r.shape);let c=u;const l=At(c,i);let d=r;l!=null&&(d=qn({inputs:{x:r},backend:t,attrs:{perm:l}}),c=Ct(c.length,i)),Et("all",c,i);const[h,p]=Rt(d.shape,c),f=U(p),m=he({inputs:{x:d},backend:t,attrs:{shape:[-1,f]}}),g=Ai(m,m.dtype,"all",t);let y;if(o){const b=wt(h,u);y=he({inputs:{x:g},backend:t,attrs:{shape:b}})}else y=he({inputs:{x:g},backend:t,attrs:{shape:h}});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g),l!=null&&t.disposeIntermediateTensorInfo(d),y}const gee={kernelName:Kd,backendName:"webgl",kernelFunc:mee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yee(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:a,keepDims:o}=s,i=r.shape.length,u=ze(a,r.shape);let c=u;const l=At(c,i);let d=r;l!=null&&(d=qn({inputs:{x:r},backend:t,attrs:{perm:l}}),c=Ct(c.length,i)),Et("any",c,i);const[h,p]=Rt(d.shape,c),f=U(p),m=he({inputs:{x:d},backend:t,attrs:{shape:[-1,f]}}),g=Ai(m,m.dtype,"any",t);let y;if(o){const b=wt(h,u);y=he({inputs:{x:g},backend:t,attrs:{shape:b}})}else y=he({inputs:{x:g},backend:t,attrs:{shape:h}});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g),l!=null&&t.disposeIntermediateTensorInfo(d),y}const bee={kernelName:Xd,backendName:"webgl",kernelFunc:yee};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xee{constructor(e,t,s){this.variableNames=["A"];const{windowSize:r,batchSize:a,outSize:o}=e;s||this.variableNames.push("bestIndicesA"),this.outputShape=[a,o];const i=t==="max"?">":"<",u=s?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${r}; i++) {
          int inIdx = ${u};
          float candidate = getA(batch, inIdx);
          if (candidate ${i} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wee{constructor(e,t,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,_(e.length>2,()=>`Packed arg${s.charAt(0).toUpperCase()+s.slice(1)} supports only inputs with rank above 2.`);const a=e[e.length-1],o=Math.ceil(a/t);this.outputShape=e.slice(0,-1),o>1&&this.outputShape.push(o),r||this.variableNames.push("bestIndicesA");const i=this.outputShape,u=i.length,c=vt(u),l=jn("coords",u);let d,h;if(o===1){h=u+1;const $=vt(h);d=`
        ${$} sourceLocR = ${$}(${l.join()}, 0);
        ++${l[u-1]};
        ${$} sourceLocG = ${$}(${l.join()}, 0);
        ++${l[u-2]};
        ${$} sourceLocA = ${$}(${l.join()}, 0);
        --${l[u-1]};
        ${$} sourceLocB = ${$}(${l.join()}, 0);
        --${l[u-2]};`}else h=u,d=`
        ${c} sourceLocR = coords;
        ++${l[u-1]};
        ${c} sourceLocG = coords;
        ++${l[u-2]};
        ${c} sourceLocA = coords;
        --${l[u-1]};
        ${c} sourceLocB = coords;
        --${l[u-2]};`;const p=["x","y","z","w","u","v"].slice(0,h),f="."+p[h-1],m=p.map($=>"int "+$),g=jn("sourceLocR",h-1).concat("inIdx.r"),y=jn("sourceLocG",h-1).concat("inIdx.g"),b=jn("sourceLocB",h-1).concat("inIdx.b"),x=jn("sourceLocA",h-1).concat("inIdx.a"),w=s==="max"?"greaterThan":"lessThan",v=r?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${y.join()}),
                             getBestIndicesAChannel(${b.join()}),
                             getBestIndicesAChannel(${x.join()})));`,S=`vec4(
            getAChannel(${g.join()}),
            hasNextCol ? getAChannel(${y.join()}) : 0.,
            hasNextRow ? getAChannel(${b.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${x.join()}) : 0.)`,N=r?"":`
      float getBestIndicesAChannel(${m.join()}) {
        return getChannel(getBestIndicesA(${p.join()}),
                                          vec2(${p.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${m.join()}) {
        return getChannel(getA(${p.join()}),
                               vec2(${p.slice(-2).join()}));
      }
      ${N}
      void main() {
        ${c} coords = getOutputCoords();
        bool hasNextCol = ${l[u-1]} < ${i[u-1]-1};
        bool hasNextRow = ${l[u-2]} < ${i[u-2]-1};
        ${d}
        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},
          sourceLocB${f}, sourceLocA${f}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${S};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${v}
          vec4 candidate = ${S};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${w}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y_(n,e,t,s=null){let r=e.shape[0],a=e.shape[1];s!=null&&(r=s.shape[0],a=s.shape[1]);const o=vg(a),i={windowSize:o,inSize:a,batchSize:r,outSize:Math.ceil(a/o)},u=new xee(i,t,s==null),c=[e];s!=null&&c.push(s);const l=n.runWebGLProgram(u,c,"int32");if(l.shape[1]===1)return l;const d=y_(n,e,t,l);return n.disposeIntermediateTensorInfo(l),d}function b_(n,e,t,s=null){const r=s!=null?s.shape:e.shape,a=r[r.length-1],o=vg(a),i=new wee(r,o,t,s==null),u=s==null?[e]:[e,s],c=n.runWebGLProgram(i,u,"int32");if(c.shape.length===e.shape.length){const l=b_(n,e,t,c);return n.disposeIntermediateTensorInfo(c),l}return c}function x_(n,e,t,s){const r=[t];if(Et("arg"+s.charAt(0).toUpperCase()+s.slice(1),r,e.shape.length),!Y().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){const a=[],o=n.texData.get(e.dataId),i=o!==null&&o.isPacked;let u=e;i&&(u=n.unpackTensor(e),a.push(u));const[c,l]=Rt(u.shape,r),d=U(l),h=he({inputs:{x:u},backend:n,attrs:{shape:[-1,d]}});a.push(h);const p=y_(n,h,s);a.push(p);const f=he({inputs:{x:p},backend:n,attrs:{shape:c}});return a.forEach(m=>n.disposeIntermediateTensorInfo(m)),f}return b_(n,e,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vee(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:a}=s;let o=ze(a,r.shape);const i=At(o,r.shape.length);let u=r;const c=[];i!=null&&(u=qn({inputs:{x:r},backend:t,attrs:{perm:i}}),c.push(u),o=Ct(o.length,u.shape.length)),Et("argMax",[o[0]],u.shape.length);const l=x_(t,u,o[0],"max");return c.forEach(d=>t.disposeIntermediateTensorInfo(d)),l}const Iee={kernelName:Yd,backendName:"webgl",kernelFunc:vee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function See(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:a}=s;let o=ze(a,r.shape);const i=At(o,r.shape.length);let u=r;const c=[];i!=null&&(u=qn({inputs:{x:r},backend:t,attrs:{perm:i}}),c.push(u),o=Ct(o.length,u.shape.length)),Et("argMin",[o[0]],u.shape.length);const l=x_(t,u,o[0],"min");return c.forEach(d=>t.disposeIntermediateTensorInfo(d)),l}const kee={kernelName:Zd,backendName:"webgl",kernelFunc:See};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nee=or+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,Cee=at({opSnippet:Nee}),Tee={kernelName:Mu,backendName:"webgl",kernelFunc:Cee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $ee=or+"return log(x + sqrt(x * x + 1.0));",_ee=at({opSnippet:$ee}),Eee={kernelName:Bu,backendName:"webgl",kernelFunc:_ee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Aee=or+`
  return atan(x);
`,Dee=at({opSnippet:Aee}),Ree={kernelName:zu,backendName:"webgl",kernelFunc:Dee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oee=L0+`
  return atan(a, b);
`,Fee=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Ei+`
  return result;
`,Pee=_n({opSnippet:Oee,packedOpSnippet:Fee}),Lee={kernelName:Wu,backendName:"webgl",kernelFunc:Pee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mee=or+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,Bee=at({opSnippet:Mee}),zee={kernelName:Vu,backendName:"webgl",kernelFunc:Bee};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rd{constructor(e,t,s,r=!1,a=!1){if(this.variableNames=["x"],t==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const o=e.filterWidth,i=e.strideHeight,u=e.strideWidth,c=e.dilationHeight,l=e.dilationWidth,d=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=e.padInfo.top,f=e.padInfo.left;this.outputShape=e.outShape;const m=t==="avg",g=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,y=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let b="0.0";if(m||(b="-1.0 / 1e-20"),s){const $=">=";this.userCode=`
        const ivec2 strides = ivec2(${i}, ${u});
        const ivec2 pads = ivec2(${p}, ${f});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${d};
              wR += ${c}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${h};
                wC += ${l}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${$} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${r?a?g:y:`wR * ${h} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const x="max";let w=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(w="avgValue / max(count, 1.0)");const v=Math.floor(o/4)*4,S=o%4,N=`
      if (${m}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${x}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${i}, ${u});
      const ivec2 pads = ivec2(${p}, ${f});
      const float initializationValue = ${b};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${b});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${d};
            wR += ${c}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${v}; wC += 4) {
            int xC = xCCorner + wC * ${l};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${l}, d),
              getValue(batch, xR, xC + 2 * ${l}, d),
              getValue(batch, xR, xC + 3 * ${l}, d)
            );

            ${N}
          }

          int xC = xCCorner + ${v};
          if (${S===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${N}
          } else if (${S===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${l}, d),
              initializationValue,
              initializationValue
            );

            ${N}
          } else if (${S===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${l}, d),
              getValue(batch, xR, xC + 2 * ${l}, d),
              initializationValue
            );

            ${N}
          }
        }
        setOutput(${w});
      }
    `}}class B0{constructor(e,t,s,r=!1,a=!1){if(this.variableNames=["x"],t==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const o=e.filterWidth,i=e.strideDepth,u=e.strideHeight,c=e.strideWidth,l=e.dilationDepth,d=e.dilationHeight,h=e.dilationWidth,p=e.effectiveFilterDepth,f=e.effectiveFilterHeight,m=e.effectiveFilterWidth,g=e.padInfo.front,y=e.padInfo.top,b=e.padInfo.left;this.outputShape=e.outShape;const x=t==="avg";let w="0.0";if(x||(w="-1.0 / 1e-20"),s){const C=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${i}, ${u}, ${c});
        const ivec3 pads = ivec3(${g}, ${y}, ${b});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${p};
              wD += ${l}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${f};
                wR += ${d}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${m};
                  wC += ${h}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${C} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${r?a?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${f} * ${m} +
                      wR * ${m} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const v="max";let S=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(S="avgValue / max(count, 1.0)");const N=Math.floor(o/4)*4,$=o%4,T=`
      if (${x}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${v}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${i}, ${u}, ${c});
      const ivec3 pads = ivec3(${g}, ${y}, ${b});
      const float initializationValue = ${w};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${w});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${p};
            wD += ${l}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${f};
            wR += ${d}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${N}; wC += 4) {
              int xC = xCCorner + wC * ${h};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${h}, ch),
                getValue(batch, xD, xR, xC + 2 * ${h}, ch),
                getValue(batch, xD, xR, xC + 3 * ${h}, ch)
              );

              ${T}
            }

            int xC = xCCorner + ${N};
            if (${$===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${T}
            } else if (${$===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${h}, ch),
                initializationValue,
                initializationValue
              );

              ${T}
            } else if (${$===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${h}, ch),
                getValue(batch, xD, xR, xC + 2 * ${h}, ch),
                initializationValue
              );

              ${T}
            }
          }
        }
        setOutput(${S});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vee(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e;pp(r,"avgPool");const{filterSize:a,strides:o,pad:i,dimRoundingMode:u}=s,c=1;_(wn(o,c),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);const l=Mn(r.shape,a,o,c,i,u);if(l.filterWidth===1&&l.filterHeight===1&&Qe(l.inShape,l.outShape))return Ns({inputs:{x:r},backend:t});const d=new rd(l,"avg",!1);return t.runWebGLProgram(d,[r],"float32")}const Wee={kernelName:Uu,backendName:"webgl",kernelFunc:Vee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uee(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:a,strides:o,pad:i,dimRoundingMode:u,dataFormat:c}=s,l=[1,1,1],d=Bs(r.shape,a,o,l,i,u,c),h=new B0(d,"avg",!1);return t.runWebGLProgram(h,[r],"float32")}const Gee={kernelName:Jd,backendName:"webgl",kernelFunc:Uee};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Hee{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,s=e.filterWidth,r=e.strideHeight,a=e.strideWidth,o=e.dilationHeight,i=e.dilationWidth,u=e.effectiveFilterHeight,c=e.effectiveFilterWidth,l=u-1-e.padInfo.top,d=c-1-e.padInfo.left,h=1/(t*s);this.userCode=`
      const ivec2 pads = ivec2(${l}, ${d});
      const float avgMultiplier = float(${h});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${u};
            wR += ${o}) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${c};
            wC+= ${i}) {
            float dyC = float(dyCCorner + wC) / ${a}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}}class jee{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,s=e.filterHeight,r=e.filterWidth,a=e.strideDepth,o=e.strideHeight,i=e.strideWidth,u=e.dilationDepth,c=e.dilationHeight,l=e.dilationWidth,d=e.effectiveFilterDepth,h=e.effectiveFilterHeight,p=e.effectiveFilterWidth,f=d-1-e.padInfo.front,m=h-1-e.padInfo.top,g=p-1-e.padInfo.left,y=1/(t*s*r);this.userCode=`
      const ivec3 pads = ivec3(${f}, ${m}, ${g});
      const float avgMultiplier = float(${y});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${d};
            wD += ${u}) {
          float dyD = float(dyDCorner + wD) / ${a}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${h};
              wR += ${c}) {
            float dyR = float(dyRCorner + wR) / ${o}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${p};
                wC += ${l}) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qee(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:a}=e,o=a,{filterSize:i,strides:u,pad:c,dimRoundingMode:l}=s,d=[1,1,1],h=Bs(o.shape,i,u,d,c,l),p=new jee(h);return t.runWebGLProgram(p,[r],o.dtype)}const Kee={kernelName:Cm,backendName:"webgl",kernelFunc:qee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xee(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:a}=e,o=a;pp([r,a],"avgPoolGrad");const{filterSize:i,strides:u,pad:c}=s,l=Mn(o.shape,i,u,1,c),d=new Hee(l);return t.runWebGLProgram(d,[r],o.dtype)}const Yee={kernelName:Nm,backendName:"webgl",kernelFunc:Xee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zee(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:a}=e,{transposeA:o,transposeB:i}=s;return Vf({a:r,b:a,transposeA:o,transposeB:i,backend:t})}const Jee={kernelName:Gu,backendName:"webgl",kernelFunc:Zee};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qee{constructor(e,t,s,r,a,o){this.outputShape=[],this.variableNames=["x","mean","variance"],Me(e,t),Me(e,s);let i="0.0";r!=null&&(Me(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let u="1.0";a!=null&&(Me(e,a),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${i};
        float scale = ${u};
        float inv = scale * inversesqrt(variance + float(${o}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ete{constructor(e,t,s,r,a,o){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Me(e,t),Me(e,s);let i="vec4(0.0)";r!=null&&(Me(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let u="vec4(1.0)";a!=null&&(Me(e,a),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${i};
        vec4 scale = ${u};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${o}));

        setOutput((x - mean) * inv + offset);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tte=({inputs:n,backend:e,attrs:t})=>{const{x:s,mean:r,variance:a,offset:o,scale:i}=n;_(r.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),_(o==null||r.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),_(i==null||r.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:u}=t;u==null&&(u=.001);const c=[s,r,a];let l=null;o!=null&&(l=o.shape,c.push(o));let d=null;i!=null&&(d=i.shape,c.push(i));const h=Y().getBool("WEBGL_PACK_NORMALIZATION")?new ete(s.shape,r.shape,a.shape,l,d,u):new Qee(s.shape,r.shape,a.shape,l,d,u);return e.runWebGLProgram(h,c,c[0].dtype)},nte={kernelName:ul,backendName:"webgl",kernelFunc:tte};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ste{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=vt(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const s=rte(this.rank);let r;const a=e.map((o,i)=>`sourceLoc.${Fb[i]} = start[${i}] + coords.${Fb[i]};`);r=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${a.join(`
`)}
      `,this.userCode=`
      void main() {
        ${r}
        setOutput(getSource(${s}));
      }
    `}}const Fb=["x","y","z","w","u","v"];function rte(n){if(n===1)return"sourceLoc";if(n<=6)return Fb.slice(0,n).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ate{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=vt(this.rank),s=jn("coords",this.rank),r=jn("sourceLoc",this.rank),a=this.rank===1?"sourceLoc":`vec2(${r.slice(-2).join()})`,o=`getChannel(getSource(${r.join()}), ${a})`,i=`
      result.x = ${o};
      if (++${s[this.rank-1]} < ${e[this.rank-1]}) {
        ++${r[this.rank-1]};
        result.y = ${o};
        --${r[this.rank-1]};
      }
    `,u=this.rank===1?"":`
      --${s[this.rank-1]};
      if (++${s[this.rank-2]} < ${e[this.rank-2]}) {
        ++${r[this.rank-2]};
        result.z = ${o};
        if (++${s[this.rank-1]} < ${e[this.rank-1]}) {
          ++${r[this.rank-1]};
          result.w = ${o};
        }
      }
    `,c=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((l,d)=>`start[${d}]`).join()});`:e.map((l,d)=>`${r[d]} = ${s[d]} + start[${d}];`).join(`
`);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${c}
        vec4 result = vec4(0.);
        ${i}
        ${u}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ote(n,e,t,s){const r=s.texData.get(n.dataId),a=s.makeTensorInfo(t,n.dtype),o=s.texData.get(a.dataId);Object.assign(o,r),o.refCount=1,o.shape=t,o.dtype=n.dtype;let i=bg(e,ve(n.shape));r.slice&&(i+=r.slice.flatOffset),o.slice={flatOffset:i,origDataId:r.slice&&r.slice.origDataId||n.dataId};const u=s.dataRefCount.get(o.slice.origDataId)||1;return s.dataRefCount.set(o.slice.origDataId,u+1),a}function hc(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{begin:a,size:o}=s,[i,u]=np(r,a,o);if(Iw(r,i,u),U(u)===0)return t.makeTensorInfo(u,r.dtype,[]);if(t.shouldExecuteOnCPU([r])||r.dtype==="string"){const d=t.texData.get(r.dataId),h=JJ(d.values,i,u,r.shape,r.dtype);return t.makeTensorInfo(u,r.dtype,h)}const{isPacked:c}=t.texData.get(r.dataId),l=yg(r.shape,i,u);if(c||!l){const d=Y().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ate(u):new ste(u),h=[i];return t.runWebGLProgram(d,[r],r.dtype,h)}return t.uploadToGPU(r.dataId),ote(r,i,u,t)}const ite={kernelName:Mh,backendName:"webgl",kernelFunc:hc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ute=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:a,crops:o}=s;_(r.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const i=a.reduce((b,x)=>b*x),u=Si(r.shape,a,i),c=ki(u.length,a.length),l=Ni(r.shape,a,i),d=Sg(o,a.length),h=kg(l,o,a.length),p=[],f=he({inputs:{x:r},backend:t,attrs:{shape:u}}),m=qn({inputs:{x:f},backend:t,attrs:{perm:c}}),g=he({inputs:{x:m},backend:t,attrs:{shape:l}}),y=hc({inputs:{x:g},backend:t,attrs:{begin:d,size:h}});return p.push(f),p.push(m),p.push(g),p.forEach(b=>t.disposeIntermediateTensorInfo(b)),y},lte={kernelName:Qd,backendName:"webgl",kernelFunc:ute};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cte(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,weights:a}=e,{size:o}=s,i=t.readSync(r.dataId),u=t.readSync(a.dataId),c=o_(i,u,a.dtype,a.shape,o);return t.makeTensorInfo([o],a.dtype,c)}const dte={kernelName:eh,backendName:"webgl",kernelFunc:cte};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hte=`
  int r = int(a.r) & int(b.r);
  int g = int(a.g) & int(b.g);
  int rb = int(a.b) & int(b.b);
  int ra = int(a.a) & int(b.a);
  return vec4(r, g, rb, ra);
`,pte=`
  return float(int(a.r) & int(b.r));
`;function fte(n){const{inputs:e,backend:t}=n,{a:s,b:r}=e,a=Y().getBool("WEBGL_PACK_BINARY_OPERATIONS"),o=Y().getNumber("WEBGL_VERSION");if(t.shouldExecuteOnCPU([s,r])||o===1){const u=t.texData.get(s.dataId).values,c=t.texData.get(r.dataId).values,[l,d]=IJ(s.shape,r.shape,u,c,s.dtype),h=t.makeTensorInfo(d,s.dtype),p=t.texData.get(h.dataId);return p.values=l,h}let i;return a?i=new cc(hte,s.shape,r.shape,!1):i=new ui(pte,s.shape,r.shape),t.runWebGLProgram(i,[s,r],s.dtype)}const mte={kernelName:th,backendName:"webgl",kernelFunc:fte};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gte(n){const{inputs:e,backend:t}=n,{s0:s,s1:r}=e,a=t.readSync(s.dataId),o=t.readSync(r.dataId),i=Me(Array.from(a),Array.from(o));return t.makeTensorInfo([i.length],"int32",Int32Array.from(i))}const yte={kernelName:Tm,backendName:"webgl",kernelFunc:gte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bte="return float(a != b);",w_=_n({opSnippet:bte,cpuKernelImpl:UJ,dtype:"bool"}),xte={kernelName:Nh,backendName:"webgl",kernelFunc:w_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mp(n){const{inputs:e,backend:t}=n,{input:s}=e,r=t.texData.get(s.dataId);return Ns({inputs:{x:r.complexTensorInfos.real},backend:t})}const wte={kernelName:Ex,backendName:"webgl",kernelFunc:mp};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vte="return float(int(x));";function Ite(n,e){const t=new Br(n.shape,vte),s=e.runWebGLProgram(t,[n],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pb(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dtype:a}=s;if(a==="complex64"){if(r.dtype==="complex64")return Ns({inputs:{x:r},backend:t});const o=un(r.shape),i=Pb({inputs:{x:r},backend:t,attrs:{dtype:"float32"}}),u=No({inputs:{real:i,imag:o},backend:t});return o.dispose(),t.disposeIntermediateTensorInfo(i),u}if(r.dtype==="complex64"){const o=mp({inputs:{input:r},backend:t}),i=Pb({inputs:{x:o},backend:t,attrs:{dtype:a}});return t.disposeIntermediateTensorInfo(o),i}if(!ak(r.dtype,a)){const o=Ns({inputs:{x:r},backend:t});return{dataId:o.dataId,shape:o.shape,dtype:a}}if(t.shouldExecuteOnCPU([r])){const o=t.texData.get(r.dataId).values,[i,u,c]=SJ(o,r.shape,r.dtype,a);return t.makeTensorInfo(i,u,c)}if(a==="int32")return Ite(r,t);if(a==="bool"){const o=t.makeTensorInfo([],"bool",Cn("bool",1)),u=w_({inputs:{a:r,b:o},backend:t});return t.disposeIntermediateTensorInfo(o),u}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${a}`)}const Ste={kernelName:Hu,backendName:"webgl",kernelFunc:Pb};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SI="return ceil(x);",kte=at({opSnippet:SI,packedOpSnippet:SI,cpuKernelImpl:kJ}),Nte={kernelName:ju,backendName:"webgl",kernelFunc:kte};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Cte{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Tte{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $te(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{clipValueMin:a,clipValueMax:o}=s;let i;Y().getBool("WEBGL_PACK_CLIP")?i=new Tte(r.shape):i=new Cte(r.shape);const u=[[a],[o]];return t.runWebGLProgram(i,[r],r.dtype,u)}const _te={kernelName:gi,backendName:"webgl",kernelFunc:$te};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ete{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kI(n,e){return{dataId:e.dataId,dtype:e.dtype,shape:n.shape}}function Ate(n){const{inputs:e,backend:t}=n,{x:s}=e,r=t.texData.get(s.dataId),a=new Ete(s.shape),o=[kI(s,r.complexTensorInfos.real),kI(s,r.complexTensorInfos.imag)];return t.runWebGLProgram(a,o,o[0].dtype)}const Dte={kernelName:$m,backendName:"webgl",kernelFunc:Ate};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Rte{constructor(e){this.outputShape=[],this.outputShape=Fs(e,1),this.variableNames=e.map((o,i)=>`T${i}`);const t=new Array(e.length-1);t[0]=e[0][1];for(let o=1;o<t.length;o++)t[o]=t[o-1]+e[o][1];const s=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let o=1;o<t.length;o++){const i=t[o-1];s.push(`else if (yC < ${t[o]}) setOutput(getT${o}(yR, yC-${i}));`)}const r=t.length,a=t[t.length-1];s.push(`else setOutput(getT${r}(yR, yC-${a}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${s.join(`
        `)}
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ote{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Fs(e,t);const s=this.outputShape,r=s.length,a=vt(r),o=jn("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map((m,g)=>`T${g}`);const u=new Array(e.length-1);u[0]=e[0][t];for(let m=1;m<u.length;m++)u[m]=u[m-1]+e[m][t];const c=i[t],l=i.slice(-2),d=i.join();let h=`if (${c} < ${u[0]}) {
        return getChannel(
            getT0(${d}), vec2(${l.join()}));
        }`;for(let m=1;m<u.length;m++){const g=u[m-1];h+=`
        if (${c} < ${u[m]}  && ${c} >= ${u[m-1]}) {
          return getChannel(
            getT${m}(${Up(i,c,g)}),
            vec2(${Up(l,c,g)}));
        }`}const p=u.length,f=u[u.length-1];h+=`
        return getChannel(
          getT${p}(${Up(i,c,f)}),
          vec2(${Up(l,c,f)}));`,this.userCode=`
      float getValue(${i.map(m=>"int "+m)}) {
        ${h}
      }

      void main() {
        ${a} coords = getOutputCoords();
        vec4 result = vec4(getValue(${o}), 0., 0., 0.);

        ${o[r-1]} = ${o[r-1]} + 1;
        if (${o[r-1]} < ${s[r-1]}) {
          result.g = getValue(${o});
        }

        ${o[r-2]} = ${o[r-2]} + 1;
        if (${o[r-2]} < ${s[r-2]}) {
          result.a = getValue(${o});
        }

        ${o[r-1]} = ${o[r-1]} - 1;
        if (${o[r-2]} < ${s[r-2]} &&
            ${o[r-1]} < ${s[r-1]}) {
          result.b = getValue(${o});
        }
        setOutput(result);
      }
    `}}function Up(n,e,t){const s=n.indexOf(e);return n.map((a,o)=>o===s?`${a} - ${t}`:a).join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hg(n){const{inputs:e,backend:t}=n,{input:s}=e,r=t.texData.get(s.dataId);return Ns({inputs:{x:r.complexTensorInfos.imag},backend:t})}const Fte={kernelName:Cx,backendName:"webgl",kernelFunc:Hg};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ec(n,e,t){const s=n[0].dtype;if(s==="complex64"){const p=n.map(b=>mp({inputs:{input:b},backend:t})),f=n.map(b=>Hg({inputs:{input:b},backend:t})),m=Ec(p,e,t),g=Ec(f,e,t),y=No({inputs:{real:m,imag:g},backend:t});return p.forEach(b=>t.disposeIntermediateTensorInfo(b)),f.forEach(b=>t.disposeIntermediateTensorInfo(b)),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g),y}let r=t.shouldExecuteOnCPU(n);if(s==="string"&&(r=!0),r){const p=n.map(w=>{const S=[-1,U(w.shape.slice(e))];return he({inputs:{x:w},backend:t,attrs:{shape:S}})}),f=p.map(w=>({vals:t.readSync(w.dataId),shape:w.shape})),m=Fs(p.map(w=>w.shape),1),g=p[0].shape[0]===1,y=NJ(f,m,s,g),b=Fs(n.map(w=>w.shape),e),x=t.makeTensorInfo(b,s,y);return p.forEach(w=>t.disposeIntermediateTensorInfo(w)),x}const a=n.filter(p=>U(p.shape)>0),o=Y().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&a[0].shape.length>1;if(a.length===1){const p=o?new Br(n[0].shape,Pa):new Ga(n[0].shape,Pa);return t.runWebGLProgram(p,n,s)}const i=Y().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(a.length>i){const p=[];for(let m=0;m<a.length;m+=i){const g=a.slice(m,m+i);p.push(Ec(g,e,t))}const f=Ec(p,e,t);for(const m of p)t.disposeIntermediateTensorInfo(m);return f}if(o){const p=new Ote(a.map(f=>f.shape),e);return t.runWebGLProgram(p,a,s)}const{tensors2D:u,outShape:c}=Pte(a,e,t),l=new Rte(u.map(p=>p.shape)),d=t.runWebGLProgram(l,u,s);u.forEach(p=>t.disposeIntermediateTensorInfo(p));const h=he({inputs:{x:d},attrs:{shape:c},backend:t});return t.disposeIntermediateTensorInfo(d),h}function Pte(n,e,t){const s=Fs(n.map(a=>a.shape),e);return{tensors2D:n.map(a=>he({inputs:{x:a},attrs:{shape:[-1,U(a.shape.slice(e))]},backend:t})),outShape:s}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v_(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s,a=ze(r,e[0].shape)[0],o=e.map(c=>c.shape);wg(o,a);const i=Fs(e.map(c=>c.shape),a);if(U(i)===0)return t.makeTensorInfo(i,e[0].dtype,[]);const u=e.filter(c=>U(c.shape)>0);return u.length===1?Ns({inputs:{x:u[0]},backend:t}):Ec(u,a,t)}const Lte={kernelName:nh,backendName:"webgl",kernelFunc:v_};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class I_{constructor(e,t=!1,s=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const o=e.padInfo.top,i=e.padInfo.left,u=e.strideHeight,c=e.strideWidth,l=e.dilationHeight,d=e.dilationWidth,h=e.filterHeight,p=e.filterWidth,f=Math.floor(e.inChannels/4)*4,m=e.inChannels%4,g=e.dataFormat==="channelsLast",y=g?1:2,b=g?2:3,x=g?3:1;let w="",v="";s&&(r?w=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:a?w=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:w=`
          float activation(float x) {
            ${s}
          }
        `,v="result = activation(result);");const S=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${w}

      const ivec2 strides = ivec2(${u}, ${c});
      const ivec2 pads = ivec2(${o}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${x}];

        ivec2 xRCCorner =
            ivec2(coords[${y}], coords[${b}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${h}; wR++) {
          int xR = xRCorner + wR * ${l};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${p}; wC++) {
            int xC = xCCorner + wC * ${d};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${f}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${g}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${m===1}) {

              if (${g}) {
                dotProd +=
                    getX(batch, xR, xC, ${f}) *
                    getW(wR, wC, ${f}, d2);
              } else {
                dotProd +=
                    getX(batch, ${f}, xR, xC) *
                    getW(wR, wC, ${f}, d2);
              }

            } else if (${m===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2)
              );

              if (${g}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${m===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2),
                getW(wR, wC, ${f} + 2, d2)
              );

              if (${g}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1),
                  getX(batch, xR, xC, ${f} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC),
                  getX(batch, ${f} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${S}
        ${v}
        setOutput(result);
      }
    `}}class Mte{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,s=e.padInfo.top,r=e.padInfo.left,a=e.strideDepth,o=e.strideHeight,i=e.strideWidth,u=e.dilationDepth,c=e.dilationHeight,l=e.dilationWidth,d=e.filterDepth,h=e.filterHeight,p=e.filterWidth,f=Math.floor(e.inChannels/4)*4,m=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${a}, ${o}, ${i});
      const ivec3 pads = ivec3(${t}, ${s}, ${r});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${d}; wF++) {
          int xF = xFCorner + wF * ${u};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${h}; wR++) {
            int xR = xRCorner + wR * ${c};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${p}; wC++) {
              int xC = xCCorner + wC * ${l};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${f}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${m===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${f}) *
                  getW(wF, wR, wC, ${f}, d2);
              } else if (${m===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${m===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1),
                  getX(batch, xF, xR, xC, ${f} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2),
                  getW(wF, wR, wC, ${f} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class S_{constructor(e,t=!1,s=null,r=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=zn(this.outputShape.length);const o=e.padInfo.left,i=e.strideWidth,u=e.dilationWidth,c=e.filterHeight,l=e.filterWidth,d=l;let h=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let g=0;g<l;g++)h+=`
           vec4 xTexelC${g*2};
           int xTexelC${g*2}Ready;
           vec4 xTexelC${g*2+1};
           int xTexelC${g*2+1}Ready;
           vec4 xC${g};`;h+=`
     for (int r = 0; r < ${c}; r++) {
      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {
       `;for(let g=0;g<l;g++)h+=`
           xTexelC${g*2} = vec4(0.0);
           xTexelC${g*2}Ready = 0;
           xTexelC${g*2+1} = vec4(0.0);
           xTexelC${g*2+1}Ready = 0;
           xC${g} = vec4(0.0);`;h+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let g=0;g<(d+1)/2;g++){const y=g*2;if(h+=`
           xC = xCCorner + ${y*u};
           `,i===1){if(y<l&&(o%2===1?(h+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                   xTexelC${y} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${y}.zw = vec2(0.0);
                   }
                   xTexelC${y}Ready = 1;
                 }
               `,u===1&&y>0?h+=`
                 xC${y} = vec4(xTexelC${y-2}.zw, xTexelC${y}.xy);
                 `:h+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${y} = vec4(previous.zw, xTexelC${y}.xy);
                   } else {
                     xC${y} = vec4(0.0, 0.0, xTexelC${y}.xy);
                   }
                   `):h+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                   xTexelC${y} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${y}.zw = vec2(0.0);
                   }
                   xTexelC${y}Ready = 1;
                 }

                 xC${y} = xTexelC${y};
                 `,y+1<l)){const b=o%2===0?mx(u):u;u%2===0&&o%2===1||u%2!==0&&o%2!==1?(h+=`
                   xCOffset = xC + imod(pads[1], 2) + ${b};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                     xTexelC${y+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${y+1}.zw = vec2(0.0);
                     }
                     xTexelC${y+1}Ready = 1;
                   }
                   `,u>1?h+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${y+1} = vec4(previous.zw, xTexelC${y+1}.xy);
                     } else {
                      xC${y+1} = vec4(0.0, 0.0, xTexelC${y+1}.xy);
                     }
                     `:h+=`
                     xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.xy);
                     `):b===1?h+=`
                     xC${y+1} = xTexelC${y};
                     `:h+=`
                     xCOffset = xC + ${b};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                       xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${y+1}.zw = vec2(0.0);
                       }
                       xTexelC${y+1}Ready = 1;
                     }

                     xC${y+1} = xTexelC${y+1};
                     `}}else y<l&&(o%2===1?(h+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                   xTexelC${y} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${y}.zw = vec2(0.0);
                   }
                   xTexelC${y}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${y+1}Ready == 0) {
                   xTexelC${y+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${y+1}.zw = vec2(0.0);
                   }
                   xTexelC${y+1}Ready = 1;
                 }

                 xC${y} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
               `,y+1<l&&(h+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${y+1} = vec4(xTexelC${y+1}.xy, final.xy);
                 `)):(h+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                   xTexelC${y} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${y}.zw = vec2(0.0);
                   }
                   xTexelC${y}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                   xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${y+1}.zw = vec2(0.);
                   }
                   xTexelC${y+1}Ready = 1;
                 }

                 xC${y} = vec4(
                   xTexelC${y}.xy, xTexelC${y+1}.xy);
               `,y+1<l&&(h+=`
                   xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
                 `)));y<l&&(h+=`
             wTexel = getW(r, ${y}, d1, d2);
             dotProd += xC${y}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${e.inChannels}) {
               dotProd += xC${y}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,y+1<l&&(h+=`
               wTexel = getW(r, ${y+1}, d1, d2);
               dotProd += xC${y+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${e.inChannels}) {
                 dotProd += xC${y+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}h+=`
     }
   `,h+=`
     }
   `,h+=`
     }
   `;let p="",f="";s&&(r?p=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${s}
         }`:a?p=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${s}
         }`:p=`vec4 activation(vec4 x) {
           ${s}
         }`,f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${p}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${h}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${m}
         ${f}
         setOutput(result);
       }
     `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Bte{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=zn(this.outputShape.length);const{dataFormat:s}=t,r=Xn(),a=s==="channelsLast",o=a?1:2,i=a?2:3,u=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let c="";for(let l=0;l<=1;l++)for(let d=0;d<=1;d++)c+=`
          blockIndex = rc.z + ${d};
          pos = rc.y + ${l};

          ${u}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${o}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${i}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${a}) {
                  innerDims = vec2(d1, ch);
                  result[${l*2+d}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${l*2+d}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${c}

        ${r.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wf(n,e){const t=n.length;return t>=3?e?[...n.slice(0,-3),n[t-3]*n[t-2],n[t-1]]:[...n.slice(0,-3),n[t-3],n[t-2]*n[t-1]]:!e&&t===1&&n[0]>1?[n[0],1]:null}function k_({x:n,filter:e,convInfo:t,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:i=null}){const u=n.shape,c=s.texData.get(n.dataId),l=t.inChannels,d=u[0]*u[1]*u[2],h=t.outChannels,p=t.dataFormat==="channelsLast",f=!1,m=!1;let g;const y=[];if(a!=null){const w=Wf(a.shape,p);w!=null&&(a=he({inputs:{x:a},backend:s,attrs:{shape:w}}),y.push(a))}if(r!=null){const w=Wf(r.shape,p);w!=null&&(r=he({inputs:{x:r},backend:s,attrs:{shape:w}}),y.push(r))}if(!((d===1||h===1)&&l>g_)&&c.isPacked&&p&&c.texture!=null&&u[2]%2!==0&&Qe(c.shape.slice(-3),u.slice(-3))){const w=u[0]*u[1]*(u[2]+1),v={dataId:n.dataId,shape:[1,w,t.inChannels],dtype:n.dtype},S=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,_(zf(c.shape,v.shape),()=>`packed reshape ${c.shape} to ${v.shape} isn't free`);const N=he({inputs:{x:e},backend:s,attrs:{shape:[1,t.inChannels,t.outChannels]}});y.push(N);const $=Vf({a:v,b:N,backend:s,transposeA:f,transposeB:m,bias:r,activation:i,preluActivationWeights:a,leakyreluAlpha:o}),T=s.texData.get($.dataId);_(T.isPacked,()=>"batchMatMul result is expected to be packed"),c.shape=S,T.shape=t.outShape,g=Ns({inputs:{x:$},backend:s}),g.shape=t.outShape,y.push($)}else{const w=t.outHeight*t.outWidth,v=he({inputs:{x:n},backend:s,attrs:{shape:p?[t.batchSize,w,t.inChannels]:[t.batchSize,t.inChannels,w]}}),S=he({inputs:{x:e},backend:s,attrs:{shape:[1,t.inChannels,t.outChannels]}}),N=Vf({a:p?v:S,b:p?S:v,transposeA:!p,transposeB:m,backend:s,bias:r,activation:i,preluActivationWeights:a,leakyreluAlpha:o});g=he({inputs:{x:N},backend:s,attrs:{shape:t.outShape}}),y.push(v),y.push(S),y.push(N)}for(const w of y)s.disposeIntermediateTensorInfo(w);return g}function N_({x:n,filter:e,convInfo:t,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:i=null}){const{filterWidth:u,filterHeight:c,inChannels:l,outWidth:d,outHeight:h,dataFormat:p}=t,f=p==="channelsLast",m=u*c*l,g=h*d,y=[t.batchSize,m,g],b=!0,x=!1,w=[];if(a!=null){const P=Wf(a.shape,f);P!=null&&(a=he({inputs:{x:a},backend:s,attrs:{shape:P}}),w.push(a))}if(r!=null){const P=Wf(r.shape,f);P!=null&&(r=he({inputs:{x:r},backend:s,attrs:{shape:P}}),w.push(r))}const v=he({inputs:{x:e},backend:s,attrs:{shape:[1,m,U(e.shape)/m]}});w.push(v);const S=new Bte(y,t),N=[n.shape,[t.padInfo.top,t.padInfo.left],[t.strideHeight,t.strideWidth],[t.dilationHeight,t.dilationWidth],[t.inChannels],[t.filterWidth*t.inChannels],[t.outWidth]],$=s.runWebGLProgram(S,[n],"float32",N),T=he({inputs:{x:$},backend:s,attrs:{shape:y}});w.push($),w.push(T);const C=r!=null,k=a!=null,A=i==="leakyrelu",D=i?sd(i,!0):null,R=new m_(f?T.shape:v.shape,f?v.shape:T.shape,f?[t.batchSize,g,t.outChannels]:[t.batchSize,t.outChannels,g],b,x,C,D,k,A),F=f?[T,v]:[v,T];if(r&&F.push(r),k&&F.push(a),A){const P=s.makeTensorInfo([],"float32",go(o,"float32"));F.push(P),w.push(P)}const z=s.runWebGLProgram(R,F,"float32"),H=he({inputs:{x:z},backend:s,attrs:{shape:t.outShape}});w.push(z);for(const P of w)s.disposeIntermediateTensorInfo(P);return H}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zte(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:a}=e,{strides:o,pad:i,dataFormat:u,dilations:c,dimRoundingMode:l}=s,d=Tr(u),h=Vt(r.shape,a.shape,o,c,i,l,!1,d);let p;if(h.filterHeight===1&&h.filterWidth===1&&h.dilationHeight===1&&h.dilationWidth===1&&h.strideHeight===1&&h.strideWidth===1&&(h.padInfo.type==="SAME"||h.padInfo.type==="VALID"))p=k_({x:r,filter:a,convInfo:h,backend:t});else if(h.strideWidth<=2&&d==="channelsLast"&&Y().getBool("WEBGL_EXP_CONV")){const m=new S_(h),g=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];p=t.runWebGLProgram(m,[r,a],"float32",g)}else if(Y().getBool("WEBGL_CONV_IM2COL"))p=N_({x:r,filter:a,convInfo:h,backend:t});else{const m=new I_(h);p=t.runWebGLProgram(m,[r,a],"float32")}const f=he({inputs:{x:p},backend:t,attrs:{shape:h.outShape}});return t.disposeIntermediateTensorInfo(p),f}const Vte={kernelName:qu,backendName:"webgl",kernelFunc:zte};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Wte{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,s=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,o=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${r};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${a};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              ${o?`float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);`:`float dyValue = getDy(b, d2, yR, yC);
              float xValue = getX(b, d1, xR, xC);
              dotProd += (xValue * dyValue);`}
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class Ute{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,s=e.filterWidth,r=e.strideHeight,a=e.strideWidth,o=e.dataFormat==="channelsLast",i=t-1-e.padInfo.top,u=s-1-e.padInfo.left,c=o?1:2,l=o?2:3,d=o?3:1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${u});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${d}];

        ivec2 dyCorner = ivec2(coords[${c}], coords[${l}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${a}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${o}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class Gte{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,s=e.strideHeight,r=e.strideWidth,a=e.padInfo.front,o=e.padInfo.top,i=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${a};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${s} - ${o};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${r} - ${i};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class Hte{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,s=e.filterHeight,r=e.filterWidth,a=e.strideDepth,o=e.strideHeight,i=e.strideWidth,u=t-1-e.padInfo.front,c=s-1-e.padInfo.top,l=r-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${u}, ${c}, ${l});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${a}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${s}; wR++) {
            float dyR = float(dyRCorner + wR) / ${o}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${s} - 1 - wR;

            for (int wC = 0; wC < ${r}; wC++) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${r} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jte(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:a}=e,{strides:o,pad:i,dataFormat:u,dimRoundingMode:c,filterShape:l}=s,d=Tr(u),h=Vt(r.shape,l,o,1,i,c,!1,d),p=new Wte(h);return t.runWebGLProgram(p,[r,a],"float32")}const qte={kernelName:wx,backendName:"webgl",kernelFunc:jte};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Kte{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=zn(this.outputShape.length);const t=e.filterHeight,s=e.filterWidth,r=t-1-e.padInfo.top,a=s-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${r}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];

        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        vec4 result = vec4(0.);
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / strides[0];
          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);
          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            int wCPerm = ${s} - 1 - wC;

            float dyC = float(dyCCorner + wC) / strides[1];
            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)
              && (fract(dyC) == 0.0);
            int idyC = int(dyC);

            float dyC2 = float(dyCCorner + wC + 1) / strides[1];
            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)
              && (fract(dyC2) == 0.0);
            int idyC2 = int(dyC2);

            if (idyCVal && idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?
                  dySample : getDy(batch, idyR, idyC2, d2);

                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));

                dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample2.xy : dySample2.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC2, d2);
                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            }
          }
        }
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xte(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:a}=e,{inputShape:o,strides:i,pad:u,dataFormat:c,dimRoundingMode:l}=s,d=Tr(c),h=Vt(o,a.shape,i,1,u,l,!1,d);if(Y().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&d==="channelsLast"){const p=[[h.strideHeight,h.strideWidth]],f=new Kte(h);return t.runWebGLProgram(f,[r,a],"float32",p)}else{const p=new Ute(h);return t.runWebGLProgram(p,[r,a],"float32")}}const Yte={kernelName:Ku,backendName:"webgl",kernelFunc:Xte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zte(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:a}=e,{strides:o,pad:i,dilations:u}=s,c=Cr(r.shape,a.shape,o,u,i),l=new Mte(c);return t.runWebGLProgram(l,[r,a],"float32")}const Jte={kernelName:Xu,backendName:"webgl",kernelFunc:Zte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qte(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:a}=e,{strides:o,pad:i,filterShape:u}=s,c=Cr(r.shape,u,o,1,i),l=new Gte(c);return t.runWebGLProgram(l,[r,a],"float32")}const ene={kernelName:sh,backendName:"webgl",kernelFunc:Qte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tne(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:a}=e,{pad:o,strides:i,inputShape:u}=s,c=Cr(u,a.shape,i,1,o),l=new Hte(c);return t.runWebGLProgram(l,[r,a],"float32")}const nne={kernelName:rh,backendName:"webgl",kernelFunc:tne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sne=dc+`
  return cos(x);
`,rne=`
  vec4 result = cos(x);
  bvec4 isNaN = isnan(x);
  ${Ei}
  return result;
`,ane=at({opSnippet:sne,packedOpSnippet:rne}),one={kernelName:Yu,backendName:"webgl",kernelFunc:ane};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ine=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,une=at({opSnippet:ine}),lne={kernelName:Zu,backendName:"webgl",kernelFunc:une};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cne{constructor(e,t,s,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[o,i,u,c]=e,[l]=t,[d,h]=s;this.outputShape=[l,d,h,c];const p=r==="bilinear"?1:0,[f,m]=[`${i-1}.0`,`${u-1}.0`],[g,y,b]=d>1?[`${(i-1)/(d-1)}`,"(y2-y1) * height_ratio",`y1*${f} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${f}`],[x,w,v]=h>1?[`${(u-1)/(h-1)}`,"(x2-x1) * width_ratio",`x1*${m} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${m}`];this.userCode=`
      const float height_ratio = float(${g});
      const float width_ratio = float(${x});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${o}) {
          return;
        }

        float height_scale = ${y};
        float width_scale = ${w};

        float in_y = ${b};
        if( in_y < 0.0 || in_y > ${f} ) {
          setOutput(float(${a}));
          return;
        }
        float in_x = ${v};
        if( in_x < 0.0 || in_x > ${m} ) {
          setOutput(float(${a}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${p} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dne=n=>{const{inputs:e,backend:t,attrs:s}=n,{image:r,boxes:a,boxInd:o}=e,{cropSize:i,method:u,extrapolationValue:c}=s,l=new cne(r.shape,a.shape,i,u,c);return t.runWebGLProgram(l,[r,a,o],"float32")},hne={kernelName:oh,backendName:"webgl",kernelFunc:dne};var ad;(function(n){n.Prod="*",n.Sum="+"})(ad||(ad={}));class NI{constructor(e,t,s,r){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const a=this.outputShape.length,o=this.op===ad.Prod?"1.0":"0.0",i=s?o:`getX(${CI(a,"coords",this.op)})`,u=this.outputShape[this.outputShape.length-1];let c="",l="";s?(c=r?`end != ${u-1}`:"end != 0",l=r?"end + 1":"end - 1"):(c=r?`end + pow2 < ${u}`:"end >= pow2",l=r?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${vt(a)} coords = getOutputCoords();
        int end = ${TI(a,"coords",this.op)};
        float val = ${i};
        int pow2 = int(pow(2.0, index));
        if (${c}) {
          int idx = ${l};
          ${TI(a,"coords",this.op)} = idx;
          val ${this.op}= getX(${CI(a,"coords",this.op)});
        }
        setOutput(val);
      }
    `}}function CI(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.x, ${e}.y`;if(n===3)return`${e}.x, ${e}.y, ${e}.z`;if(n===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw new Error(`Cumulative ${t} for rank ${n} is not yet supported`)}function TI(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.y`;if(n===3)return`${e}.z`;if(n===4)return`${e}.w`;throw new Error(`Cumulative ${t} for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C_(n,e,t,s,r,a){const o=e.shape.length,i=At([s],o);let u=e;i!=null&&(u=qn({inputs:{x:e},backend:t,attrs:{perm:i}}));const c=Ct(1,o)[0];if(c!==o-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${e.shape.length-1} but got axis=${s}`);const l=u.shape[c];let d=Ns({inputs:{x:u},backend:t});for(let h=0;h<=Math.ceil(Math.log2(l))-1;h++){const p=new NI(n,u.shape,!1,a),f=[[h]],m=d;d=t.runWebGLProgram(p,[d],d.dtype,f),t.disposeIntermediateTensorInfo(m)}if(r){const h=new NI(n,u.shape,r,a),p=d;d=t.runWebGLProgram(h,[d],d.dtype),t.disposeIntermediateTensorInfo(p)}if(i!=null){const h=Qr(i),p=qn({inputs:{x:d},backend:t,attrs:{perm:h}});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(u),p}return d}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pne(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:a,exclusive:o,reverse:i}=s;return C_(ad.Prod,r,t,a,o,i)}const fne={kernelName:ah,backendName:"webgl",kernelFunc:pne};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mne(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:a,exclusive:o,reverse:i}=s;return C_(ad.Sum,r,t,a,o,i)}const gne={kernelName:Ju,backendName:"webgl",kernelFunc:mne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yne(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,weights:a}=e,{size:o,binaryOutput:i}=s;if(r.shape.length===1){const u=t.readSync(r.dataId),c=t.readSync(a.dataId),l=o_(u,c,a.dtype,a.shape,o);return t.makeTensorInfo([o],a.dtype,l)}else if(r.shape.length===2){const u=t.bufferSync(r),c=t.bufferSync(a),l=vJ(u,c,o,i);return t.makeTensorInfo(l.shape,a.dtype,l.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}const bne={kernelName:_m,backendName:"webgl",kernelFunc:yne};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xne{constructor(e,t,s){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=s,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wne(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockSize:a,dataFormat:o}=s,i=r.shape[0],u=o==="NHWC"?r.shape[1]:r.shape[2],c=o==="NHWC"?r.shape[2]:r.shape[3],l=o==="NHWC"?r.shape[3]:r.shape[1],d=u*a,h=c*a,p=l/(a*a),f=o==="NHWC"?[i,d,h,p]:[i,p,d,h],m=new xne(f,a,o);return t.runWebGLProgram(m,[r],r.dtype)}const vne={kernelName:ih,backendName:"webgl",kernelFunc:wne};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class T_{constructor(e,t=!1,s=null,r=!1,a=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=zn(this.outputShape.length);const o=e.filterHeight,i=e.filterWidth,u=e.outChannels/e.inChannels;let c="",l="";s&&(r?c=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:a?c=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:c=`
          float activation(float x) {
            ${s}
          }
        `,l="result = activation(result);");const d=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${c}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${u};
        int q = d2 - d1 * ${u};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${o}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${i}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${d}
        ${l}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $_{constructor(e,t=!1,s=null,r=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=zn(this.outputShape.length);const o=e.outChannels/e.inChannels,i=e.padInfo.left,u=e.strideWidth,c=e.dilationWidth,l=e.filterHeight,d=e.filterWidth,h=d;let p=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let y=0;y<d;y++)p+=`
          vec4 xTexelC${y*2};
          int xTexelC${y*2}Ready;
          vec4 xTexelC${y*2+1};
          int xTexelC${y*2+1}Ready;
          vec4 xC${y};`;p+=`
    for (int r = 0; r < ${l}; r++) {
      `;for(let y=0;y<d;y++)p+=`
          xTexelC${y*2} = vec4(0.0);
          xTexelC${y*2}Ready = 0;
          xTexelC${y*2+1} = vec4(0.0);
          xTexelC${y*2+1}Ready = 0;
          xC${y} = vec4(0.0);`;p+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let y=0;y<(h+1)/2;y++){const b=y*2;if(p+=`
          xC = xCCorner + ${b*c};
          `,u===1){if(b<d&&(i%2===1?(p+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }
              `,c===1&&b>0?p+=`
                xC${b} = vec4(xTexelC${b-2}.zw, xTexelC${b}.xy);
                `:p+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${b} = vec4(previous.zw, xTexelC${b}.xy);
                  } else {
                    xC${b} = vec4(0.0, 0.0, xTexelC${b}.xy);
                  }
                  `):p+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                xC${b} = xTexelC${b};
                `,b+1<d)){const x=i%2===0?mx(c):c;c%2===0&&i%2===1||c%2!==0&&i%2!==1?(p+=`
                  xCOffset = xC + imod(pads[1], 2) + ${x};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                    xTexelC${b+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${b+1}.zw = vec2(0.0);
                    }
                    xTexelC${b+1}Ready = 1;
                  }
                  `,c>1?p+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${b+1} = vec4(previous.zw, xTexelC${b+1}.xy);
                    } else {
                     xC${b+1} = vec4(0.0, 0.0, xTexelC${b+1}.xy);
                    }
                    `:p+=`
                    xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.xy);
                    `):x===1?p+=`
                    xC${b+1} = xTexelC${b};
                    `:p+=`
                    xCOffset = xC + ${x};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                      xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${b+1}.zw = vec2(0.0);
                      }
                      xTexelC${b+1}Ready = 1;
                    }

                    xC${b+1} = xTexelC${b+1};
                    `}}else b<d&&(i%2===1?(p+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${b+1}Ready == 0) {
                  xTexelC${b+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${b+1}.zw = vec2(0.0);
                  }
                  xTexelC${b+1}Ready = 1;
                }

                xC${b} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
              `,b+1<d&&(p+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${b+1} = vec4(xTexelC${b+1}.xy, final.xy);
                `)):(p+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                  xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b+1}.zw = vec2(0.);
                  }
                  xTexelC${b+1}Ready = 1;
                }

                xC${b} = vec4(
                  xTexelC${b}.xy, xTexelC${b+1}.xy);
              `,b+1<d&&(p+=`
                  xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
                `)));b<d&&(p+=`
            wTexel = getW(r, ${b}, d1, q);
            dotProd += xC${b} * vec4(wTexel.xz, wTexel.xz);
          `,b+1<d&&(p+=`
              wTexel = getW(r, ${b+1}, d1, q);
              dotProd += xC${b+1} * vec4(wTexel.xz, wTexel.xz);
            `))}p+=`
    }
  `,p+=`
      }
    `;let f="",m="";s&&(r?f=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:a?f=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:f=`vec4 activation(vec4 x) {
          ${s}
        }`,m="result = activation(result);");const g=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${f}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${o};
        int q = d2 - d1 * ${o};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${p}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${g}
        ${m}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ine(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:a}=e,{strides:o,pad:i,dilations:u,dimRoundingMode:c}=s;let l=u;l==null&&(l=[1,1]),_(wn(o,l),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${l}'`);const d=Vt(r.shape,a.shape,o,l,i,c,!0);let h;Y().getBool("WEBGL_PACK_DEPTHWISECONV")&&d.strideWidth<=2&&d.outChannels/d.inChannels===1?h=new $_(d):h=new T_(d);const p=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];return t.runWebGLProgram(h,[r,a],"float32",p)}const Sne={kernelName:Qu,backendName:"webgl",kernelFunc:Ine};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kne{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,s=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${o} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${r};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${a};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class Nne{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,s=e.filterWidth,r=e.strideHeight,a=e.strideWidth,o=t-1-e.padInfo.top,i=s-1-e.padInfo.left,u=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${o}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${a}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${u}; dm++) {
              int d2 = d1 * ${u} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cne(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:a}=e,{strides:o,dilations:i,pad:u,dimRoundingMode:c,filterShape:l}=s,d=Vt(r.shape,l,o,i,u,c,!0),h=new kne(d);return t.runWebGLProgram(h,[r,a],"float32")}const Tne={kernelName:vx,backendName:"webgl",kernelFunc:Cne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $ne(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:a}=e,{strides:o,dilations:i,pad:u,dimRoundingMode:c,inputShape:l}=s,d=Vt(l,a.shape,o,i,u,c,!0),h=new Nne(d);return t.runWebGLProgram(h,[r,a],"float32")}const _ne={kernelName:Ix,backendName:"webgl",kernelFunc:$ne};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ene{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ane(n){const{inputs:e,backend:t}=n,{x:s}=e,r=[...s.shape,...s.shape],a=U(s.shape),o=he({inputs:{x:s},backend:t,attrs:{shape:[a]}}),i=new Ene(a),u=t.runWebGLProgram(i,[o],o.dtype),c=he({inputs:{x:u},backend:t,attrs:{shape:r}});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(u),c}const Dne={kernelName:Em,backendName:"webgl",kernelFunc:Ane};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Rne{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:s,padInfo:r,strideHeight:a,strideWidth:o,filterHeight:i,filterWidth:u,dilationHeight:c,dilationWidth:l}=e,{top:d,left:h}=r;this.userCode=`
      const ivec2 strides = ivec2(${a}, ${o});
      const ivec2 pads = ivec2(${d}, ${h});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${i}; h++) {
          int hIn = hBeg + h * ${c};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${u}; w++) {
              int wIn = wBeg + w * ${l};

              if (wIn >= 0 && wIn < ${s}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function One(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:a}=e,{strides:o,pad:i,dilations:u}=s,c=xo(r.shape,a.shape,o,i,"NHWC",u);let l;const d=new Rne(c);l=t.runWebGLProgram(d,[r,a],"float32");const h=he({inputs:{x:l},backend:t,attrs:{shape:c.outShape}});return t.disposeIntermediateTensorInfo(l),h}const Fne={kernelName:el,backendName:"webgl",kernelFunc:One};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pne(n){const{inputs:e,backend:t,attrs:s}=n,{equation:r}=s,a=e,{allDims:o,summedDims:i,idDims:u}=Aw(r,a.length);Rw(o.length,u,a);const{path:c,steps:l}=Ow(i,u),d=l.length;let h=null,p=o.length;const f=[];for(let m=0;m<d;++m){for(const g of l[m]){const{permutationIndices:y,expandDims:b}=Dw(p,u[g]);let x;Fw(y)?x=a[g]:(x=qn({inputs:{x:a[g]},backend:t,attrs:{perm:y}}),f.push(x));const w=x.shape.slice();for(let v=0;v<b.length;++v)w.splice(b[v],0,1);Qe(x.shape,w)||(x=he({inputs:{x},backend:t,attrs:{shape:w}}),f.push(x)),h===null?h=x:(h=M0({inputs:{a:x,b:h},backend:t}),f.push(h))}m<d-1&&(c[m]>=0&&(h=Gg({inputs:{x:h},backend:t,attrs:{axis:c[m]-(o.length-p),keepDims:!1}}),f.push(h)),p--)}for(const m of f)m!==h&&t.disposeIntermediateTensorInfo(m);return h}const Lne={kernelName:Sx,backendName:"webgl",kernelFunc:Pne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mne="return (x >= 0.0) ? x : (exp(x) - 1.0);",Bne=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,zne=at({opSnippet:Mne,packedOpSnippet:Bne}),Vne={kernelName:nl,backendName:"webgl",kernelFunc:zne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wne="return (b >= 0.0) ? a : a * (b + 1.0);",Une=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,Gne=n=>{const{inputs:e,backend:t}=n,{dy:s,y:r}=e,a=Y().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new cc(Une,s.shape,r.shape):new ui(Wne,s.shape,r.shape);return t.runWebGLProgram(a,[s,r],s.dtype)},Hne={kernelName:uh,backendName:"webgl",kernelFunc:Gne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jne=`
  return vec4(equal(a, b));
`,qne="return float(a == b);",Kne=_n({opSnippet:qne,packedOpSnippet:jne,dtype:"bool",cpuKernelImpl:CJ}),Xne={kernelName:lh,backendName:"webgl",kernelFunc:Kne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yne=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${kw};
  float a1 = ${Nw};
  float a2 = ${Cw};
  float a3 = ${Tw};
  float a4 = ${$w};
  float a5 = ${_w};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,Zne=at({opSnippet:Yne}),Jne={kernelName:sl,backendName:"webgl",kernelFunc:Zne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qne=dc+`
  return exp(x);
`,ese=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,__=at({opSnippet:Qne,packedOpSnippet:ese,cpuKernelImpl:TJ,dtype:"float32"}),tse={kernelName:rl,backendName:"webgl",kernelFunc:__};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lb(n){const{inputs:e,attrs:t,backend:s}=n,{dim:r}=t,{input:a}=e,o=a.shape.length,i=a.shape.slice();let u=r;return r<0&&(_(-(o+1)<=r,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),u=o+r+1),i.splice(u,0,1),he({inputs:{x:a},backend:s,attrs:{shape:i}})}const nse={kernelName:ch,backendName:"webgl",kernelFunc:Lb};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $I="return exp(x) - 1.0;",sse=at({opSnippet:$I,packedOpSnippet:$I,cpuKernelImpl:$J}),rse={kernelName:al,backendName:"webgl",kernelFunc:sse};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _I{constructor(e,t,s){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const a=s?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,o=s?`${r}.0`:"1.0";let i;if(e==="real")i="return real * expR - imag * expI;";else if(e==="imag")i="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${a};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${i}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${r});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${r}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${o};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E_(n,e,t){const s=t.texData.get(n.dataId),r=U(n.shape),a=n.shape[n.shape.length-1],o=r/a,i=he({inputs:{x:n},backend:t,attrs:{shape:[o,a]}}),u=i.shape,c=new _I("real",u,e),l=new _I("imag",u,e),d=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:u},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:u}],h=t.runWebGLProgram(c,d,"float32"),p=t.runWebGLProgram(l,d,"float32"),f=No({inputs:{real:h,imag:p},backend:t});t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(p);const m=he({inputs:{x:f},backend:t,attrs:{shape:n.shape}});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(f),m}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ase(n){const{inputs:e,backend:t}=n,{input:s}=e;return E_(s,!1,t)}const ose={kernelName:kx,backendName:"webgl",kernelFunc:ase};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ise{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gp(n){const{backend:e,attrs:t}=n,{shape:s,value:r}=t;let{dtype:a}=t;if(a=a||fi(r),a==="string"){const o=Ht(a,U(s));return o.fill(r),e.makeTensorInfo(s,a,o)}else{const o=new ise(s,r),i=[[r]];return e.runWebGLProgram(o,[],a,i)}}const use={kernelName:Am,backendName:"webgl",kernelFunc:gp};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lse{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cse={kernelName:dh,backendName:"webgl",kernelFunc:({inputs:n,backend:e})=>{const{image:t}=n,s=e,r=new lse(t.shape);return s.runWebGLProgram(r,[t],t.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EI="return floor(x);",dse=at({opSnippet:EI,packedOpSnippet:EI,cpuKernelImpl:_J}),hse={kernelName:ol,backendName:"webgl",kernelFunc:dse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pse=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,fse=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,mse=_n({opSnippet:pse,packedOpSnippet:fse,dtype:"int32"}),gse={kernelName:il,backendName:"webgl",kernelFunc:mse};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yse{constructor(e){this.variableNames=["A"];const t=Xn(),[s,r]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${s}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bse{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=Xn(),[s,r]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${r}.0, ${s}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xse={kernelName:gL,backendName:"webgl",kernelFunc:wse};let Wi,Ty=Y().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function wse(n){const{inputs:e,backend:t,attrs:s}=n;let{pixels:r}=e;const{numChannels:a}=s,o=typeof HTMLVideoElement<"u"&&r instanceof HTMLVideoElement,i=typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement,[u,c]=o?[r.videoWidth,r.videoHeight]:[r.width,r.height],l=[c,u],d=[c,u,a];if(i||o){const m=Y().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(Wi==null||m!==Ty)&&(Ty=m,Wi=document.createElement("canvas").getContext("2d",{willReadFrequently:Ty})),Wi.canvas.width=u,Wi.canvas.height=c,Wi.drawImage(r,0,0,u,c),r=Wi.canvas}const h=t.makeTensorInfo(l,"int32");t.texData.get(h.dataId).usage=Ds.PIXELS,t.gpgpu.uploadPixelDataToTexture(t.getTexture(h.dataId),r);const p=Y().getBool("WEBGL_PACK")?new bse(d):new yse(d),f=t.runWebGLProgram(p,[h],"int32");return t.disposeData(h.dataId),f}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vse(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:a,bias:o,preluActivationWeights:i}=e,{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=s,m=Tr(l),g=Vt(r.shape,a.shape,u,d,c,h,!1,m);let y;const b=[],x=o!=null,w=i!=null,v=p==="leakyrelu",S=()=>{const $=[r,a],T=(C,k)=>{if(k==="NCHW"&&C.shape.length===1&&C.shape[0]!==1){const A=he({inputs:{x:C},backend:t,attrs:{shape:[C.shape[0],1,1]}});return b.push(A),A}return C};if(x&&$.push(T(o,l)),w&&$.push(T(i,l)),v){const C=t.makeTensorInfo([],"float32",go(f,"float32"));$.push(C),b.push(C)}return $};if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))y=k_({x:r,filter:a,convInfo:g,backend:t,bias:o,activation:p,preluActivationWeights:i,leakyreluAlpha:f});else if(g.strideWidth<=2&&m==="channelsLast"&&Y().getBool("WEBGL_EXP_CONV")){const $=p?sd(p,!0):null,T=new S_(g,x,$,w,v),C=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],k=S();y=t.runWebGLProgram(T,k,"float32",C)}else if(Y().getBool("WEBGL_CONV_IM2COL"))y=N_({x:r,filter:a,convInfo:g,backend:t,bias:o,activation:p,preluActivationWeights:i,leakyreluAlpha:f});else{const $=p?sd(p,!1):null,T=new I_(g,x,$,w,v),C=S();y=t.runWebGLProgram(T,C,"float32")}const N=he({inputs:{x:y},backend:t,attrs:{shape:g.outShape}});return b.push(y),b.forEach($=>t.disposeIntermediateTensorInfo($)),N}const Ise={kernelName:gu,backendName:"webgl",kernelFunc:vse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sse(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:a,bias:o,preluActivationWeights:i}=e,{strides:u,pad:c,dilations:l,dimRoundingMode:d,activation:h,leakyreluAlpha:p}=s,f=[];let m=l;m==null&&(m=[1,1]),_(wn(u,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${m}'`);const g=Vt(r.shape,a.shape,u,m,c,d,!0),y=Y().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,b=h?sd(h,y):null,x=[r,a],w=o!=null,v=i!=null,S=h==="leakyrelu";if(w&&x.push(o),v&&x.push(i),S){const C=t.makeTensorInfo([],"float32",go(p,"float32"));x.push(C),f.push(C)}let N;y?N=new $_(g,w,b,v,S):N=new T_(g,w,b,v,S);const $=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],T=t.runWebGLProgram(N,x,"float32",$);return f.forEach(C=>t.disposeIntermediateTensorInfo(C)),T}const kse={kernelName:yu,backendName:"webgl",kernelFunc:Sse};class Nse{constructor(e,t,s,r){this.sliceDim=e,this.strides=t,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=s;const a=vt(s.length);let o=`
    int index;`;for(let i=0;i<this.sliceDim;i++)o+=`
          index = round(getIndices(coords[0], ${i}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[i]};
          flattenIndex += index * ${this.strides[i]};`;this.userCode=`
         void main() {
          ${a} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${o}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cse(n){const{inputs:e,backend:t}=n,{params:s,indices:r}=e,a=r.shape,o=a[a.length-1],i=U(s.shape),[u,c,l,d]=mg(s,r),h=he({inputs:{x:r},backend:t,attrs:{shape:[c,o]}}),p=he({inputs:{x:s},backend:t,attrs:{shape:[U(s.shape)/l,l]}});if(t.shouldExecuteOnCPU([s,r])||s.dtype==="string"){const y=t.readSync(r.dataId),b=t.bufferSync(s),x=EJ(y,b,s.dtype,c,o,l,d,s.shape,i);return t.makeTensorInfo(u,s.dtype,x.values)}const f=new Nse(o,d,[c,l],s.shape),m=t.runWebGLProgram(f,[p,h],p.dtype),g=he({inputs:{x:m},backend:t,attrs:{shape:u}});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(m),g}const Tse={kernelName:ph,backendName:"webgl",kernelFunc:Cse};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $se{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const s=vt(this.rank),r=_se(e);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${r}));
      }
    `}}function _se(n,e){const t=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let r=0;r<n.length;r++)r===2?s.push("index"):s.push(`${t[r]}`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A_(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,indices:a}=e,{axis:o,batchDims:i}=s,u=ze(o,r.shape)[0];if(Y().get("DEBUG")){const b=t.readSync(a.dataId),x=r.shape[u];for(let w=0;w<b.length;++w){const v=b[w];_(v<=x-1&&v>=0,()=>`GatherV2: the index value ${v} is not in [0, ${x-1}]`)}}const c=$g(r,a,u,i),l=U(a.shape),d=[],h=he({inputs:{x:r},backend:t,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),p=he({inputs:{x:a},backend:t,attrs:{shape:[c.batchSize,l/c.batchSize]}});d.push(h),d.push(p);const f=[c.batchSize,c.outerSize,l/c.batchSize,c.sliceSize];if(t.shouldExecuteOnCPU([r,a])||r.dtype==="string"){const b=t.bufferSync(p),x=t.bufferSync(h),w=AJ(x,b,f);return d.forEach(v=>t.disposeIntermediateTensorInfo(v)),t.makeTensorInfo(c.outputShape,w.dtype,w.values)}const m=new $se(h.shape,f),g=t.runWebGLProgram(m,[h,p],h.dtype);d.push(g);const y=he({inputs:{x:g},backend:t,attrs:{shape:c.outputShape}});return d.forEach(b=>t.disposeIntermediateTensorInfo(b)),y}const Ese={kernelName:hh,backendName:"webgl",kernelFunc:A_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ase="return float(a > b);",Dse=`
  return vec4(greaterThan(a, b));
`,Rse=_n({opSnippet:Ase,packedOpSnippet:Dse,cpuKernelImpl:DJ,dtype:"bool"}),Ose={kernelName:fh,backendName:"webgl",kernelFunc:Rse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fse="return float(a >= b);",Pse=`
  return vec4(greaterThanEqual(a, b));
`,Lse=_n({opSnippet:Fse,packedOpSnippet:Pse,dtype:"bool",cpuKernelImpl:RJ}),Mse={kernelName:ll,backendName:"webgl",kernelFunc:Lse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bse(n){const{inputs:e,backend:t}=n,{input:s}=e;return E_(s,!0,t)}const zse={kernelName:Nx,backendName:"webgl",kernelFunc:Bse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vse="return float(!isnan(x) && !isinf(x));",Wse=at({opSnippet:Vse,dtype:"bool"}),Use={kernelName:dl,backendName:"webgl",kernelFunc:Wse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gse="return float(isinf(x));",Hse=at({opSnippet:Gse,dtype:"bool"}),jse={kernelName:hl,backendName:"webgl",kernelFunc:Hse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qse="return float(isnan(x));",Kse=at({opSnippet:qse,dtype:"bool"}),Xse={kernelName:pl,backendName:"webgl",kernelFunc:Kse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yse="return float(a < b);",Zse=`
  return vec4(lessThan(a, b));
`,Jse=_n({opSnippet:Yse,packedOpSnippet:Zse,cpuKernelImpl:OJ,dtype:"bool"}),Qse={kernelName:mh,backendName:"webgl",kernelFunc:Jse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ere="return float(a <= b);",tre=`
  return vec4(lessThanEqual(a, b));
`,nre=_n({opSnippet:ere,packedOpSnippet:tre,cpuKernelImpl:FJ,dtype:"bool"}),sre={kernelName:gh,backendName:"webgl",kernelFunc:nre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rre(n){const{backend:e,attrs:t}=n,{start:s,stop:r,num:a}=t,o=PJ(s,r,a);return e.makeTensorInfo([o.length],"float32",o)}const are={kernelName:yh,backendName:"webgl",kernelFunc:rre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ore=dc+`
  return x < 0.0 ? 0./0. : log(x);
`,ire=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,ure=at({opSnippet:ore,packedOpSnippet:ire,cpuKernelImpl:LJ}),lre={kernelName:ml,backendName:"webgl",kernelFunc:ure};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cre=dc+`
  return log(1.0 + x);
`,dre=at({opSnippet:cre}),hre={kernelName:gl,backendName:"webgl",kernelFunc:dre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pre="return float(a >= 1.0 && b >= 1.0);",fre=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,mre=_n({opSnippet:pre,packedOpSnippet:fre,dtype:"bool"}),gre={kernelName:bh,backendName:"webgl",kernelFunc:mre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yre="return float(!(x >= 1.0));",bre=at({opSnippet:yre}),xre={kernelName:xh,backendName:"webgl",kernelFunc:bre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wre="return float(a >= 1.0 || b >= 1.0);",vre=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,Ire=_n({opSnippet:wre,packedOpSnippet:vre,dtype:"bool"}),Sre={kernelName:wh,backendName:"webgl",kernelFunc:Ire};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kre{constructor(e,t,s,r,a){this.variableNames=["x"],this.outputShape=[];const o=t,i=e[3]-1;this.outputShape=e;let u;const c=`float(${s}) + float(${r}) * sum`;a===.5?u=`inversesqrt(${c})`:a===1?u=`1.0/(${c})`:u=`exp(log(${c}) * float(-${a}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${o}; j <= ${o}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${i}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${u};
        setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Nre{constructor(e,t,s,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const o=t,i=e[3]-1;this.outputShape=e;let u;const c=`float(${s}) + float(${r}) * sum`;a===.5?u=`inversesqrt(${c})`:a===1?u=`1.0/(${c})`:u=`exp(log(${c}) * float(-${a}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${o};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${o}; j <= ${o}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${u};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cre=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{depthRadius:a,bias:o,alpha:i,beta:u}=s,c=Y().getBool("WEBGL_PACK_NORMALIZATION")?new Nre(r.shape,a,o,i,u):new kre(r.shape,a,o,i,u);return t.runWebGLProgram(c,[r],r.dtype)},Tre={kernelName:yl,backendName:"webgl",kernelFunc:Cre};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $re{constructor(e,t,s,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=s,this.alpha=r,this.beta=a,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${r}) * norm + float(${s});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${r})
                * float(${a})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${a});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _re=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r,y:a,dy:o}=e,{depthRadius:i,bias:u,alpha:c,beta:l}=s,d=new $re(r.shape,i,u,c,l);return t.runWebGLProgram(d,[r,a,o],r.dtype)},Ere={kernelName:vh,backendName:"webgl",kernelFunc:_re};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Are(n,e,t,s){const r=U(e),o=U(n.shape)/r,i=he({inputs:{x:n},attrs:{shape:[o,r]},backend:s}),u=Ai(i,n.dtype,"max",s),c=he({inputs:{x:u},attrs:{shape:t},backend:s});return s.disposeIntermediateTensorInfo(i),s.disposeIntermediateTensorInfo(u),c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D_(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{reductionIndices:a,keepDims:o}=s,i=r.shape.length,u=ze(a,r.shape);let c=u;const l=At(c,i),d=l!=null,h=t.shouldExecuteOnCPU([r]);let p=r;if(d){if(h){const x=t.texData.get(p.dataId).values,w=new Array(i);for(let N=0;N<w.length;N++)w[N]=r.shape[l[N]];const v=P0(x,r.shape,r.dtype,l,w);p=t.makeTensorInfo(w,r.dtype);const S=t.texData.get(p.dataId);S.values=v}else p=Ug(r,l,t);c=Ct(c.length,i)}Et("max",c,i);const[f,m]=Rt(p.shape,c);let g=f;o&&(g=wt(f,u));let y;if(h){const x=t.texData.get(p.dataId).values,w=MJ(x,U(m),g,r.dtype);y=t.makeTensorInfo(g,r.dtype);const v=t.texData.get(y.dataId);v.values=w}else y=Are(p,m,g,t);return d&&t.disposeIntermediateTensorInfo(p),y}const Dre={kernelName:bl,backendName:"webgl",kernelFunc:D_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rre=L0+`
  return max(a, b);
`,Ore=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Ei+`
  return result;
`,Fre=_n({opSnippet:Rre,packedOpSnippet:Ore,cpuKernelImpl:BJ}),Pre={kernelName:xl,backendName:"webgl",kernelFunc:Fre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lre(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e;pp(r,"maxPool");const{filterSize:a,strides:o,pad:i,dimRoundingMode:u}=s,c=1;_(wn(o,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);const l=Mn(r.shape,a,o,c,i,u);if(l.filterWidth===1&&l.filterHeight===1&&Qe(l.inShape,l.outShape))return Ns({inputs:{x:r},backend:t});const d=new rd(l,"max",!1);return t.runWebGLProgram(d,[r],r.dtype)}const Mre={kernelName:wl,backendName:"webgl",kernelFunc:Lre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bre(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:a,strides:o,pad:i,dataFormat:u,dimRoundingMode:c}=s,l=[1,1,1],d=Bs(r.shape,a,o,l,i,c,u),h=new B0(d,"max",!1);return t.runWebGLProgram(h,[r],r.dtype)}const zre={kernelName:Ih,backendName:"webgl",kernelFunc:Bre};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Vre{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,s=e.strideWidth,r=e.dilationHeight,a=e.effectiveFilterHeight,o=e.effectiveFilterWidth,i=a-1-e.padInfo.top,u=o-1-e.padInfo.left,c=a*o-1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${u});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${a};
          wR += ${r}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${o}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${c} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${o} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}}class Wre{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,s=e.strideHeight,r=e.strideWidth,a=e.dilationDepth,o=e.dilationHeight,i=e.dilationWidth,u=e.effectiveFilterDepth,c=e.effectiveFilterHeight,l=e.effectiveFilterWidth,d=u-1-e.padInfo.front,h=c-1-e.padInfo.top,p=l-1-e.padInfo.left,f=u*c*l-1;this.userCode=`
      const ivec3 pads = ivec3(${d}, ${h}, ${p});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${u};
           wD += ${a}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${c};
              wR += ${o}) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${l};
                wC += ${i}) {
              float dyC = float(dyCCorner + wC) / ${r}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${f} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${c} * ${l} +
                  wR * ${l} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ure(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:a}=e,o=a,{filterSize:i,strides:u,pad:c,dimRoundingMode:l}=s,d=[1,1,1],h=Bs(o.shape,i,u,d,c,l),p=new B0(h,"max",!0),f=t.runWebGLProgram(p,[o],o.dtype),m=new Wre(h),g=t.runWebGLProgram(m,[r,f],o.dtype);return t.disposeIntermediateTensorInfo(f),g}const Gre={kernelName:Rm,backendName:"webgl",kernelFunc:Ure};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hre(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:a,output:o}=e,i=a;pp([a,o],"maxPoolGrad");const{filterSize:u,strides:c,pad:l,dimRoundingMode:d}=s,h=Mn(i.shape,u,c,1,l,d),p=!0,f=new rd(h,"max",p),m=t.runWebGLProgram(f,[i],i.dtype),g=new Vre(h),y=t.runWebGLProgram(g,[r,m],i.dtype);return t.disposeIntermediateTensorInfo(m),y}const jre={kernelName:Dm,backendName:"webgl",kernelFunc:Hre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qre(n,e,t,s){let r=new rd(t,"max",!1);const a=s.runWebGLProgram(r,[n],"float32");r=new rd(t,"max",!0,!0,e);const o=s.runWebGLProgram(r,[n],"float32");return[a,o]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kre={kernelName:Om,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s}=n,{filterSize:r,strides:a,pad:o,includeBatchInIndex:i}=e,u=t;_(s.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`);const c=[1,1];_(wn(a,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`);const l=Mn(s.shape,r,a,c,o),[d,h]=qre(s,i,l,u);return[d,h]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xre(n,e,t,s){const r=U(e),o=U(n.shape)/r,i=he({inputs:{x:n},attrs:{shape:[o,r]},backend:s}),u=Ai(i,"float32","mean",s),c=he({inputs:{x:u},attrs:{shape:t},backend:s});return s.disposeIntermediateTensorInfo(i),s.disposeIntermediateTensorInfo(u),c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yre={kernelName:vl,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s}=n,{keepDims:r,axis:a}=e,o=t,i=s.shape.length,u=ze(a,s.shape);let c=u;const l=At(c,i),d=l!=null,h=o.shouldExecuteOnCPU([s]),p=[];let f=s;if(d){if(h){const w=o.texData.get(f.dataId).values,v=new Array(i);for(let $=0;$<v.length;$++)v[$]=s.shape[l[$]];const S=P0(w,s.shape,s.dtype,l,v);f=o.makeTensorInfo(v,s.dtype);const N=o.texData.get(f.dataId);N.values=S}else f=Ug(s,l,o);p.push(f),c=Ct(c.length,i)}Et("sum",c,i);const[m,g]=Rt(f.shape,c);let y=m;r&&(y=wt(m,u));const b=Xre(f,g,y,o);for(const x of p)o.disposeIntermediateTensorInfo(x);return b}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zre(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:a,keepDims:o}=s,i=r.shape.length,u=ze(a,r.shape);let c=u;const l=At(c,i);let d=r;l!=null&&(d=qn({inputs:{x:r},backend:t,attrs:{perm:l}}),c=Ct(c.length,r.shape.length)),Et("min",c,i);const[h,p]=Rt(d.shape,c),f=U(p),m=he({inputs:{x:d},backend:t,attrs:{shape:[-1,f]}}),g=Ai(m,m.dtype,"min",t);let y;if(o){const b=wt(h,u);y=he({inputs:{x:g},backend:t,attrs:{shape:b}})}else y=he({inputs:{x:g},backend:t,attrs:{shape:h}});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g),l!=null&&t.disposeIntermediateTensorInfo(d),y}const Jre={kernelName:Il,backendName:"webgl",kernelFunc:Zre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qre=L0+`
  return min(a, b);
`,eae=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Ei+`
  return result;
`,tae=_n({opSnippet:Qre,packedOpSnippet:eae,cpuKernelImpl:zJ}),nae={kernelName:Sl,backendName:"webgl",kernelFunc:tae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sae{constructor(e,t,s){this.variableNames=["x"],this.outputShape=t.map((l,d)=>l[0]+e[d]+l[1]);const r=e.length,a=vt(r),o=t.map(l=>l[0]).join(","),i=t.map((l,d)=>l[0]+e[d]).join(","),u=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),c=s==="reflect"?0:1;if(r===1){this.userCode=`
        int start = ${o};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${c};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${c};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${a} start = ${a}(${o});
      ${a} end = ${a}(${i});

      void main() {
        ${a} outC = getOutputCoords();
        for (int i = 0; i < ${r}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${c};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${c};
          }
        }
        ${a} coords = outC - start;
        setOutput(getX(${u}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rae{constructor(e,t,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((f,m)=>f[0]+e[m]+f[1]);const r=e.length,a=vt(r),o=t.map(f=>f[0]).join(","),i=t.map((f,m)=>f[0]+e[m]).join(","),u=jn("rc",r),c=jn("source",r),l=`${u[r-1]} < ${this.outputShape[r-1]}`,d=r===1?"source":`vec2(${c.slice(-2).join()})`,h=s==="reflect"?0:1;let p="";if(r===1){const f=`
        ${a} source = rc;
        if (source < start) {
          source = start * 2 - source - ${h};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${h};
        }
        source -= start;
      `;p=`
        ${a} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${c.join()}), ${d});
        ${u[r-1]} += 1;
        if(${l}) {
          ${f}
          result[1] = getChannel(getX(${c.join()}), ${d});
        }
      `}else{const f=`
        ${a} source = rc;
        ${a} lt = ${a}(lessThan(source, start));
        ${a} gte = ${a}(greaterThanEqual(source, end));
        ${a} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${h}) +
                gte * ((end - 1) * 2 - source + ${h});
        source -= start;
      `;p=`
        ${a} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${c.join()}), ${d});
        ${u[r-1]} += 1;
        if(${l}) {
          ${f}
          result[1] = getChannel(getX(${c.join()}), ${d});
        }
        rc = outputLoc;
        ${u[r-2]} += 1;
        if(${u[r-2]} < ${this.outputShape[r-2]}) {
          ${f}
          result[2] = getChannel(getX(${c.join()}), ${d});
          ${u[r-1]} += 1;
          if(${l}) {
            ${f}
            result[3] = getChannel(getX(${c.join()}), ${d});
          }
        }
      `}this.userCode=`
      const ${a} start = ${a}(${o});
      const ${a} end = ${a}(${i});

      void main() {
        ${a} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${p}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aae=({inputs:n,backend:e,attrs:t})=>{const{x:s}=n,{paddings:r,mode:a}=t,o=Y().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new rae(s.shape,r,a):new sae(s.shape,r,a);return e.runWebGLProgram(o,[s],s.dtype)},oae={kernelName:kl,backendName:"webgl",kernelFunc:aae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iae=`if (b == 0.0) return NAN;
  return mod(a, b);`,uae=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+Ei+`
  return result;
`,lae=_n({opSnippet:iae,packedOpSnippet:uae}),cae={kernelName:Nl,backendName:"webgl",kernelFunc:lae};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dae{constructor(e,t,s){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,s],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hae=`
if (a == b) {
  return 1.0;
};
return a / b;`,pae=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,R_=_n({opSnippet:hae,packedOpSnippet:pae,checkOutOfBounds:!0}),fae={kernelName:tl,backendName:"webgl",kernelFunc:R_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AI="return a - b;",O_=_n({opSnippet:AI,packedOpSnippet:AI,supportsComplex:!0,cpuKernelImpl:iQ}),mae={kernelName:Yl,backendName:"webgl",kernelFunc:O_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F_(n){const{inputs:e,backend:t,attrs:s}=n,{logits:r}=e,{dim:a}=s,o=ze([a],r.shape),i=D_({inputs:{x:r},backend:t,attrs:{reductionIndices:o,keepDims:!1}}),u=wt(i.shape,o),c=he({inputs:{x:i},backend:t,attrs:{shape:u}}),l=O_({inputs:{a:r,b:c},backend:t}),d=__({inputs:{x:l},backend:t}),h=Gg({inputs:{x:d},backend:t,attrs:{axis:o,keepDims:!1}}),p=he({inputs:{x:h},backend:t,attrs:{shape:u}}),f=R_({inputs:{a:d,b:p},backend:t});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(p),f}const gae={kernelName:Kl,backendName:"webgl",kernelFunc:F_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yae(n){const{inputs:e,backend:t,attrs:s}=n,{logits:r}=e,{numSamples:a,seed:o,normalized:i}=s,u=i?r:F_({inputs:{logits:r},backend:t,attrs:{dim:r.shape.length-1}}),c=u.shape[0],l=u.shape[1],d=new dae(c,l,a),h=[[o]],p=t.runWebGLProgram(d,[u],"int32",h);return i||t.disposeIntermediateTensorInfo(u),p}const bae={kernelName:Sh,backendName:"webgl",kernelFunc:yae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xae=or+`
  return -x;
`,wae=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function vae(n){const{inputs:e,backend:t}=n,{x:s}=e;if(t.shouldExecuteOnCPU([s])){const a=t.texData.get(s.dataId),[o,i]=WJ(a.values,s.shape,s.dtype);return t.makeTensorInfo(i,s.dtype,o)}let r;return Y().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new Ga(s.shape,wae):r=new Br(s.shape,xae),t.runWebGLProgram(r,[s],s.dtype)}const Iae={kernelName:kh,backendName:"webgl",kernelFunc:vae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sae=mw;function kae(n){As("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:a}=e,{maxOutputSize:o,iouThreshold:i,scoreThreshold:u}=s,c=t.readSync(r.dataId),l=t.readSync(a.dataId),{selectedIndices:d}=Sae(c,l,o,i,u);return t.makeTensorInfo([d.length],"int32",new Int32Array(d))}const Nae={kernelName:Ch,backendName:"webgl",kernelFunc:kae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cae=gw;function Tae(n){As("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:a}=e,{maxOutputSize:o,iouThreshold:i,scoreThreshold:u,padToMaxOutputSize:c}=s,l=t.readSync(r.dataId),d=t.readSync(a.dataId),{selectedIndices:h,validOutputs:p}=Cae(l,d,o,i,u,c);return[t.makeTensorInfo([h.length],"int32",new Int32Array(h)),t.makeTensorInfo([],"int32",new Int32Array([p]))]}const $ae={kernelName:Th,backendName:"webgl",kernelFunc:Tae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _ae=yw;function Eae(n){As("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:a}=e,{maxOutputSize:o,iouThreshold:i,scoreThreshold:u,softNmsSigma:c}=s,l=t.readSync(r.dataId),d=t.readSync(a.dataId),h=o,p=i,f=u,m=c,{selectedIndices:g,selectedScores:y}=_ae(l,d,h,p,f,m);return[t.makeTensorInfo([g.length],"int32",new Int32Array(g)),t.makeTensorInfo([y.length],"float32",new Float32Array(y))]}const Aae={kernelName:$h,backendName:"webgl",kernelFunc:Eae};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Dae{constructor(e,t,s,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${r}), float(${s}),
                      float(index == coords.y)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rae=n=>{const{inputs:e,backend:t,attrs:s}=n,{indices:r}=e,{dtype:a,depth:o,onValue:i,offValue:u}=s,c=U(r.shape),l=new Dae(c,o,i,u),d=he({inputs:{x:r},backend:t,attrs:{shape:[c]}}),h=t.runWebGLProgram(l,[d],a);t.disposeIntermediateTensorInfo(d);const p=[...r.shape,o],f=he({inputs:{x:h},backend:t,attrs:{shape:p}});return t.disposeIntermediateTensorInfo(h),f},Oae={kernelName:Tl,backendName:"webgl",kernelFunc:Rae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uf(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="complex64"){const r=mp({inputs:{input:s},backend:t}),a=Uf({inputs:{x:r},backend:t}),o=Hg({inputs:{input:s},backend:t}),i=Uf({inputs:{x:o},backend:t}),u=No({inputs:{real:a,imag:i},backend:t});return t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(i),u}else return gp({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:t})}const Fae={kernelName:qh,backendName:"webgl",kernelFunc:Uf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P_(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){const r=mp({inputs:{input:s},backend:t}),a=P_({inputs:{x:r},backend:t}),o=Hg({inputs:{input:s},backend:t}),i=Uf({inputs:{x:o},backend:t}),u=No({inputs:{real:a,imag:i},backend:t});return t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(i),u}else return gp({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:t})}const Pae={kernelName:_h,backendName:"webgl",kernelFunc:P_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lae(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s;if(e.length===1)return Lb({inputs:{input:e[0]},backend:t,attrs:{dim:r}});const a=e[0].shape,o=e[0].dtype;e.forEach(l=>{us(a,l.shape,"All tensors passed to stack must have matching shapes"),_(o===l.dtype,()=>"All tensors passed to stack must have matching dtypes")});const i=[],u=e.map(l=>{const d=Lb({inputs:{input:l},backend:t,attrs:{dim:r}});return i.push(d),d}),c=v_({inputs:u,backend:t,attrs:{axis:r}});return i.forEach(l=>t.disposeIntermediateTensorInfo(l)),c}const Mae={kernelName:Eh,backendName:"webgl",kernelFunc:Lae};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Bae{constructor(e,t,s){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((c,l)=>c[0]+e[l]+c[1]);const r=e.length,a=vt(r),o=t.map(c=>c[0]).join(","),i=t.map((c,l)=>c[0]+e[l]).join(","),u=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);if(r===1){this.userCode=`
        int start = ${o};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${a} start = ${a}(${o});
      ${a} end = ${a}(${i});

      void main() {
        ${a} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${a} coords = outC - start;
          setOutput(getX(${u}));
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zae{constructor(e,t,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((m,g)=>m[0]+e[g]+m[1]);const r=e.length,a=vt(r),o=t.map(m=>m[0]).join(","),i=t.map((m,g)=>m[0]+e[g]).join(","),u=jn("rc",r),c=jn("source",r),l=`${u[r-1]} < ${this.outputShape[r-1]}`,d=r===1?"source":`vec2(${c.slice(-2).join()})`,h=[`${a} rc = outputLoc;`,`${u[r-1]} += 1;
       if(${l}) {
      `,r===1?"":`}
       rc = outputLoc;
       ${u[r-2]} += 1;
       if(${u[r-2]} < ${this.outputShape[r-2]}) {`,r===1?"":`  ${u[r-1]} += 1;
         if(${l}) {`],p=r===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let f="";for(let m=0,g=r===1?2:4;m<g;m++)f+=`
        ${h[m]}
        if (${p}) {
          result[${m}] = float(value);
        } else {
          ${a} source = rc - start;
          result[${m}] = getChannel(getX(${c.join()}), ${d});
        }
      `;f+=r===1?"} ":"}}",this.userCode=`
      const ${a} start = ${a}(${o});
      const ${a} end = ${a}(${i});

      void main() {
        ${a} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${f}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L_=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{paddings:a,constantValue:o}=s;if(U(r.shape)===0){const c=a.map((l,d)=>l[0]+r.shape[d]+l[1]);return gp({backend:t,attrs:{shape:c,value:o,dtype:r.dtype}})}const i=Y().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new zae(r.shape,a,o):new Bae(r.shape,a,o),u=[[o]];return t.runWebGLProgram(i,[r],r.dtype,u)},Vae={kernelName:$l,backendName:"webgl",kernelFunc:L_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wae=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,Uae=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+Ei+`
  return result;
`,Gae=_n({opSnippet:Wae,packedOpSnippet:Uae}),Hae={kernelName:_l,backendName:"webgl",kernelFunc:Gae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jae(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:a,keepDims:o}=s,i=r.shape.length,u=[],c=ze(a,r.shape);let l=c;const d=At(l,i);let h=r;d!=null&&(h=qn({inputs:{x:r},backend:t,attrs:{perm:d}}),l=Ct(l.length,i),u.push(h)),Et("prod",l,i);let p;if(t.shouldExecuteOnCPU([h])){const f=t.texData.get(h.dataId).values,{outVals:m,outShape:g,outDtype:y}=GJ(h.shape,h.dtype,f,l);p=t.makeTensorInfo(g,y,m)}else{const[f,m]=Rt(h.shape,l),g=U(m),y=he({inputs:{x:h},backend:t,attrs:{shape:[-1,g]}}),b=Dx(r.dtype),x=Ai(y,b,"prod",t);p=he({inputs:{x},backend:t,attrs:{shape:f}}),u.push(y),u.push(x)}if(o){u.push(p);const f=wt(p.shape,c);p=he({inputs:{x:p},backend:t,attrs:{shape:f}})}return u.forEach(f=>t.disposeIntermediateTensorInfo(f)),p}const qae={kernelName:Al,backendName:"webgl",kernelFunc:jae};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kae(n){const{inputs:e,backend:t,attrs:s}=n,{paramsNestedSplits:r,paramsDenseValues:a,indices:o}=e,{outputRaggedRank:i}=s,u=r.map(y=>t.readSync(y.dataId)),c=r.map(y=>y.shape),l=t.readSync(a.dataId),d=t.readSync(o.dataId),[h,p,f]=HJ(u,c,l,a.shape,a.dtype,d,o.shape,i),m=h.map(y=>t.makeTensorInfo([y.length],"int32",y)),g=t.makeTensorInfo(f,a.dtype,p);return m.concat([g])}const Xae={kernelName:Tx,backendName:"webgl",kernelFunc:Kae};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yae(n){const{inputs:e,backend:t}=n,{starts:s,limits:r,deltas:a}=e,o=t.readSync(s.dataId),i=t.readSync(r.dataId),u=t.readSync(a.dataId),[c,l]=jJ(o,s.shape,s.dtype,i,r.shape,u,a.shape),d=t.makeTensorInfo([c.length],"int32",c),h=t.makeTensorInfo([l.length],s.dtype,l);return[d,h]}const Zae={kernelName:$x,backendName:"webgl",kernelFunc:Yae};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jae(n){const{inputs:e,backend:t,attrs:s}=n,{shape:r,values:a,defaultValue:o,rowPartitionTensors:i}=e,{rowPartitionTypes:u}=s,c=t.readSync(r.dataId),l=t.readSync(a.dataId),d=t.readSync(o.dataId),h=i.map(g=>t.readSync(g.dataId)),p=i.map(g=>g.shape),[f,m]=qJ(c,r.shape,l,a.shape,a.dtype,d,o.shape,h,p,u);return t.makeTensorInfo(f,a.dtype,m)}const Qae={kernelName:_x,backendName:"webgl",kernelFunc:Jae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M_=n=>{const{backend:e,attrs:t}=n,{start:s,stop:r,step:a,dtype:o}=t,i=KJ(s,r,a,o);return e.makeTensorInfo([i.length],o,i)},eoe={kernelName:Fm,backendName:"webgl",kernelFunc:M_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const toe="return 1.0 / x;",noe=at({opSnippet:toe}),soe={kernelName:Dl,backendName:"webgl",kernelFunc:noe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const roe=or+`
  return (x < 0.0) ? 0.0 : x;
`,aoe=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,ooe=at({opSnippet:roe,packedOpSnippet:aoe}),ioe={kernelName:Rl,backendName:"webgl",kernelFunc:ooe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uoe=or+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,loe=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,coe=at({opSnippet:uoe,packedOpSnippet:loe}),doe={kernelName:Pl,backendName:"webgl",kernelFunc:coe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hoe{constructor(e,t,s,r,a){this.variableNames=["A"],this.outputShape=[];const[o,i,u,c]=e;this.outputShape=[o,t,s,c];const l=[r&&t>1?i-1:i,r&&s>1?u-1:u],d=[r&&t>1?t-1:t,r&&s>1?s-1:s];let h;a?h="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":h="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${l[0]/d[0]},
          ${l[1]/d[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${u}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${h};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class poe{constructor(e,t,s,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[o,i,u,c]=e;this.outputShape=[o,t,s,c];const l=[r&&t>1?i-1:i,r&&s>1?u-1:u],d=[r&&t>1?t-1:t,r&&s>1?s-1:s];let h;a?h="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":h="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${l[0]/d[0]},
          ${l[1]/d[1]},
          ${l[1]/d[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${u}.0,
                                     ${u}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${h};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${c-1};
        bool hasNextRow = coords.z < ${s-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function foe(n){const{inputs:e,backend:t,attrs:s}=n,{images:r}=e,{alignCorners:a,halfPixelCenters:o,size:i}=s,[u,c]=i,l=Y().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new poe(r.shape,u,c,a,o):new hoe(r.shape,u,c,a,o);return t.runWebGLProgram(l,[r],"float32")}const moe={kernelName:Fl,backendName:"webgl",kernelFunc:foe};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class goe{constructor(e,t,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,o,i]=e,u=[s&&o>1?r-1:r,s&&i>1?a-1:a],c=[s&&o>1?o-1:o,s&&i>1?i-1:i],l=u[0]/c[0],d=u[1]/c[1],h=1/l,p=1/d,f=Math.ceil(h)*2+2,m=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${l});
        const float widthScale = float(${d});

        const float invHeightScale = float(${h});
        const float invWidthScale = float(${p});

        const int winHeight = int(${f});
        const int winWidth = int(${m});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${o}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yoe(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:a}=e,{alignCorners:o}=s,i=new goe(a.shape,r.shape,o);return t.runWebGLProgram(i,[a],a.dtype)}const boe={kernelName:Rh,backendName:"webgl",kernelFunc:yoe};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xoe{constructor(e,t,s,r,a){this.variableNames=["A"],this.outputShape=[];const[o,i,u,c]=e;this.outputShape=[o,t,s,c];const l=[r&&t>1?i-1:i,r&&s>1?u-1:u],d=[r&&t>1?t-1:t,r&&s>1?s-1:s],h=r?"0.5":"0.0";let p;a?p="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":p="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${l[0]/d[0]},
          ${l[1]/d[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${u}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class woe{constructor(e,t,s,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[o,i,u,c]=e;this.outputShape=[o,t,s,c];const l=[r&&t>1?i-1:i,r&&s>1?u-1:u],d=[r&&t>1?t-1:t,r&&s>1?s-1:s],h=r?"0.5":"0.0";let p;a?p="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":p="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${l[0]/d[0]},
          ${l[1]/d[1]},
          ${l[1]/d[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${u}.0,
                                     ${u}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${c-1};
        bool hasNextRow = coords.z < ${s-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function voe(n){const{inputs:e,backend:t,attrs:s}=n,{images:r}=e,{alignCorners:a,halfPixelCenters:o,size:i}=s,[u,c]=i,l=Y().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new woe(r.shape,u,c,a,o):new xoe(r.shape,u,c,a,o);return t.runWebGLProgram(l,[r],r.dtype)}const Ioe={kernelName:Ol,backendName:"webgl",kernelFunc:voe};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Soe{constructor(e,t,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,o,i]=e,u=[s&&o>1?r-1:r,s&&i>1?a-1:a],c=[s&&o>1?o-1:o,s&&i>1?i-1:i],l=u[0]/c[0],d=u[1]/c[1],h=1/l,p=1/d,f=Math.ceil(h)*2+2,m=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${l});
        const float widthScale = float(${d});

        const float invHeightScale = float(${h});
        const float invWidthScale = float(${p});

        const int winHeight = int(${f});
        const int winWidth = int(${m});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${o}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float sourceFracRow =
              float(${u[0]}) *
                (float(dyR) / float(${c[0]}));

            float sourceFracCol =
                float(${u[1]}) *
                  (float(dyC) / float(${c[1]}));

            int sourceNearestRow = int(min(
                float(int(${r}) - 1),
                ${s} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${a}) - 1),
                ${s} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function koe(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:a}=e,{alignCorners:o}=s,i=new Soe(a.shape,r.shape,o);return t.runWebGLProgram(i,[a],a.dtype)}const Noe={kernelName:Dh,backendName:"webgl",kernelFunc:koe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Coe{constructor(e,t){this.variableNames=["x"];const s=e.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);if(this.outputShape=e,s===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}const r=i=>t.indexOf(i)!==-1&&e[i]!==1?`${e[i]} - coords[${i}] - 1`:`coords[${i}]`,a=e.map((i,u)=>r(u)).join(","),o=vt(s);this.userCode=`
      void main() {
        ${o} coords = getOutputCoords();
        setOutput(getX(${a}));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Toe{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const s=e.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);this.outputShape=e;const r=jn("rc",s),a=`${r[s-1]} + 1 < ${this.outputShape[s-1]}`,o=`${r[s-2]} + 1 < ${this.outputShape[s-2]}`,i=vt(s);s===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${a}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${i} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${u(r.slice())};
          if(${a}){
            result.g = ${c(r.slice())};
          }
          if(${o}) {
            result.b = ${l(r.slice())};
            if(${a}) {
              result.a = ${d(r.slice())};
            }
          }
          setOutput(result);
        }
    `;function u(f){return h(f)}function c(f){return f[s-1]="("+f[s-1]+" + 1)",h(f)}function l(f){return f[s-2]="("+f[s-2]+" + 1)",h(f)}function d(f){return f[s-1]="("+f[s-1]+" + 1)",f[s-2]="("+f[s-2]+" + 1)",h(f)}function h(f){const m=e.map((b,x)=>p(x,f)),g=m.join(","),y=m.slice(-2).join(",");return`getChannel(getX(${g}), vec2(${y}))`}function p(f,m){return t.indexOf(f)!==-1&&e[f]!==1?`${e[f]} - ${m[f]} - 1`:`${m[f]}`}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $oe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dims:a}=s,o=r.shape.length,i=ze(a,r.shape);if(o===0)return Ns({inputs:{x:r},backend:t});const u=Y().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Toe(r.shape,i):new Coe(r.shape,i);return t.runWebGLProgram(u,[r],r.dtype)}const _oe={kernelName:Ll,backendName:"webgl",kernelFunc:$oe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Eoe{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const s=e[1],r=e[2];this.outputShape=e;let a="";typeof t=="number"?a=`float outputValue = ${t.toFixed(2)};`:a=`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${a}
          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${s}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Aoe={kernelName:Kh,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:s}=n,{radians:r,fillValue:a,center:o}=e,i=t,u=new Eoe(s.shape,a),[c,l]=Ig(o,s.shape[1],s.shape[2]),d=[[c,l,Math.sin(r),Math.cos(r)]];return i.runWebGLProgram(u,[s],s.dtype,d)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Doe=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,Roe=at({opSnippet:Doe}),Ooe={kernelName:Ml,backendName:"webgl",kernelFunc:Roe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Foe="return inversesqrt(x);",Poe=at({opSnippet:Foe,cpuKernelImpl:XJ}),Loe={kernelName:Bl,backendName:"webgl",kernelFunc:Poe};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class z0{constructor(e,t,s,r,a,o,i=!0,u=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=o;const c=vt(a.length),l=vt(o.length);let d="";s===1?d="i":s===2&&(d="i, j");const h=`getIndices(${d})`;let p="";r===1?p="i":r===2&&(p="i, coords[1]");const f=`getUpdates(${p})`;let m="";u&&(m="coords[0], coords[1]");const g=`getDefaultValue(${m})`,y=t>1?"strides[j]":"strides";this.userCode=`
        ${c} strides = ${c}(${a});

        void main() {
          ${l} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${h});
              flattenedIndex += index * ${y};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${f};
              found = true;
            }
          }
          setOutput(mix(${g}, sum, float(found)));
        }
      `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Moe{constructor(e,t,s,r,a,o,i=!0,u=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=o;const c=vt(a.length),l=vt(o.length);let d="";s===1?d="i":s===2&&(d="i, j");const h=`getIndices(${d})`;let p="";r===1?p="i":r===2&&(p="i, coords[1]");const f=`getUpdates(${p})`;let m="";u&&(m="coords[0], coords[1]");const g=`getDefaultValue(${m})`,y=t>1?"strides[j]":"strides",b=t>1?"strides[j + 1]":"strides";this.userCode=`
        ${c} strides = ${c}(${a});

        void main() {
          ${l} coords = getOutputCoords();
          vec4 sum = vec4(0.);
          vec4 found = vec4(0.);
          for (int i = 0; i < ${e}; i+=2) {
            ivec2 flattenedIndex = ivec2(0);
            for (int j = 0; j < ${t}; j+=2) {
              ivec4 index = round(${h});
              flattenedIndex += index.xz * ${y};
              if (j + 1 < ${t}) {
                flattenedIndex += index.yw * ${b};
              }
            }
            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||
                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {
              vec4 updVals = ${f};
              if (flattenedIndex[0] == coords[0]) {
                sum.xy += updVals.xy;
                found.xy = vec2(1.);
              } else if (flattenedIndex[0] == coords[0] + 1) {
                sum.zw += updVals.xy;
                found.zw = vec2(1.);
              }
              if (flattenedIndex[1] == coords[0]) {
                sum.xy += updVals.zw;
                found.xy = vec2(1.);
              } else if (flattenedIndex[1] == coords[0] + 1) {
                sum.zw += updVals.zw;
                found.zw = vec2(1.);
              }
            }
          }
          setOutput(mix(${g}, sum, found));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Boe(n){const{inputs:e,backend:t,attrs:s}=n,{indices:r,updates:a}=e,{shape:o}=s,{sliceRank:i,numUpdates:u,sliceSize:c,strides:l,outputSize:d}=ta(a,r,o),h=[d/c,c];if(d===0)return t.makeTensorInfo(o,r.dtype);const p=he({inputs:{x:r},backend:t,attrs:{shape:[u,i]}}),f=he({inputs:{x:a},backend:t,attrs:{shape:[u,c]}}),m=t.makeTensorInfo([],"float32",new Float32Array([0]));let g;Y().getBool("WEBGL_PACK")?g=new Moe(u,i,p.shape.length,f.shape.length,l,h):g=new z0(u,i,p.shape.length,f.shape.length,l,h);const y=t.runWebGLProgram(g,[f,p,m],f.dtype),b=he({inputs:{x:y},backend:t,attrs:{shape:o}});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(m),b}const zoe={kernelName:Oh,backendName:"webgl",kernelFunc:Boe};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Voe{constructor(e,t,s,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,s];const a="while (left < right) {",o=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,i=Y().getNumber("WEBGL_VERSION")===2?a:o,u=r==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${i}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${u} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Woe(n){const{inputs:e,backend:t,attrs:s}=n,{sortedSequence:r,values:a}=e,{side:o}=s,i=new Voe(r.shape[0],r.shape[1],a.shape[1],o),u=[[r.shape[1]]];return t.runWebGLProgram(i,[r,a],"int32",u)}const Uoe={kernelName:Ph,backendName:"webgl",kernelFunc:Woe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Goe{constructor(e,t,s){this.variableNames=["c","a","b"],this.outputShape=t;let r,a;if(s>4)throw Error(`Where for rank ${s} is not yet supported`);if(s===1)a="resRC",r="resRC";else{const i=["resRC.x","resRC.y","resRC.z","resRC.w"],u=[],c=[];for(let l=0;l<t.length;l++)c.push(`${i[l]}`),l<e&&u.push(`${i[l]}`);r=u.join(),a=c.join()}const o=vt(s);this.userCode=`
      void main() {
        ${o} resRC = getOutputCoords();
        float cVal = getC(${r});
        if (cVal >= 1.0) {
          setOutput(getA(${a}));
        } else {
          setOutput(getB(${a}));
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hoe(n){const{inputs:e,backend:t}=n,{condition:s,t:r,e:a}=e,o=new Goe(s.shape.length,r.shape,r.shape.length);return t.runWebGLProgram(o,[s,r,a],ws(r.dtype,a.dtype))}const joe={kernelName:Lh,backendName:"webgl",kernelFunc:Hoe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qoe=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${Ng};
  float scale = ${Cg};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,Koe=at({opSnippet:qoe}),Xoe={kernelName:zl,backendName:"webgl",kernelFunc:Koe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yoe=dc+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,Zoe=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Joe=at({opSnippet:Yoe,packedOpSnippet:Zoe,cpuKernelImpl:ZJ}),Qoe={kernelName:Gl,backendName:"webgl",kernelFunc:Joe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eie=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,tie=at({opSnippet:eie}),nie={kernelName:Ul,backendName:"webgl",kernelFunc:tie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sie=dc+`
  return sin(x);
`,rie=`
  vec4 result = sin(x);
  bvec4 isNaN = isnan(x);
  ${Ei}
  return result;
`,aie=at({opSnippet:sie,packedOpSnippet:rie}),oie={kernelName:Vl,backendName:"webgl",kernelFunc:aie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iie=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,uie=at({opSnippet:iie}),lie={kernelName:Wl,backendName:"webgl",kernelFunc:uie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cie=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,die=at({opSnippet:cie}),hie={kernelName:Hl,backendName:"webgl",kernelFunc:die};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pie=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:a,paddings:o}=s;_(r.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const i=a.reduce((y,b)=>y*b),u=[[0,0]];u.push(...o);for(let y=1+a.length;y<r.shape.length;++y)u.push([0,0]);const c=[],l=L_({inputs:{x:r},backend:t,attrs:{paddings:u,constantValue:0}}),d=Si(l.shape,a,i,!1),h=ki(d.length,a.length,!1),p=Ni(l.shape,a,i,!1),f=he({inputs:{x:l},backend:t,attrs:{shape:d}}),m=qn({inputs:{x:f},backend:t,attrs:{perm:h}}),g=he({inputs:{x:m},backend:t,attrs:{shape:p}});return c.push(l),c.push(f),c.push(m),c.forEach(y=>t.disposeIntermediateTensorInfo(y)),g},fie={kernelName:Bh,backendName:"webgl",kernelFunc:pie};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mie(n){const{inputs:e,backend:t}=n,{indices:s,values:r,denseShape:a,defaultValue:o}=e;if(a.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${a.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${s.shape}`);if(r.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${r.shape}`);if(o.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${o.shape}`);const i=t.readSync(s.dataId),u=t.readSync(r.dataId),c=t.readSync(a.dataId),l=t.readSync(o.dataId)[0],[d,h,p,f,m]=QJ(i,s.shape,s.dtype,u,r.dtype,c,l);return[t.makeTensorInfo(h,s.dtype,d),t.makeTensorInfo([h[0]],r.dtype,p),t.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),t.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}const gie={kernelName:Pm,backendName:"webgl",kernelFunc:mie};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yie(n){const{inputs:e,backend:t}=n,{inputIndices:s,inputShape:r,newShape:a}=e;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${r.shape}`);if(a.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const o=Array.from(t.readSync(r.dataId)),i=t.readSync(s.dataId),u=Array.from(t.readSync(a.dataId)),[c,l,d]=eQ(i,s.shape,s.dtype,o,u);return[t.makeTensorInfo(l,s.dtype,c),t.makeTensorInfo([d.length],a.dtype,new Int32Array(d))]}const bie={kernelName:Vh,backendName:"webgl",kernelFunc:yie};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xie(n){const{inputs:e,backend:t}=n,{data:s,indices:r,segmentIds:a}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${r.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${a.shape}`);const o=t.readSync(s.dataId),i=t.readSync(r.dataId),u=t.readSync(a.dataId),[c,l]=u_(o,s.shape,s.dtype,i,u,!0);return t.makeTensorInfo(l,s.dtype,c)}const wie={kernelName:Lm,backendName:"webgl",kernelFunc:xie};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vie(n){const{inputs:e,backend:t}=n,{data:s,indices:r,segmentIds:a}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${r.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${a.shape}`);const o=t.readSync(s.dataId),i=t.readSync(r.dataId),u=t.readSync(a.dataId),[c,l]=u_(o,s.shape,s.dtype,i,u);return t.makeTensorInfo(l,s.dtype,c)}const Iie={kernelName:Mm,backendName:"webgl",kernelFunc:vie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sie(n){const{inputs:e,backend:t,attrs:s}=n,{sparseIndices:r,sparseValues:a,defaultValue:o}=e,{outputShape:i}=s,{sliceRank:u,numUpdates:c,sliceSize:l,strides:d,outputSize:h}=ta(a,r,i),p=!1;if(a.dtype==="string"){const y=t.bufferSync(r),b=t.bufferSync(a),x=to(t.readSync(o.dataId)[0]),w=YJ(y,b,i,h,l,c,u,d,x,p);return t.makeTensorInfo(i,w.dtype,w.values)}const f=new z0(c,u,r.shape.length,a.shape.length,d,[h,1],p),m=t.runWebGLProgram(f,[a,r,o],a.dtype),g=he({inputs:{x:m},backend:t,attrs:{shape:i}});return t.disposeIntermediateTensorInfo(m),g}const kie={kernelName:Wh,backendName:"webgl",kernelFunc:Sie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nie(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{numOrSizeSplits:a,axis:o}=s,i=ze(o,r.shape)[0],u=Tg(r,a,i),c=r.shape.length,l=new Array(c).fill(0),d=r.shape.slice();return u.map(h=>{const p=[...d];p[i]=h;const f=hc({inputs:{x:r},backend:t,attrs:{begin:l,size:p}});return l[i]+=h,f})}const Cie={kernelName:zh,backendName:"webgl",kernelFunc:Nie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DI="return sqrt(x);",Tie=at({opSnippet:DI,packedOpSnippet:DI,cpuKernelImpl:tQ}),$ie={kernelName:jl,backendName:"webgl",kernelFunc:Tie};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _ie="return x * x;",Eie=at({opSnippet:_ie}),Aie={kernelName:Bm,backendName:"webgl",kernelFunc:Eie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RI="return (a - b) * (a - b);",Die=_n({opSnippet:RI,packedOpSnippet:RI}),Rie={kernelName:Xl,backendName:"webgl",kernelFunc:Die};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oie(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e;if(r.dtype!=="string")throw new Error("Input must be of datatype string");const a=t.readSync(r.dataId),o=Ca(a),i=nQ(o,"string",s);return t.makeTensorInfo(r.shape,"string",i)}const Fie={kernelName:zm,backendName:"webgl",kernelFunc:Oie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pie({inputs:n,attrs:e,backend:t}){const{x:s}=n,r=or+`
    return x > 0.0 ? 1.0 : float(${e.alpha});
  `,a=new Br(s.shape,r);return t.runWebGLProgram(a,[s],s.dtype)}const Lie={kernelName:bi,backendName:"webgl",kernelFunc:Pie};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Mie{constructor(e,t,s){this.variableNames=["x"],this.outputShape=s;const r=s.length,a=vt(s.length),o=vt(s.length);let i="";if(r===1)i="coords * strides + begin";else{let u=0;i=s.map((c,l)=>(u++,s.length===1?`coords * strides[${l}] + begin[${l}]`:`coords[${u-1}] * strides[${l}] + begin[${l}]`)).join(",")}this.userCode=`
      ${a} begin = ${a}(${e});
      ${a} strides = ${a}(${t});

      void main() {
        ${o} coords = getOutputCoords();
        setOutput(getX(${i}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bie(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{begin:a,end:o,strides:i,beginMask:u,endMask:c,ellipsisMask:l,newAxisMask:d,shrinkAxisMask:h}=s,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:w}=xg(r.shape,a,o,i,u,c,l,d,h);let v;if(m)v=he({inputs:{x:r},backend:t,attrs:{shape:f}});else if(g||y){_(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);const N=gg(b,x,w),$=hc({inputs:{x:r},backend:t,attrs:{begin:b,size:N}});v=he({inputs:{x:$},backend:t,attrs:{shape:f}}),t.disposeIntermediateTensorInfo($)}else if(t.shouldExecuteOnCPU([r])){const $=t.readSync(r.dataId),T=He(r.shape,r.dtype,$),C=sQ(p,T,w,b);v=t.makeTensorInfo(f,r.dtype,C.values)}else{const $=new Mie(b,w,p);v=t.runWebGLProgram($,[r],r.dtype)}const S=he({inputs:{x:v},backend:t,attrs:{shape:f}});return t.disposeIntermediateTensorInfo(v),S}const zie={kernelName:Uh,backendName:"webgl",kernelFunc:Bie};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vie(n){const{inputs:e,backend:t,attrs:s}=n,{separator:r,nGramWidths:a,leftPad:o,rightPad:i,padWidth:u,preserveShortSequences:c}=s,{data:l,dataSplits:d}=e,h=t.readSync(l.dataId),p=t.readSync(d.dataId),[f,m]=rQ(h,p,r,a,o,i,u,c);return[t.makeTensorInfo([f.length],"string",f),t.makeTensorInfo(d.shape,"int32",m)]}const Wie={kernelName:Vm,backendName:"webgl",kernelFunc:Vie};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uie(n){const{inputs:e,backend:t,attrs:s}=n,{skipEmpty:r}=s,{input:a,delimiter:o}=e;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(a.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(o.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);const i=t.readSync(a.dataId),u=t.readSync(o.dataId)[0],[c,l,d]=aQ(i,u,r),h=l.length;return[t.makeTensorInfo([h,2],"int32",c),t.makeTensorInfo([h],"string",l),t.makeTensorInfo([2],"int32",new Int32Array(d))]}const Gie={kernelName:Wm,backendName:"webgl",kernelFunc:Uie};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hie(n){const{inputs:e,backend:t,attrs:s}=n,{numBuckets:r}=s,{input:a}=e;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const o=t.readSync(a.dataId),i=oQ(o,r);return t.makeTensorInfo(a.shape,"int32",i)}const jie={kernelName:Um,backendName:"webgl",kernelFunc:Hie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qie="return tan(x);",Kie=at({opSnippet:qie}),Xie={kernelName:Zl,backendName:"webgl",kernelFunc:Kie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yie=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,Zie=at({opSnippet:Yie}),Jie={kernelName:Jl,backendName:"webgl",kernelFunc:Zie};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qie(n){const{inputs:e,backend:t,attrs:s}=n,{tensor:r,indices:a,updates:o}=e,{sliceRank:i,numUpdates:u,sliceSize:c,strides:l,outputSize:d}=ta(o,a,r.shape),h=[d/c,c];if(d===0)return t.makeTensorInfo(r.shape,a.dtype);const p=he({inputs:{x:a},backend:t,attrs:{shape:[u,i]}}),f=he({inputs:{x:o},backend:t,attrs:{shape:[u,c]}}),m=he({inputs:{x:r},backend:t,attrs:{shape:h}}),g=new z0(u,i,p.shape.length,f.shape.length,l,h,!1,!0),y=t.runWebGLProgram(g,[f,p,m],m.dtype),b=he({inputs:{x:y},backend:t,attrs:{shape:r.shape}});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(y),b}const eue={kernelName:Fh,backendName:"webgl",kernelFunc:Qie};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tue{constructor(e,t){this.variableNames=["A"];const s=new Array(e.length);for(let o=0;o<s.length;o++)s[o]=e[o]*t[o];this.outputShape=s,this.rank=s.length;const r=vt(this.rank),a=nue(e);this.userCode=`
      void main() {
        ${r} resRC = getOutputCoords();
        setOutput(getA(${a}));
      }
    `}}function nue(n){const e=n.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`imod(resRC, ${n[0]})`;const t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let r=0;r<n.length;r++)s.push(`imod(${t[r]}, ${n[r]})`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B_(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{reps:a}=s;if(r.dtype==="string"||r.shape.length>5){const u=t.readSync(r.dataId),c=r.dtype==="string"?u.map(h=>to(h)):u,l=He(r.shape,r.dtype,c),d=uQ(l,a);return t.makeTensorInfo(d.shape,d.dtype,d.values)}const o=new tue(r.shape,a);return t.runWebGLProgram(o,[r],r.dtype)}const sue={kernelName:yi,backendName:"webgl",kernelFunc:B_};class rue{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}}class aue{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Do(n,e){e!==null&&n.disposeIntermediateTensorInfo(e)}function OI(n){let e=1;for(;e<n;)e*=2;return e}function oue(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{k:a,sorted:o}=s,i=Y().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=Y().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),c=r.shape,l=c[c.length-1];if(t.shouldExecuteOnCPU([r])||l<i||a>u){const C=t.readSync(r.dataId),[k,A]=lQ(C,c,r.dtype,a,o);return[t.makeTensorInfo(k.shape,k.dtype,k.values),t.makeTensorInfo(A.shape,A.dtype,A.values)]}if(a===0)return c[c.length-1]=0,[t.makeTensorInfo(c,r.dtype,[]),t.makeTensorInfo(c,"int32",[])];if(l===1)return[r,gp({attrs:{shape:c,dtype:"int32",value:0},backend:t})];const d=t.texData.get(r.dataId),h=d!==null&&d.isPacked,p=h?t.unpackTensor(r):r,m=U(c)/l,g=he({inputs:{x:p},attrs:{shape:[m,l]},backend:t});h&&Do(t,p);const y=OI(a),b=OI(l);let x=null;const w=()=>x===null?[g,g]:[g,x],v=(C,k,A)=>{const D=w(),R=new rue(A),z=[[l],[x===null?1:0],[Number.NEGATIVE_INFINITY],[C],[k]],H=x;x=t.runWebGLProgram(R,D,"int32",z),Do(t,H)};for(let C=1;C<y;C*=2){const k=C*2;for(let A=C;A>=1;A/=2)v(k,A,[m,b])}for(let C=b;C>y;C/=2){const k=w(),A=new aue([m,C/2]),R=[[l],[x===null?1:0],[y]],F=x;x=t.runWebGLProgram(A,k,"int32",R),Do(t,F);const z=y/2,H=z*2;for(let P=z;P>=1;P/=2)v(H,P,x.shape)}let S=x;x=hc({inputs:{x},backend:t,attrs:{begin:0,size:[m,a]}}),Do(t,S);let N=A_({inputs:{x:g,indices:x},backend:t,attrs:{axis:1,batchDims:1}});Do(t,g);const $=c.slice(0,-1);$.push(a),S=x,x=he({inputs:{x},attrs:{shape:$},backend:t}),Do(t,S);const T=N;return N=he({inputs:{x:N},attrs:{shape:$},backend:t}),Do(t,T),[N,x]}const iue={kernelName:Gh,backendName:"webgl",kernelFunc:oue};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uue{constructor(e,t,s,r,a,o){this.variableNames=["Image","Transforms"],this.outputShape=o;const i=s==="nearest"?1:2;let u;switch(r){case"constant":u=1;break;case"reflect":u=2;break;case"wrap":u=3;break;case"nearest":u=4;break;default:u=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${u} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${u} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${u} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${a});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${a});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${i} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lue(n){const{inputs:e,backend:t,attrs:s}=n,{image:r,transforms:a}=e,{interpolation:o,fillMode:i,fillValue:u,outputShape:c}=s,[l,d,h,p]=r.shape,[f,m]=c??[d,h],g=[l,f,m,p],y=new uue(d,h,o,i,u,g);return t.runWebGLProgram(y,[r,a],"float32")}const cue={kernelName:Hh,backendName:"webgl",kernelFunc:lue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function due(n){const{inputs:e,attrs:t,backend:s}=n,{axis:r}=t,{x:a}=e;pp(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const o=s.readSync(a.dataId),{outputValues:i,outputShape:u,indices:c}=cQ(o,r,a.shape,a.dtype);return[s.makeTensorInfo(u,a.dtype,i),s.makeTensorInfo([c.length],"int32",c)]}const hue={kernelName:Gm,backendName:"webgl",kernelFunc:due};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pue(n){const{inputs:e,backend:t,attrs:s}=n,{value:r}=e;let{axis:a}=s;a<0&&(a+=r.shape.length);const o=r,i=o.shape.length,u=r.shape[a],c=new Array(i-1);let l=0;for(let m=0;m<i;m++)m!==a&&(c[l++]=o.shape[m]);const d=[],h=new Array(i).fill(0),p=o.shape.slice();p[a]=1;const f=new Array(u);for(let m=0;m<f.length;m++){h[a]=m;const g=hc({inputs:{x:o},backend:t,attrs:{begin:h,size:p}}),y=he({inputs:{x:g},backend:t,attrs:{shape:c}});f[m]=y,d.push(g)}return d.forEach(m=>t.disposeIntermediateTensorInfo(m)),f}const fue={kernelName:jh,backendName:"webgl",kernelFunc:pue};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mue{constructor(e,t){this.variableNames=["x","segmentIds"];const s=e.windowSize,r=e.batchSize,a=e.inSize,o=e.numSegments,i=o*Math.ceil(a/s);this.outputShape=[r,i];const u="0.0",c="sumValue",l=Math.floor(s/4)*4,d=s%4,h=`
        sumValue += dot(values, segFilter);
    `;let p="";a%s>0&&(p=`
        if (inIdx < 0 || inIdx >= ${a}) {
          return initializationValue;
        }
      `);let f="";a%s>0&&(f=`
        if (inIdx < 0 || inIdx >= ${a}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${u};

      float getValue(int batch, int inIdx) {
        ${p}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${f}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${o})) * float(${s}));
        int currentSeg = int(mod(float(outIdx), float(${o})));

        float sumValue = 0.0;

        for (int i = 0; i < ${l}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${h}
        }

        int inIdx = inOffset + ${l};
        if (${d===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${h}
        } else if (${d===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${h}
        } else if (${d===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${h}
        }
        setOutput(${c});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gue(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,segmentIds:a}=e,{numSegments:o}=s,i=r.shape.length,u=[];let c=0;const l=At([c],i);let d=r;l!=null&&(d=qn({inputs:{x:r},backend:t,attrs:{perm:l}}),u.push(d),c=Ct(1,i)[0]);const h=NC(d.shape,c,o),p=U([d.shape[c]]),f=he({inputs:{x:d},backend:t,attrs:{shape:[-1,p]}});u.push(f);const m=Dx(r.dtype),g=(w,v,S,N,$)=>{const T=w.shape[0],C=w.shape[1],k=kC(C,$),A={windowSize:k,inSize:C,batchSize:T,numSegments:$},D=new mue(A,v),R=t.compileAndRun(D,[w,S],N);if(u.push(R),R.shape[1]===$)return R;const F=M_({backend:t,attrs:{start:0,stop:$,step:1,dtype:"float32"}}),z=B_({inputs:{x:F},backend:t,attrs:{reps:[C/k]}});return u.push(F),u.push(z),g(R,v,z,N,$)},y=g(f,"unsortedSegmentSum",a,m,o),b=he({inputs:{x:y},backend:t,attrs:{shape:h}});let x=b;if(l!=null){u.push(b);const w=Qr(l);x=qn({inputs:{x},backend:t,attrs:{perm:w}})}return u.forEach(w=>t.disposeIntermediateTensorInfo(w)),x}const yue={kernelName:Hm,backendName:"webgl",kernelFunc:gue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bue=[tee,see,oee,lee,dee,fee,gee,bee,Iee,kee,Tee,Eee,Ree,Lee,zee,Wee,Gee,Kee,Yee,Jee,nte,lte,dte,mte,yte,Ste,Nte,_te,MQ,Dte,Lte,Vte,qte,Yte,Jte,ene,nne,one,lne,hne,fne,gne,bne,vne,Sne,Tne,_ne,Dne,Fne,Lne,Vne,Hne,Xne,Jne,tse,nse,rse,ose,use,cse,hse,gse,xse,Ise,kse,Tse,Ese,Ose,Mse,LQ,zse,Fte,Use,jse,Xse,zQ,Qse,sre,are,lre,hre,gre,xre,Sre,Tre,Ere,Dre,Pre,Mre,zre,Gre,jre,Kre,Yre,Jre,nae,oae,cae,bae,UQ,Iae,Nae,$ae,Aae,xte,Oae,Pae,Mae,Vae,Hae,WQ,qae,Xae,Zae,Qae,eoe,wte,fae,soe,ioe,doe,HQ,moe,boe,Ioe,Noe,_oe,Aoe,Ooe,Loe,zoe,Uoe,joe,Xoe,Qoe,nie,oie,lie,ite,gae,hie,fie,gie,bie,wie,Iie,kie,Cie,$ie,Aie,Rie,Fie,Lie,zie,Wie,Gie,jie,mae,JQ,Xie,Jie,eue,sue,iue,cue,QQ,hue,fue,yue,Fae];for(const n of bue)Ax(n);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var dt;(function(n){n[n.float32=0]="float32",n[n.int32=1]="int32",n[n.bool=2]="bool",n[n.string=3]="string",n[n.complex64=4]="complex64"})(dt||(dt={}));var od;(function(n){n[n.linear=0]="linear",n[n.relu=1]="relu",n[n.relu6=2]="relu6",n[n.prelu=3]="prelu",n[n.leakyrelu=4]="leakyrelu",n[n.sigmoid=5]="sigmoid",n[n.elu=6]="elu"})(od||(od={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let z_;function xue(n){z_=n.wasm.cwrap(mu,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])}function wue(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:a,bias:o,preluActivationWeights:i}=e;if(r.dtype!=="float32"||a.dtype!=="float32")throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");const{transposeA:u,transposeB:c,activation:l,leakyreluAlpha:d}=s,h=t.dataIdMap.get(r.dataId).id,p=t.dataIdMap.get(a.dataId).id;let f=0;if(o!=null){const $=t.dataIdMap.get(o.dataId);if($.shape.length!==1)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${$.shape.length}.`);f=$.id}const m=i==null?0:t.dataIdMap.get(i.dataId).id,g=od[l];if(g==null)throw new Error(`${l} activation not yet supported for FusedConv2D in the wasm backend.`);const y=u?r.shape[2]:r.shape[1],b=c?a.shape[1]:a.shape[2],x=Me(r.shape.slice(0,-2),a.shape.slice(0,-2)),w=t.makeOutput([...x,y,b],r.dtype),v=t.dataIdMap.get(w.dataId).id,S=new Uint8Array(new Int32Array(r.shape).buffer),N=new Uint8Array(new Int32Array(a.shape).buffer);return z_(h,S,r.shape.length,p,N,a.shape.length,u,c,g,f,m,d||0,v),w}const vue={kernelName:mu,backendName:"wasm",setupFunc:xue,kernelFunc:wue};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rt(n,e){let t;function s(a){t=a.wasm.cwrap(n,null,["number","number","number"])}function r(a){const{backend:o,inputs:{x:i}}=a,u=o.dataIdMap.get(i.dataId).id,c=o.makeOutput(i.shape,e||i.dtype),l=o.dataIdMap.get(c.dataId).id;return U(c.shape)===0||t(u,dt[i.dtype],l),c}return{kernelName:n,backendName:"wasm",setupFunc:s,kernelFunc:r}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Iue=rt(qd);/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sue=rt(Fu);/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kue=rt(Pu);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nn(n,e,t){let s;function r(o){s=o.wasm.cwrap(n,null,["number","array","number","number","array","number","number","number"])}function a(o){const{backend:i,inputs:u}=o,{a:c,b:l}=u,d=i.dataIdMap.get(c.dataId).id,h=i.dataIdMap.get(l.dataId).id,p=t??c.dtype,f=Me(c.shape,l.shape),m=i.makeOutput(f,p);if(U(f)===0)return m;const g=new Uint8Array(new Int32Array(c.shape).buffer),y=new Uint8Array(new Int32Array(l.shape).buffer),b=i.dataIdMap.get(m.dataId).id;return s(d,g,c.shape.length,h,y,l.shape.length,dt[c.dtype],b),m}return{kernelName:n,backendName:"wasm",setupFunc:r,kernelFunc:a}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nue=nn(mi);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let V_;function Cue(n){V_=n.wasm.cwrap(Lu,null,["array","number","number","number"])}function Tue(n){const{inputs:e,backend:t}=n,s=t.makeOutput(e[0].shape,e[0].dtype);if(U(s.shape)===0)return s;const r=e.map(i=>t.dataIdMap.get(i.dataId).id),a=new Uint8Array(new Int32Array(r).buffer),o=t.dataIdMap.get(s.dataId).id;return V_(a,r.length,dt[s.dtype],o),s}const $ue={kernelName:Lu,backendName:"wasm",setupFunc:Cue,kernelFunc:Tue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jg(n){const{inputs:{x:e},backend:t}=n;if(e.dtype==="string")return Qs(t.readSync(e.dataId),e.shape,e.dtype);const s=t.makeOutput(e.shape,e.dtype),r=t.typedArrayFromHeap(e);return t.typedArrayFromHeap(s).set(r),s}const _ue={kernelName:cl,backendName:"wasm",kernelFunc:jg};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let W_;function Eue(n){W_=n.wasm.cwrap(ja,null,["number","array","number","number","number","array","number"])}function po(n){const{inputs:e,backend:t,attrs:s}=n,[r,a]=Due(e.x.shape,s.perm);let o=!0;for(let f=0;f<a.length;f++)a[f]!==f&&(o=!1);const i=Aue(e.x.shape,s.perm),u={dataId:e.x.dataId,shape:r,dtype:e.x.dtype};if(o){const f=jg({inputs:e,backend:t});return f.shape=i,f}const c=t.makeOutput(i,u.dtype),l=t.dataIdMap.get(u.dataId).id,d=t.dataIdMap.get(c.dataId).id,h=new Uint8Array(new Int32Array(a).buffer),p=new Uint8Array(new Int32Array(u.shape).buffer);return W_(l,p,u.shape.length,dt[u.dtype],d,h,a.length),c}function Aue(n,e){const t=new Array(n.length);for(let s=0;s<t.length;s++)t[s]=n[e[s]];return t}function Due(n,e){const t=[],s=[];for(let r=0;r<n.length;++r)n[r]!==1&&t.push(n[r]),n[e[r]]!==1&&s.push(e[r]);for(let r=0;r<s.length;++r){let a=-1;for(let o=0;o<s.length;++o)s[o]>=r&&(a===-1||s[a]>s[o])&&(a=o);s[a]=r}return[t,s]}const Rue={kernelName:ja,backendName:"wasm",kernelFunc:po,setupFunc:Eue};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Co(n,e,t){const s=n.shape,r=n.shape.length,a=ze(e,s);let o=a;const i=At(o,r);let u=null,c=!1;if(i!=null){const l=new Array(r);for(let p=0;p<l.length;p++)l[p]=s[i[p]];o=Ct(o.length,r),u=po({inputs:{x:n},attrs:{perm:i},backend:t});const d=t.dataIdMap.get(n.dataId).id;t.dataIdMap.get(u.dataId).id!==d&&(c=!0)}return{transposed:u,originalAxes:a,axes:o,inputWasTransposed:c}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let U_;function Oue(n){U_=n.wasm.cwrap(Kd,null,["number, number, number"])}function Fue(n){const{backend:e,inputs:t,attrs:s}=n,{axis:r,keepDims:a}=s,{x:o}=t;let u=e.dataIdMap.get(o.dataId).id,c=o;const{transposed:l,axes:d,originalAxes:h,inputWasTransposed:p}=Co(o,r,e);if(p){const x=e.dataIdMap.get(l.dataId).id;c=l,u=x}const f=c.shape.length;Et("all",d,f);const[m,g]=Rt(c.shape,d),y=U(g),b=e.makeOutput(m,o.dtype);if(U(c.shape)!==0){const x=e.dataIdMap.get(b.dataId).id;U_(u,y,x)}if(p&&e.disposeData(l.dataId),a){const x=wt(b.shape,h);b.shape=x}return b}const Pue={kernelName:Kd,backendName:"wasm",setupFunc:Oue,kernelFunc:Fue};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let G_;function Lue(n){G_=n.wasm.cwrap(Xd,null,["number, number, number"])}function Mue(n){const{backend:e,inputs:t,attrs:s}=n,{axis:r,keepDims:a}=s,{x:o}=t;let u=e.dataIdMap.get(o.dataId).id,c=o;const{transposed:l,axes:d,originalAxes:h,inputWasTransposed:p}=Co(o,r,e);if(p){const x=e.dataIdMap.get(l.dataId).id;c=l,u=x}const f=c.shape.length;Et("any",d,f);const[m,g]=Rt(c.shape,d),y=U(g),b=e.makeOutput(m,o.dtype);if(U(c.shape)!==0){const x=e.dataIdMap.get(b.dataId).id;G_(u,y,x)}if(p&&e.disposeData(l.dataId),a){const x=wt(b.shape,h);b.shape=x}return b}const Bue={kernelName:Xd,backendName:"wasm",setupFunc:Lue,kernelFunc:Mue};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H_(n){let e;function t(r){e=r.wasm.cwrap(n,null,["number","number","number","number","number"])}function s(r){const{backend:a,inputs:o,attrs:i}=r,{axis:u}=i,{x:c}=o,l=a.dataIdMap.get(c.dataId).id;let d=l,h=c;const{transposed:p,axes:f,inputWasTransposed:m}=Co(c,u,a);if(m){const v=a.dataIdMap.get(p.dataId).id;v!==l&&(h=p,d=v)}const g=h.shape.slice(0,-1),y=a.makeOutput(g,"int32"),b=a.dataIdMap.get(y.dataId).id,x=U(y.shape),w=h.shape[f[0]];return e(d,dt[h.dtype],x,w,b),m&&a.disposeData(p.dataId),y}return{kernelName:n,backendName:"wasm",setupFunc:t,kernelFunc:s}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zue=H_(Yd);/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vue=H_(Zd);/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wue=rt(Mu);/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uue=rt(Bu);/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gue=rt(zu);/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hue=nn(Wu);/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jue=rt(Vu);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let j_;function que(n){j_=n.wasm.cwrap(Uu,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Kue(n){const{inputs:e,attrs:t,backend:s}=n,r=e.x,a=s.dataIdMap.get(r.dataId).id,{filterSize:o,strides:i,pad:u,dimRoundingMode:c}=t,l=Mn(r.shape,o,i,1,u,c),d=l.filterHeight,h=l.filterWidth,p=l.padInfo.top,f=l.padInfo.right,m=l.padInfo.bottom,g=l.padInfo.left,y=l.strideHeight,b=l.strideWidth,x=l.inChannels;if(l.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${l.dataFormat}'. Please use 'channelsLast'.`);if(l.dilationWidth!==1||l.dilationHeight!==1)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${l.dilationHeight}, ${l.dilationWidth}].`);const w=s.makeOutput(l.outShape,"float32"),v=s.dataIdMap.get(w.dataId).id;return j_(a,r.shape[0],r.shape[1],r.shape[2],d,h,p,f,m,g,y,b,x,v),w}const Xue={kernelName:Uu,backendName:"wasm",setupFunc:que,kernelFunc:Kue};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let q_;function Yue(n){q_=n.wasm.cwrap("AvgPool3D",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Zue(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:a,strides:o,pad:i,dimRoundingMode:u,dataFormat:c}=s,l=Bs(r.shape,a,o,1,i,u,c),d=t.makeOutput(l.outShape,r.dtype);return q_(t.dataIdMap.get(r.dataId).id,t.dataIdMap.get(d.dataId).id,l.batchSize,l.inChannels,l.inDepth,l.inHeight,l.inWidth,l.outDepth,l.outHeight,l.outWidth,l.strideDepth,l.strideHeight,l.strideWidth,l.dilationDepth,l.dilationHeight,l.dilationWidth,l.effectiveFilterDepth,l.effectiveFilterHeight,l.effectiveFilterWidth,l.padInfo.front,l.padInfo.top,l.padInfo.left),d}const Jue={kernelName:Jd,backendName:"wasm",setupFunc:Yue,kernelFunc:Zue};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let K_;function Que(n){K_=n.wasm.cwrap("AvgPool3DGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function ele(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:a}=e,{filterSize:o,strides:i,pad:u,dimRoundingMode:c}=s,l=Bs(a.shape,o,i,1,u,c),d=t.makeOutput(a.shape,a.dtype);return K_(t.dataIdMap.get(r.dataId).id,t.dataIdMap.get(d.dataId).id,l.batchSize,l.inChannels,l.inDepth,l.inHeight,l.inWidth,l.outDepth,l.outHeight,l.outWidth,l.strideDepth,l.strideHeight,l.strideWidth,l.dilationDepth,l.dilationHeight,l.dilationWidth,l.effectiveFilterDepth,l.effectiveFilterHeight,l.effectiveFilterWidth,l.padInfo.front,l.padInfo.top,l.padInfo.left,l.filterDepth,l.filterHeight,l.filterWidth),d}const tle={kernelName:Cm,backendName:"wasm",setupFunc:Que,kernelFunc:ele};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let X_;function nle(n){X_=n.wasm.cwrap("AvgPoolGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function sle(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:a}=e,{filterSize:o,strides:i,pad:u}=s,c=Mn(a.shape,o,i,1,u),l=t.makeOutput(a.shape,a.dtype);return X_(t.dataIdMap.get(r.dataId).id,t.dataIdMap.get(l.dataId).id,c.batchSize,c.inChannels,c.inHeight,c.inWidth,c.outHeight,c.outWidth,c.strideHeight,c.strideWidth,c.dilationHeight,c.dilationWidth,c.effectiveFilterHeight,c.effectiveFilterWidth,c.padInfo.top,c.padInfo.left,c.filterHeight,c.filterWidth),l}const rle={kernelName:Nm,backendName:"wasm",setupFunc:nle,kernelFunc:sle};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function as(n){const{inputs:e,attrs:t}=n,{x:s}=e,{shape:r}=t,a=U(s.shape),o=gx(r,a);return _(a===U(o),()=>`new shape: ${o}, old shape: ${s.shape}. New shape and old shape must have the same number of elements.`),n.backend.incRef(s.dataId),{dataId:s.dataId,shape:o,dtype:s.dtype}}const ale={kernelName:Ah,backendName:"wasm",kernelFunc:as};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Y_;function ole(n){Y_=n.wasm.cwrap(Gu,null,["number","array","number","number","array","number","number","number","number"])}function ile(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:a}=e,{transposeA:o,transposeB:i}=s;if(r.dtype!=="float32"||a.dtype!=="float32")throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");const u=r.shape.length,c=a.shape.length,l=o?r.shape[u-2]:r.shape[u-1],d=i?a.shape[c-1]:a.shape[c-2],h=o?r.shape[u-1]:r.shape[u-2],p=i?a.shape[c-2]:a.shape[c-1],f=r.shape.slice(0,-2),m=a.shape.slice(0,-2),g=U(f),y=U(m),x=Me(r.shape.slice(0,-2),a.shape.slice(0,-2)).concat([h,p]);_(l===d,()=>`Error in matMul: inner shapes (${l}) and (${d}) of Tensors with shapes ${r.shape} and ${a.shape} and transposeA=${o} and transposeB=${i} must match.`);const w=o?[g,l,h]:[g,h,l],v=i?[y,p,d]:[y,d,p],S=as({inputs:{x:r},backend:t,attrs:{shape:w}}),N=as({inputs:{x:a},backend:t,attrs:{shape:v}}),$=t.dataIdMap.get(S.dataId).id,T=t.dataIdMap.get(N.dataId).id,C=o?S.shape[2]:S.shape[1],k=i?N.shape[1]:N.shape[2],A=Math.max(g,y),D=t.makeOutput([A,C,k],S.dtype),R=t.dataIdMap.get(D.dataId).id,F=new Uint8Array(new Int32Array(S.shape).buffer),z=new Uint8Array(new Int32Array(N.shape).buffer);return Y_($,F,S.shape.length,T,z,N.shape.length,o,i,R),t.disposeData(S.dataId),t.disposeData(N.dataId),D.shape=x,D}const ule={kernelName:Gu,backendName:"wasm",setupFunc:ole,kernelFunc:ile};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function li(n){const{inputs:{x:e},attrs:{begin:t,size:s},backend:r}=n,[a,o]=np(e,t,s),i=yg(e.shape,a,o),u=r.readSync(e.dataId),c=r.makeOutput(o,e.dtype),l=ve(e.shape),d=r.dataIdMap.get(c.dataId);if(i){const f=bg(a,l);return e.dtype==="string"?d.stringBytes=u.slice(f,f+U(o)):r.typedArrayFromHeap(c).set(u.subarray(f,f+U(o))),c}if(e.dtype==="string"){const f=Pf(u,a,o,e.shape,e.dtype);return d.stringBytes=f,c}const h=r.typedArrayFromHeap(c),p=e.shape.length;if(p===2)lle(u,l[0],h,a,o);else if(p===3)cle(u,l[0],l[1],h,a,o);else if(p===4)dle(u,l[0],l[1],l[2],h,a,o);else{const f=Pf(u,a,o,e.shape,e.dtype);h.set(f)}return c}function lle(n,e,t,s,r){let a=0;const o=s[0],i=s[1],u=o+r[0];for(let c=o;c<u;c++){const l=c*e+i;t.set(n.subarray(l,l+r[1]),a),a+=r[1]}}function cle(n,e,t,s,r,a){let o=0;const i=r[0],u=r[1],c=r[2],l=i+a[0],d=u+a[1];for(let h=i;h<l;h++)for(let p=u;p<d;p++){const f=h*e+p*t+c;s.set(n.subarray(f,f+a[2]),o),o+=a[2]}}function dle(n,e,t,s,r,a,o){let i=0;const u=a[0],c=a[1],l=a[2],d=u+o[0],h=c+o[1],p=l+o[2],f=a[3];for(let m=u;m<d;m++)for(let g=c;g<h;g++)for(let y=l;y<p;y++){const b=m*e+g*t+y*s+f;r.set(n.subarray(b,b+o[3]),i),i+=o[3]}}const hle={kernelName:Mh,backendName:"wasm",kernelFunc:li};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ple(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:a,crops:o}=s,i=a.reduce((y,b)=>y*b),u=Si(r.shape,a,i),c=ki(u.length,a.length),l=Ni(r.shape,a,i),d=Sg(o,a.length),h=kg(l,o,a.length),p=as({inputs:{x:r},backend:t,attrs:{shape:u}}),f=po({inputs:{x:p},backend:t,attrs:{perm:c}}),m=as({inputs:{x:f},backend:t,attrs:{shape:l}}),g=li({inputs:{x:m},backend:t,attrs:{begin:d,size:h}});return t.disposeData(p.dataId),t.disposeData(f.dataId),t.disposeData(m.dataId),g}const fle={kernelName:Qd,backendName:"wasm",kernelFunc:ple};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Z_;function mle(n){Z_=n.wasm.cwrap(eh,null,["number","number","boolean","number","number","number"])}function gle(n){const{backend:e,inputs:t,attrs:s}=n,{x:r,weights:a}=t,{size:o}=s,i=a.shape.reduce((d,h)=>d*h,1)!==0,u=r.shape.length===1?[o]:[r.shape[0],o],c=e.makeOutput(u,a.dtype);function l(d){return e.dataIdMap.get(d.dataId).id}return Z_(l(r),o,i,l(a),dt[a.dtype],l(c)),c}const yle={kernelName:eh,backendName:"wasm",setupFunc:mle,kernelFunc:gle};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ble=nn(th);/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xle(n){const{inputs:e,backend:t}=n,{s0:s,s1:r}=e,a=t.typedArrayFromHeap(s),o=t.typedArrayFromHeap(r),i=Me(Array.from(a),Array.from(o));return t.makeOutput([i.length],"int32",void 0,new Int32Array(i))}const wle={kernelName:Tm,backendName:"wasm",kernelFunc:xle};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function To(n){const{inputs:{x:e},attrs:{dtype:t},backend:s}=n,r=s.makeOutput(e.shape,t),a=s.typedArrayFromHeap(e);return s.typedArrayFromHeap(r).set(a),r}const vle={kernelName:Hu,backendName:"wasm",kernelFunc:To};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ile=rt(ju);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let J_;function Sle(n){J_=n.wasm.cwrap(gi,null,["number","number","number","number"])}function kle(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{clipValueMin:a,clipValueMax:o}=s,i=t.dataIdMap.get(r.dataId).id,u=t.makeOutput(r.shape,r.dtype),c=t.dataIdMap.get(u.dataId).id;return J_(i,a,o,c),u}const Nle={kernelName:gi,backendName:"wasm",setupFunc:Sle,kernelFunc:kle};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q_(n){const{inputs:e,backend:t}=n,s=ze(n.attrs.axis,e[0].shape)[0],r=e.map(p=>p.shape);wg(r,s);let a=Fs(e.map(p=>p.shape),s);const o=e.filter(p=>U(p.shape)>0);if(o.length===1)return jg({inputs:{x:o[0]},backend:t});const i=t.makeOutput(a,e[0].dtype);if(U(a)===0)return i;if(o[0].dtype==="string"){const p=o.map(x=>{const v=[-1,U(x.shape.slice(s))];return as({inputs:{x},backend:t,attrs:{shape:v}})}),f=p.map(x=>({vals:t.readSync(x.dataId),shape:x.shape}));a=Fs(p.map(x=>x.shape),1);const m=p[0].shape[0]===1,g=x0(f,a,e[0].dtype,m),y=Fs(o.map(x=>x.shape),s);i.shape=y;const b=t.dataIdMap.get(i.dataId);return b.stringBytes=qw(g),p.forEach(x=>t.disposeData(x.dataId)),i}const u=U(o[0].shape.slice(0,s));let c=0;const l=o.map(p=>{const f=U(p.shape.slice(s));return c+=f,f}),d=o.map(p=>t.typedArrayFromHeap(p)),h=t.typedArrayFromHeap(i);for(let p=0;p<u;p++){let f=p*c;for(let m=0;m<d.length;m++){const g=l[m],y=p*g,b=d[m].subarray(y,y+g);h.set(b,f),f+=g}}return i}const Cle={kernelName:nh,backendName:"wasm",kernelFunc:Q_};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let eE;function Tle(n){eE=n.wasm.cwrap(qu,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function $le(n){const{inputs:e,attrs:t,backend:s}=n,{x:r,filter:a}=e,o=s.dataIdMap.get(r.dataId).id,i=s.dataIdMap.get(a.dataId).id,{strides:u,dilations:c,pad:l,dimRoundingMode:d,dataFormat:h}=t,p=Tr(h),f=Vt(r.shape,a.shape,u,c,l,d,!1,p),m=f.filterHeight,g=f.filterWidth,y=f.padInfo.top,b=f.padInfo.right,x=f.padInfo.bottom,w=f.padInfo.left,v=f.dilationHeight,S=f.dilationWidth,N=f.strideHeight,$=f.strideWidth,T=f.inChannels,C=f.outChannels,k=f.padInfo.type==="SAME"?1:0;if(f.dataFormat!=="channelsLast")throw new Error(`wasm backend Conv2D does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);const A=s.makeOutput(f.outShape,"float32"),D=s.dataIdMap.get(A.dataId).id;return eE(o,r.shape[0],r.shape[1],r.shape[2],i,m,g,y,b,x,w,k,v,S,N,$,T,C,D),A}const _le={kernelName:qu,backendName:"wasm",setupFunc:Tle,kernelFunc:$le};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let tE;function Ele(n){tE=n.wasm.cwrap(Ku,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Ale(n){const{backend:e,inputs:t,attrs:s}=n,{dy:r,filter:a}=t,{strides:o,pad:i,dataFormat:u,dimRoundingMode:c,inputShape:l}=s,d=1,h=Tr(u),p=Vt(l,a.shape,o,d,i,c,!1,h),{batchSize:f,filterHeight:m,filterWidth:g,inChannels:y,inHeight:b,inWidth:x,outChannels:w,outHeight:v,outWidth:S,strideHeight:N,strideWidth:$}=p,T=m-1-p.padInfo.top,C=g-1-p.padInfo.left,k=p.dataFormat==="channelsLast",A=ve(p.inShape),D=ve(r.shape),[R,F,z]=ve(a.shape),H=A[0],P=k?A[1]:A[2],G=k?A[2]:1,X=k?1:A[1],Z=D[0],ne=k?D[1]:D[2],te=k?D[2]:1,ae=k?1:D[1],oe=e.makeOutput(p.inShape,"float32"),pe=e.dataIdMap.get(oe.dataId).id,Ie=e.dataIdMap.get(r.dataId).id,me=e.dataIdMap.get(a.dataId).id;return tE(Ie,me,f,m,g,b,x,y,v,S,w,N,$,T,C,R,F,z,H,P,G,X,Z,ne,te,ae,pe),oe}const Dle={kernelName:Ku,backendName:"wasm",setupFunc:Ele,kernelFunc:Ale};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let nE;function Rle(n){nE=n.wasm.cwrap(Xu,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Ole(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:a}=e,{strides:o,pad:i,dilations:u}=s;if(r.dtype!=="float32")throw new Error(`Tensor x must have dtype float32, got ${r.dtype}`);if(a.dtype!=="float32")throw new Error(`Tensor filter must have dtype float32, got ${a.dtype}`);const c=Cr(r.shape,a.shape,o,u,i),l=t.makeOutput(c.outShape,r.dtype);return nE(t.dataIdMap.get(r.dataId).id,t.dataIdMap.get(a.dataId).id,t.dataIdMap.get(l.dataId).id,c.batchSize,c.inDepth,c.inHeight,c.inWidth,c.inChannels,c.outDepth,c.outHeight,c.outWidth,c.outChannels,c.strideDepth,c.strideHeight,c.strideWidth,c.dilationDepth,c.dilationHeight,c.dilationWidth,c.filterDepth,c.filterHeight,c.filterWidth,c.padInfo.front,c.padInfo.top,c.padInfo.left),l}const Fle={kernelName:Xu,backendName:"wasm",setupFunc:Rle,kernelFunc:Ole};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let sE;function Ple(n){sE=n.wasm.cwrap(sh,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Lle(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:a}=e,{strides:o,pad:i,filterShape:u}=s;if(r.dtype!=="float32")throw new Error(`Tensor dy must have dtype float32, got ${r.dtype}`);if(a.dtype!=="float32")throw new Error(`Tensor filter must have dtype float32, got ${a.dtype}`);const c=Cr(r.shape,u,o,1,i),l=t.makeOutput(c.filterShape,a.dtype);return sE(t.dataIdMap.get(r.dataId).id,t.dataIdMap.get(a.dataId).id,t.dataIdMap.get(l.dataId).id,c.batchSize,c.inDepth,c.inHeight,c.inWidth,c.inChannels,c.outDepth,c.outHeight,c.outWidth,c.outChannels,c.strideDepth,c.strideHeight,c.strideWidth,c.dilationDepth,c.dilationHeight,c.dilationWidth,c.filterDepth,c.filterHeight,c.filterWidth,c.padInfo.front,c.padInfo.top,c.padInfo.left),l}const Mle={kernelName:sh,backendName:"wasm",setupFunc:Ple,kernelFunc:Lle};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let rE;function Ble(n){rE=n.wasm.cwrap(rh,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function zle(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:a}=e,{pad:o,strides:i,inputShape:u}=s;if(r.dtype!=="float32")throw new Error(`Tensor dy must have dtype float32, got ${r.dtype}`);if(a.dtype!=="float32")throw new Error(`Tensor filter must have dtype float32, got ${a.dtype}`);const c=Cr(u,a.shape,i,1,o),l=t.makeOutput(c.inShape,r.dtype);return rE(t.dataIdMap.get(a.dataId).id,t.dataIdMap.get(r.dataId).id,t.dataIdMap.get(l.dataId).id,c.batchSize,c.inDepth,c.inHeight,c.inWidth,c.inChannels,c.outDepth,c.outHeight,c.outWidth,c.outChannels,c.strideDepth,c.strideHeight,c.strideWidth,c.dilationDepth,c.dilationHeight,c.dilationWidth,c.filterDepth,c.filterHeight,c.filterWidth,c.padInfo.front,c.padInfo.top,c.padInfo.left),l}const Vle={kernelName:rh,backendName:"wasm",setupFunc:Ble,kernelFunc:zle};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wle=rt(Yu);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ule=rt(Zu);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Mb;(function(n){n[n.bilinear=0]="bilinear",n[n.nearest=1]="nearest"})(Mb||(Mb={}));let aE;function Gle(n){aE=n.wasm.cwrap(oh,null,["number","number","number","number","array","number","number","number","number","number"])}function Hle(n){const{backend:e,inputs:t,attrs:s}=n,{method:r,extrapolationValue:a,cropSize:o}=s,{image:i,boxes:u,boxInd:c}=t,l=u.shape[0],[d,h]=o,p=[l,d,h,i.shape[3]];let f=e.dataIdMap.get(i.dataId),m;i.dtype!=="float32"&&(m=To({backend:e,inputs:{x:i},attrs:{dtype:"float32"}}),f=e.dataIdMap.get(m.dataId));const g=f.id,y=e.dataIdMap.get(u.dataId).id,b=e.dataIdMap.get(c.dataId).id,x=e.makeOutput(p,"float32"),w=e.dataIdMap.get(x.dataId).id,v=new Uint8Array(new Int32Array(i.shape).buffer);return aE(g,y,b,l,v,d,h,Mb[r],a,w),m!=null&&e.disposeData(m.dataId),x}const jle={kernelName:oh,backendName:"wasm",setupFunc:Gle,kernelFunc:Hle};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let oE;function qle(n){oE=n.wasm.cwrap(ah,null,["number","number","number","number","number","number"])}function Kle(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:a,exclusive:o,reverse:i}=s,u=r.shape.length;_(r.dtype==="float32"||r.dtype==="int32",()=>`cumprod does not support ${r.dtype} tensors in the WASM backend`);const c=At([a],u);let l=r;c!==null&&(l=po({inputs:{x:r},attrs:{perm:c},backend:t}));const d=Ct(1,u)[0];Et("cumprod",[d],u);const h=t.makeOutput(l.shape,l.dtype),p=l.shape[d],f=t.dataIdMap.get(l.dataId).id,m=t.dataIdMap.get(h.dataId).id;oE(f,o?1:0,i?1:0,p,m,dt[r.dtype]);let g=h;if(c!==null){const y=Qr(c);g=po({inputs:{x:h},attrs:{perm:y},backend:t}),t.disposeData(l.dataId),t.disposeData(h.dataId)}return g}const Xle={kernelName:ah,backendName:"wasm",setupFunc:qle,kernelFunc:Kle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let iE;function Yle(n){iE=n.wasm.cwrap(Ju,null,["number","number","number","number","number","number"])}function Zle(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:a,exclusive:o,reverse:i}=s,u=r.shape.length;_(r.dtype==="float32"||r.dtype==="int32",()=>`cumsum does not support ${r.dtype} tensors in the WASM backend`);const c=At([a],u);let l=r;c!==null&&(l=po({inputs:{x:r},attrs:{perm:c},backend:t}));const d=Ct(1,u)[0];Et("cumsum",[d],u);const h=t.makeOutput(l.shape,l.dtype),p=l.shape[d],f=t.dataIdMap.get(l.dataId).id,m=t.dataIdMap.get(h.dataId).id;iE(f,o?1:0,i?1:0,p,m,dt[r.dtype]);let g=h;if(c!==null){const y=Qr(c);g=po({inputs:{x:h},attrs:{perm:y},backend:t}),t.disposeData(l.dataId),t.disposeData(h.dataId)}return g}const Jle={kernelName:Ju,backendName:"wasm",setupFunc:Yle,kernelFunc:Zle};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let uE;function Qle(n){uE=n.wasm.cwrap("DenseBincount",null,["number","array","number","number","boolean","number","number","boolean","number"])}function ece(n){const{backend:e,inputs:t,attrs:s}=n,{x:r,weights:a}=t,{size:o,binaryOutput:i}=s,u=a.shape.reduce((h,p)=>h*p,1)!==0,c=r.shape.length===1?[o]:[r.shape[0],o],l=e.makeOutput(c,a.dtype);function d(h){return e.dataIdMap.get(h.dataId).id}return uE(d(r),new Uint8Array(new Int32Array(r.shape).buffer),r.shape.length,o,u,d(a),dt[a.dtype],i,d(l)),l}const tce={kernelName:_m,backendName:"wasm",setupFunc:Qle,kernelFunc:ece};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let lE;function nce(n){lE=n.wasm.cwrap(ih,null,["number","number","number","array","number","array","array","number","number"])}function sce(n){const{backend:e,inputs:t,attrs:s}=n,{x:r}=t,{blockSize:a,dataFormat:o}=s,i=r.shape[0],u=o==="NHWC"?r.shape[1]:r.shape[2],c=o==="NHWC"?r.shape[2]:r.shape[3],l=o==="NHWC"?r.shape[3]:r.shape[1],d=u*a,h=c*a,p=l/(a*a),f=o==="NHWC"?[i,d,h,p]:[i,p,d,h],m=e.makeOutput(f,"float32"),y=e.dataIdMap.get(r.dataId).id,b=new Uint8Array(new Int32Array(ve(r.shape)).buffer),x=new Uint8Array(new Int32Array(f).buffer),w=new Uint8Array(new Int32Array(ve(f)).buffer),v=e.dataIdMap.get(m.dataId).id;return lE(y,a,o==="NHWC"?1:0,b,r.shape.length-1,x,w,f.length,v),m}const rce={kernelName:ih,backendName:"wasm",setupFunc:nce,kernelFunc:sce};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let cE;function ace(n){cE=n.wasm.cwrap(Qu,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function oce(n){const{inputs:e,attrs:t,backend:s}=n,{x:r,filter:a}=e,o=s.dataIdMap.get(r.dataId).id,i=s.dataIdMap.get(a.dataId).id,{strides:u,dilations:c,pad:l,dimRoundingMode:d}=t,h=c??[1,1],p=Vt(r.shape,a.shape,u,h,l,d,!0),f=p.filterHeight,m=p.filterWidth,g=p.padInfo.top,y=p.padInfo.right,b=p.padInfo.bottom,x=p.padInfo.left,w=p.dilationHeight,v=p.dilationWidth,S=p.strideHeight,N=p.strideWidth,$=p.inChannels,T=p.outChannels,C=p.padInfo.type==="SAME"?1:0;if(p.dataFormat!=="channelsLast")throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${p.dataFormat}'. Please use 'channelsLast'.`);const k=s.makeOutput(p.outShape,"float32"),A=s.dataIdMap.get(k.dataId).id;return cE(o,r.shape[0],r.shape[1],r.shape[2],i,f,m,g,y,b,x,C,w,v,S,N,$,T,A),k}const ice={kernelName:Qu,backendName:"wasm",setupFunc:ace,kernelFunc:oce};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let dE;function uce(n){dE=n.wasm.cwrap("Diag",null,["number","number","number","number"])}function lce(n){const{inputs:e,backend:t}=n,{x:s}=e,r=U(s.shape),a=t.makeOutput([...s.shape,...s.shape],s.dtype);return dE(t.dataIdMap.get(s.dataId).id,dt[s.dtype],r,t.dataIdMap.get(a.dataId).id),a}const cce={kernelName:Em,backendName:"wasm",setupFunc:uce,kernelFunc:lce};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let hE;function dce(n){hE=n.wasm.cwrap(el,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function hce(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:a}=e,{strides:o,pad:i,dilations:u}=s;if(r.dtype!==a.dtype)throw new Error(`Dilation2D error: x must have the same dtype as filter. Got ${r.dtype} and ${a.dtype}`);const c=xo(r.shape,a.shape,o,i,"NHWC",u),l=t.makeOutput(c.outShape,r.dtype);return hE(t.dataIdMap.get(r.dataId).id,t.dataIdMap.get(a.dataId).id,t.dataIdMap.get(l.dataId).id,dt[r.dtype],c.batchSize,c.inChannels,c.inHeight,c.inWidth,c.outHeight,c.outWidth,c.strideHeight,c.strideWidth,c.dilationHeight,c.dilationWidth,c.filterHeight,c.filterWidth,c.padInfo.top,c.padInfo.left),l}const pce={kernelName:el,backendName:"wasm",setupFunc:dce,kernelFunc:hce};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let pE;function fce(n){pE=n.wasm.cwrap(Uc,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function mce(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:a,dy:o}=e,{strides:i,pad:u,dilations:c}=s;if(r.dtype!==a.dtype||r.dtype!==o.dtype)throw new Error(`Dilation2DBackpropFilter error: x must have the same dtype as filter and dy. Got ${r.dtype}, ${a.dtype}, and ${o.dtype}`);const l=xo(r.shape,a.shape,i,u,"NHWC",c),d=t.makeOutput(a.shape,a.dtype);return pE(t.dataIdMap.get(r.dataId).id,t.dataIdMap.get(a.dataId).id,t.dataIdMap.get(o.dataId).id,t.dataIdMap.get(d.dataId).id,dt[r.dtype],l.batchSize,l.inChannels,l.inHeight,l.inWidth,l.outHeight,l.outWidth,l.strideHeight,l.strideWidth,l.dilationHeight,l.dilationWidth,l.filterHeight,l.filterWidth,l.padInfo.top,l.padInfo.left),d}const gce={kernelName:Uc,backendName:"wasm",setupFunc:fce,kernelFunc:mce};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let fE;function yce(n){fE=n.wasm.cwrap(Wc,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function bce(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:a,dy:o}=e,{strides:i,pad:u,dilations:c}=s;if(r.dtype!==a.dtype||r.dtype!==o.dtype)throw new Error(`Dilation2DBackpropInput error: x must have the same dtype as filter and dy. Got ${r.dtype}, ${a.dtype}, and ${o.dtype}`);const l=xo(r.shape,a.shape,i,u,"NHWC",c),d=t.makeOutput(r.shape,r.dtype);return fE(t.dataIdMap.get(r.dataId).id,t.dataIdMap.get(a.dataId).id,t.dataIdMap.get(o.dataId).id,t.dataIdMap.get(d.dataId).id,dt[r.dtype],l.batchSize,l.inChannels,l.inHeight,l.inWidth,l.outHeight,l.outWidth,l.strideHeight,l.strideWidth,l.dilationHeight,l.dilationWidth,l.filterHeight,l.filterWidth,l.padInfo.top,l.padInfo.left),d}const xce={kernelName:Wc,backendName:"wasm",setupFunc:yce,kernelFunc:bce};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wce=rt(nl);/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let mE;function vce(n){mE=n.wasm.cwrap(uh,null,["number","number","number"])}function Ice(n){const{inputs:e,backend:t}=n,{dy:s,y:r}=e,a=t.makeOutput(r.shape,"float32"),o=i=>t.dataIdMap.get(i.dataId).id;return mE(o(r),o(s),o(a)),a}const Sce={kernelName:uh,backendName:"wasm",setupFunc:vce,kernelFunc:Ice};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kce=!1,Nce=nn(lh,kce,"bool");/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cce=rt(sl);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tce=rt(rl,"float32");/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bb(n){const{inputs:e,attrs:t,backend:s}=n,{input:r}=e,{dim:a}=t,o=r.shape.length,i=r.shape.slice();let u=a;return a<0&&(_(-(o+1)<=a,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),u=o+a+1),i.splice(u,0,1),as({inputs:{x:r},backend:s,attrs:{shape:i}})}const $ce={kernelName:ch,backendName:"wasm",kernelFunc:Bb};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _ce=rt(al,"float32");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gE(n){const{attrs:{shape:e,value:t},backend:s}=n;let{attrs:{dtype:r}}=n;r=r||fi(t);const a=s.makeOutput(e,r);return s.typedArrayFromHeap(a).fill(t),a}const Ece={kernelName:Am,backendName:"wasm",kernelFunc:gE};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let yE;function Ace(n){yE=n.wasm.cwrap(dh,null,["number","number","number","number","number","number"])}function Dce(n){const{inputs:e,backend:t}=n,{image:s}=e,r=t.makeOutput(s.shape,s.dtype),a=t.dataIdMap.get(s.dataId).id,o=t.dataIdMap.get(r.dataId).id,[i,u,c,l]=s.shape;return yE(a,i,u,c,l,o),r}const Rce={kernelName:dh,backendName:"wasm",kernelFunc:Dce,setupFunc:Ace};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oce=rt(ol);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fce=nn(il);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let bE;function Pce(n){bE=n.wasm.cwrap(ul,null,["number","number","number","number","number","number","number"])}function Lce(n){const{backend:e,inputs:t,attrs:s}=n,{varianceEpsilon:r}=s,{x:a,mean:o,variance:i,offset:u,scale:c}=t,l=e.dataIdMap.get(a.dataId).id,d=e.dataIdMap.get(o.dataId).id,h=e.dataIdMap.get(i.dataId).id,p=u!=null?e.dataIdMap.get(u.dataId).id:0,f=c!=null?e.dataIdMap.get(c.dataId).id:0,m=e.makeOutput(a.shape,a.dtype);if(U(a.shape)===0)return m;const g=e.dataIdMap.get(m.dataId).id;return bE(l,d,h,p,f,r,g),m}const Mce={kernelName:ul,backendName:"wasm",setupFunc:Pce,kernelFunc:Lce};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let xE;function Bce(n){xE=n.wasm.cwrap(gu,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function zce(n){const{inputs:e,attrs:t,backend:s}=n,{x:r,filter:a,bias:o,preluActivationWeights:i}=e,{strides:u,pad:c,dilations:l,dataFormat:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=t,m=Vt(r.shape,a.shape,u,l,c,h),g=od[p];if(g==null)throw new Error(`${p} activation not yet supported for FusedConv2D in the wasm backend.`);const y=s.dataIdMap.get(r.dataId).id,b=s.dataIdMap.get(a.dataId).id,x=m.outChannels;let w=0;if(o!=null){const te=s.dataIdMap.get(o.dataId);if(te.shape.length!==1)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${te.shape.length}.`);if(te.shape[0]!==x)throw new Error(`FusedConv2D bias shape (${te.shape}) does not match the number of output channels (${x})`);w=te.id}const v=m.filterHeight,S=m.filterWidth,N=m.padInfo.top,$=m.padInfo.right,T=m.padInfo.bottom,C=m.padInfo.left,k=m.dilationHeight,A=m.dilationWidth,D=m.strideHeight,R=m.strideWidth,F=m.inChannels,z=m.padInfo.type==="SAME"?1:0,H=m.batchSize,P=m.inHeight,G=m.inWidth;if(d!=="NHWC")throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${d}'. Please use 'NHWC'.`);const X=s.makeOutput(m.outShape,"float32"),Z=s.dataIdMap.get(X.dataId).id,ne=i==null?0:s.dataIdMap.get(i.dataId).id;return xE(y,H,P,G,b,v,S,w,N,$,T,C,z,k,A,D,R,F,x,g,ne,f||0,Z),X}const Vce={kernelName:gu,backendName:"wasm",setupFunc:Bce,kernelFunc:zce};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let wE;function Wce(n){wE=n.wasm.cwrap(yu,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Uce(n){const{inputs:e,attrs:t,backend:s}=n,{x:r,filter:a,bias:o,preluActivationWeights:i}=e,{strides:u,pad:c,dilations:l,dataFormat:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=t,m=Vt(r.shape,a.shape,u,l,c,h,!0),g=od[p];if(g==null)throw new Error(`${p} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);const y=s.dataIdMap.get(r.dataId).id,b=s.dataIdMap.get(a.dataId).id,x=m.outChannels;let w=0;if(o!=null){const te=s.dataIdMap.get(o.dataId);if(te.shape.length!==1)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${te.shape.length}.`);if(te.shape[0]!==x)throw new Error(`FusedDepthwiseConv2D bias shape (${te.shape}) does not match the number of output channels (${x})`);w=te.id}const v=m.filterHeight,S=m.filterWidth,N=m.padInfo.top,$=m.padInfo.right,T=m.padInfo.bottom,C=m.padInfo.left,k=m.dilationHeight,A=m.dilationWidth,D=m.strideHeight,R=m.strideWidth,F=m.inChannels,z=m.padInfo.type==="SAME"?1:0,H=m.batchSize,P=m.inHeight,G=m.inWidth;if(d!=="NHWC")throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${d}'. Please use 'NHWC'.`);const X=s.makeOutput(m.outShape,"float32"),Z=s.dataIdMap.get(X.dataId).id,ne=i==null?0:s.dataIdMap.get(i.dataId).id;return wE(y,H,P,G,b,v,S,w,N,$,T,C,z,k,A,D,R,F,x,g,ne,f||0,Z),X}const Gce={kernelName:yu,backendName:"wasm",setupFunc:Wce,kernelFunc:Uce};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let vE;function Hce(n){vE=n.wasm.cwrap(ph,null,["number","number","number","number","number","number","array","number"])}function jce(n){const{backend:e,inputs:t}=n,{params:s,indices:r}=t,[a,o,i,u]=mg(s,r),c=e.makeOutput(a,s.dtype);if(o===0)return c;const l=r.shape,d=l[l.length-1],p=e.dataIdMap.get(s.dataId).id,m=e.dataIdMap.get(r.dataId).id,g=new Uint8Array(new Int32Array(u).buffer),y=e.dataIdMap.get(c.dataId).id;return vE(p,dt[s.dtype],m,o,d,i,g,y),c}const qce={kernelName:ph,backendName:"wasm",setupFunc:Hce,kernelFunc:jce};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let IE;function Kce(n){IE=n.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])}function Xce(n){const{backend:e,inputs:t,attrs:s}=n,{x:r,indices:a}=t,{axis:o,batchDims:i}=s,u=ze(o,r.shape)[0],c=e.readSync(a.dataId),l=r.shape[u];for(let T=0;T<c.length;++T){const C=c[T];_(C<=l-1&&C>=0,()=>`GatherV2: the index value ${C} is not in [0, ${l-1}]`)}const d=$g(r,a,u,i),h=as({inputs:{x:r},attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]},backend:e}),p=U(a.shape),f=as({inputs:{x:a},attrs:{shape:[d.batchSize,p/d.batchSize]},backend:e}),m=[d.batchSize,d.outerSize,p/d.batchSize,d.sliceSize],g=e.makeOutput(m,r.dtype);if(U(r.shape)===0)return g;const y=h.shape.length-1,x=e.dataIdMap.get(h.dataId).id,v=e.dataIdMap.get(f.dataId).id,S=e.dataIdMap.get(g.dataId).id,N=new Uint8Array(new Int32Array(ve(h.shape)).buffer),$=new Uint8Array(new Int32Array(ve(m)).buffer);return IE(x,dt[r.dtype],N,y,v,d.batchSize,$,S),e.disposeData(h.dataId),e.disposeData(f.dataId),g.shape=d.outputShape,g}const Yce={kernelName:hh,backendName:"wasm",setupFunc:Kce,kernelFunc:Xce};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zce=!1,Jce=nn(fh,Zce,"bool");/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qce=!1,ede=nn(ll,Qce,"bool");/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tde=rt(dl,"bool");/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nde=rt(hl,"bool");/**
 * @license
 * Copyright 2022 The TensorFlow Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sde=rt(pl,"bool");/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let SE;function rde(n){SE=n.wasm.cwrap(fl,null,["number","number","number","number"])}function ade(n){const{inputs:{x:e},attrs:{alpha:t},backend:s}=n,r=s.dataIdMap.get(e.dataId).id,a=s.makeOutput(e.shape,"float32");if(U(e.shape)!==0){const o=s.dataIdMap.get(a.dataId).id;SE(r,dt[e.dtype],t,o)}return a}const ode={kernelName:fl,backendName:"wasm",setupFunc:rde,kernelFunc:ade};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ide=!1,ude=nn(mh,ide,"bool");/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lde=!1,cde=nn(gh,lde,"bool");/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let kE;function dde(n){kE=n.wasm.cwrap(yh,null,["number","number","number","number"])}function hde(n){const{attrs:e,backend:t}=n,{start:s,stop:r,num:a}=e,o=Math.floor(a),i=t.makeOutput([o],"float32");return kE(t.dataIdMap.get(i.dataId).id,s,r,o),i}const pde={kernelName:yh,backendName:"wasm",setupFunc:dde,kernelFunc:hde};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fde=rt(ml);/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mde=rt(gl);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gde=!1,yde=nn(bh,gde,"bool");/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bde=rt(xh);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xde=!1,wde=nn(wh,xde,"bool");/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vde=!1,Ide=nn(fL,vde,"bool");/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let NE;function Sde(n){NE=n.wasm.cwrap(yl,null,["number","number","number","number","number","number","number"])}function kde(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{depthRadius:a,bias:o,alpha:i,beta:u}=s;if(r.dtype!=="float32")throw new Error("LRN error: x must have dtype float32");const c=t.makeOutput(r.shape,r.dtype);return NE(t.dataIdMap.get(r.dataId).id,t.dataIdMap.get(c.dataId).id,r.shape[3],a,o,i,u),c}const Nde={kernelName:yl,backendName:"wasm",setupFunc:Sde,kernelFunc:kde};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let CE;function Cde(n){CE=n.wasm.cwrap(vh,null,["number","number","number","number","number","number","number","number","number"])}function Tde(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,y:a,dy:o}=e,{depthRadius:i,bias:u,alpha:c,beta:l}=s;if(r.dtype!=="float32"||a.dtype!=="float32"||o.dtype!=="float32")throw new Error("LRNGrad error: x, y, and dy must have dtype float32");const d=t.makeOutput(r.shape,r.dtype);return CE(t.dataIdMap.get(r.dataId).id,t.dataIdMap.get(a.dataId).id,t.dataIdMap.get(o.dataId).id,t.dataIdMap.get(d.dataId).id,o.shape[3],i,u,c,l),d}const $de={kernelName:vh,backendName:"wasm",setupFunc:Cde,kernelFunc:Tde};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let TE;function _de(n){TE=n.wasm.cwrap(bl,null,["number","number","number","number"])}function Ede(n){const{backend:e,inputs:t,attrs:s}=n,{reductionIndices:r,keepDims:a}=s,{x:o}=t;let u=e.dataIdMap.get(o.dataId).id,c=o;const{transposed:l,axes:d,originalAxes:h,inputWasTransposed:p}=Co(o,r,e);if(p){const x=e.dataIdMap.get(l.dataId).id;c=l,u=x}const f=c.shape.length;Et("max",d,f);const[m,g]=Rt(c.shape,d),y=U(g),b=e.makeOutput(m,o.dtype);if(U(c.shape)!==0){const x=e.dataIdMap.get(b.dataId).id;TE(u,dt[o.dtype],y,x)}if(p&&e.disposeData(l.dataId),a){const x=wt(b.shape,h);b.shape=x}return b}const Ade={kernelName:bl,backendName:"wasm",setupFunc:_de,kernelFunc:Ede};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dde=nn(xl);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let $E;function Rde(n){$E=n.wasm.cwrap(wl,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Ode(n){const{inputs:e,attrs:t,backend:s}=n,r=e.x,a=s.dataIdMap.get(r.dataId).id;_(r.dtype==="float32",()=>`Error in MaxPool: only float32 input is supported. Got ${r.dtype}.`);const{filterSize:o,strides:i,pad:u,dimRoundingMode:c}=t,l=Mn(r.shape,o,i,1,u,c),d=l.filterHeight,h=l.filterWidth,p=l.padInfo.top,f=l.padInfo.right,m=l.padInfo.bottom,g=l.padInfo.left,y=l.dilationHeight,b=l.dilationWidth,x=l.strideHeight,w=l.strideWidth,v=l.inChannels,S=l.outChannels;if(l.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${l.dataFormat}'. Please use 'channelsLast'.`);const N=s.makeOutput(l.outShape,"float32"),$=s.dataIdMap.get(N.dataId).id;return $E(a,r.shape[0],r.shape[1],r.shape[2],d,h,p,f,m,g,y,b,x,w,v,S,$),N}const Fde={kernelName:wl,backendName:"wasm",setupFunc:Rde,kernelFunc:Ode};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let _E;function Pde(n){_E=n.wasm.cwrap("MaxPool3D",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Lde(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:a,strides:o,pad:i,dimRoundingMode:u,dataFormat:c}=s,l=Bs(r.shape,a,o,1,i,u,c),d=t.makeOutput(l.outShape,r.dtype);return _E(t.dataIdMap.get(r.dataId).id,t.dataIdMap.get(d.dataId).id,l.batchSize,l.inChannels,l.inDepth,l.inHeight,l.inWidth,l.outDepth,l.outHeight,l.outWidth,l.strideDepth,l.strideHeight,l.strideWidth,l.dilationDepth,l.dilationHeight,l.dilationWidth,l.effectiveFilterDepth,l.effectiveFilterHeight,l.effectiveFilterWidth,l.padInfo.front,l.padInfo.top,l.padInfo.left),d}const Mde={kernelName:Ih,backendName:"wasm",setupFunc:Pde,kernelFunc:Lde};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let EE;function Bde(n){EE=n.wasm.cwrap("MaxPool3DGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function zde(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:a}=e,{filterSize:o,strides:i,pad:u,dimRoundingMode:c}=s,l=Bs(a.shape,o,i,1,u,c),d=t.makeOutput(a.shape,a.dtype);return EE(t.dataIdMap.get(a.dataId).id,t.dataIdMap.get(r.dataId).id,t.dataIdMap.get(d.dataId).id,l.batchSize,l.inChannels,l.inDepth,l.inHeight,l.inWidth,l.outDepth,l.outHeight,l.outWidth,l.strideDepth,l.strideHeight,l.strideWidth,l.dilationDepth,l.dilationHeight,l.dilationWidth,l.effectiveFilterDepth,l.effectiveFilterHeight,l.effectiveFilterWidth,l.padInfo.front,l.padInfo.top,l.padInfo.left),d}const Vde={kernelName:Rm,backendName:"wasm",setupFunc:Bde,kernelFunc:zde};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let AE;function Wde(n){AE=n.wasm.cwrap("MaxPoolGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Ude(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:a}=e,{filterSize:o,strides:i,pad:u,dimRoundingMode:c}=s,l=Mn(a.shape,o,i,1,u,c),d=t.makeOutput(a.shape,a.dtype);return AE(t.dataIdMap.get(a.dataId).id,t.dataIdMap.get(r.dataId).id,t.dataIdMap.get(d.dataId).id,l.batchSize,l.inChannels,l.inHeight,l.inWidth,l.outHeight,l.outWidth,l.strideHeight,l.strideWidth,l.dilationHeight,l.dilationWidth,l.effectiveFilterHeight,l.effectiveFilterWidth,l.padInfo.top,l.padInfo.left),d}const Gde={kernelName:Dm,backendName:"wasm",setupFunc:Wde,kernelFunc:Ude};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let DE;function Hde(n){DE=n.wasm.cwrap("MaxPoolWithArgmax",null,["number","number","number","number","boolean","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function jde(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:a,strides:o,pad:i,includeBatchInIndex:u}=s;_(r.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`);const c=[1,1];_(wn(o,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);const l=Mn(r.shape,a,o,[1,1],i),d=t.makeOutput(l.outShape,r.dtype),h=t.makeOutput(l.outShape,"int32");return DE(t.dataIdMap.get(r.dataId).id,t.dataIdMap.get(d.dataId).id,t.dataIdMap.get(h.dataId).id,dt[r.dtype],u,l.batchSize,l.inChannels,l.inHeight,l.inWidth,l.outHeight,l.outWidth,l.strideHeight,l.strideWidth,l.dilationHeight,l.dilationWidth,l.effectiveFilterHeight,l.effectiveFilterWidth,l.padInfo.top,l.padInfo.left),[d,h]}const qde={kernelName:Om,backendName:"wasm",setupFunc:Hde,kernelFunc:jde};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let RE;function Kde(n){RE=n.wasm.cwrap(vl,null,["number, number, number"])}function Xde(n){const{backend:e,inputs:t,attrs:s}=n,{axis:r,keepDims:a}=s,{x:o}=t,i=e.dataIdMap.get(o.dataId).id;let u=i,c=o;const{transposed:l,axes:d,originalAxes:h,inputWasTransposed:p}=Co(o,r,e);let f=d;if(p){const w=e.dataIdMap.get(l.dataId).id;w!==i&&(c=l,u=w,f=Ct(f.length,c.shape.length))}Et("mean",f,c.shape.length);const[m,g]=Rt(c.shape,f),y=U(g);let b=c;c.dtype!=="float32"&&(b=To({backend:e,inputs:{x:c},attrs:{dtype:"float32"}}),u=e.dataIdMap.get(b.dataId).id);const x=e.makeOutput(m,"float32");if(U(c.shape)!==0){const w=e.dataIdMap.get(x.dataId).id;RE(u,y,w)}if(p&&e.disposeData(l.dataId),a){const w=wt(x.shape,h);x.shape=w}return c.dtype!=="float32"&&e.disposeData(b.dataId),x}const Yde={kernelName:vl,backendName:"wasm",setupFunc:Kde,kernelFunc:Xde};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let OE;function Zde(n){OE=n.wasm.cwrap(Il,null,["number","number","number","number"])}function Jde(n){const{backend:e,inputs:t,attrs:s}=n,{axis:r,keepDims:a}=s,{x:o}=t,i=e.dataIdMap.get(o.dataId).id;let u=i,c=o;const{transposed:l,axes:d,originalAxes:h,inputWasTransposed:p}=Co(o,r,e);if(p){const x=e.dataIdMap.get(l.dataId).id;x!==i&&(c=l,u=x)}const f=c.shape.length;Et("min",d,f);const[m,g]=Rt(c.shape,d),y=U(g),b=e.makeOutput(m,c.dtype);if(U(c.shape)!==0){const x=e.dataIdMap.get(b.dataId).id;OE(u,dt[o.dtype],y,x)}if(p&&e.disposeData(l.dataId),a){const x=wt(b.shape,h);b.shape=x}return b}const Qde={kernelName:Il,backendName:"wasm",setupFunc:Zde,kernelFunc:Jde};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ehe=nn(Sl);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var zb;(function(n){n[n.reflect=0]="reflect",n[n.symmetric=1]="symmetric"})(zb||(zb={}));let FE;function the(n){FE=n.wasm.cwrap(kl,null,["number","array","number","number","array","array","number","number"])}function nhe(n){const{inputs:{x:e},backend:t,attrs:{paddings:s,mode:r}}=n,a=s.map((f,m)=>f[0]+e.shape[m]+f[1]),o=t.dataIdMap.get(e.dataId).id,i=t.makeOutput(a,e.dtype),u=t.dataIdMap.get(i.dataId).id,c=new Uint8Array(new Int32Array(e.shape).buffer),l=s.map(f=>f[0]),d=s.map(f=>f[1]),h=new Uint8Array(new Int32Array(l).buffer),p=new Uint8Array(new Int32Array(d).buffer);return FE(o,c,e.shape.length,dt[e.dtype],h,p,zb[r],u),i}const she={kernelName:kl,backendName:"wasm",kernelFunc:nhe,setupFunc:the};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let PE;function rhe(n){PE=n.wasm.cwrap(Kl,null,["number","number","number","number"])}function LE(n){const{backend:e,inputs:{logits:t},attrs:{dim:s}}=n,r=e.dataIdMap.get(t.dataId).id,a=e.makeOutput(t.shape,t.dtype),o=e.dataIdMap.get(a.dataId).id,i=t.shape[s],u=U(t.shape)/i;return U(a.shape)===0||PE(r,o,i,u),a}const ahe={kernelName:Kl,backendName:"wasm",setupFunc:rhe,kernelFunc:LE};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let ME;function ohe(n){ME=n.wasm.cwrap(Sh,null,["number","number","number","number","number","number"])}function ihe(n){const{inputs:e,backend:t,attrs:s}=n,{logits:r}=e,{numSamples:a,seed:o,normalized:i}=s;if(r.dtype!=="float32")throw new Error(`Tensor logits must have dtype float32, got ${r.dtype}`);const u=i?r:LE({inputs:{logits:r},backend:t,attrs:{dim:r.shape.length-1}}),[c,l]=u.shape,d=t.makeOutput([c,a],"int32");return ME(t.dataIdMap.get(u.dataId).id,c,l,a,o,t.dataIdMap.get(d.dataId).id),i||t.disposeData(u.dataId),d}const uhe={kernelName:Sh,backendName:"wasm",setupFunc:ohe,kernelFunc:ihe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lhe=nn(Nl);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const che=nn(Cl);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dhe=rt(kh);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V0(n,e){const t=new Int32Array(n.wasm.HEAPU8.buffer,e,4),s=t[0],r=t[1],a=t[2],o=t[3];return n.wasm._free(e),{pSelectedIndices:s,selectedSize:r,pSelectedScores:a,pValidOutputs:o}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let BE;function hhe(n){BE=n.wasm.cwrap(Ch,"number",["number","number","number","number","number"])}function phe(n){const{backend:e,inputs:t,attrs:s}=n,{iouThreshold:r,maxOutputSize:a,scoreThreshold:o}=s,{boxes:i,scores:u}=t,c=e.dataIdMap.get(i.dataId).id,l=e.dataIdMap.get(u.dataId).id,d=BE(c,l,a,r,o),{pSelectedIndices:h,selectedSize:p,pSelectedScores:f,pValidOutputs:m}=V0(e,d);return e.wasm._free(f),e.wasm._free(m),e.makeOutput([p],"int32",h)}const fhe={kernelName:Ch,backendName:"wasm",setupFunc:hhe,kernelFunc:phe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let zE;function mhe(n){zE=n.wasm.cwrap(Th,"number",["number","number","number","number","number","bool"])}function ghe(n){const{backend:e,inputs:t,attrs:s}=n,{iouThreshold:r,maxOutputSize:a,scoreThreshold:o,padToMaxOutputSize:i}=s,{boxes:u,scores:c}=t,l=e.dataIdMap.get(u.dataId).id,d=e.dataIdMap.get(c.dataId).id,h=zE(l,d,a,r,o,i),{pSelectedIndices:p,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=V0(e,h);e.wasm._free(m);const y=e.makeOutput([f],"int32",p),b=e.makeOutput([],"int32",g);return[y,b]}const yhe={kernelName:Th,backendName:"wasm",setupFunc:mhe,kernelFunc:ghe};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let VE;function bhe(n){VE=n.wasm.cwrap($h,"number",["number","number","number","number","number","number"])}function xhe(n){const{backend:e,inputs:t,attrs:s}=n,{iouThreshold:r,maxOutputSize:a,scoreThreshold:o,softNmsSigma:i}=s,{boxes:u,scores:c}=t,l=e.dataIdMap.get(u.dataId).id,d=e.dataIdMap.get(c.dataId).id,h=VE(l,d,a,r,o,i),{pSelectedIndices:p,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=V0(e,h);e.wasm._free(g);const y=e.makeOutput([f],"int32",p),b=e.makeOutput([f],"float32",m);return[y,b]}const whe={kernelName:$h,backendName:"wasm",setupFunc:bhe,kernelFunc:xhe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vhe=!1,Ihe=nn(Nh,vhe,"bool");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let WE;function She(n){WE=n.wasm.cwrap(Tl,null,["number","number","number","number","number"])}function khe(n){const{inputs:e,backend:t,attrs:s}=n,{indices:r}=e,{dtype:a,depth:o,onValue:i,offValue:u}=s,c=t.makeOutput([...r.shape,o],a),l=t.dataIdMap.get(c.dataId).id,h=t.dataIdMap.get(r.dataId).id;return WE(h,o,i,u,l),c}const Nhe={kernelName:Tl,backendName:"wasm",setupFunc:She,kernelFunc:khe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Che(n){const{inputs:{x:e},backend:t}=n,s=t.makeOutput(e.shape,e.dtype);return t.typedArrayFromHeap(s).fill(1),s}const The={kernelName:_h,backendName:"wasm",kernelFunc:Che};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $he(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s;if(e.length===1)return Bb({inputs:{input:e[0]},backend:t,attrs:{dim:r}});const a=e[0].shape,o=e[0].dtype;e.forEach(l=>{us(a,l.shape,"All tensors passed to stack must have matching shapes"),_(o===l.dtype,()=>"All tensors passed to stack must have matching dtypes")});const i=[],u=e.map(l=>{const d=Bb({inputs:{input:l},backend:t,attrs:{dim:r}});return i.push(d),d}),c=Q_({inputs:u,backend:t,attrs:{axis:r}});return i.forEach(l=>t.disposeData(l.dataId)),c}const _he={kernelName:Eh,backendName:"wasm",kernelFunc:$he};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let UE;function Ehe(n){UE=n.wasm.cwrap($l,null,["number","array","number","number","array","array","number","number"])}function Ahe(n){const{inputs:{x:e},backend:t,attrs:{paddings:s,constantValue:r}}=n,a=s.map((m,g)=>m[0]+e.shape[g]+m[1]);if(U(e.shape)===0)return gE({backend:t,attrs:{shape:a,value:r,dtype:e.dtype}});const o=t.dataIdMap.get(e.dataId).id,i=t.makeOutput(a,e.dtype),c=t.dataIdMap.get(i.dataId).id,l=new Uint8Array(new Int32Array(e.shape).buffer),d=s.map(m=>m[0]),h=s.map(m=>m[1]),p=new Uint8Array(new Int32Array(d).buffer),f=new Uint8Array(new Int32Array(h).buffer);return UE(o,l,e.shape.length,dt[e.dtype],p,f,r,c),i}const GE={kernelName:$l,backendName:"wasm",kernelFunc:Ahe,setupFunc:Ehe};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dhe=nn(_l);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let HE;function Rhe(n){HE=n.wasm.cwrap(El,null,["number","number","number"])}function Ohe(n){const{inputs:e,backend:t}=n,{x:s,alpha:r}=e,a=t.dataIdMap.get(s.dataId).id,o=t.dataIdMap.get(r.dataId).id;let i=a;const u=s;let c=u;u.dtype!=="float32"&&(c=To({backend:t,inputs:{x:s},attrs:{dtype:"float32"}}),i=t.dataIdMap.get(c.dataId).id);const l=t.makeOutput(s.shape,"float32"),d=t.dataIdMap.get(l.dataId).id;return HE(i,o,d),u.dtype!=="float32"&&t.disposeData(c.dataId),l}const Fhe={kernelName:El,backendName:"wasm",setupFunc:Rhe,kernelFunc:Ohe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let jE;function Phe(n){jE=n.wasm.cwrap(Al,null,["number","number","number","number"])}function Lhe(n){const{backend:e,inputs:t,attrs:s}=n,{axis:r,keepDims:a}=s,{x:o}=t,i=e.dataIdMap.get(o.dataId).id;let u=i,c=o;const{transposed:l,axes:d,originalAxes:h,inputWasTransposed:p}=Co(o,r,e);let f=d;if(p){const x=e.dataIdMap.get(l.dataId).id;x!==i&&(c=l,u=x,f=Ct(f.length,c.shape.length))}Et("prod",f,c.shape.length);const[m,g]=Rt(c.shape,f),y=U(g),b=e.makeOutput(m,c.dtype);if(U(c.shape)!==0){const x=e.dataIdMap.get(b.dataId).id;jE(u,y,dt[b.dtype],x)}if(p&&e.disposeData(l.dataId),a){const x=wt(b.shape,h);b.shape=x}return b}const Mhe={kernelName:Al,backendName:"wasm",setupFunc:Phe,kernelFunc:Lhe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bhe=n=>{const{backend:e,attrs:t}=n,{start:s,stop:r,step:a,dtype:o}=t,i=I0(s,r,a,o),u=e.makeOutput([i.length],o);return e.typedArrayFromHeap(u).set(i),u},zhe={kernelName:Fm,backendName:"wasm",kernelFunc:Bhe};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vhe=nn(tl);/**
 * @license
 * Copyright 2022 The TensorFlow Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Whe=rt(Dl);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uhe=rt(Rl);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ghe=rt(Pl);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let qE;function Hhe(n){qE=n.wasm.cwrap(Fl,null,["number","number","number","number","number","number","number","number","number","number"])}function jhe(n){const{backend:e,inputs:t,attrs:s}=n,{images:r}=t,{alignCorners:a,halfPixelCenters:o,size:i}=s,[u,c]=i,[l,d,h,p]=r.shape,f=[l,u,c,p];let m=e.dataIdMap.get(r.dataId),g;m.dtype!=="float32"&&(g=To({backend:e,inputs:{x:r},attrs:{dtype:"float32"}}),m=e.dataIdMap.get(g.dataId));const y=m.id,b=e.makeOutput(f,"float32");if(U(r.shape)===0)return b;const x=e.dataIdMap.get(b.dataId).id;return qE(y,l,d,h,p,u,c,a?1:0,o?1:0,x),g!=null&&e.disposeData(g.dataId),b}const qhe={kernelName:Fl,backendName:"wasm",setupFunc:Hhe,kernelFunc:jhe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let KE;function Khe(n){KE=n.wasm.cwrap(Rh,null,["number","number","number","array","array","boolean"])}function Xhe(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:a}=e,{alignCorners:o}=s,i=t.makeOutput(r.shape,"float32");let u=t.dataIdMap.get(r.dataId),c;return u.dtype!=="float32"&&(c=To({backend:t,inputs:{x:r},attrs:{dtype:"float32"}}),u=t.dataIdMap.get(c.dataId)),KE(t.dataIdMap.get(r.dataId).id,t.dataIdMap.get(a.dataId).id,t.dataIdMap.get(i.dataId).id,new Uint8Array(new Int32Array(r.shape).buffer),new Uint8Array(new Int32Array(a.shape).buffer),o),c!=null&&t.disposeData(c.dataId),i}const Yhe={kernelName:Rh,backendName:"wasm",setupFunc:Khe,kernelFunc:Xhe};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let XE;function Zhe(n){XE=n.wasm.cwrap(Ol,null,["number","number","number","number","number","number","number","number","number","number"])}function Jhe(n){const{backend:e,inputs:t,attrs:s}=n,{images:r}=t,{alignCorners:a,halfPixelCenters:o,size:i}=s,[u,c]=i,[l,d,h,p]=r.shape,f=[l,u,c,p],m=e.makeOutput(f,"float32");if(U(r.shape)===0)return m;let g=e.dataIdMap.get(r.dataId),y;g.dtype!=="float32"&&(y=To({backend:e,inputs:{x:r},attrs:{dtype:"float32"}}),g=e.dataIdMap.get(y.dataId));const b=g.id,x=e.dataIdMap.get(m.dataId).id;return XE(b,l,d,h,p,u,c,a?1:0,o?1:0,x),y!=null&&e.disposeData(y.dataId),m}const Qhe={kernelName:Ol,backendName:"wasm",setupFunc:Zhe,kernelFunc:Jhe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let YE;function epe(n){YE=n.wasm.cwrap(Dh,null,["number","number","number","array","array","boolean"])}function tpe(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:a}=e,{alignCorners:o}=s,i=t.makeOutput(r.shape,"float32");let u=t.dataIdMap.get(r.dataId),c;return u.dtype!=="float32"&&(c=To({backend:t,inputs:{x:r},attrs:{dtype:"float32"}}),u=t.dataIdMap.get(c.dataId)),YE(t.dataIdMap.get(r.dataId).id,t.dataIdMap.get(a.dataId).id,t.dataIdMap.get(i.dataId).id,new Uint8Array(new Int32Array(r.shape).buffer),new Uint8Array(new Int32Array(a.shape).buffer),o),c!=null&&t.disposeData(c.dataId),i}const npe={kernelName:Dh,backendName:"wasm",setupFunc:epe,kernelFunc:tpe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let ZE;function spe(n){ZE=n.wasm.cwrap(Ll,null,["number","array","number","array","number","number"])}function rpe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dims:a}=s,o=ze(a,r.shape);if(r.shape.length===0)return jg({inputs:{x:r},backend:t});const i=t.makeOutput(r.shape,r.dtype),u=t.dataIdMap.get(r.dataId).id,c=t.dataIdMap.get(i.dataId).id,l=new Uint8Array(new Int32Array(o).buffer),d=new Uint8Array(new Int32Array(r.shape).buffer);ZE(u,l,o.length,d,r.shape.length,c);const h=as({inputs:{x:i},attrs:{shape:r.shape},backend:t});return t.disposeData(i.dataId),h}const ape={kernelName:Ll,backendName:"wasm",kernelFunc:rpe,setupFunc:spe};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let JE;function ope(n){JE=n.wasm.cwrap(Kh,null,["number","number","number","number","number","number","number","number","array","number","number"])}function ipe(n){const{inputs:e,backend:t,attrs:s}=n,{image:r}=e,{radians:a,fillValue:o,center:i}=s,u=t.makeOutput(r.shape,r.dtype),c=t.dataIdMap.get(r.dataId).id,l=t.dataIdMap.get(u.dataId).id,[d,h,p,f]=r.shape,[m,g]=Ig(i,h,p),y=o===0,b=255,x=typeof o=="number"?[o,o,o,y?0:b]:[...o,b],w=new Uint8Array(new Int32Array(x).buffer);return JE(c,d,h,p,f,a,m,g,w,x.length,l),u}const upe={kernelName:Kh,backendName:"wasm",kernelFunc:ipe,setupFunc:ope};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lpe=rt(Ml);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cpe=rt(Bl);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let QE;function dpe(n){QE=n.wasm.cwrap(Oh,null,["number","number","number","number","number","number","array","number","number"])}function hpe(n){const{backend:e,inputs:t,attrs:s}=n,{indices:r,updates:a}=t,{shape:o}=s,i=e.makeOutput(o,a.dtype);if(U(o)===0)return i;const{sliceRank:u,numUpdates:c,sliceSize:l,strides:d,outputSize:h}=ta(a,r,o),f=e.dataIdMap.get(r.dataId).id,g=e.dataIdMap.get(a.dataId).id,y=new Uint8Array(new Int32Array(d).buffer),b=e.dataIdMap.get(i.dataId).id;return QE(f,g,dt[a.dtype],u,c,l,y,h,b),i}const ppe={kernelName:Oh,backendName:"wasm",setupFunc:dpe,kernelFunc:hpe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let eA;function fpe(n){eA=n.wasm.cwrap(Ph,null,["number","number","number","number","number","number","bool","number"])}function mpe(n){const{inputs:e,backend:t,attrs:s}=n,{sortedSequence:r,values:a}=e,{side:o}=s;if(r.dtype!==a.dtype)throw new Error(`SearchSorted error: sorted_sequence must have the same dtype as values. Got ${r.dtype} and ${a.dtype}`);const i=t.makeOutput(a.shape,"int32");function u(c){return t.dataIdMap.get(c.dataId).id}return eA(u(r),u(a),r.shape[0],r.shape[1],a.shape[1],dt[r.dtype],o==="left",u(i)),i}const gpe={kernelName:Ph,backendName:"wasm",setupFunc:fpe,kernelFunc:mpe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let tA;function ype(n){tA=n.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}function bpe(n){const{inputs:e,backend:t}=n,{condition:s,t:r,e:a}=e,o=t.dataIdMap.get(s.dataId).id,i=t.dataIdMap.get(r.dataId).id,u=t.dataIdMap.get(a.dataId).id,c=t.makeOutput(r.shape,r.dtype),l=t.dataIdMap.get(c.dataId).id,d=s.shape.length,h=r.shape.length,p=d===0||d>1||h===1?1:U(r.shape.slice(1));return tA(o,i,u,p,l),c}const xpe={kernelName:Lh,backendName:"wasm",kernelFunc:bpe,setupFunc:ype};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wpe=rt(zl);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let nA;function vpe(n){nA=n.wasm.cwrap(Gl,null,["number","number"])}function Ipe(n){const{backend:e,inputs:{x:t}}=n,s=e.dataIdMap.get(t.dataId).id,r=e.makeOutput(t.shape,t.dtype),a=e.dataIdMap.get(r.dataId).id;return U(r.shape)===0||nA(s,a),r}const Spe={kernelName:"Sigmoid",backendName:"wasm",setupFunc:vpe,kernelFunc:Ipe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kpe=rt(Ul);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Npe=rt(Vl);/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cpe=rt(Wl);/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tpe=rt(Hl);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $pe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:a,paddings:o}=s,i=U(a),u=[[0,0]];u.push(...o);for(let S=1+a.length;S<r.shape.length;++S)u.push([0,0]);const c=GE.kernelFunc({inputs:{x:r},backend:t,attrs:{paddings:u,constantValue:0}}),l=Si(c.shape,a,i,!1),d=ki(l.length,a.length,!1),h=Ni(c.shape,a,i,!1),m=as({inputs:{x:c},backend:t,attrs:{shape:l}}),b=po({inputs:{x:m},backend:t,attrs:{perm:d}}),v=as({inputs:{x:b},backend:t,attrs:{shape:h}});return t.disposeData(c.dataId),t.disposeData(m.dataId),t.disposeData(b.dataId),v}const _pe={kernelName:Bh,backendName:"wasm",kernelFunc:$pe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let sA;function Epe(n){sA=n.wasm.cwrap("SparseFillEmptyRows","number",["number","number","number","number","number","number","number","number","number","number","number","number"])}function Ape(n){const{backend:e,inputs:t}=n,{indices:s,values:r,denseShape:a,defaultValue:o}=t,i=s.shape[0],u=s.shape[1],c=e.readSync(a.dataId)[0],l=[i+c,u],d=e.dataIdMap.get(s.dataId).id,h=e.dataIdMap.get(r.dataId).id,p=e.dataIdMap.get(o.dataId).id,f=e.makeOutput(l,s.dtype),m=e.dataIdMap.get(f.dataId).id,g=e.makeOutput(l.slice(0,1),r.dtype),y=e.dataIdMap.get(g.dataId).id,b=e.makeOutput([c],"bool"),x=e.dataIdMap.get(b.dataId).id,w=e.makeOutput([i],s.dtype),v=e.dataIdMap.get(w.dataId).id,S=e.makeOutput([4],"int32"),N=e.dataIdMap.get(S.dataId).id,$=sA(d,h,dt[r.dtype],i,c,u,p,m,y,x,v,N),T=e.readSync(S.dataId);let C;switch(T[0]){case 1:{C=Pw(T[1]);break}case 2:{C=Lw(T[1],T[2]);break}case 3:C=Mw(T[1],T[2],T[3]);break;default:C=""}if(e.disposeData(S.dataId),C)throw e.disposeData(f.dataId),e.disposeData(g.dataId),e.disposeData(b.dataId),e.disposeData(w.dataId),new Error(C);let k=f,A=g;return $!==l[0]&&(k=li({inputs:{x:f},attrs:{begin:0,size:[$,u]},backend:e}),A=li({inputs:{x:g},attrs:{begin:0,size:$},backend:e}),e.disposeData(f.dataId),e.disposeData(g.dataId)),[k,A,b,w]}const Dpe={kernelName:Pm,backendName:"wasm",setupFunc:Epe,kernelFunc:Ape};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let rA;function Rpe(n){rA=n.wasm.cwrap(Vh,null,["number","number","number","number","number","number","number"])}function Ope(n){const{backend:e,inputs:t}=n,{inputIndices:s,inputShape:r,newShape:a}=t;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${r.shape}`);if(a.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const o=e.dataIdMap.get(s.dataId).id,i=e.dataIdMap.get(r.dataId).id,u=e.dataIdMap.get(a.dataId).id,c=s.shape[0],l=U(a.shape),d=e.makeOutput([c,l],s.dtype),h=e.dataIdMap.get(d.dataId).id,p=e.makeOutput([l],a.dtype),f=e.dataIdMap.get(p.dataId).id,m=e.makeOutput([3],"int32"),g=e.dataIdMap.get(m.dataId).id;rA(o,i,u,c,h,f,g);const y=e.readSync(m.dataId);let b;switch(y[0]){case 0:{b=Bw(y[1],y[2]);break}case 1:{b=zw(y[1],y[2]);break}case 2:b=Vw();break;case 3:{const x=Array.from(e.readSync(r.dataId)),w=Array.from(e.readSync(p.dataId));b=Ww(x,w);break}case 4:{const x=Array.from(e.readSync(r.dataId)),w=Array.from(e.readSync(p.dataId));b=Uw(x,w);break}default:b=""}if(e.disposeData(m.dataId),b)throw e.disposeData(d.dataId),e.disposeData(p.dataId),new Error(b);return[d,p]}const Fpe={kernelName:Vh,backendName:"wasm",setupFunc:Rpe,kernelFunc:Ope};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let aA;function oA(n){aA=n.wasm.cwrap("SparseSegmentReduction",null,["number","number","number","number","number","number","number","number","number"])}function iA(n,e){const{backend:t,inputs:s}=n,{data:r,indices:a,segmentIds:o}=s,i=a.shape[0],u=t.readSync(o.dataId,i-1,i)[0],l=i>0?u+1:0;if(l<0)throw new Error(Zc());const d=r.shape.slice();d[0]=l;const h=t.dataIdMap.get(r.dataId).id,p=t.dataIdMap.get(a.dataId).id,f=t.dataIdMap.get(o.dataId).id,m=t.makeOutput(d,r.dtype),g=t.dataIdMap.get(m.dataId).id,y=t.makeOutput([4],"int32"),b=t.dataIdMap.get(y.dataId).id;aA(h,dt[r.dtype],r.shape[0],p,f,g,b,e,0);const x=t.readSync(y.dataId);let w;switch(x[0]){case 0:{w=Zc();break}case 1:{w=Gw();break}case 2:w=Hw(x[1],x[2]);break;case 3:w=jw(x[1],x[2],x[3]);break;default:w=""}if(t.disposeData(y.dataId),w)throw t.disposeData(m.dataId),new Error(w);return m}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ppe(n){return iA(n,!0)}const Lpe={kernelName:Lm,backendName:"wasm",setupFunc:oA,kernelFunc:Ppe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mpe(n){return iA(n,!1)}const Bpe={kernelName:Mm,backendName:"wasm",setupFunc:oA,kernelFunc:Mpe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let uA;function zpe(n){uA=n.wasm.cwrap(Wh,null,["number","number","number","number","number","number","number","number","array","number","number"])}function Vpe(n){const{backend:e,inputs:t,attrs:s}=n,{sparseIndices:r,sparseValues:a,defaultValue:o}=t,{outputShape:i}=s,u=e.makeOutput(i,o.dtype);if(U(i)===0)return u;const{sliceRank:c,numUpdates:l,sliceSize:d,strides:h,outputSize:p}=ta(a,r,i),f=e.dataIdMap.get(r.dataId).id,m=e.dataIdMap.get(a.dataId).id,g=e.dataIdMap.get(o.dataId).id,y=new Uint8Array(new Int32Array(h).buffer),b=e.dataIdMap.get(u.dataId).id;return uA(f,m,a.shape.length,g,dt[o.dtype],c,l,d,y,p,b),u}const Wpe={kernelName:Wh,backendName:"wasm",setupFunc:zpe,kernelFunc:Vpe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Upe(n){const{inputs:e,attrs:t,backend:s}=n,{x:r}=e,{numOrSizeSplits:a,axis:o}=t,i=ze(o,r.shape)[0],u=Tg(r,a,i),c=new Array(r.shape.length).fill(0),l=r.shape.slice();return u.map(d=>{const h=[...l];h[i]=d;const p=li({inputs:{x:r},attrs:{begin:c,size:h},backend:s});return c[i]+=d,p})}const Gpe={kernelName:zh,backendName:"wasm",kernelFunc:Upe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hpe=rt(jl);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jpe=rt(Bm);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qpe=nn(Xl);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let lA;function Kpe(n){lA=n.wasm.cwrap(bi,null,["number","number","number","number"])}function Xpe(n){const{backend:e,inputs:t,attrs:s}=n,{alpha:r}=s,{x:a}=t,o=e.dataIdMap.get(a.dataId).id,i=e.makeOutput(a.shape,a.dtype),u=e.dataIdMap.get(i.dataId).id;return lA(o,r,dt[a.dtype],u),i}const Ype={kernelName:bi,backendName:"wasm",setupFunc:Kpe,kernelFunc:Xpe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let cA;function Zpe(n){cA=n.wasm.cwrap(Uh,null,["number","array","number","array","array","array","array","array","number","number"])}function Jpe(n){const{backend:e,inputs:t,attrs:s}=n,{x:r}=t,{begin:a,end:o,strides:i,beginMask:u,endMask:c,ellipsisMask:l,newAxisMask:d,shrinkAxisMask:h}=s,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:w}=xg(r.shape,a,o,i,u,c,l,d,h);let v;if(m)v=as({inputs:{x:r},backend:e,attrs:{shape:f}});else if(g||y){_(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);const S=gg(b,x,w),N=li({inputs:{x:r},backend:e,attrs:{begin:b,size:S}});v=as({inputs:{x:N},backend:e,attrs:{shape:f}}),e.disposeData(N.dataId)}else{const S=e.makeOutput(p,"float32"),N=e.dataIdMap.get(r.dataId).id,$=new Uint8Array(new Int32Array(ve(r.shape)).buffer),T=new Uint8Array(new Int32Array(b).buffer),C=new Uint8Array(new Int32Array(x).buffer),k=new Uint8Array(new Int32Array(w).buffer),A=new Uint8Array(new Int32Array(p).buffer),D=new Uint8Array(new Int32Array(ve(p)).buffer),R=e.dataIdMap.get(S.dataId).id;cA(N,$,r.shape.length,T,C,k,A,D,p.length,R),v=as({inputs:{x:S},backend:e,attrs:{shape:f}}),e.disposeData(S.dataId)}return v}const Qpe={kernelName:Uh,backendName:"wasm",setupFunc:Zpe,kernelFunc:Jpe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function efe(n){const{backend:e,inputs:t,attrs:s}=n,{data:r,dataSplits:a}=t,{separator:o,nGramWidths:i,leftPad:u,rightPad:c,padWidth:l,preserveShortSequences:d}=s,h=e.readSync(r.dataId),p=e.readSync(a.dataId),[f,m]=k0(h,p,o,i,u,c,l,d),g=e.makeOutput([f.length],"string"),y=e.dataIdMap.get(g.dataId);y.stringBytes=f;const b=e.makeOutput(a.shape,"int32");return e.typedArrayFromHeap(b).set(m),[g,b]}const tfe={kernelName:Vm,backendName:"wasm",kernelFunc:efe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nfe(n){const{backend:e,inputs:t,attrs:s}=n,{input:r,delimiter:a}=t,{skipEmpty:o}=s,i=e.readSync(r.dataId),u=e.readSync(a.dataId),[c,l,d]=N0(i,u[0],o),h=l.length,p=e.makeOutput([h,2],"int32");e.typedArrayFromHeap(p).set(c);const m=e.makeOutput([h],"string"),g=e.dataIdMap.get(m.dataId);g.stringBytes=l;const y=e.makeOutput([2],"int32");return e.typedArrayFromHeap(y).set(d),[p,m,y]}const sfe={kernelName:Wm,backendName:"wasm",kernelFunc:nfe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rfe(n){const{backend:e,inputs:t,attrs:s}=n,{input:r}=t,{numBuckets:a}=s,o=e.readSync(r.dataId),i=C0(o,a),u=e.makeOutput(r.shape,"int32");return e.typedArrayFromHeap(u).set(i),u}const afe={kernelName:Um,backendName:"wasm",kernelFunc:rfe};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ofe=nn(Yl);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let dA;function ife(n){dA=n.wasm.cwrap(ql,null,["number","number","number","number"])}function ufe(n){const{backend:e,inputs:t,attrs:s}=n,{axis:r,keepDims:a}=s,{x:o}=t,i=e.dataIdMap.get(o.dataId).id;let u=i,c=o;const{transposed:l,axes:d,originalAxes:h,inputWasTransposed:p}=Co(o,r,e);let f=d;if(p){const x=e.dataIdMap.get(l.dataId).id;x!==i&&(c=l,u=x,f=Ct(f.length,c.shape.length))}Et("sum",f,c.shape.length);const[m,g]=Rt(c.shape,f),y=U(g),b=e.makeOutput(m,c.dtype);if(U(c.shape)!==0){const x=e.dataIdMap.get(b.dataId).id;dA(u,y,dt[b.dtype],x)}if(p&&e.disposeData(l.dataId),a){const x=wt(b.shape,h);b.shape=x}return b}const lfe={kernelName:ql,backendName:"wasm",setupFunc:ife,kernelFunc:ufe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cfe=rt(Zl);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dfe=rt(Jl);/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let hA;function hfe(n){hA=n.wasm.cwrap(Fh,null,["number","number","number","number","number","number","array","number","number","number"])}function pfe(n){const{backend:e,inputs:t,attrs:s}=n,{tensor:r,indices:a,updates:o}=t,i=e.makeOutput(r.shape,r.dtype);if(U(r.shape)===0)return i;const{sliceRank:u,numUpdates:c,sliceSize:l,strides:d,outputSize:h}=ta(o,a,r.shape),f=e.dataIdMap.get(a.dataId).id,g=e.dataIdMap.get(o.dataId).id,b=e.dataIdMap.get(r.dataId).id,x=new Uint8Array(new Int32Array(d).buffer),w=e.dataIdMap.get(i.dataId).id;return hA(f,g,dt[o.dtype],u,c,l,x,h,w,b),i}const ffe={kernelName:Fh,backendName:"wasm",setupFunc:hfe,kernelFunc:pfe};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let pA;function mfe(n){pA=n.wasm.cwrap(yi,null,["number","array","number","array","number","number"])}function gfe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,a=t.dataIdMap.get(r.dataId).id,{reps:o}=s,i=new Array(r.shape.length);for(let h=0;h<i.length;h++)i[h]=r.shape[h]*o[h];const u=new Uint8Array(new Int32Array(r.shape).buffer),c=new Uint8Array(new Int32Array(i).buffer),l=t.makeOutput(i,r.dtype),d=t.dataIdMap.get(l.dataId).id;return pA(a,u,r.shape.length,c,i.length,dt[l.dtype],d),l}const yfe={kernelName:yi,backendName:"wasm",setupFunc:mfe,kernelFunc:gfe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let fA;function bfe(n){fA=n.wasm.cwrap(Gh,null,["number","array","number","number","number","bool","number","number"])}const xfe=({inputs:n,backend:e,attrs:t})=>{const{x:s}=n,{k:r,sorted:a}=t,o=e.dataIdMap.get(s.dataId).id,i=new Uint8Array(new Int32Array(s.shape).buffer),u=s.shape.slice();u[u.length-1]=r;const c=e.makeOutput(u,s.dtype),l=e.dataIdMap.get(c.dataId).id,d=e.makeOutput(u,"int32"),h=e.dataIdMap.get(d.dataId).id;return fA(o,i,s.shape.length,dt[s.dtype],r,a,l,h),[c,d]},wfe={kernelName:Gh,backendName:"wasm",setupFunc:bfe,kernelFunc:xfe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let mA;function vfe(n){mA=n.wasm.cwrap(Hh,null,["number","number","bool","number","number","number","number","number","number","array","number","array","number","number","number","number","number"])}function Ife(n){const{backend:e,inputs:t,attrs:s}=n,{image:r,transforms:a}=t,{interpolation:o,fillMode:i,fillValue:u,outputShape:c}=s,[l,d,h,p]=r.shape,[f,m]=c??[d,h],g=[l,f,m,p],y=new Uint8Array(new Int32Array(ve(r.shape)).buffer),b=new Uint8Array(new Int32Array(ve(g)).buffer),x=e.makeOutput(g,r.dtype),w=e.dataIdMap.get(x.dataId).id,S=e.dataIdMap.get(r.dataId).id,$=e.dataIdMap.get(a.dataId).id,T=o==="nearest"?1:2;let C;switch(i){case"constant":C=1;break;case"reflect":C=2;break;case"wrap":C=3;break;case"nearest":C=4;break;default:C=1;break}return mA(S,$,a.shape[0]>1,l,f,m,p,h,d,y,r.shape.length-1,b,g.length-1,T,C,u,w),x}const Sfe={kernelName:Hh,backendName:"wasm",setupFunc:vfe,kernelFunc:Ife};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kfe(n){const{inputs:e,attrs:t,backend:s}=n,{axis:r}=t,{x:a}=e,{outputValues:o,outputShape:i,indices:u}=$0(s.readSync(a.dataId),r,a.shape,a.dtype);return[s.makeOutput(i,a.dtype,void 0,o),s.makeOutput([u.length],"int32",void 0,u)]}const Nfe={kernelName:Gm,backendName:"wasm",kernelFunc:kfe};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cfe(n){const{inputs:e,backend:t,attrs:s}=n,{value:r}=e;let{axis:a}=s;a<0&&(a+=r.shape.length);const o=r.shape[a],i=r.shape.length,u=new Array(i-1);let c=0;for(let p=0;p<i;p++)p!==a&&(u[c++]=r.shape[p]);const l=new Array(o),d=new Array(i).fill(0),h=r.shape.slice();h[a]=1;for(let p=0;p<l.length;p++)d[a]=p,l[p]=li({inputs:{x:r},attrs:{begin:d,size:h},backend:t});return l.map(({dataId:p,dtype:f})=>({dataId:p,dtype:f,shape:u}))}const Tfe={kernelName:jh,backendName:"wasm",kernelFunc:Cfe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $fe(n){const{inputs:{x:e},backend:t}=n,s=t.makeOutput(e.shape,e.dtype);return t.typedArrayFromHeap(s).fill(0),s}const _fe={kernelName:qh,backendName:"wasm",kernelFunc:$fe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Efe=[vue,Iue,Sue,kue,Nue,$ue,Pue,Bue,zue,Vue,Wue,Uue,Gue,Hue,jue,Xue,rle,Jue,tle,ule,fle,yle,ble,wle,vle,Ile,Nle,Cle,_le,Dle,Fle,Mle,Vle,Wle,Ule,jle,Xle,Jle,tce,rce,ice,cce,pce,gce,xce,wce,Sce,Nce,Cce,Tce,$ce,_ce,Ece,Rce,Oce,Fce,Mce,Vce,Gce,qce,Yce,Jce,ede,_ue,tde,nde,sde,ode,ude,cde,pde,mde,fde,yde,bde,wde,Ide,Nde,$de,Ade,Dde,Fde,Mde,Vde,Gde,qde,Yde,Qde,ehe,she,uhe,lhe,che,dhe,fhe,yhe,whe,Ihe,Nhe,The,_he,GE,Dhe,Fhe,Mhe,zhe,Vhe,Whe,Uhe,Ghe,ale,qhe,Yhe,Qhe,npe,ape,upe,lpe,cpe,ppe,gpe,xpe,wpe,Spe,kpe,Npe,Cpe,hle,ahe,Tpe,_pe,Dpe,Fpe,Lpe,Bpe,Wpe,Gpe,Hpe,jpe,qpe,Ype,Qpe,tfe,sfe,afe,ofe,lfe,cfe,dfe,ffe,yfe,wfe,Sfe,Rue,Nfe,Tfe,_fe];for(const n of Efe)Ax(n);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vb=Y();Vb.registerFlag("WASM_HAS_SIMD_SUPPORT",async()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]))}catch{return!1}});Vb.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",async()=>{if(Vb.get("IS_NODE"))return!1;try{return new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}});var $y={exports:{}},FI;function Afe(){return FI||(FI=1,function(n,e){var t=(()=>{var s=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(s=s||__filename),function(r){r=r||{};function a(){return P.buffer!=me&&et(P.buffer),Se}function o(){return P.buffer!=me&&et(P.buffer),Pe}function i(){return P.buffer!=me&&et(P.buffer),Be}function u(){return P.buffer!=me&&et(P.buffer),qe}function c(){return P.buffer!=me&&et(P.buffer),ot}var l=typeof r<"u"?r:{},d,h;l.ready=new Promise(function(O,q){d=O,h=q});var p;typeof process<"u"&&process.listeners&&(p={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var f=Object.assign({},l),m=(O,q)=>{throw q},g=typeof window=="object",y=typeof importScripts=="function",b=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",x=l.ENVIRONMENT_IS_PTHREAD||!1,w="";function v(O){return l.locateFile?l.locateFile(O,w):w+O}var S,N,$;function T(O){if(O instanceof ir)return;F("exiting due to exception: "+O)}if(b){var C=La,k=La;y?w=k.dirname(w)+"/":w=__dirname+"/",S=(q,ue)=>(q=_r(q)?new URL(q):k.normalize(q),C.readFileSync(q,ue?void 0:"utf8")),$=q=>{var ue=S(q,!0);return ue.buffer||(ue=new Uint8Array(ue)),ue},N=(q,ue,Oe)=>{q=_r(q)?new URL(q):k.normalize(q),C.readFile(q,function(Ve,We){Ve?Oe(Ve):ue(We.buffer)})},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),process.argv.slice(2),process.on("uncaughtException",function(q){if(!(q instanceof ir))throw q}),process.on("unhandledRejection",function(q){throw q}),m=(q,ue)=>{if(It())throw process.exitCode=q,ue;T(ue),process.exit(q)},l.inspect=function(){return"[Emscripten Module object]"};let O;try{O=La}catch(q){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),q}bv.Worker=O.Worker}else(g||y)&&(y?w=self.location.href:typeof document<"u"&&document.currentScript&&(w=document.currentScript.src),typeof s<"u"&&s&&(w=s),w.indexOf("blob:")!==0?w=w.substr(0,w.replace(/[?#].*/,"").lastIndexOf("/")+1):w="",b||(S=O=>{var q=new XMLHttpRequest;return q.open("GET",O,!1),q.send(null),q.responseText},y&&($=O=>{var q=new XMLHttpRequest;return q.open("GET",O,!1),q.responseType="arraybuffer",q.send(null),new Uint8Array(q.response)}),N=(O,q,ue)=>{var Oe=new XMLHttpRequest;Oe.open("GET",O,!0),Oe.responseType="arraybuffer",Oe.onload=()=>{if(Oe.status==200||Oe.status==0&&Oe.response){q(Oe.response);return}ue()},Oe.onerror=ue,Oe.send(null)}));b&&typeof performance>"u"&&(bv.performance=La.performance);var A=console.log.bind(console),D=console.warn.bind(console);b&&(A=O=>C.writeSync(1,O+`
`),D=O=>C.writeSync(2,O+`
`));var R=l.print||A,F=l.printErr||D;Object.assign(l,f),f=null,l.arguments&&l.arguments,l.thisProgram&&l.thisProgram,l.quit&&(m=l.quit);var z;l.wasmBinary&&(z=l.wasmBinary);var H=l.noExitRuntime||!0;typeof WebAssembly!="object"&&Ts("no native wasm support detected");var P,G,X=!1,Z;function ne(O,q){O||Ts(q)}var te=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0;function ae(O,q,ue){q>>>=0;for(var Oe=q+ue,Ve=q;O[Ve]&&!(Ve>=Oe);)++Ve;if(Ve-q>16&&O.buffer&&te)return te.decode(O.buffer instanceof SharedArrayBuffer?O.slice(q,Ve):O.subarray(q,Ve));for(var We="";q<Ve;){var be=O[q++];if(!(be&128)){We+=String.fromCharCode(be);continue}var Ee=O[q++]&63;if((be&224)==192){We+=String.fromCharCode((be&31)<<6|Ee);continue}var Lt=O[q++]&63;if((be&240)==224?be=(be&15)<<12|Ee<<6|Lt:be=(be&7)<<18|Ee<<12|Lt<<6|O[q++]&63,be<65536)We+=String.fromCharCode(be);else{var $s=be-65536;We+=String.fromCharCode(55296|$s>>10,56320|$s&1023)}}return We}function oe(O,q){return O>>>=0,O?ae(o(),O,q):""}function pe(O,q,ue,Oe){if(ue>>>=0,!(Oe>0))return 0;for(var Ve=ue,We=ue+Oe-1,be=0;be<O.length;++be){var Ee=O.charCodeAt(be);if(Ee>=55296&&Ee<=57343){var Lt=O.charCodeAt(++be);Ee=65536+((Ee&1023)<<10)|Lt&1023}if(Ee<=127){if(ue>=We)break;q[ue++>>>0]=Ee}else if(Ee<=2047){if(ue+1>=We)break;q[ue++>>>0]=192|Ee>>6,q[ue++>>>0]=128|Ee&63}else if(Ee<=65535){if(ue+2>=We)break;q[ue++>>>0]=224|Ee>>12,q[ue++>>>0]=128|Ee>>6&63,q[ue++>>>0]=128|Ee&63}else{if(ue+3>=We)break;q[ue++>>>0]=240|Ee>>18,q[ue++>>>0]=128|Ee>>12&63,q[ue++>>>0]=128|Ee>>6&63,q[ue++>>>0]=128|Ee&63}}return q[ue>>>0]=0,ue-Ve}function Ie(O,q,ue){return pe(O,o(),q,ue)}var me,Se,Pe,Be,qe,ot;x&&(me=l.buffer);function et(O){me=O,l.HEAP8=Se=new Int8Array(O),l.HEAP16=new Int16Array(O),l.HEAP32=Be=new Int32Array(O),l.HEAPU8=Pe=new Uint8Array(O),l.HEAPU16=new Uint16Array(O),l.HEAPU32=qe=new Uint32Array(O),l.HEAPF32=new Float32Array(O),l.HEAPF64=ot=new Float64Array(O)}var Ze=l.INITIAL_MEMORY||16777216;if(x)P=l.wasmMemory,me=l.buffer;else if(l.wasmMemory)P=l.wasmMemory;else if(P=new WebAssembly.Memory({initial:Ze/65536,maximum:65536,shared:!0}),!(P.buffer instanceof SharedArrayBuffer))throw F("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),b&&F("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");P&&(me=P.buffer),Ze=me.byteLength,et(me);var Le,ft=[],ht=[],En=[];function It(){return H}function Vn(){if(l.preRun)for(typeof l.preRun=="function"&&(l.preRun=[l.preRun]);l.preRun.length;)An(l.preRun.shift());ut(ft)}function sn(){x||ut(ht)}function ls(){if(!x){if(l.postRun)for(typeof l.postRun=="function"&&(l.postRun=[l.postRun]);l.postRun.length;)Yn(l.postRun.shift());ut(En)}}function An(O){ft.unshift(O)}function Wn(O){ht.unshift(O)}function Yn(O){En.unshift(O)}var Zt=0,Jt=null;function Vs(O){Zt++,l.monitorRunDependencies&&l.monitorRunDependencies(Zt)}function sa(O){if(Zt--,l.monitorRunDependencies&&l.monitorRunDependencies(Zt),Zt==0&&Jt){var q=Jt;Jt=null,q()}}function Ts(O){l.onAbort&&l.onAbort(O),O="Aborted("+O+")",F(O),X=!0,Z=1,O+=". Build with -sASSERTIONS for more info.";var q=new WebAssembly.RuntimeError(O);throw h(q),q}var $o="data:application/octet-stream;base64,";function Ws(O){return O.startsWith($o)}function _r(O){return O.startsWith("file://")}var Qt;Qt="tfjs-backend-wasm-threaded-simd.wasm",Ws(Qt)||(Qt=v(Qt));function Di(O){try{if(O==Qt&&z)return new Uint8Array(z);if($)return $(O);throw"both async and sync fetching of the wasm failed"}catch(q){Ts(q)}}function _o(){if(!z&&(g||y)){if(typeof fetch=="function"&&!_r(Qt))return fetch(Qt,{credentials:"same-origin"}).then(function(O){if(!O.ok)throw"failed to load wasm binary file at '"+Qt+"'";return O.arrayBuffer()}).catch(function(){return Di(Qt)});if(N)return new Promise(function(O,q){N(Qt,function(ue){O(new Uint8Array(ue))},q)})}return Promise.resolve().then(function(){return Di(Qt)})}function Ri(){var O={env:K0,wasi_snapshot_preview1:K0};function q(be,Ee){var Lt=be.exports;if(l.asm=Lt,cs(l.asm._emscripten_tls_init),Le=l.asm.__indirect_function_table,Wn(l.asm.__wasm_call_ctors),G=Ee,!x){var $s=le.unusedWorkers.length;le.unusedWorkers.forEach(function(oa){le.loadWasmModuleToWorker(oa,function(){--$s||sa()})})}}x||Vs();function ue(be){q(be.instance,be.module)}function Oe(be){return _o().then(function(Ee){return WebAssembly.instantiate(Ee,O)}).then(function(Ee){return Ee}).then(be,function(Ee){F("failed to asynchronously prepare wasm: "+Ee),Ts(Ee)})}function Ve(){return!z&&typeof WebAssembly.instantiateStreaming=="function"&&!Ws(Qt)&&!_r(Qt)&&!b&&typeof fetch=="function"?fetch(Qt,{credentials:"same-origin"}).then(function(be){var Ee=WebAssembly.instantiateStreaming(be,O);return Ee.then(ue,function(Lt){return F("wasm streaming compile failed: "+Lt),F("falling back to ArrayBuffer instantiation"),Oe(ue)})}):Oe(ue)}if(l.instantiateWasm)try{var We=l.instantiateWasm(O,q);return We}catch(be){F("Module.instantiateWasm callback failed with error: "+be),h(be)}return Ve().catch(h),{}}var Oi={};function ir(O){this.name="ExitStatus",this.message="Program terminated with exit("+O+")",this.status=O}function Aa(O){var q=le.pthreads[O];delete le.pthreads[O],q.terminate(),Yg(O),le.runningWorkers.splice(le.runningWorkers.indexOf(q),1),q.pthread_ptr=0}function Fi(O){var q=le.pthreads[O];q.postMessage({cmd:"cancel"})}function ra(O){var q=le.pthreads[O];ne(q),le.returnWorkerToPool(q)}function it(O){var q=le.getNewWorker();if(!q)return 6;le.runningWorkers.push(q),le.pthreads[O.pthread_ptr]=q,q.pthread_ptr=O.pthread_ptr;var ue={cmd:"run",start_routine:O.startRoutine,arg:O.arg,pthread_ptr:O.pthread_ptr};return q.runPthread=()=>{b&&q.ref(),q.postMessage(ue,O.transferList),delete q.runPthread},q.loaded&&q.runPthread(),0}function Gt(O){if(x)return Pi(1,1,O);Z=O,It()||(le.terminateAllThreads(),l.onExit&&l.onExit(O),X=!0),m(O,new ir(O))}function J(O,q){if(Z=O,!q&&x)throw Re(O),"unwind";Gt(O)}var ie=J;function ke(O){if(O instanceof ir||O=="unwind")return Z;m(1,O)}var le={unusedWorkers:[],runningWorkers:[],tlsInitFunctions:[],pthreads:{},init:function(){x?le.initWorker():le.initMainThread()},initMainThread:function(){for(var O=8;O--;)le.allocateUnusedWorker()},initWorker:function(){H=!1},setExitStatus:function(O){Z=O},terminateAllThreads:function(){for(var O of Object.values(le.pthreads))le.returnWorkerToPool(O);for(var O of le.unusedWorkers)O.terminate();le.unusedWorkers=[]},returnWorkerToPool:function(O){var q=O.pthread_ptr;delete le.pthreads[q],le.unusedWorkers.push(O),le.runningWorkers.splice(le.runningWorkers.indexOf(O),1),O.pthread_ptr=0,b&&O.unref(),Yg(q)},receiveObjectTransfer:function(O){},threadInitTLS:function(){le.tlsInitFunctions.forEach(O=>O())},loadWasmModuleToWorker:function(O,q){O.onmessage=We=>{var be=We.data,Ee=be.cmd;if(O.pthread_ptr&&(le.currentProxiedOperationCallerThread=O.pthread_ptr),be.targetThread&&be.targetThread!=bp()){var Lt=le.pthreads[be.targetThread];Lt?Lt.postMessage(be,be.transferList):F('Internal error! Worker sent a message "'+Ee+'" to target pthread '+be.targetThread+", but that thread no longer exists!"),le.currentProxiedOperationCallerThread=void 0;return}Ee==="processProxyingQueue"?qg(be.queue):Ee==="spawnThread"?it(be):Ee==="cleanupThread"?ra(be.thread):Ee==="killThread"?Aa(be.thread):Ee==="cancelThread"?Fi(be.thread):Ee==="loaded"?(O.loaded=!0,b&&O.unref(),q&&q(O),O.runPthread&&O.runPthread()):Ee==="print"?R("Thread "+be.threadId+": "+be.text):Ee==="printErr"?F("Thread "+be.threadId+": "+be.text):Ee==="alert"?alert("Thread "+be.threadId+": "+be.text):be.target==="setimmediate"?O.postMessage(be):Ee==="callHandler"?l[be.handler](...be.args):Ee&&F("worker sent an unknown command "+Ee),le.currentProxiedOperationCallerThread=void 0},O.onerror=We=>{var be="worker sent an error!";throw F(be+" "+We.filename+":"+We.lineno+": "+We.message),We},b&&(O.on("message",function(We){O.onmessage({data:We})}),O.on("error",function(We){O.onerror(We)}),O.on("detachedExit",function(){}));var ue=[],Oe=["onExit","onAbort","print","printErr"];for(var Ve of Oe)l.hasOwnProperty(Ve)&&ue.push(Ve);O.postMessage({cmd:"load",handlers:ue,urlOrBlob:l.mainScriptUrlOrBlob||s,wasmMemory:P,wasmModule:G})},allocateUnusedWorker:function(){var O,q=v("tfjs-backend-wasm-threaded-simd.worker.js");O=new Worker(q),le.unusedWorkers.push(O)},getNewWorker:function(){return le.unusedWorkers.length==0&&(le.allocateUnusedWorker(),le.loadWasmModuleToWorker(le.unusedWorkers[0])),le.unusedWorkers.pop()}};l.PThread=le;function ut(O){for(;O.length>0;)O.shift()(l)}function mt(){var O=bp(),q=i()[O+52>>>2],ue=i()[O+56>>>2],Oe=q-ue;Q0(q,Oe),xp(q)}l.establishStackSpace=mt;function Re(O){if(x)return Pi(2,0,O);try{ie(O)}catch(q){ke(q)}}var _e=[];function lt(O){var q=_e[O];return q||(O>=_e.length&&(_e.length=O+1),_e[O]=q=Le.get(O)),q}function rn(O,q){var ue=lt(O)(q);It()?le.setExitStatus(ue):J0(ue)}l.invokeEntryPoint=rn;function cs(O){le.tlsInitFunctions.push(O)}function Er(O){X0(O,!y,1,!g),le.threadInitTLS()}function aa(O){x?postMessage({cmd:"cleanupThread",thread:O}):ra(O)}function Eo(O,q,ue,Oe){return x?Pi(3,1,O,q,ue,Oe):en(O,q,ue,Oe)}function en(O,q,ue,Oe){if(typeof SharedArrayBuffer>"u")return F("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var Ve=[],We=0;if(x&&(Ve.length===0||We))return Eo(O,q,ue,Oe);var be={startRoutine:ue,pthread_ptr:O,arg:Oe,transferList:Ve};return x?(be.cmd="spawnThread",postMessage(be,Ve),0):it(be)}function Ar(){return 65536}var yp=!0;function vA(){return yp}function qg(O){Atomics.store(i(),O>>2,1),bp()&&Z0(O),Atomics.compareExchange(i(),O>>2,1,0)}l.executeNotifiedProxyingQueue=qg;function IA(O,q,ue,Oe){if(O==q)setTimeout(()=>qg(Oe));else if(x)postMessage({targetThread:O,cmd:"processProxyingQueue",queue:Oe});else{var Ve=le.pthreads[O];if(!Ve)return;Ve.postMessage({cmd:"processProxyingQueue",queue:Oe})}return 1}function SA(O,q,ue){return-1}function kA(){Ts("")}function pc(O){pc.shown||(pc.shown={}),pc.shown[O]||(pc.shown[O]=1,b&&(O="warning: "+O),F(O))}function NA(){b||y||pc("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")}function CA(){return Date.now()}function U0(){return 4294901760}function TA(){return U0()}var Kg;b?Kg=()=>{var O=process.hrtime();return O[0]*1e3+O[1]/1e6}:Kg=()=>performance.timeOrigin+performance.now();function $A(O,q,ue){o().copyWithin(O>>>0,q>>>0,q+ue>>>0)}function _A(){return b?La.cpus().length:navigator.hardwareConcurrency}function EA(O){var q=Zg(),ue=O();return xp(q),ue}function Pi(O,q){var ue=arguments.length-2,Oe=arguments;return EA(()=>{for(var Ve=ue,We=wp(Ve*8),be=We>>3,Ee=0;Ee<ue;Ee++){var Lt=Oe[2+Ee];c()[be+Ee>>>0]=Lt}return Y0(O,Ve,We,q)})}var Xg=[];function AA(O,q,ue){Xg.length=q;for(var Oe=ue>>3,Ve=0;Ve<q;Ve++)Xg[Ve]=c()[Oe+Ve>>>0];var We=O<0,be=We?Oi[-O-1]:zA[O];return be.apply(null,Xg)}function DA(O){try{return P.grow(O-me.byteLength+65535>>>16),et(P.buffer),1}catch{}}function RA(O){var q=o().length;if(O=O>>>0,O<=q)return!1;var ue=U0();if(O>ue)return!1;let Oe=(Lt,$s)=>Lt+($s-Lt%$s)%$s;for(var Ve=1;Ve<=4;Ve*=2){var We=q*(1+.2/Ve);We=Math.min(We,O+100663296);var be=Math.min(ue,Oe(Math.max(O,We),65536)),Ee=DA(be);if(Ee)return!0}return!1}function OA(){throw"unwind"}function G0(O){return x?Pi(4,1,O):52}function H0(O,q,ue,Oe,Ve){return x?Pi(5,1,O,q,ue,Oe,Ve):70}var FA=[null,[],[]];function PA(O,q){var ue=FA[O];q===0||q===10?((O===1?R:F)(ae(ue,0)),ue.length=0):ue.push(q)}function j0(O,q,ue,Oe){if(x)return Pi(6,1,O,q,ue,Oe);for(var Ve=0,We=0;We<ue;We++){var be=u()[q>>>2],Ee=u()[q+4>>>2];q+=8;for(var Lt=0;Lt<Ee;Lt++)PA(O,o()[be+Lt>>>0]);Ve+=Ee}return u()[Oe>>>2]=Ve,0}function q0(O){var q=l["_"+O];return q}function LA(O,q){a().set(O,q>>>0)}function MA(O,q,ue,Oe,Ve){var We={string:ds=>{var Li=0;if(ds!=null&&ds!==0){var nv=(ds.length<<2)+1;Li=wp(nv),Ie(ds,Li,nv)}return Li},array:ds=>{var Li=wp(ds.length);return LA(ds,Li),Li}};function be(ds){return q==="string"?oe(ds):q==="boolean"?!!ds:ds}var Ee=q0(O),Lt=[],$s=0;if(Oe)for(var oa=0;oa<Oe.length;oa++){var tv=We[ue[oa]];tv?($s===0&&($s=Zg()),Lt[oa]=tv(Oe[oa])):Lt[oa]=Oe[oa]}var Jg=Ee.apply(null,Lt);function WA(ds){return $s!==0&&xp($s),be(ds)}return Jg=WA(Jg),Jg}function BA(O,q,ue,Oe){ue=ue||[];var Ve=ue.every(be=>be==="number"||be==="boolean"),We=q!=="string";return We&&Ve&&!Oe?q0(O):function(){return MA(O,q,ue,arguments)}}le.init();var zA=[null,Gt,Re,Eo,G0,H0,j0],K0={__emscripten_init_main_thread_js:Er,__emscripten_thread_cleanup:aa,__pthread_create_js:en,_emscripten_default_pthread_stack_size:Ar,_emscripten_get_now_is_monotonic:vA,_emscripten_notify_task_queue:IA,_emscripten_set_offscreencanvas_size:SA,abort:kA,emscripten_check_blocking_allowed:NA,emscripten_date_now:CA,emscripten_get_heap_max:TA,emscripten_get_now:Kg,emscripten_memcpy_big:$A,emscripten_num_logical_cores:_A,emscripten_receive_on_main_thread_js:AA,emscripten_resize_heap:RA,emscripten_unwind_to_js_event_loop:OA,exit:ie,fd_close:G0,fd_seek:H0,fd_write:j0,memory:P||l.wasmMemory};Ri(),l.___wasm_call_ctors=function(){return(l.___wasm_call_ctors=l.asm.__wasm_call_ctors).apply(null,arguments)},l._init=function(){return(l._init=l.asm.init).apply(null,arguments)},l._init_with_threads_count=function(){return(l._init_with_threads_count=l.asm.init_with_threads_count).apply(null,arguments)},l._get_threads_count=function(){return(l._get_threads_count=l.asm.get_threads_count).apply(null,arguments)},l._register_tensor=function(){return(l._register_tensor=l.asm.register_tensor).apply(null,arguments)},l._dispose_data=function(){return(l._dispose_data=l.asm.dispose_data).apply(null,arguments)},l._dispose=function(){return(l._dispose=l.asm.dispose).apply(null,arguments)},l._Abs=function(){return(l._Abs=l.asm.Abs).apply(null,arguments)},l._Acos=function(){return(l._Acos=l.asm.Acos).apply(null,arguments)},l._Acosh=function(){return(l._Acosh=l.asm.Acosh).apply(null,arguments)},l._Add=function(){return(l._Add=l.asm.Add).apply(null,arguments)},l._AddN=function(){return(l._AddN=l.asm.AddN).apply(null,arguments)},l._All=function(){return(l._All=l.asm.All).apply(null,arguments)},l._Any=function(){return(l._Any=l.asm.Any).apply(null,arguments)},l._ArgMax=function(){return(l._ArgMax=l.asm.ArgMax).apply(null,arguments)},l._ArgMin=function(){return(l._ArgMin=l.asm.ArgMin).apply(null,arguments)},l._Asin=function(){return(l._Asin=l.asm.Asin).apply(null,arguments)},l._Asinh=function(){return(l._Asinh=l.asm.Asinh).apply(null,arguments)},l._Atan=function(){return(l._Atan=l.asm.Atan).apply(null,arguments)},l._Atan2=function(){return(l._Atan2=l.asm.Atan2).apply(null,arguments)},l._Atanh=function(){return(l._Atanh=l.asm.Atanh).apply(null,arguments)},l._AvgPool=function(){return(l._AvgPool=l.asm.AvgPool).apply(null,arguments)},l._AvgPool3D=function(){return(l._AvgPool3D=l.asm.AvgPool3D).apply(null,arguments)},l._AvgPool3DGrad=function(){return(l._AvgPool3DGrad=l.asm.AvgPool3DGrad).apply(null,arguments)},l._AvgPoolGrad=function(){return(l._AvgPoolGrad=l.asm.AvgPoolGrad).apply(null,arguments)},l._BatchMatMul=function(){return(l._BatchMatMul=l.asm.BatchMatMul).apply(null,arguments)},l._Bincount=function(){return(l._Bincount=l.asm.Bincount).apply(null,arguments)},l._BitwiseAnd=function(){return(l._BitwiseAnd=l.asm.BitwiseAnd).apply(null,arguments)},l._Ceil=function(){return(l._Ceil=l.asm.Ceil).apply(null,arguments)},l._ClipByValue=function(){return(l._ClipByValue=l.asm.ClipByValue).apply(null,arguments)},l._Conv2D=function(){return(l._Conv2D=l.asm.Conv2D).apply(null,arguments)},l._Conv2DBackpropInput=function(){return(l._Conv2DBackpropInput=l.asm.Conv2DBackpropInput).apply(null,arguments)},l._Conv3D=function(){return(l._Conv3D=l.asm.Conv3D).apply(null,arguments)},l._Conv3DBackpropFilterV2=function(){return(l._Conv3DBackpropFilterV2=l.asm.Conv3DBackpropFilterV2).apply(null,arguments)},l._Conv3DBackpropInputV2=function(){return(l._Conv3DBackpropInputV2=l.asm.Conv3DBackpropInputV2).apply(null,arguments)},l._Cos=function(){return(l._Cos=l.asm.Cos).apply(null,arguments)},l._Cosh=function(){return(l._Cosh=l.asm.Cosh).apply(null,arguments)},l._CropAndResize=function(){return(l._CropAndResize=l.asm.CropAndResize).apply(null,arguments)},l._Cumprod=function(){return(l._Cumprod=l.asm.Cumprod).apply(null,arguments)},l._Cumsum=function(){return(l._Cumsum=l.asm.Cumsum).apply(null,arguments)},l._DenseBincount=function(){return(l._DenseBincount=l.asm.DenseBincount).apply(null,arguments)},l._DepthToSpace=function(){return(l._DepthToSpace=l.asm.DepthToSpace).apply(null,arguments)},l._DepthwiseConv2dNative=function(){return(l._DepthwiseConv2dNative=l.asm.DepthwiseConv2dNative).apply(null,arguments)},l._Diag=function(){return(l._Diag=l.asm.Diag).apply(null,arguments)},l._Dilation2D=function(){return(l._Dilation2D=l.asm.Dilation2D).apply(null,arguments)},l._Dilation2DBackpropFilter=function(){return(l._Dilation2DBackpropFilter=l.asm.Dilation2DBackpropFilter).apply(null,arguments)},l._Dilation2DBackpropInput=function(){return(l._Dilation2DBackpropInput=l.asm.Dilation2DBackpropInput).apply(null,arguments)},l._Elu=function(){return(l._Elu=l.asm.Elu).apply(null,arguments)},l._EluGrad=function(){return(l._EluGrad=l.asm.EluGrad).apply(null,arguments)},l._Equal=function(){return(l._Equal=l.asm.Equal).apply(null,arguments)},l._Erf=function(){return(l._Erf=l.asm.Erf).apply(null,arguments)},l._Exp=function(){return(l._Exp=l.asm.Exp).apply(null,arguments)},l._Expm1=function(){return(l._Expm1=l.asm.Expm1).apply(null,arguments)},l._FlipLeftRight=function(){return(l._FlipLeftRight=l.asm.FlipLeftRight).apply(null,arguments)},l._Floor=function(){return(l._Floor=l.asm.Floor).apply(null,arguments)},l._FloorDiv=function(){return(l._FloorDiv=l.asm.FloorDiv).apply(null,arguments)},l._FusedBatchNorm=function(){return(l._FusedBatchNorm=l.asm.FusedBatchNorm).apply(null,arguments)},l._FusedConv2D=function(){return(l._FusedConv2D=l.asm.FusedConv2D).apply(null,arguments)},l._FusedDepthwiseConv2D=function(){return(l._FusedDepthwiseConv2D=l.asm.FusedDepthwiseConv2D).apply(null,arguments)},l._Gather=function(){return(l._Gather=l.asm.Gather).apply(null,arguments)},l._GatherNd=function(){return(l._GatherNd=l.asm.GatherNd).apply(null,arguments)},l._Greater=function(){return(l._Greater=l.asm.Greater).apply(null,arguments)},l._GreaterEqual=function(){return(l._GreaterEqual=l.asm.GreaterEqual).apply(null,arguments)},l._IsFinite=function(){return(l._IsFinite=l.asm.IsFinite).apply(null,arguments)},l._IsInf=function(){return(l._IsInf=l.asm.IsInf).apply(null,arguments)},l._IsNan=function(){return(l._IsNan=l.asm.IsNan).apply(null,arguments)},l._LRN=function(){return(l._LRN=l.asm.LRN).apply(null,arguments)},l._LRNGrad=function(){return(l._LRNGrad=l.asm.LRNGrad).apply(null,arguments)},l._LeakyRelu=function(){return(l._LeakyRelu=l.asm.LeakyRelu).apply(null,arguments)},l._Less=function(){return(l._Less=l.asm.Less).apply(null,arguments)},l._LessEqual=function(){return(l._LessEqual=l.asm.LessEqual).apply(null,arguments)},l._LinSpace=function(){return(l._LinSpace=l.asm.LinSpace).apply(null,arguments)},l._Log=function(){return(l._Log=l.asm.Log).apply(null,arguments)},l._Log1p=function(){return(l._Log1p=l.asm.Log1p).apply(null,arguments)},l._LogicalAnd=function(){return(l._LogicalAnd=l.asm.LogicalAnd).apply(null,arguments)},l._LogicalNot=function(){return(l._LogicalNot=l.asm.LogicalNot).apply(null,arguments)},l._LogicalOr=function(){return(l._LogicalOr=l.asm.LogicalOr).apply(null,arguments)},l._LogicalXor=function(){return(l._LogicalXor=l.asm.LogicalXor).apply(null,arguments)},l._Max=function(){return(l._Max=l.asm.Max).apply(null,arguments)},l._MaxPool=function(){return(l._MaxPool=l.asm.MaxPool).apply(null,arguments)},l._MaxPool3D=function(){return(l._MaxPool3D=l.asm.MaxPool3D).apply(null,arguments)},l._MaxPool3DGrad=function(){return(l._MaxPool3DGrad=l.asm.MaxPool3DGrad).apply(null,arguments)},l._MaxPoolGrad=function(){return(l._MaxPoolGrad=l.asm.MaxPoolGrad).apply(null,arguments)},l._MaxPoolWithArgmax=function(){return(l._MaxPoolWithArgmax=l.asm.MaxPoolWithArgmax).apply(null,arguments)},l._Maximum=function(){return(l._Maximum=l.asm.Maximum).apply(null,arguments)},l._Mean=function(){return(l._Mean=l.asm.Mean).apply(null,arguments)},l._Min=function(){return(l._Min=l.asm.Min).apply(null,arguments)},l._Minimum=function(){return(l._Minimum=l.asm.Minimum).apply(null,arguments)},l._MirrorPad=function(){return(l._MirrorPad=l.asm.MirrorPad).apply(null,arguments)},l._Mod=function(){return(l._Mod=l.asm.Mod).apply(null,arguments)},l._Multinomial=function(){return(l._Multinomial=l.asm.Multinomial).apply(null,arguments)},l._Multiply=function(){return(l._Multiply=l.asm.Multiply).apply(null,arguments)},l._Neg=function(){return(l._Neg=l.asm.Neg).apply(null,arguments)},l._NonMaxSuppressionV3=function(){return(l._NonMaxSuppressionV3=l.asm.NonMaxSuppressionV3).apply(null,arguments)},l._NonMaxSuppressionV4=function(){return(l._NonMaxSuppressionV4=l.asm.NonMaxSuppressionV4).apply(null,arguments)},l._NonMaxSuppressionV5=function(){return(l._NonMaxSuppressionV5=l.asm.NonMaxSuppressionV5).apply(null,arguments)},l._NotEqual=function(){return(l._NotEqual=l.asm.NotEqual).apply(null,arguments)},l._OneHot=function(){return(l._OneHot=l.asm.OneHot).apply(null,arguments)},l._PadV2=function(){return(l._PadV2=l.asm.PadV2).apply(null,arguments)},l._Pow=function(){return(l._Pow=l.asm.Pow).apply(null,arguments)},l._Prelu=function(){return(l._Prelu=l.asm.Prelu).apply(null,arguments)},l._Prod=function(){return(l._Prod=l.asm.Prod).apply(null,arguments)},l._RealDiv=function(){return(l._RealDiv=l.asm.RealDiv).apply(null,arguments)},l._Reciprocal=function(){return(l._Reciprocal=l.asm.Reciprocal).apply(null,arguments)},l._Relu=function(){return(l._Relu=l.asm.Relu).apply(null,arguments)},l._Relu6=function(){return(l._Relu6=l.asm.Relu6).apply(null,arguments)},l._ResizeBilinear=function(){return(l._ResizeBilinear=l.asm.ResizeBilinear).apply(null,arguments)},l._ResizeBilinearGrad=function(){return(l._ResizeBilinearGrad=l.asm.ResizeBilinearGrad).apply(null,arguments)},l._ResizeNearestNeighbor=function(){return(l._ResizeNearestNeighbor=l.asm.ResizeNearestNeighbor).apply(null,arguments)},l._ResizeNearestNeighborGrad=function(){return(l._ResizeNearestNeighborGrad=l.asm.ResizeNearestNeighborGrad).apply(null,arguments)},l._Reverse=function(){return(l._Reverse=l.asm.Reverse).apply(null,arguments)},l._RotateWithOffset=function(){return(l._RotateWithOffset=l.asm.RotateWithOffset).apply(null,arguments)},l._Round=function(){return(l._Round=l.asm.Round).apply(null,arguments)},l._Rsqrt=function(){return(l._Rsqrt=l.asm.Rsqrt).apply(null,arguments)},l._ScatterNd=function(){return(l._ScatterNd=l.asm.ScatterNd).apply(null,arguments)},l._SearchSorted=function(){return(l._SearchSorted=l.asm.SearchSorted).apply(null,arguments)},l._SelectV2=function(){return(l._SelectV2=l.asm.SelectV2).apply(null,arguments)},l._Selu=function(){return(l._Selu=l.asm.Selu).apply(null,arguments)},l._Sigmoid=function(){return(l._Sigmoid=l.asm.Sigmoid).apply(null,arguments)},l._Sign=function(){return(l._Sign=l.asm.Sign).apply(null,arguments)},l._Sin=function(){return(l._Sin=l.asm.Sin).apply(null,arguments)},l._Sinh=function(){return(l._Sinh=l.asm.Sinh).apply(null,arguments)},l._Softmax=function(){return(l._Softmax=l.asm.Softmax).apply(null,arguments)},l._Softplus=function(){return(l._Softplus=l.asm.Softplus).apply(null,arguments)},l._SparseFillEmptyRows=function(){return(l._SparseFillEmptyRows=l.asm.SparseFillEmptyRows).apply(null,arguments)},l._SparseReshape=function(){return(l._SparseReshape=l.asm.SparseReshape).apply(null,arguments)},l._SparseSegmentReduction=function(){return(l._SparseSegmentReduction=l.asm.SparseSegmentReduction).apply(null,arguments)},l._SparseToDense=function(){return(l._SparseToDense=l.asm.SparseToDense).apply(null,arguments)},l._Sqrt=function(){return(l._Sqrt=l.asm.Sqrt).apply(null,arguments)},l._Square=function(){return(l._Square=l.asm.Square).apply(null,arguments)},l._SquaredDifference=function(){return(l._SquaredDifference=l.asm.SquaredDifference).apply(null,arguments)},l._Step=function(){return(l._Step=l.asm.Step).apply(null,arguments)},l._StridedSlice=function(){return(l._StridedSlice=l.asm.StridedSlice).apply(null,arguments)},l._Sub=function(){return(l._Sub=l.asm.Sub).apply(null,arguments)},l._Sum=function(){return(l._Sum=l.asm.Sum).apply(null,arguments)},l._Tan=function(){return(l._Tan=l.asm.Tan).apply(null,arguments)},l._Tanh=function(){return(l._Tanh=l.asm.Tanh).apply(null,arguments)},l._TensorScatterUpdate=function(){return(l._TensorScatterUpdate=l.asm.TensorScatterUpdate).apply(null,arguments)},l._Tile=function(){return(l._Tile=l.asm.Tile).apply(null,arguments)},l._TopK=function(){return(l._TopK=l.asm.TopK).apply(null,arguments)},l._Transform=function(){return(l._Transform=l.asm.Transform).apply(null,arguments)},l._Transpose=function(){return(l._Transpose=l.asm.Transpose).apply(null,arguments)},l.__FusedMatMul=function(){return(l.__FusedMatMul=l.asm._FusedMatMul).apply(null,arguments)},l._malloc=function(){return(l._malloc=l.asm.malloc).apply(null,arguments)},l._free=function(){return(l._free=l.asm.free).apply(null,arguments)},l.__emscripten_tls_init=function(){return(l.__emscripten_tls_init=l.asm._emscripten_tls_init).apply(null,arguments)};var bp=l._pthread_self=function(){return(bp=l._pthread_self=l.asm.pthread_self).apply(null,arguments)};l.___errno_location=function(){return(l.___errno_location=l.asm.__errno_location).apply(null,arguments)};var X0=l.__emscripten_thread_init=function(){return(X0=l.__emscripten_thread_init=l.asm._emscripten_thread_init).apply(null,arguments)};l.__emscripten_thread_crashed=function(){return(l.__emscripten_thread_crashed=l.asm._emscripten_thread_crashed).apply(null,arguments)},l._emscripten_main_thread_process_queued_calls=function(){return(l._emscripten_main_thread_process_queued_calls=l.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},l._emscripten_main_browser_thread_id=function(){return(l._emscripten_main_browser_thread_id=l.asm.emscripten_main_browser_thread_id).apply(null,arguments)};var Y0=l._emscripten_run_in_main_runtime_thread_js=function(){return(Y0=l._emscripten_run_in_main_runtime_thread_js=l.asm.emscripten_run_in_main_runtime_thread_js).apply(null,arguments)};l._emscripten_dispatch_to_thread_=function(){return(l._emscripten_dispatch_to_thread_=l.asm.emscripten_dispatch_to_thread_).apply(null,arguments)};var Z0=l.__emscripten_proxy_execute_task_queue=function(){return(Z0=l.__emscripten_proxy_execute_task_queue=l.asm._emscripten_proxy_execute_task_queue).apply(null,arguments)},Yg=l.__emscripten_thread_free_data=function(){return(Yg=l.__emscripten_thread_free_data=l.asm._emscripten_thread_free_data).apply(null,arguments)},J0=l.__emscripten_thread_exit=function(){return(J0=l.__emscripten_thread_exit=l.asm._emscripten_thread_exit).apply(null,arguments)},Q0=l._emscripten_stack_set_limits=function(){return(Q0=l._emscripten_stack_set_limits=l.asm.emscripten_stack_set_limits).apply(null,arguments)},Zg=l.stackSave=function(){return(Zg=l.stackSave=l.asm.stackSave).apply(null,arguments)},xp=l.stackRestore=function(){return(xp=l.stackRestore=l.asm.stackRestore).apply(null,arguments)},wp=l.stackAlloc=function(){return(wp=l.stackAlloc=l.asm.stackAlloc).apply(null,arguments)};l.dynCall_iijjiiii=function(){return(l.dynCall_iijjiiii=l.asm.dynCall_iijjiiii).apply(null,arguments)},l.dynCall_jiji=function(){return(l.dynCall_jiji=l.asm.dynCall_jiji).apply(null,arguments)},l.keepRuntimeAlive=It,l.wasmMemory=P,l.cwrap=BA,l.ExitStatus=ir,l.PThread=le;var vp;Jt=function O(){vp||ev(),vp||(Jt=O)};function ev(O){if(Zt>0)return;if(x){d(l),sn(),startWorker(l);return}if(Vn(),Zt>0)return;function q(){vp||(vp=!0,l.calledRun=!0,!X&&(sn(),d(l),l.onRuntimeInitialized&&l.onRuntimeInitialized(),ls()))}l.setStatus?(l.setStatus("Running..."),setTimeout(function(){setTimeout(function(){l.setStatus("")},1),q()},1)):q()}if(l.preInit)for(typeof l.preInit=="function"&&(l.preInit=[l.preInit]);l.preInit.length>0;)l.preInit.pop()();ev();var Ip;p&&(Ip={uncaughtException:process.listeners("uncaughtException").filter(function(O){return!p.uncaughtException.indexOf(O)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(O){return!p.unhandledRejection.indexOf(O)>-1})});var Sp;if(typeof WasmBackendModule<"u")Sp=WasmBackendModule;else if(typeof r<"u")Sp=r;else throw new Error("Could not find wasm module in post.js");if(Ip){var VA=Sp._dispose;Sp._dispose=function(){VA(),Ip.uncaughtException.forEach(function(O){process.removeListener("uncaughtException",O)}),Ip.unhandledRejection.forEach(function(O){process.removeListener("unhandledRejection",O)})}}return r.ready}})();n.exports=t}($y)),$y.exports}var gA=Afe();const yA=bm(gA),Dfe=Wb({__proto__:null,default:yA},[gA]);var _y={},PI;function Rfe(){return PI||(PI=1,_y.wasmWorkerContents=`"use strict";var Module={};var ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads");var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",data=>onmessage({data:data}));var fs=require("fs");Object.assign(global,{self:global,require:require,Module:Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:function(f){(0,eval)(fs.readFileSync(f,"utf8")+"//# sourceURL="+f)},postMessage:function(msg){parentPort.postMessage(msg)},performance:global.performance||{now:function(){return Date.now()}}})}var initializedJS=false;var pendingNotifiedProxyingQueues=[];function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,text+"
");return}console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;self.alert=threadAlert;Module["instantiateWasm"]=(info,receiveInstance)=>{var instance=new WebAssembly.Instance(Module["wasmModule"],info);receiveInstance(instance);Module["wasmModule"]=null;return instance.exports};self.onunhandledrejection=e=>{throw e.reason??e};self.startWorker=instance=>{Module=instance;postMessage({"cmd":"loaded"})};self.onmessage=e=>{try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;for(const handler of e.data.handlers){Module[handler]=function(){postMessage({cmd:"callHandler",handler:handler,args:[...arguments]})}}Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob=="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module)}else if(e.data.cmd==="run"){Module["__emscripten_thread_init"](e.data.pthread_ptr,0,0,1);Module["establishStackSpace"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].threadInitTLS();if(!initializedJS){pendingNotifiedProxyingQueues.forEach(queue=>{Module["executeNotifiedProxyingQueue"](queue)});pendingNotifiedProxyingQueues=[];initializedJS=true}try{Module["invokeEntryPoint"](e.data.start_routine,e.data.arg)}catch(ex){if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["keepRuntimeAlive"]()){}else{Module["__emscripten_thread_exit"](ex.status)}}else{throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["__emscripten_thread_exit"](-1)}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processProxyingQueue"){if(initializedJS){Module["executeNotifiedProxyingQueue"](e.data.queue)}else{pendingNotifiedProxyingQueues.push(e.data.queue)}}else if(e.data.cmd){err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){if(Module["__emscripten_thread_crashed"]){Module["__emscripten_thread_crashed"]()}throw ex}};`),_y}var Ofe=Rfe(),Ey={exports:{}},LI;function Ffe(){return LI||(LI=1,function(n,e){var t=(()=>{var s=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(s=s||__filename),function(r){r=r||{};var a=typeof r<"u"?r:{},o,i;a.ready=new Promise(function(J,ie){o=J,i=ie});var u;typeof process<"u"&&process.listeners&&(u={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var c=Object.assign({},a),l=typeof window=="object",d=typeof importScripts=="function",h=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",p="";function f(J){return a.locateFile?a.locateFile(J,p):p+J}var m,g,y;if(h){var b=La,x=La;d?p=x.dirname(p)+"/":p=__dirname+"/",m=(J,ie)=>(J=Ze(J)?new URL(J):x.normalize(J),b.readFileSync(J,ie?void 0:"utf8")),y=J=>{var ie=m(J,!0);return ie.buffer||(ie=new Uint8Array(ie)),ie},g=(J,ie,ke)=>{J=Ze(J)?new URL(J):x.normalize(J),b.readFile(J,function(le,ut){le?ke(le):ie(ut.buffer)})},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),process.argv.slice(2),process.on("uncaughtException",function(J){if(!(J instanceof It))throw J}),process.on("unhandledRejection",function(J){throw J}),a.inspect=function(){return"[Emscripten Module object]"}}else(l||d)&&(d?p=self.location.href:typeof document<"u"&&document.currentScript&&(p=document.currentScript.src),s&&(p=s),p.indexOf("blob:")!==0?p=p.substr(0,p.replace(/[?#].*/,"").lastIndexOf("/")+1):p="",m=J=>{var ie=new XMLHttpRequest;return ie.open("GET",J,!1),ie.send(null),ie.responseText},d&&(y=J=>{var ie=new XMLHttpRequest;return ie.open("GET",J,!1),ie.responseType="arraybuffer",ie.send(null),new Uint8Array(ie.response)}),g=(J,ie,ke)=>{var le=new XMLHttpRequest;le.open("GET",J,!0),le.responseType="arraybuffer",le.onload=()=>{if(le.status==200||le.status==0&&le.response){ie(le.response);return}ke()},le.onerror=ke,le.send(null)});var w=a.print||console.log.bind(console),v=a.printErr||console.warn.bind(console);Object.assign(a,c),c=null,a.arguments&&a.arguments,a.thisProgram&&a.thisProgram,a.quit&&a.quit;var S;a.wasmBinary&&(S=a.wasmBinary),a.noExitRuntime,typeof WebAssembly!="object"&&qe("no native wasm support detected");var N,$=!1,T=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0;function C(J,ie,ke){ie>>>=0;for(var le=ie+ke,ut=ie;J[ut]&&!(ut>=le);)++ut;if(ut-ie>16&&J.buffer&&T)return T.decode(J.subarray(ie,ut));for(var mt="";ie<ut;){var Re=J[ie++];if(!(Re&128)){mt+=String.fromCharCode(Re);continue}var _e=J[ie++]&63;if((Re&224)==192){mt+=String.fromCharCode((Re&31)<<6|_e);continue}var lt=J[ie++]&63;if((Re&240)==224?Re=(Re&15)<<12|_e<<6|lt:Re=(Re&7)<<18|_e<<12|lt<<6|J[ie++]&63,Re<65536)mt+=String.fromCharCode(Re);else{var rn=Re-65536;mt+=String.fromCharCode(55296|rn>>10,56320|rn&1023)}}return mt}function k(J,ie){return J>>>=0,J?C(z,J,ie):""}function A(J,ie,ke,le){if(ke>>>=0,!(le>0))return 0;for(var ut=ke,mt=ke+le-1,Re=0;Re<J.length;++Re){var _e=J.charCodeAt(Re);if(_e>=55296&&_e<=57343){var lt=J.charCodeAt(++Re);_e=65536+((_e&1023)<<10)|lt&1023}if(_e<=127){if(ke>=mt)break;ie[ke++>>>0]=_e}else if(_e<=2047){if(ke+1>=mt)break;ie[ke++>>>0]=192|_e>>6,ie[ke++>>>0]=128|_e&63}else if(_e<=65535){if(ke+2>=mt)break;ie[ke++>>>0]=224|_e>>12,ie[ke++>>>0]=128|_e>>6&63,ie[ke++>>>0]=128|_e&63}else{if(ke+3>=mt)break;ie[ke++>>>0]=240|_e>>18,ie[ke++>>>0]=128|_e>>12&63,ie[ke++>>>0]=128|_e>>6&63,ie[ke++>>>0]=128|_e&63}}return ie[ke>>>0]=0,ke-ut}function D(J,ie,ke){return A(J,z,ie,ke)}var R,F,z,H;function P(J){R=J,a.HEAP8=F=new Int8Array(J),a.HEAP16=new Int16Array(J),a.HEAP32=new Int32Array(J),a.HEAPU8=z=new Uint8Array(J),a.HEAPU16=new Uint16Array(J),a.HEAPU32=H=new Uint32Array(J),a.HEAPF32=new Float32Array(J),a.HEAPF64=new Float64Array(J)}a.INITIAL_MEMORY;var G=[],X=[],Z=[];function ne(){if(a.preRun)for(typeof a.preRun=="function"&&(a.preRun=[a.preRun]);a.preRun.length;)oe(a.preRun.shift());Vn(G)}function te(){Vn(X)}function ae(){if(a.postRun)for(typeof a.postRun=="function"&&(a.postRun=[a.postRun]);a.postRun.length;)Ie(a.postRun.shift());Vn(Z)}function oe(J){G.unshift(J)}function pe(J){X.unshift(J)}function Ie(J){Z.unshift(J)}var me=0,Se=null;function Pe(J){me++,a.monitorRunDependencies&&a.monitorRunDependencies(me)}function Be(J){if(me--,a.monitorRunDependencies&&a.monitorRunDependencies(me),me==0&&Se){var ie=Se;Se=null,ie()}}function qe(J){a.onAbort&&a.onAbort(J),J="Aborted("+J+")",v(J),$=!0,J+=". Build with -sASSERTIONS for more info.";var ie=new WebAssembly.RuntimeError(J);throw i(ie),ie}var ot="data:application/octet-stream;base64,";function et(J){return J.startsWith(ot)}function Ze(J){return J.startsWith("file://")}var Le;Le="tfjs-backend-wasm.wasm",et(Le)||(Le=f(Le));function ft(J){try{if(J==Le&&S)return new Uint8Array(S);if(y)return y(J);throw"both async and sync fetching of the wasm failed"}catch(ie){qe(ie)}}function ht(){if(!S&&(l||d)){if(typeof fetch=="function"&&!Ze(Le))return fetch(Le,{credentials:"same-origin"}).then(function(J){if(!J.ok)throw"failed to load wasm binary file at '"+Le+"'";return J.arrayBuffer()}).catch(function(){return ft(Le)});if(g)return new Promise(function(J,ie){g(Le,function(ke){J(new Uint8Array(ke))},ie)})}return Promise.resolve().then(function(){return ft(Le)})}function En(){var J={env:_o,wasi_snapshot_preview1:_o};function ie(Re,_e){var lt=Re.exports;a.asm=lt,N=a.asm.memory,P(N.buffer),a.asm.__indirect_function_table,pe(a.asm.__wasm_call_ctors),Be()}Pe();function ke(Re){ie(Re.instance)}function le(Re){return ht().then(function(_e){return WebAssembly.instantiate(_e,J)}).then(function(_e){return _e}).then(Re,function(_e){v("failed to asynchronously prepare wasm: "+_e),qe(_e)})}function ut(){return!S&&typeof WebAssembly.instantiateStreaming=="function"&&!et(Le)&&!Ze(Le)&&!h&&typeof fetch=="function"?fetch(Le,{credentials:"same-origin"}).then(function(Re){var _e=WebAssembly.instantiateStreaming(Re,J);return _e.then(ke,function(lt){return v("wasm streaming compile failed: "+lt),v("falling back to ArrayBuffer instantiation"),le(ke)})}):le(ke)}if(a.instantiateWasm)try{var mt=a.instantiateWasm(J,ie);return mt}catch(Re){v("Module.instantiateWasm callback failed with error: "+Re),i(Re)}return ut().catch(i),{}}function It(J){this.name="ExitStatus",this.message="Program terminated with exit("+J+")",this.status=J}function Vn(J){for(;J.length>0;)J.shift()(a)}function sn(){qe("")}function ls(){return 4294901760}function An(){return ls()}function Wn(J,ie,ke){z.copyWithin(J>>>0,ie>>>0,ie+ke>>>0)}function Yn(J){try{return N.grow(J-R.byteLength+65535>>>16),P(N.buffer),1}catch{}}function Zt(J){var ie=z.length;J=J>>>0;var ke=ls();if(J>ke)return!1;let le=(lt,rn)=>lt+(rn-lt%rn)%rn;for(var ut=1;ut<=4;ut*=2){var mt=ie*(1+.2/ut);mt=Math.min(mt,J+100663296);var Re=Math.min(ke,le(Math.max(J,mt),65536)),_e=Yn(Re);if(_e)return!0}return!1}function Jt(J){return 52}function Vs(J,ie,ke,le,ut){return 70}var sa=[null,[],[]];function Ts(J,ie){var ke=sa[J];ie===0||ie===10?((J===1?w:v)(C(ke,0)),ke.length=0):ke.push(ie)}function $o(J,ie,ke,le){for(var ut=0,mt=0;mt<ke;mt++){var Re=H[ie>>>2],_e=H[ie+4>>>2];ie+=8;for(var lt=0;lt<_e;lt++)Ts(J,z[Re+lt>>>0]);ut+=_e}return H[le>>>2]=ut,0}function Ws(J){var ie=a["_"+J];return ie}function _r(J,ie){F.set(J,ie>>>0)}function Qt(J,ie,ke,le,ut){var mt={string:en=>{var Ar=0;if(en!=null&&en!==0){var yp=(en.length<<2)+1;Ar=ir(yp),D(en,Ar,yp)}return Ar},array:en=>{var Ar=ir(en.length);return _r(en,Ar),Ar}};function Re(en){return ie==="string"?k(en):ie==="boolean"?!!en:en}var _e=Ws(J),lt=[],rn=0;if(le)for(var cs=0;cs<le.length;cs++){var Er=mt[ke[cs]];Er?(rn===0&&(rn=Ri()),lt[cs]=Er(le[cs])):lt[cs]=le[cs]}var aa=_e.apply(null,lt);function Eo(en){return rn!==0&&Oi(rn),Re(en)}return aa=Eo(aa),aa}function Di(J,ie,ke,le){ke=ke||[];var ut=ke.every(Re=>Re==="number"||Re==="boolean"),mt=ie!=="string";return mt&&ut&&!le?Ws(J):function(){return Qt(J,ie,ke,arguments)}}var _o={abort:sn,emscripten_get_heap_max:An,emscripten_memcpy_big:Wn,emscripten_resize_heap:Zt,fd_close:Jt,fd_seek:Vs,fd_write:$o};En(),a.___wasm_call_ctors=function(){return(a.___wasm_call_ctors=a.asm.__wasm_call_ctors).apply(null,arguments)},a._init=function(){return(a._init=a.asm.init).apply(null,arguments)},a._init_with_threads_count=function(){return(a._init_with_threads_count=a.asm.init_with_threads_count).apply(null,arguments)},a._get_threads_count=function(){return(a._get_threads_count=a.asm.get_threads_count).apply(null,arguments)},a._register_tensor=function(){return(a._register_tensor=a.asm.register_tensor).apply(null,arguments)},a._dispose_data=function(){return(a._dispose_data=a.asm.dispose_data).apply(null,arguments)},a._dispose=function(){return(a._dispose=a.asm.dispose).apply(null,arguments)},a._Abs=function(){return(a._Abs=a.asm.Abs).apply(null,arguments)},a._Acos=function(){return(a._Acos=a.asm.Acos).apply(null,arguments)},a._Acosh=function(){return(a._Acosh=a.asm.Acosh).apply(null,arguments)},a._Add=function(){return(a._Add=a.asm.Add).apply(null,arguments)},a._AddN=function(){return(a._AddN=a.asm.AddN).apply(null,arguments)},a._All=function(){return(a._All=a.asm.All).apply(null,arguments)},a._Any=function(){return(a._Any=a.asm.Any).apply(null,arguments)},a._ArgMax=function(){return(a._ArgMax=a.asm.ArgMax).apply(null,arguments)},a._ArgMin=function(){return(a._ArgMin=a.asm.ArgMin).apply(null,arguments)},a._Asin=function(){return(a._Asin=a.asm.Asin).apply(null,arguments)},a._Asinh=function(){return(a._Asinh=a.asm.Asinh).apply(null,arguments)},a._Atan=function(){return(a._Atan=a.asm.Atan).apply(null,arguments)},a._Atan2=function(){return(a._Atan2=a.asm.Atan2).apply(null,arguments)},a._Atanh=function(){return(a._Atanh=a.asm.Atanh).apply(null,arguments)},a._AvgPool=function(){return(a._AvgPool=a.asm.AvgPool).apply(null,arguments)},a._AvgPool3D=function(){return(a._AvgPool3D=a.asm.AvgPool3D).apply(null,arguments)},a._AvgPool3DGrad=function(){return(a._AvgPool3DGrad=a.asm.AvgPool3DGrad).apply(null,arguments)},a._AvgPoolGrad=function(){return(a._AvgPoolGrad=a.asm.AvgPoolGrad).apply(null,arguments)},a._BatchMatMul=function(){return(a._BatchMatMul=a.asm.BatchMatMul).apply(null,arguments)},a._Bincount=function(){return(a._Bincount=a.asm.Bincount).apply(null,arguments)},a._BitwiseAnd=function(){return(a._BitwiseAnd=a.asm.BitwiseAnd).apply(null,arguments)},a._Ceil=function(){return(a._Ceil=a.asm.Ceil).apply(null,arguments)},a._ClipByValue=function(){return(a._ClipByValue=a.asm.ClipByValue).apply(null,arguments)},a._Conv2D=function(){return(a._Conv2D=a.asm.Conv2D).apply(null,arguments)},a._Conv2DBackpropInput=function(){return(a._Conv2DBackpropInput=a.asm.Conv2DBackpropInput).apply(null,arguments)},a._Conv3D=function(){return(a._Conv3D=a.asm.Conv3D).apply(null,arguments)},a._Conv3DBackpropFilterV2=function(){return(a._Conv3DBackpropFilterV2=a.asm.Conv3DBackpropFilterV2).apply(null,arguments)},a._Conv3DBackpropInputV2=function(){return(a._Conv3DBackpropInputV2=a.asm.Conv3DBackpropInputV2).apply(null,arguments)},a._Cos=function(){return(a._Cos=a.asm.Cos).apply(null,arguments)},a._Cosh=function(){return(a._Cosh=a.asm.Cosh).apply(null,arguments)},a._CropAndResize=function(){return(a._CropAndResize=a.asm.CropAndResize).apply(null,arguments)},a._Cumprod=function(){return(a._Cumprod=a.asm.Cumprod).apply(null,arguments)},a._Cumsum=function(){return(a._Cumsum=a.asm.Cumsum).apply(null,arguments)},a._DenseBincount=function(){return(a._DenseBincount=a.asm.DenseBincount).apply(null,arguments)},a._DepthToSpace=function(){return(a._DepthToSpace=a.asm.DepthToSpace).apply(null,arguments)},a._DepthwiseConv2dNative=function(){return(a._DepthwiseConv2dNative=a.asm.DepthwiseConv2dNative).apply(null,arguments)},a._Diag=function(){return(a._Diag=a.asm.Diag).apply(null,arguments)},a._Dilation2D=function(){return(a._Dilation2D=a.asm.Dilation2D).apply(null,arguments)},a._Dilation2DBackpropFilter=function(){return(a._Dilation2DBackpropFilter=a.asm.Dilation2DBackpropFilter).apply(null,arguments)},a._Dilation2DBackpropInput=function(){return(a._Dilation2DBackpropInput=a.asm.Dilation2DBackpropInput).apply(null,arguments)},a._Elu=function(){return(a._Elu=a.asm.Elu).apply(null,arguments)},a._EluGrad=function(){return(a._EluGrad=a.asm.EluGrad).apply(null,arguments)},a._Equal=function(){return(a._Equal=a.asm.Equal).apply(null,arguments)},a._Erf=function(){return(a._Erf=a.asm.Erf).apply(null,arguments)},a._Exp=function(){return(a._Exp=a.asm.Exp).apply(null,arguments)},a._Expm1=function(){return(a._Expm1=a.asm.Expm1).apply(null,arguments)},a._FlipLeftRight=function(){return(a._FlipLeftRight=a.asm.FlipLeftRight).apply(null,arguments)},a._Floor=function(){return(a._Floor=a.asm.Floor).apply(null,arguments)},a._FloorDiv=function(){return(a._FloorDiv=a.asm.FloorDiv).apply(null,arguments)},a._FusedBatchNorm=function(){return(a._FusedBatchNorm=a.asm.FusedBatchNorm).apply(null,arguments)},a._FusedConv2D=function(){return(a._FusedConv2D=a.asm.FusedConv2D).apply(null,arguments)},a._FusedDepthwiseConv2D=function(){return(a._FusedDepthwiseConv2D=a.asm.FusedDepthwiseConv2D).apply(null,arguments)},a._Gather=function(){return(a._Gather=a.asm.Gather).apply(null,arguments)},a._GatherNd=function(){return(a._GatherNd=a.asm.GatherNd).apply(null,arguments)},a._Greater=function(){return(a._Greater=a.asm.Greater).apply(null,arguments)},a._GreaterEqual=function(){return(a._GreaterEqual=a.asm.GreaterEqual).apply(null,arguments)},a._IsFinite=function(){return(a._IsFinite=a.asm.IsFinite).apply(null,arguments)},a._IsInf=function(){return(a._IsInf=a.asm.IsInf).apply(null,arguments)},a._IsNan=function(){return(a._IsNan=a.asm.IsNan).apply(null,arguments)},a._LRN=function(){return(a._LRN=a.asm.LRN).apply(null,arguments)},a._LRNGrad=function(){return(a._LRNGrad=a.asm.LRNGrad).apply(null,arguments)},a._LeakyRelu=function(){return(a._LeakyRelu=a.asm.LeakyRelu).apply(null,arguments)},a._Less=function(){return(a._Less=a.asm.Less).apply(null,arguments)},a._LessEqual=function(){return(a._LessEqual=a.asm.LessEqual).apply(null,arguments)},a._LinSpace=function(){return(a._LinSpace=a.asm.LinSpace).apply(null,arguments)},a._Log=function(){return(a._Log=a.asm.Log).apply(null,arguments)},a._Log1p=function(){return(a._Log1p=a.asm.Log1p).apply(null,arguments)},a._LogicalAnd=function(){return(a._LogicalAnd=a.asm.LogicalAnd).apply(null,arguments)},a._LogicalNot=function(){return(a._LogicalNot=a.asm.LogicalNot).apply(null,arguments)},a._LogicalOr=function(){return(a._LogicalOr=a.asm.LogicalOr).apply(null,arguments)},a._LogicalXor=function(){return(a._LogicalXor=a.asm.LogicalXor).apply(null,arguments)},a._Max=function(){return(a._Max=a.asm.Max).apply(null,arguments)},a._MaxPool=function(){return(a._MaxPool=a.asm.MaxPool).apply(null,arguments)},a._MaxPool3D=function(){return(a._MaxPool3D=a.asm.MaxPool3D).apply(null,arguments)},a._MaxPool3DGrad=function(){return(a._MaxPool3DGrad=a.asm.MaxPool3DGrad).apply(null,arguments)},a._MaxPoolGrad=function(){return(a._MaxPoolGrad=a.asm.MaxPoolGrad).apply(null,arguments)},a._MaxPoolWithArgmax=function(){return(a._MaxPoolWithArgmax=a.asm.MaxPoolWithArgmax).apply(null,arguments)},a._Maximum=function(){return(a._Maximum=a.asm.Maximum).apply(null,arguments)},a._Mean=function(){return(a._Mean=a.asm.Mean).apply(null,arguments)},a._Min=function(){return(a._Min=a.asm.Min).apply(null,arguments)},a._Minimum=function(){return(a._Minimum=a.asm.Minimum).apply(null,arguments)},a._MirrorPad=function(){return(a._MirrorPad=a.asm.MirrorPad).apply(null,arguments)},a._Mod=function(){return(a._Mod=a.asm.Mod).apply(null,arguments)},a._Multinomial=function(){return(a._Multinomial=a.asm.Multinomial).apply(null,arguments)},a._Multiply=function(){return(a._Multiply=a.asm.Multiply).apply(null,arguments)},a._Neg=function(){return(a._Neg=a.asm.Neg).apply(null,arguments)},a._NonMaxSuppressionV3=function(){return(a._NonMaxSuppressionV3=a.asm.NonMaxSuppressionV3).apply(null,arguments)},a._NonMaxSuppressionV4=function(){return(a._NonMaxSuppressionV4=a.asm.NonMaxSuppressionV4).apply(null,arguments)},a._NonMaxSuppressionV5=function(){return(a._NonMaxSuppressionV5=a.asm.NonMaxSuppressionV5).apply(null,arguments)},a._NotEqual=function(){return(a._NotEqual=a.asm.NotEqual).apply(null,arguments)},a._OneHot=function(){return(a._OneHot=a.asm.OneHot).apply(null,arguments)},a._PadV2=function(){return(a._PadV2=a.asm.PadV2).apply(null,arguments)},a._Pow=function(){return(a._Pow=a.asm.Pow).apply(null,arguments)},a._Prelu=function(){return(a._Prelu=a.asm.Prelu).apply(null,arguments)},a._Prod=function(){return(a._Prod=a.asm.Prod).apply(null,arguments)},a._RealDiv=function(){return(a._RealDiv=a.asm.RealDiv).apply(null,arguments)},a._Reciprocal=function(){return(a._Reciprocal=a.asm.Reciprocal).apply(null,arguments)},a._Relu=function(){return(a._Relu=a.asm.Relu).apply(null,arguments)},a._Relu6=function(){return(a._Relu6=a.asm.Relu6).apply(null,arguments)},a._ResizeBilinear=function(){return(a._ResizeBilinear=a.asm.ResizeBilinear).apply(null,arguments)},a._ResizeBilinearGrad=function(){return(a._ResizeBilinearGrad=a.asm.ResizeBilinearGrad).apply(null,arguments)},a._ResizeNearestNeighbor=function(){return(a._ResizeNearestNeighbor=a.asm.ResizeNearestNeighbor).apply(null,arguments)},a._ResizeNearestNeighborGrad=function(){return(a._ResizeNearestNeighborGrad=a.asm.ResizeNearestNeighborGrad).apply(null,arguments)},a._Reverse=function(){return(a._Reverse=a.asm.Reverse).apply(null,arguments)},a._RotateWithOffset=function(){return(a._RotateWithOffset=a.asm.RotateWithOffset).apply(null,arguments)},a._Round=function(){return(a._Round=a.asm.Round).apply(null,arguments)},a._Rsqrt=function(){return(a._Rsqrt=a.asm.Rsqrt).apply(null,arguments)},a._ScatterNd=function(){return(a._ScatterNd=a.asm.ScatterNd).apply(null,arguments)},a._SearchSorted=function(){return(a._SearchSorted=a.asm.SearchSorted).apply(null,arguments)},a._SelectV2=function(){return(a._SelectV2=a.asm.SelectV2).apply(null,arguments)},a._Selu=function(){return(a._Selu=a.asm.Selu).apply(null,arguments)},a._Sigmoid=function(){return(a._Sigmoid=a.asm.Sigmoid).apply(null,arguments)},a._Sign=function(){return(a._Sign=a.asm.Sign).apply(null,arguments)},a._Sin=function(){return(a._Sin=a.asm.Sin).apply(null,arguments)},a._Sinh=function(){return(a._Sinh=a.asm.Sinh).apply(null,arguments)},a._Softmax=function(){return(a._Softmax=a.asm.Softmax).apply(null,arguments)},a._Softplus=function(){return(a._Softplus=a.asm.Softplus).apply(null,arguments)},a._SparseFillEmptyRows=function(){return(a._SparseFillEmptyRows=a.asm.SparseFillEmptyRows).apply(null,arguments)},a._SparseReshape=function(){return(a._SparseReshape=a.asm.SparseReshape).apply(null,arguments)},a._SparseSegmentReduction=function(){return(a._SparseSegmentReduction=a.asm.SparseSegmentReduction).apply(null,arguments)},a._SparseToDense=function(){return(a._SparseToDense=a.asm.SparseToDense).apply(null,arguments)},a._Sqrt=function(){return(a._Sqrt=a.asm.Sqrt).apply(null,arguments)},a._Square=function(){return(a._Square=a.asm.Square).apply(null,arguments)},a._SquaredDifference=function(){return(a._SquaredDifference=a.asm.SquaredDifference).apply(null,arguments)},a._Step=function(){return(a._Step=a.asm.Step).apply(null,arguments)},a._StridedSlice=function(){return(a._StridedSlice=a.asm.StridedSlice).apply(null,arguments)},a._Sub=function(){return(a._Sub=a.asm.Sub).apply(null,arguments)},a._Sum=function(){return(a._Sum=a.asm.Sum).apply(null,arguments)},a._Tan=function(){return(a._Tan=a.asm.Tan).apply(null,arguments)},a._Tanh=function(){return(a._Tanh=a.asm.Tanh).apply(null,arguments)},a._TensorScatterUpdate=function(){return(a._TensorScatterUpdate=a.asm.TensorScatterUpdate).apply(null,arguments)},a._Tile=function(){return(a._Tile=a.asm.Tile).apply(null,arguments)},a._TopK=function(){return(a._TopK=a.asm.TopK).apply(null,arguments)},a._Transform=function(){return(a._Transform=a.asm.Transform).apply(null,arguments)},a._Transpose=function(){return(a._Transpose=a.asm.Transpose).apply(null,arguments)},a.__FusedMatMul=function(){return(a.__FusedMatMul=a.asm._FusedMatMul).apply(null,arguments)},a._malloc=function(){return(a._malloc=a.asm.malloc).apply(null,arguments)},a._free=function(){return(a._free=a.asm.free).apply(null,arguments)},a.___errno_location=function(){return(a.___errno_location=a.asm.__errno_location).apply(null,arguments)};var Ri=a.stackSave=function(){return(Ri=a.stackSave=a.asm.stackSave).apply(null,arguments)},Oi=a.stackRestore=function(){return(Oi=a.stackRestore=a.asm.stackRestore).apply(null,arguments)},ir=a.stackAlloc=function(){return(ir=a.stackAlloc=a.asm.stackAlloc).apply(null,arguments)};a.dynCall_iijjiiii=function(){return(a.dynCall_iijjiiii=a.asm.dynCall_iijjiiii).apply(null,arguments)},a.dynCall_jiji=function(){return(a.dynCall_jiji=a.asm.dynCall_jiji).apply(null,arguments)},a.cwrap=Di;var Aa;Se=function J(){Aa||Fi(),Aa||(Se=J)};function Fi(J){if(me>0||(ne(),me>0))return;function ie(){Aa||(Aa=!0,a.calledRun=!0,!$&&(te(),o(a),a.onRuntimeInitialized&&a.onRuntimeInitialized(),ae()))}a.setStatus?(a.setStatus("Running..."),setTimeout(function(){setTimeout(function(){a.setStatus("")},1),ie()},1)):ie()}if(a.preInit)for(typeof a.preInit=="function"&&(a.preInit=[a.preInit]);a.preInit.length>0;)a.preInit.pop()();Fi();var ra;u&&(ra={uncaughtException:process.listeners("uncaughtException").filter(function(J){return!u.uncaughtException.indexOf(J)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(J){return!u.unhandledRejection.indexOf(J)>-1})});var it;if(typeof r<"u")it=r;else if(typeof WasmBackendModuleThreadedSimd<"u")it=WasmBackendModuleThreadedSimd;else throw new Error("Could not find wasm module in post.js");if(ra){var Gt=it._dispose;it._dispose=function(){Gt(),ra.uncaughtException.forEach(function(J){process.removeListener("uncaughtException",J)}),ra.unhandledRejection.forEach(function(J){process.removeListener("unhandledRejection",J)})}}return r.ready}})();n.exports=t}(Ey)),Ey.exports}var bA=Ffe();const xA=bm(bA),Pfe=Wb({__proto__:null,default:xA},[bA]);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MI=yA||Dfe,Lfe=xA||Pfe;class Mfe extends km{constructor(e){super(),this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.initWithThreadsCount(Ufe),this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new fx(this,cr())}write(e,t,s){const r={id:this.dataIdNextNumber++};return this.move(r,e,t,s,1),r}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){const t=Rn();return e(),{kernelMs:Rn()-t}}move(e,t,s,r,a){const o=this.dataIdNextNumber++;if(r==="string"){const l=t;this.dataIdMap.set(e,{id:o,stringBytes:l,shape:s,dtype:r,memoryOffset:null,refCount:a});return}const i=U(s),u=i*fu(r),c=this.wasm._malloc(u)>>>0;this.dataIdMap.set(e,{id:o,memoryOffset:c,shape:s,dtype:r,refCount:a}),this.wasm.tfjs.registerTensor(o,i,c),t!=null&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,u),c)}async read(e){return this.readSync(e)}readSync(e,t,s){const{memoryOffset:r,dtype:a,shape:o,stringBytes:i}=this.dataIdMap.get(e);if(a==="string")return(t==null||t===0)&&(s==null||s>=i.length)?i:i.slice(t,s);t=t||0,s=s||U(o);const u=fu(a),c=this.wasm.HEAPU8.slice(r+t*u,r+s*u);return Vfe(c.buffer,a)}disposeData(e,t=!1){if(this.dataIdMap.has(e)){const s=this.dataIdMap.get(e);if(s.refCount--,!t&&s.refCount>0)return!1;this.wasm._free(s.memoryOffset),this.wasm.tfjs.disposeData(s.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){const t=this.dataIdMap.get(e);t!=null&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,s,r){let a;if(s==null)a=this.write(r??null,e,t);else{const o=this.dataIdNextNumber++;a={id:o},this.dataIdMap.set(a,{id:o,memoryOffset:s,shape:e,dtype:t,refCount:1});const i=U(e);this.wasm.tfjs.registerTensor(o,i,s)}return{dataId:a,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:s}){const r=this.wasm.HEAPU8.buffer,{memoryOffset:a}=this.dataIdMap.get(s),o=U(e);switch(t){case"float32":return new Float32Array(r,a,o);case"int32":return new Int32Array(r,a,o);case"bool":return new Uint8Array(r,a,o);default:throw new Error(`Unknown dtype ${t}`)}}}function Bfe(n,e,t){let s="tfjs-backend-wasm.wasm";return n&&e?s="tfjs-backend-wasm-threaded-simd.wasm":n&&(s="tfjs-backend-wasm-simd.wasm"),Ay!=null&&Ay[s]!=null?Ay[s]:t+s}async function zfe(){const[n,e]=await Promise.all([Y().getAsync("WASM_HAS_SIMD_SUPPORT"),Y().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise((t,s)=>{const r={};r.locateFile=(i,u)=>{if(i.endsWith(".worker.js")){const c=Ofe.wasmWorkerContents.replace(/\n/g,"\\n"),l=new Blob([c],{type:"application/javascript"});return URL.createObjectURL(l)}return i.endsWith(".wasm")?Bfe(n,e,u):u+i};let a=!1;r.onAbort=()=>{if(a||Dy)return;Dy=!0,s({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"})};let o;e&&n&&Wfe==null?(r.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+MI.toString()],{type:"text/javascript"}),o=MI(r)):o=Lfe(r),o.then(i=>{a=!0,Dy=!1;const u=null;i.tfjs={init:i.cwrap("init",null,[]),initWithThreadsCount:i.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:i.cwrap("get_threads_count","number",[]),registerTensor:i.cwrap("register_tensor",null,["number","number","number"]),disposeData:i.cwrap("dispose_data",u,["number"]),dispose:i.cwrap("dispose",u,[])},t({wasm:i})}).catch(s)})}function Vfe(n,e){switch(e){case"float32":return new Float32Array(n);case"int32":return new Int32Array(n);case"bool":return new Uint8Array(n);default:throw new Error(`Unknown dtype ${e}`)}}let Wfe=null,Ay={},Dy=!1,Ufe=-1;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gfe=2;Rx("wasm",async()=>{const{wasm:n}=await zfe();return new Mfe(n)},Gfe);/**
    * @license
    * Copyright 2021 Google LLC. All Rights Reserved.
    * Licensed under the Apache License, Version 2.0 (the "License");
    * you may not use this file except in compliance with the License.
    * You may obtain a copy of the License at
    *
    * http://www.apache.org/licenses/LICENSE-2.0
    *
    * Unless required by applicable law or agreed to in writing, software
    * distributed under the License is distributed on an "AS IS" BASIS,
    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    * See the License for the specific language governing permissions and
    * limitations under the License.
    * =============================================================================
    */function Rc(n,e,t,s){return new(t||(t=Promise))(function(r,a){function o(c){try{u(s.next(c))}catch(l){a(l)}}function i(c){try{u(s.throw(c))}catch(l){a(l)}}function u(c){var l;c.done?r(c.value):(l=c.value,l instanceof t?l:new t(function(d){d(l)})).then(o,i)}u((s=s.apply(n,[])).next())})}function Oc(n,e){var t,s,r,a,o={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return a={next:i(0),throw:i(1),return:i(2)},typeof Symbol=="function"&&(a[Symbol.iterator]=function(){return this}),a;function i(u){return function(c){return function(l){if(t)throw new TypeError("Generator is already executing.");for(;o;)try{if(t=1,s&&(r=2&l[0]?s.return:l[0]?s.throw||((r=s.return)&&r.call(s),0):s.next)&&!(r=r.call(s,l[1])).done)return r;switch(s=0,r&&(l=[2&l[0],r.value]),l[0]){case 0:case 1:r=l;break;case 4:return o.label++,{value:l[1],done:!1};case 5:o.label++,s=l[1],l=[0];continue;case 7:l=o.ops.pop(),o.trys.pop();continue;default:if(!(r=(r=o.trys).length>0&&r[r.length-1])&&(l[0]===6||l[0]===2)){o=0;continue}if(l[0]===3&&(!r||l[1]>r[0]&&l[1]<r[3])){o.label=l[1];break}if(l[0]===6&&o.label<r[1]){o.label=r[1],r=l;break}if(r&&o.label<r[2]){o.label=r[2],o.ops.push(l);break}r[2]&&o.ops.pop(),o.trys.pop();continue}l=e.call(n,o)}catch(d){l=[6,d],s=0}finally{t=r=0}if(5&l[0])throw l[1];return{value:l[0]?l[1]:void 0,done:!0}}([u,c])}}}var wA=function(n){for(var e=[],t=0,s=n;t<s.length;t++){var r=s[t];e.push(r)}return e},BI=function(){return function(){this.parent=null,this.children={},this.end=!1,this.word=[[],0,0]}}(),Hfe=function(){function n(){this.root=new BI}return n.prototype.insert=function(e,t,s){for(var r=this.root,a=wA(e),o=0;o<a.length;o++)r.children[a[o]]||(r.children[a[o]]=new BI,r.children[a[o]].parent=r,r.children[a[o]].word[0]=r.word[0].concat(a[o])),r=r.children[a[o]],o===a.length-1&&(r.end=!0,r.word[1]=t,r.word[2]=s)},n.prototype.commonPrefixSearch=function(e){for(var t=[],s=this.root.children[e[0]],r=0;r<e.length&&s;r++)s.end&&t.push(s.word),s=s.children[e[r+1]];return t.length||t.push([[e[0]],0,0]),t},n}(),zI="▁";function jfe(n){var e=n.normalize("NFKC");return e.length>0?zI+e.replace(/ /g,zI):e}var qfe=6,Kfe=function(){function n(e,t){t===void 0&&(t=qfe),this.vocabulary=e,this.reservedSymbolsCount=t,this.trie=new Hfe;for(var s=this.reservedSymbolsCount;s<this.vocabulary.length;s++)this.trie.insert(this.vocabulary[s][0],this.vocabulary[s][1],s)}return n.prototype.encode=function(e){var t=[],s=[],r=[];e=jfe(e);for(var a=wA(e),o=0;o<=a.length;o++)t.push({}),s.push(0),r.push(0);for(o=0;o<a.length;o++)for(var i=this.trie.commonPrefixSearch(a.slice(o)),u=0;u<i.length;u++){var c=i[u],l={key:c[0],score:c[1],index:c[2]};t[o+(d=c[0].length)][o]==null&&(t[o+d][o]=[]),t[o+d][o].push(l)}for(var d=0;d<=a.length;d++)for(var h in t[d]){var p=t[d][h];for(u=0;u<p.length;u++){var f=p[u],m=f.score+r[d-f.key.length];(r[d]===0||m>=r[d])&&(r[d]=m,s[d]=p[u].index)}}for(var g=[],y=s.length-1;y>0;)g.push(s[y]),y-=this.vocabulary[s[y]][0].length;var b=[],x=!1;for(o=0;o<g.length;o++){var w=g[o];x&&w===0||b.push(w),x=w===0}return b.reverse()},n}();function Xfe(n){return Rc(this,void 0,void 0,function(){return Oc(this,function(e){switch(e.label){case 0:return[4,TL(n)];case 1:return[2,e.sent().json()]}})})}var Yfe="https://storage.googleapis.com/tfjs-models/savedmodel/universal_sentence_encoder";function Zfe(n){return Rc(this,void 0,void 0,function(){var e;return Oc(this,function(t){switch(t.label){case 0:return[4,(e=new Jfe).load(n)];case 1:return t.sent(),[2,e]}})})}var Jfe=function(){function n(){}return n.prototype.loadModel=function(e){return Rc(this,void 0,void 0,function(){return Oc(this,function(t){return[2,e?eI(e):eI("https://tfhub.dev/tensorflow/tfjs-model/universal-sentence-encoder-lite/1/default/1",{fromTFHub:!0})]})})},n.prototype.load=function(e){return e===void 0&&(e={}),Rc(this,void 0,void 0,function(){var t,s,r;return Oc(this,function(a){switch(a.label){case 0:return[4,Promise.all([this.loadModel(e.modelUrl),Xfe(e.vocabUrl||Yfe+"/vocab.json")])];case 1:return t=a.sent(),s=t[0],r=t[1],this.model=s,this.tokenizer=new Kfe(r),[2]}})})},n.prototype.embed=function(e){return Rc(this,void 0,void 0,function(){var t,s,r,a,o,i,u,c,l=this;return Oc(this,function(d){switch(d.label){case 0:for(typeof e=="string"&&(e=[e]),t=e.map(function(h){return l.tokenizer.encode(h)}),s=t.map(function(h,p){return h.map(function(f,m){return[p,m]})}),r=[],a=0;a<s.length;a++)r=r.concat(s[a]);return o=Go(r,[r.length,2],"int32"),i=On(no(t),"int32"),u={indices:o,values:i},[4,this.model.executeAsync(u)];case 1:return c=d.sent(),o.dispose(),i.dispose(),[2,c]}})})},n}();function Qfe(n,e){let t;return function(...r){const a=()=>{clearTimeout(t),n(...r)};clearTimeout(t),t=setTimeout(a,e)}}var eme=(n,e)=>de(e,""),tme=mn('<button class="absolute inset-y-0 right-2 flex items-center"><!></button>'),nme=mn('<div class="flex items-center space-x-2 text-xs text-blue-500 dark:text-blue-400 mt-1"><div class="animate-spin h-3 w-3 border border-blue-500 dark:border-blue-400 rounded-full border-t-transparent"></div> <span> </span></div>'),sme=(n,e,t)=>de(e,K(t),!0),rme=mn("<button> </button>"),ame=mn('<div class="flex space-x-1 overflow-x-auto mb-2 pb-1 no-scrollbar svelte-w672m3"></div>'),ome=(n,e,t)=>e(K(t)),ime=mn('<button class="w-8 h-8 text-lg rounded hover:bg-gray-200 dark:hover:bg-gray-600 hover:scale-110 active:scale-95 transition"> </button>'),ume=mn('<div class="grid grid-cols-6 sm:grid-cols-8 gap-1"></div>'),lme=mn('<div class="flex justify-center items-center h-full"><div class="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-500 dark:border-blue-400"></div></div>'),cme=(n,e,t)=>e(t),dme=mn('<button class="w-8 h-8 text-lg rounded hover:bg-gray-200 dark:hover:bg-gray-600 hover:scale-110 active:scale-95 transition"> </button>'),hme=mn('<div class="text-center py-6"><p class="text-sm text-gray-500 dark:text-gray-400"> </p> <div class="mt-3 grid grid-cols-8 gap-1 max-w-xs mx-auto"></div> <p class="text-xs text-gray-500 dark:text-gray-400 mt-2">Try these popular emojis instead</p></div>'),pme=(n,e,t)=>e(K(t)),fme=mn('<button class="w-8 h-8 text-lg rounded hover:bg-gray-200 dark:hover:bg-gray-600 hover:scale-110 active:scale-95 transition"> </button>'),mme=mn('<div class="mb-3"><p class="text-xs font-medium text-gray-500 dark:text-gray-400 uppercase mb-1">Recent</p> <div class="grid grid-cols-6 sm:grid-cols-8 gap-1"></div></div>'),gme=(n,e,t)=>e(K(t)),yme=mn('<button class="w-8 h-8 text-lg rounded hover:bg-gray-200 dark:hover:bg-gray-600 hover:scale-110 active:scale-95 transition"> </button>'),bme=mn('<!> <div><p class="text-xs font-medium text-gray-500 dark:text-gray-400 uppercase mb-1"> </p> <div class="grid grid-cols-6 sm:grid-cols-8 gap-1"></div></div>',1),xme=mn('<div class="flex items-center mb-4"><div class="flex items-center justify-center w-12 h-12 rounded-full bg-gray-100 dark:bg-gray-800 mr-3"><!></div> <div class="flex flex-col"><h4 class="text-base font-semibold text-gray-900 dark:text-white">Pick an emoji</h4> <p class="text-sm text-gray-500 dark:text-gray-400"> </p></div></div> <!> <div class="relative mb-3"><div class="relative"><input type="text" class="w-full px-3 py-2 pl-9 text-sm bg-gray-100 dark:bg-gray-700 text-gray-900 dark:text-white rounded-lg focus:ring-2 focus:ring-blue-500 outline-none placeholder:text-gray-400 dark:placeholder:text-gray-400"/> <div class="absolute inset-y-0 left-2 flex items-center pointer-events-none"><!></div> <!></div> <!></div> <!> <div class="h-56 overflow-y-auto custom-scrollbar svelte-w672m3"><!></div> <div class="mt-3 pt-2 border-t border-gray-200 dark:border-gray-700 text-center"><p class="text-xs text-gray-500 dark:text-gray-400"> </p></div>',1),wme=mn("<!> <!>",1);function vme(n,e){qt(e,!0);const t=TR();ye(e,"className",3,"");let s=je(ts(["😀","👍","❤️","😂","🎉","👋","🔥","💯"])),r=je("Smileys & People"),a=je(""),o=je(""),i=je(ts([])),u,c=null,l=je(!0),d=je(!1),h=je(!1),p=null,f=new Map,m=je(!1);async function g(){try{await Zv("wasm"),await Jv(),de(m,!0),console.log("WASM backend initialized")}catch(P){console.warn("WASM backend failed, falling back to default:",P),await Zv("webgl"),await Jv()}}const y=Object.values($p).flat(),b={};y.forEach(P=>{b[P]=XP[P]||[P]});const x={happy:["😀","😃","😄","😁","🙂","😊"],sad:["😢","😭","😞","😔","😟","🥺"],angry:["😠","😡","🤬","👿","💢"],love:["❤️","💕","😍","🥰","💗","💓"],laugh:["😂","🤣","😆","😅","😹"],cool:["😎","🆒","👍","🤙"],party:["🎉","🎊","🥳","🎈","🎆"],food:["🍕","🍔","🍟","🌮","🍣","🍩"],animal:["🐶","🐱","🦁","🐼","🦊","🐢"]},w={"Smileys & People":"😀","Animals & Nature":"🐶","Food & Drink":"🍎",Activity:"⚽","Travel & Places":"🚗",Objects:"💻",Symbols:"❤️",Flags:"🏁"},v=Object.entries(b).map(([P,G])=>({emoji:P,terms:G.join(" ").toLowerCase()})),S=new Map;v.forEach(({emoji:P,terms:G})=>{G.split(/\s+/).forEach(Z=>{S.has(Z)||S.set(Z,[]),S.get(Z).push(P)})});async function N(){try{await g(),c=await Zfe(),await $(),de(l,!1)}catch(P){console.error("Error loading TensorFlow model:",P),de(l,!1)}}async function $(){const G=[];for(let Z=0;Z<v.length;Z+=100)G.push(v.slice(Z,Z+100));const X=[];for(const Z of G){const ne=Z.map(oe=>oe.terms),te=await c.embed(ne),ae=await te.array();X.push(...ae),te.dispose()}p=Go(X)}function T(P){if(!P)return[];P=P.toLowerCase().trim();for(const[X,Z]of Object.entries(x))if(X.includes(P)||P.includes(X))return Z;const G=new Set;return S.forEach((X,Z)=>{(Z.startsWith(P)||P.startsWith(Z))&&X.forEach(ne=>G.add(ne))}),Array.from(G).slice(0,24)}const C=Qfe(async()=>{await k(K(a))},300);Nn(()=>{if(de(o,K(a),!0),!K(a).trim()){de(i,[],!0);return}if(f.has(K(a))){de(i,f.get(K(a)),!0);return}const P=T(K(a));P.length>0&&de(i,P,!0),C()});async function k(P){if(!P.trim()){de(i,[],!0);return}const G=P.toLowerCase().trim();if(f.has(G)){de(i,f.get(G),!0);return}if(de(h,!0),c&&p)try{const X=await c.embed(G),Z=j(()=>Ke(X,p.transpose()).dataSync()),te=v.map((ae,oe)=>({emoji:ae.emoji,score:Z[oe]})).sort((ae,oe)=>oe.score-ae.score).filter(ae=>ae.score>.15).slice(0,30).map(ae=>ae.emoji);te.length===0?A(G):(de(i,te,!0),f.set(G,te))}catch(X){console.error("Error during NLP search:",X),A(G)}finally{de(h,!1)}else A(G)}function A(P){const G=new Set;Object.entries(b).forEach(([X,Z])=>{Z.some(ne=>ne.toLowerCase().includes(P)||P.includes(ne.toLowerCase()))&&G.add(X)}),G.size===0&&Object.entries(b).forEach(([X,Z])=>{for(const ne of Z)ne.toLowerCase().split(" ").some(ae=>ae.includes(P)||P.includes(ae))&&G.add(X)}),G.size===0&&["😀","👍","❤️","🎉","👋","💪","🙏","🤔"].forEach(Z=>G.add(Z)),de(i,Array.from(G),!0),de(h,!1),f.set(P,K(i))}function D(P){de(s,[P,...K(s).filter(G=>G!==P)].slice(0,8),!0),t("emoji",P)}function R(P){P.key==="Escape"&&(de(a,""),u==null||u.blur())}function F(){de(d,window.innerWidth<640)}ES(()=>(N(),u==null||u.focus(),F(),window.addEventListener("resize",F),()=>{window.removeEventListener("resize",F),p&&p.dispose()}));var z=pt();rR("keydown",Fy,R);var H=Je(z);mc(H,()=>GP,(P,G)=>{G(P,{children:(X,Z)=>{var ne=wme(),te=Je(ne);mc(te,()=>UP,(oe,pe)=>{pe(oe,{class:"inline-flex items-center justify-center p-2 text-2xl text-gray-600 dark:text-gray-300 bg-white/40 dark:bg-gray-800/40 rounded-full shadow hover:bg-white/60 hover:dark:bg-gray-700/60 backdrop-blur transition-all",children:(Ie,me)=>{Mv(Ie,{class:"w-5 h-5"})},$$slots:{default:!0}})});var ae=vn(te,2);mc(ae,()=>kO,(oe,pe)=>{pe(oe,{children:(Ie,me)=>{var Se=pt(),Pe=Je(Se);const Be=Ue(()=>K(d)?"bottom":"right"),qe=Ue(()=>K(d)?5:12),ot=Ue(()=>K(d)?"center":"start");mc(Pe,()=>VP,(et,Ze)=>{Ze(et,{class:"z-50 w-[90vw] max-w-[420px] sm:w-[320px] rounded-xl p-4 border border-gray-200 dark:border-gray-700 shadow-lg bg-white/60 dark:bg-gray-900/60 backdrop-blur-xl",get side(){return K(Be)},get sideOffset(){return K(qe)},get align(){return K(ot)},children:(Le,ft)=>{var ht=xme(),En=Je(ht),It=yt(En),Vn=yt(It);Mv(Vn,{class:"w-6 h-6 text-gray-600 dark:text-gray-200"});var sn=vn(It,2),ls=vn(yt(sn),2),An=yt(ls),Wn=vn(En,2);mc(Wn,()=>$P,(it,Gt)=>{Gt(it,{class:"h-px bg-gray-300 dark:bg-gray-700 mb-3"})});var Yn=vn(Wn,2),Zt=yt(Yn),Jt=yt(Zt);IR(Jt,it=>u=it,()=>u);var Vs=vn(Jt,2),sa=yt(Vs);qP(sa,{class:"w-4 h-4 text-gray-400 dark:text-gray-500"});var Ts=vn(Vs,2);{var $o=it=>{var Gt=tme();Gt.__click=[eme,a];var J=yt(Gt);KP(J,{class:"w-4 h-4 text-gray-400 dark:text-gray-500 hover:text-gray-600 dark:hover:text-gray-300"}),De(it,Gt)};In(Ts,it=>{K(a)&&it($o)})}var Ws=vn(Zt,2);{var _r=it=>{var Gt=nme(),J=vn(yt(Gt),2),ie=yt(J);Jn(()=>Dr(ie,K(l)?"Loading intelligent search...":"Finding more emojis...")),De(it,Gt)};In(Ws,it=>{(K(l)||K(h))&&K(a)&&it(_r)})}var Qt=vn(Yn,2);{var Di=it=>{var Gt=ame();Gi(Gt,21,()=>Object.keys($p),Ui,(J,ie)=>{var ke=rme();ke.__click=[sme,r,ie];var le=yt(ke);Jn(()=>{NS(ke,1,`flex items-center justify-center min-w-10 h-10 text-lg rounded-md hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors
              ${K(r)===K(ie)?"bg-blue-100 dark:bg-blue-800/40 text-blue-700 dark:text-blue-300":"text-gray-700 dark:text-gray-300"}`),hf(ke,"title",K(ie)),Dr(le,w[K(ie)])}),De(J,ke)}),De(it,Gt)};In(Qt,it=>{K(a).trim()||it(Di)})}var _o=vn(Qt,2),Ri=yt(_o);{var Oi=it=>{var Gt=pt(),J=Je(Gt);{var ie=le=>{var ut=ume();Gi(ut,21,()=>K(i),Ui,(mt,Re)=>{var _e=ime();_e.__click=[ome,D,Re];var lt=yt(_e);Jn(()=>Dr(lt,K(Re))),De(mt,_e)}),De(le,ut)},ke=(le,ut)=>{{var mt=_e=>{var lt=lme();De(_e,lt)},Re=_e=>{var lt=hme(),rn=yt(lt),cs=yt(rn),Er=vn(rn,2);Gi(Er,20,()=>["😀","👍","❤️","😂","🎉","👋","🔥","💯"],Ui,(aa,Eo)=>{var en=dme();en.__click=[cme,D,Eo];var Ar=yt(en);Jn(()=>Dr(Ar,Eo)),De(aa,en)}),Jn(()=>Dr(cs,`No matches found for "${K(a)??""}"`)),De(_e,lt)};In(le,_e=>{K(h)||K(l)?_e(mt):_e(Re,!1)},ut)}};In(J,le=>{K(i).length>0?le(ie):le(ke,!1)})}De(it,Gt)},ir=it=>{var Gt=bme(),J=Je(Gt);{var ie=Re=>{var _e=mme(),lt=vn(yt(_e),2);Gi(lt,21,()=>K(s),Ui,(rn,cs)=>{var Er=fme();Er.__click=[pme,D,cs];var aa=yt(Er);Jn(()=>Dr(aa,K(cs))),De(rn,Er)}),De(Re,_e)};In(J,Re=>{K(s).length>0&&Re(ie)})}var ke=vn(J,2),le=yt(ke),ut=yt(le),mt=vn(le,2);Gi(mt,21,()=>$p[K(r)],Ui,(Re,_e)=>{var lt=yme();lt.__click=[gme,D,_e];var rn=yt(lt);Jn(()=>Dr(rn,K(_e))),De(Re,lt)}),Jn(()=>Dr(ut,K(r))),De(it,Gt)};In(Ri,it=>{K(a).trim()?it(Oi):it(ir,!1)})}var Aa=vn(_o,2),Fi=yt(Aa),ra=yt(Fi);Jn(it=>{Dr(An,K(m)?"Supercharged TBM AI with WASM":"Make it expressive"),hf(Jt,"placeholder",K(l)?"Loading smart search...":"Search emojis by description..."),Dr(ra,it)},[()=>K(a).trim()?`${K(i).length} emojis found`:`${$p[K(r)].length} emojis`]),vR(Jt,()=>K(a),it=>de(a,it)),De(Le,ht)},$$slots:{default:!0}})}),De(Ie,Se)},$$slots:{default:!0}})}),De(X,ne)},$$slots:{default:!0}})}),De(n,z),Kt()}vS(["click"]);SS(vme,{target:document.getElementById("app")});
