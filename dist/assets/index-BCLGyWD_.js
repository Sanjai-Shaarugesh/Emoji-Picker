var PF=Object.defineProperty;var LF=Object.getPrototypeOf;var MF=Reflect.get;var qv=n=>{throw TypeError(n)};var BF=(n,t,e)=>t in n?PF(n,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):n[t]=e;var ke=(n,t,e)=>BF(n,typeof t!="symbol"?t+"":t,e),Yy=(n,t,e)=>t.has(n)||qv("Cannot "+e);var st=(n,t,e)=>(Yy(n,t,"read from private field"),e?e.call(n):t.get(n)),$t=(n,t,e)=>t.has(n)?qv("Cannot add the same private member more than once"):t instanceof WeakSet?t.add(n):t.set(n,e),Wn=(n,t,e,s)=>(Yy(n,t,"write to private field"),s?s.call(n,e):t.set(n,e),e),sa=(n,t,e)=>(Yy(n,t,"access private method"),e);var Kv=(n,t,e)=>MF(LF(n),e,t);function aw(n,t){for(var e=0;e<t.length;e++){const s=t[e];if(typeof s!="string"&&!Array.isArray(s)){for(const r in s)if(r!=="default"&&!(r in n)){const o=Object.getOwnPropertyDescriptor(s,r);o&&Object.defineProperty(n,r,o.get?o:{enumerable:!0,get:()=>s[r]})}}}return Object.freeze(Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}))}(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))s(r);new MutationObserver(r=>{for(const o of r)if(o.type==="childList")for(const a of o.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&s(a)}).observe(document,{childList:!0,subtree:!0});function e(r){const o={};return r.integrity&&(o.integrity=r.integrity),r.referrerPolicy&&(o.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?o.credentials="include":r.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function s(r){if(r.ep)return;r.ep=!0;const o=e(r);fetch(r.href,o)}})();const Xv=!1;var ag=Array.isArray,zF=Array.prototype.indexOf,iw=Array.from,VF=Object.defineProperty,xa=Object.getOwnPropertyDescriptor,WF=Object.getOwnPropertyDescriptors,UF=Object.prototype,GF=Array.prototype,eS=Object.getPrototypeOf,Yv=Object.isExtensible;function Qc(n){return typeof n=="function"}const nn=()=>{};function nS(n){for(var t=0;t<n.length;t++)n[t]()}const Fr=2,sS=4,ig=8,uw=16,Zo=32,Gi=64,Kf=128,js=256,Xf=512,Fs=1024,lo=2048,Hi=4096,Lo=8192,ug=16384,HF=32768,fl=65536,jF=1<<19,rS=1<<20,Ob=1<<21,Au=Symbol("$state"),oS=Symbol("legacy props"),qF=Symbol("");function aS(n){return n===this.v}function KF(n,t){return n!=n?t==t:n!==t||n!==null&&typeof n=="object"||typeof n=="function"}function XF(n,t){return n!==t}function lw(n){return!KF(n,this.v)}function YF(n){throw new Error("https://svelte.dev/e/effect_in_teardown")}function JF(){throw new Error("https://svelte.dev/e/effect_in_unowned_derived")}function ZF(n){throw new Error("https://svelte.dev/e/effect_orphan")}function QF(){throw new Error("https://svelte.dev/e/effect_update_depth_exceeded")}function tO(n){throw new Error("https://svelte.dev/e/props_invalid_value")}function eO(){throw new Error("https://svelte.dev/e/state_descriptors_fixed")}function nO(){throw new Error("https://svelte.dev/e/state_prototype_fixed")}function sO(){throw new Error("https://svelte.dev/e/state_unsafe_mutation")}let rO=!1;const cw=1,dw=2,iS=4,oO=8,aO=16,iO=1,uO=4,lO=8,cO=16,dO=1,hO=2,hs=Symbol(),pO="http://www.w3.org/1999/xhtml",fO="http://www.w3.org/2000/svg",mO="@attach";function hw(n){throw new Error("https://svelte.dev/e/lifecycle_outside_component")}let bn=null;function Jv(n){bn=n}function Zv(n){return lg().get(n)}function gO(n,t){return lg().set(n,t),t}function yO(n){return lg().has(n)}function bO(){return lg()}function rn(n,t=!1,e){var s=bn={p:bn,c:null,d:!1,e:null,m:!1,s:n,x:null,l:null};bS(()=>{s.d=!0})}function on(n){const t=bn;if(t!==null){const a=t.e;if(a!==null){var e=Me,s=Ae;t.e=null;try{for(var r=0;r<a.length;r++){var o=a[r];Na(o.effect),ho(o.reaction),pg(o.fn)}}finally{Na(e),ho(s)}}bn=t.p,t.m=!0}return{}}function uS(){return!0}function lg(n){return bn===null&&hw(),bn.c??(bn.c=new Map(xO(bn)||void 0))}function xO(n){let t=n.p;for(;t!==null;){const e=t.c;if(e!==null)return e;t=t.p}return null}function ys(n){if(typeof n!="object"||n===null||Au in n)return n;const t=eS(n);if(t!==UF&&t!==GF)return n;var e=new Map,s=ag(n),r=Xt(0),o=Ae,a=i=>{var u=Ae;ho(o);var c=i();return ho(u),c};return s&&e.set("length",Xt(n.length)),new Proxy(n,{defineProperty(i,u,c){(!("value"in c)||c.configurable===!1||c.enumerable===!1||c.writable===!1)&&eO();var l=e.get(u);return l===void 0?(l=a(()=>Xt(c.value)),e.set(u,l)):gt(l,a(()=>ys(c.value))),!0},deleteProperty(i,u){var c=e.get(u);if(c===void 0)u in i&&(e.set(u,a(()=>Xt(hs))),Jy(r));else{if(s&&typeof u=="string"){var l=e.get("length"),d=Number(u);Number.isInteger(d)&&d<l.v&&gt(l,d)}gt(c,hs),Jy(r)}return!0},get(i,u,c){var p;if(u===Au)return n;var l=e.get(u),d=u in i;if(l===void 0&&(!d||(p=xa(i,u))!=null&&p.writable)&&(l=a(()=>Xt(ys(d?i[u]:hs))),e.set(u,l)),l!==void 0){var h=J(l);return h===hs?void 0:h}return Reflect.get(i,u,c)},getOwnPropertyDescriptor(i,u){var c=Reflect.getOwnPropertyDescriptor(i,u);if(c&&"value"in c){var l=e.get(u);l&&(c.value=J(l))}else if(c===void 0){var d=e.get(u),h=d==null?void 0:d.v;if(d!==void 0&&h!==hs)return{enumerable:!0,configurable:!0,value:h,writable:!0}}return c},has(i,u){var h;if(u===Au)return!0;var c=e.get(u),l=c!==void 0&&c.v!==hs||Reflect.has(i,u);if(c!==void 0||Me!==null&&(!l||(h=xa(i,u))!=null&&h.writable)){c===void 0&&(c=a(()=>Xt(l?ys(i[u]):hs)),e.set(u,c));var d=J(c);if(d===hs)return!1}return l},set(i,u,c,l){var b;var d=e.get(u),h=u in i;if(s&&u==="length")for(var p=c;p<d.v;p+=1){var f=e.get(p+"");f!==void 0?gt(f,hs):p in i&&(f=a(()=>Xt(hs)),e.set(p+"",f))}d===void 0?(!h||(b=xa(i,u))!=null&&b.writable)&&(d=a(()=>Xt(void 0)),gt(d,a(()=>ys(c))),e.set(u,d)):(h=d.v!==hs,gt(d,a(()=>ys(c))));var m=Reflect.getOwnPropertyDescriptor(i,u);if(m!=null&&m.set&&m.set.call(l,c),!h){if(s&&typeof u=="string"){var g=e.get("length"),y=Number(u);Number.isInteger(y)&&y>=g.v&&gt(g,y+1)}Jy(r)}return!0},ownKeys(i){J(r);var u=Reflect.ownKeys(i).filter(d=>{var h=e.get(d);return h===void 0||h.v!==hs});for(var[c,l]of e)l.v!==hs&&!(c in i)&&u.push(c);return u},setPrototypeOf(){nO()}})}function Jy(n,t=1){gt(n,n.v+t)}function cg(n){var t=Fr|lo,e=Ae!==null&&(Ae.f&Fr)!==0?Ae:null;return Me===null||e!==null&&(e.f&js)!==0?t|=js:Me.f|=rS,{ctx:bn,deps:null,effects:null,equals:aS,f:t,fn:n,reactions:null,rv:0,v:null,wv:0,parent:e??Me}}function qt(n){const t=cg(n);return SS(t),t}function Yf(n){const t=cg(n);return t.equals=lw,t}function lS(n){var t=n.effects;if(t!==null){n.effects=null;for(var e=0;e<t.length;e+=1)pr(t[e])}}function wO(n){for(var t=n.parent;t!==null;){if((t.f&Fr)===0)return t;t=t.parent}return null}function cS(n){var t,e=Me;Na(wO(n));try{lS(n),t=TS(n)}finally{Na(e)}return t}function dS(n){var t=cS(n),e=(ha||(n.f&js)!==0)&&n.deps!==null?Hi:Fs;Or(n,e),n.equals(t)||(n.v=t,n.wv=CS())}const Cd=new Map;function $r(n,t){var e={f:0,v:n,reactions:null,equals:aS,rv:0,wv:0};return e}function Xt(n,t){const e=$r(n);return SS(e),e}function hS(n,t=!1){const e=$r(n);return t||(e.equals=lw),e}function gt(n,t,e=!1){Ae!==null&&!_r&&uS()&&(Ae.f&(Fr|uw))!==0&&!(ws!=null&&ws.includes(n))&&sO();let s=e?ys(t):t;return Pb(n,s)}function Pb(n,t){if(!n.equals(t)){var e=n.v;Mh?Cd.set(n,t):Cd.set(n,e),n.v=t,(n.f&Fr)!==0&&((n.f&lo)!==0&&cS(n),Or(n,(n.f&js)===0?Fs:Hi)),n.wv=CS(),pS(n,lo),Me!==null&&(Me.f&Fs)!==0&&(Me.f&(Zo|Gi))===0&&(or===null?RO([n]):or.push(n))}return t}function pS(n,t){var e=n.reactions;if(e!==null)for(var s=e.length,r=0;r<s;r++){var o=e[r],a=o.f;(a&lo)===0&&(Or(o,t),(a&(Fs|js))!==0&&((a&Fr)!==0?pS(o,Hi):yg(o)))}}let vO=!1;var Lb,fS,mS,gS;function IO(){if(Lb===void 0){Lb=window,fS=/Firefox/.test(navigator.userAgent);var n=Element.prototype,t=Node.prototype,e=Text.prototype;mS=xa(t,"firstChild").get,gS=xa(t,"nextSibling").get,Yv(n)&&(n.__click=void 0,n.__className=void 0,n.__attributes=null,n.__style=void 0,n.__e=void 0),Yv(e)&&(e.__t=void 0)}}function dg(n=""){return document.createTextNode(n)}function Ku(n){return mS.call(n)}function hg(n){return gS.call(n)}function $e(n,t){return Ku(n)}function ne(n,t){{var e=Ku(n);return e instanceof Comment&&e.data===""?hg(e):e}}function Dn(n,t=1,e=!1){let s=n;for(;t--;)s=hg(s);return s}function kO(n){n.textContent=""}function yS(n){Me===null&&Ae===null&&ZF(),Ae!==null&&(Ae.f&js)!==0&&Me===null&&JF(),Mh&&YF()}function $O(n,t){var e=t.last;e===null?t.last=t.first=n:(e.next=n,n.prev=e,t.last=n)}function ji(n,t,e,s=!0){var r=Me,o={ctx:bn,deps:null,nodes_start:null,nodes_end:null,f:n|lo,first:null,fn:t,last:null,next:null,parent:r,prev:null,teardown:null,transitions:null,wv:0};if(e)try{fw(o),o.f|=HF}catch(u){throw pr(o),u}else t!==null&&yg(o);var a=e&&o.deps===null&&o.first===null&&o.nodes_start===null&&o.teardown===null&&(o.f&(rS|Kf))===0;if(!a&&s&&(r!==null&&$O(o,r),Ae!==null&&(Ae.f&Fr)!==0)){var i=Ae;(i.effects??(i.effects=[])).push(o)}return o}function SO(){return Ae!==null&&!_r}function bS(n){const t=ji(ig,null,!1);return Or(t,Fs),t.teardown=n,t}function On(n){yS();var t=Me!==null&&(Me.f&Zo)!==0&&bn!==null&&!bn.m;if(t){var e=bn;(e.e??(e.e=[])).push({fn:n,effect:Me,reaction:Ae})}else{var s=pg(n);return s}}function NO(n){return yS(),fg(n)}function CO(n){const t=ji(Gi,n,!0);return()=>{pr(t)}}function _O(n){const t=ji(Gi,n,!0);return(e={})=>new Promise(s=>{e.outro?vi(t,()=>{pr(t),s(void 0)}):(pr(t),s(void 0))})}function pg(n){return ji(sS,n,!1)}function fg(n){return ji(ig,n,!0)}function ps(n,t=[],e=cg){const s=t.map(e);return Ba(()=>n(...s.map(J)))}function Ba(n,t=0){return ji(ig|uw|t,n,!0)}function co(n,t=!0){return ji(ig|Zo,n,!0,t)}function xS(n){var t=n.teardown;if(t!==null){const e=Mh,s=Ae;Qv(!0),ho(null);try{t.call(null)}finally{Qv(e),ho(s)}}}function wS(n,t=!1){var e=n.first;for(n.first=n.last=null;e!==null;){var s=e.next;(e.f&Gi)!==0?e.parent=null:pr(e,t),e=s}}function TO(n){for(var t=n.first;t!==null;){var e=t.next;(t.f&Zo)===0&&pr(t),t=e}}function pr(n,t=!0){var e=!1;(t||(n.f&jF)!==0)&&n.nodes_start!==null&&(EO(n.nodes_start,n.nodes_end),e=!0),wS(n,t&&!e),tm(n,0),Or(n,ug);var s=n.transitions;if(s!==null)for(const o of s)o.stop();xS(n);var r=n.parent;r!==null&&r.first!==null&&vS(n),n.next=n.prev=n.teardown=n.ctx=n.deps=n.fn=n.nodes_start=n.nodes_end=null}function EO(n,t){for(;n!==null;){var e=n===t?null:hg(n);n.remove(),n=e}}function vS(n){var t=n.parent,e=n.prev,s=n.next;e!==null&&(e.next=s),s!==null&&(s.prev=e),t!==null&&(t.first===n&&(t.first=s),t.last===n&&(t.last=e))}function vi(n,t){var e=[];pw(n,e,!0),IS(e,()=>{pr(n),t&&t()})}function IS(n,t){var e=n.length;if(e>0){var s=()=>--e||t();for(var r of n)r.out(s)}else t()}function pw(n,t,e){if((n.f&Lo)===0){if(n.f^=Lo,n.transitions!==null)for(const a of n.transitions)(a.is_global||e)&&t.push(a);for(var s=n.first;s!==null;){var r=s.next,o=(s.f&fl)!==0||(s.f&Zo)!==0;pw(s,t,o?e:!1),s=r}}}function _d(n){kS(n,!0)}function kS(n,t){if((n.f&Lo)!==0){n.f^=Lo,(n.f&Fs)===0&&(n.f^=Fs),Bh(n)&&(Or(n,lo),yg(n));for(var e=n.first;e!==null;){var s=e.next,r=(e.f&fl)!==0||(e.f&Zo)!==0;kS(e,r?t:!1),e=s}if(n.transitions!==null)for(const o of n.transitions)(o.is_global||t)&&o.in()}}let Td=[],Mb=[];function $S(){var n=Td;Td=[],nS(n)}function AO(){var n=Mb;Mb=[],nS(n)}function mg(n){Td.length===0&&queueMicrotask($S),Td.push(n)}function DO(){Td.length>0&&$S(),Mb.length>0&&AO()}let Ef=!1,Jf=!1,Zf=null,mi=!1,Mh=!1;function Qv(n){Mh=n}let vd=[];let Ae=null,_r=!1;function ho(n){Ae=n}let Me=null;function Na(n){Me=n}let ws=null;function SS(n){Ae!==null&&Ae.f&Ob&&(ws===null?ws=[n]:ws.push(n))}let fs=null,Ws=0,or=null;function RO(n){or=n}let NS=1,Qf=0,ha=!1;function CS(){return++NS}function Bh(n){var d;var t=n.f;if((t&lo)!==0)return!0;if((t&Hi)!==0){var e=n.deps,s=(t&js)!==0;if(e!==null){var r,o,a=(t&Xf)!==0,i=s&&Me!==null&&!ha,u=e.length;if(a||i){var c=n,l=c.parent;for(r=0;r<u;r++)o=e[r],(a||!((d=o==null?void 0:o.reactions)!=null&&d.includes(c)))&&(o.reactions??(o.reactions=[])).push(c);a&&(c.f^=Xf),i&&l!==null&&(l.f&js)===0&&(c.f^=js)}for(r=0;r<u;r++)if(o=e[r],Bh(o)&&dS(o),o.wv>n.wv)return!0}(!s||Me!==null&&!ha)&&Or(n,Fs)}return!1}function FO(n,t){for(var e=t;e!==null;){if((e.f&Kf)!==0)try{e.fn(n);return}catch{e.f^=Kf}e=e.parent}throw Ef=!1,n}function tI(n){return(n.f&ug)===0&&(n.parent===null||(n.parent.f&Kf)===0)}function gg(n,t,e,s){if(Ef){if(e===null&&(Ef=!1),tI(t))throw n;return}if(e!==null&&(Ef=!0),FO(n,t),tI(t))throw n}function _S(n,t,e=!0){var s=n.reactions;if(s!==null)for(var r=0;r<s.length;r++){var o=s[r];ws!=null&&ws.includes(n)||((o.f&Fr)!==0?_S(o,t,!1):t===o&&(e?Or(o,lo):(o.f&Fs)!==0&&Or(o,Hi),yg(o)))}}function TS(n){var p;var t=fs,e=Ws,s=or,r=Ae,o=ha,a=ws,i=bn,u=_r,c=n.f;fs=null,Ws=0,or=null,ha=(c&js)!==0&&(_r||!mi||Ae===null),Ae=(c&(Zo|Gi))===0?n:null,ws=null,Jv(n.ctx),_r=!1,Qf++,n.f|=Ob;try{var l=(0,n.fn)(),d=n.deps;if(fs!==null){var h;if(tm(n,Ws),d!==null&&Ws>0)for(d.length=Ws+fs.length,h=0;h<fs.length;h++)d[Ws+h]=fs[h];else n.deps=d=fs;if(!ha)for(h=Ws;h<d.length;h++)((p=d[h]).reactions??(p.reactions=[])).push(n)}else d!==null&&Ws<d.length&&(tm(n,Ws),d.length=Ws);if(uS()&&or!==null&&!_r&&d!==null&&(n.f&(Fr|Hi|lo))===0)for(h=0;h<or.length;h++)_S(or[h],n);return r!==null&&r!==n&&(Qf++,or!==null&&(s===null?s=or:s.push(...or))),l}finally{fs=t,Ws=e,or=s,Ae=r,ha=o,ws=a,Jv(i),_r=u,n.f^=Ob}}function OO(n,t){let e=t.reactions;if(e!==null){var s=zF.call(e,n);if(s!==-1){var r=e.length-1;r===0?e=t.reactions=null:(e[s]=e[r],e.pop())}}e===null&&(t.f&Fr)!==0&&(fs===null||!fs.includes(t))&&(Or(t,Hi),(t.f&(js|Xf))===0&&(t.f^=Xf),lS(t),tm(t,0))}function tm(n,t){var e=n.deps;if(e!==null)for(var s=t;s<e.length;s++)OO(n,e[s])}function fw(n){var t=n.f;if((t&ug)===0){Or(n,Fs);var e=Me,s=bn,r=mi;Me=n,mi=!0;try{(t&uw)!==0?TO(n):wS(n),xS(n);var o=TS(n);n.teardown=typeof o=="function"?o:null,n.wv=NS;var a=n.deps,i;Xv&&rO&&n.f&lo}catch(u){gg(u,n,e,s||n.ctx)}finally{mi=r,Me=e}}}function PO(){try{QF()}catch(n){if(Zf!==null)gg(n,Zf,null);else throw n}}function ES(){var n=mi;try{var t=0;for(mi=!0;vd.length>0;){t++>1e3&&PO();var e=vd,s=e.length;vd=[];for(var r=0;r<s;r++){var o=MO(e[r]);LO(o)}Cd.clear()}}finally{Jf=!1,mi=n,Zf=null}}function LO(n){var t=n.length;if(t!==0)for(var e=0;e<t;e++){var s=n[e];if((s.f&(ug|Lo))===0)try{Bh(s)&&(fw(s),s.deps===null&&s.first===null&&s.nodes_start===null&&(s.teardown===null?vS(s):s.fn=null))}catch(r){gg(r,s,null,s.ctx)}}}function yg(n){Jf||(Jf=!0,queueMicrotask(ES));for(var t=Zf=n;t.parent!==null;){t=t.parent;var e=t.f;if((e&(Gi|Zo))!==0){if((e&Fs)===0)return;t.f^=Fs}}vd.push(t)}function MO(n){for(var t=[],e=n;e!==null;){var s=e.f,r=(s&(Zo|Gi))!==0,o=r&&(s&Fs)!==0;if(!o&&(s&Lo)===0){if((s&sS)!==0)t.push(e);else if(r)e.f^=Fs;else try{Bh(e)&&fw(e)}catch(u){gg(u,e,null,e.ctx)}var a=e.first;if(a!==null){e=a;continue}}var i=e.parent;for(e=e.next;e===null&&i!==null;)e=i.next,i=i.parent}return t}function BO(n){for(var t;;){if(DO(),vd.length===0)return t;Jf=!0,ES()}}async function AS(){await Promise.resolve(),BO()}function J(n){var t=n.f,e=(t&Fr)!==0;if(Ae!==null&&!_r){if(!(ws!=null&&ws.includes(n))){var s=Ae.deps;n.rv<Qf&&(n.rv=Qf,fs===null&&s!==null&&s[Ws]===n?Ws++:fs===null?fs=[n]:(!ha||!fs.includes(n))&&fs.push(n))}}else if(e&&n.deps===null&&n.effects===null){var r=n,o=r.parent;o!==null&&(o.f&js)===0&&(r.f^=js)}return e&&(r=n,Bh(r)&&dS(r)),Mh&&Cd.has(n)?Cd.get(n):n.v}function Ca(n){var t=_r;try{return _r=!0,n()}finally{_r=t}}const zO=-7169;function Or(n,t){n.f=n.f&zO|t}function VO(n){return n.endsWith("capture")&&n!=="gotpointercapture"&&n!=="lostpointercapture"}const WO=["beforeinput","click","change","dblclick","contextmenu","focusin","focusout","input","keydown","keyup","mousedown","mousemove","mouseout","mouseover","mouseup","pointerdown","pointermove","pointerout","pointerover","pointerup","touchend","touchmove","touchstart"];function UO(n){return WO.includes(n)}const GO={formnovalidate:"formNoValidate",ismap:"isMap",nomodule:"noModule",playsinline:"playsInline",readonly:"readOnly",defaultvalue:"defaultValue",defaultchecked:"defaultChecked",srcobject:"srcObject",novalidate:"noValidate",allowfullscreen:"allowFullscreen",disablepictureinpicture:"disablePictureInPicture",disableremoteplayback:"disableRemotePlayback"};function HO(n){return n=n.toLowerCase(),GO[n]??n}const jO=["touchstart","touchmove"];function qO(n){return jO.includes(n)}function KO(n,t){if(t){const e=document.body;n.autofocus=!0,mg(()=>{document.activeElement===e&&n.focus()})}}let eI=!1;function XO(){eI||(eI=!0,document.addEventListener("reset",n=>{Promise.resolve().then(()=>{var t;if(!n.defaultPrevented)for(const e of n.target.elements)(t=e.__on_r)==null||t.call(e)})},{capture:!0}))}function DS(n){var t=Ae,e=Me;ho(null),Na(null);try{return n()}finally{ho(t),Na(e)}}function YO(n,t,e,s=e){n.addEventListener(t,()=>DS(e));const r=n.__on_r;r?n.__on_r=()=>{r(),s(!0)}:n.__on_r=()=>s(!0),XO()}const RS=new Set,Bb=new Set;function mw(n,t,e,s={}){function r(o){if(s.capture||dd.call(t,o),!o.cancelBubble)return DS(()=>e==null?void 0:e.call(this,o))}return n.startsWith("pointer")||n.startsWith("touch")||n==="wheel"?mg(()=>{t.addEventListener(n,r,s)}):t.addEventListener(n,r,s),r}function Rs(n,t,e,s={}){var r=mw(t,n,e,s);return()=>{n.removeEventListener(t,r,s)}}function JO(n,t,e,s,r){var o={capture:s,passive:r},a=mw(n,t,e,o);(t===document.body||t===window||t===document)&&bS(()=>{t.removeEventListener(n,a,o)})}function FS(n){for(var t=0;t<n.length;t++)RS.add(n[t]);for(var e of Bb)e(n)}function dd(n){var b;var t=this,e=t.ownerDocument,s=n.type,r=((b=n.composedPath)==null?void 0:b.call(n))||[],o=r[0]||n.target,a=0,i=n.__root;if(i){var u=r.indexOf(i);if(u!==-1&&(t===document||t===window)){n.__root=t;return}var c=r.indexOf(t);if(c===-1)return;u<=c&&(a=u)}if(o=r[a]||n.target,o!==t){VF(n,"currentTarget",{configurable:!0,get(){return o||e}});var l=Ae,d=Me;ho(null),Na(null);try{for(var h,p=[];o!==null;){var f=o.assignedSlot||o.parentNode||o.host||null;try{var m=o["__"+s];if(m!=null&&(!o.disabled||n.target===o))if(ag(m)){var[g,...y]=m;g.apply(o,[n,...y])}else m.call(o,n)}catch(x){h?p.push(x):h=x}if(n.cancelBubble||f===t||f===null)break;o=f}if(h){for(let x of p)queueMicrotask(()=>{throw x});throw h}}finally{n.__root=t,delete n.currentTarget,ho(l),Na(d)}}}function OS(n){var t=document.createElement("template");return t.innerHTML=n.replaceAll("<!>","<!---->"),t.content}function Ed(n,t){var e=Me;e.nodes_start===null&&(e.nodes_start=n,e.nodes_end=t)}function $n(n,t){var e=(t&dO)!==0,s=(t&hO)!==0,r,o=!n.startsWith("<!>");return()=>{r===void 0&&(r=OS(o?n:"<!>"+n),e||(r=Ku(r)));var a=s||fS?document.importNode(r,!0):r.cloneNode(!0);if(e){var i=Ku(a),u=a.lastChild;Ed(i,u)}else Ed(a,a);return a}}function ZO(n,t,e="svg"){var s=!n.startsWith("<!>"),r=`<${e}>${s?n:"<!>"+n}</${e}>`,o;return()=>{if(!o){var a=OS(r),i=Ku(a);o=Ku(i)}var u=o.cloneNode(!0);return Ed(u,u),u}}function QO(n,t){return ZO(n,t,"svg")}function ye(){var n=document.createDocumentFragment(),t=document.createComment(""),e=dg();return n.append(t,e),Ed(t,e),n}function Ot(n,t){n!==null&&n.before(t)}function Xr(n,t){var e=t==null?"":typeof t=="object"?t+"":t;e!==(n.__t??(n.__t=n.nodeValue))&&(n.__t=e,n.nodeValue=e+"")}function PS(n,t){return t3(n,t)}const bu=new Map;function t3(n,{target:t,anchor:e,props:s={},events:r,context:o,intro:a=!0}){IO();var i=new Set,u=d=>{for(var h=0;h<d.length;h++){var p=d[h];if(!i.has(p)){i.add(p);var f=qO(p);t.addEventListener(p,dd,{passive:f});var m=bu.get(p);m===void 0?(document.addEventListener(p,dd,{passive:f}),bu.set(p,1)):bu.set(p,m+1)}}};u(iw(RS)),Bb.add(u);var c=void 0,l=_O(()=>{var d=e??t.appendChild(dg());return co(()=>{if(o){rn({});var h=bn;h.c=o}r&&(s.$$events=r),c=n(d,s)||{},o&&on()}),()=>{var f;for(var h of i){t.removeEventListener(h,dd);var p=bu.get(h);--p===0?(document.removeEventListener(h,dd),bu.delete(h)):bu.set(h,p)}Bb.delete(u),d!==e&&((f=d.parentNode)==null||f.removeChild(d))}});return zb.set(c,l),c}let zb=new WeakMap;function e3(n,t){const e=zb.get(n);return e?(zb.delete(n),e(t)):Promise.resolve()}function Rn(n,t,[e,s]=[0,0]){var r=n,o=null,a=null,i=hs,u=e>0?fl:0,c=!1;const l=(h,p=!0)=>{c=!0,d(p,h)},d=(h,p)=>{i!==(i=h)&&(i?(o?_d(o):p&&(o=co(()=>p(r))),a&&vi(a,()=>{a=null})):(a?_d(a):p&&(a=co(()=>p(r,[e+1,s]))),o&&vi(o,()=>{o=null})))};Ba(()=>{c=!1,t(l),c||d(null,null)},u)}function n3(n,t,e){var s=n,r=hs,o,a=XF;Ba(()=>{a(r,r=t())&&(o&&vi(o),o=co(()=>e(s)))})}function ku(n,t){return t}function s3(n,t,e,s){for(var r=[],o=t.length,a=0;a<o;a++)pw(t[a].e,r,!0);var i=o>0&&r.length===0&&e!==null;if(i){var u=e.parentNode;kO(u),u.append(e),s.clear(),ia(n,t[0].prev,t[o-1].next)}IS(r,()=>{for(var c=0;c<o;c++){var l=t[c];i||(s.delete(l.k),ia(n,l.prev,l.next)),pr(l.e,!i)}})}function $u(n,t,e,s,r,o=null){var a=n,i={flags:t,items:new Map,first:null},u=(t&iS)!==0;if(u){var c=n;a=c.appendChild(dg())}var l=null,d=!1,h=Yf(()=>{var p=e();return ag(p)?p:p==null?[]:iw(p)});Ba(()=>{var p=J(h),f=p.length;d&&f===0||(d=f===0,r3(p,i,a,r,t,s,e),o!==null&&(f===0?l?_d(l):l=co(()=>o(a)):l!==null&&vi(l,()=>{l=null})),J(h))})}function r3(n,t,e,s,r,o,a){var R,F,z,H;var i=(r&oO)!==0,u=(r&(cw|dw))!==0,c=n.length,l=t.items,d=t.first,h=d,p,f=null,m,g=[],y=[],b,x,w,v;if(i)for(v=0;v<c;v+=1)b=n[v],x=o(b,v),w=l.get(x),w!==void 0&&((R=w.a)==null||R.measure(),(m??(m=new Set)).add(w));for(v=0;v<c;v+=1){if(b=n[v],x=o(b,v),w=l.get(x),w===void 0){var k=h?h.e.nodes_start:e;f=a3(k,t,f,f===null?t.first:f.next,b,x,v,s,r,a),l.set(x,f),g=[],y=[],h=f.next;continue}if(u&&o3(w,b,v,r),(w.e.f&Lo)!==0&&(_d(w.e),i&&((F=w.a)==null||F.unfix(),(m??(m=new Set)).delete(w))),w!==h){if(p!==void 0&&p.has(w)){if(g.length<y.length){var S=y[0],_;f=S.prev;var C=g[0],N=g[g.length-1];for(_=0;_<g.length;_+=1)nI(g[_],S,e);for(_=0;_<y.length;_+=1)p.delete(y[_]);ia(t,C.prev,N.next),ia(t,f,C),ia(t,N,S),h=S,f=N,v-=1,g=[],y=[]}else p.delete(w),nI(w,h,e),ia(t,w.prev,w.next),ia(t,w,f===null?t.first:f.next),ia(t,f,w),f=w;continue}for(g=[],y=[];h!==null&&h.k!==x;)(h.e.f&Lo)===0&&(p??(p=new Set)).add(h),y.push(h),h=h.next;if(h===null)continue;w=h}g.push(w),f=w,h=w.next}if(h!==null||p!==void 0){for(var $=p===void 0?[]:iw(p);h!==null;)(h.e.f&Lo)===0&&$.push(h),h=h.next;var A=$.length;if(A>0){var D=(r&iS)!==0&&c===0?e:null;if(i){for(v=0;v<A;v+=1)(z=$[v].a)==null||z.measure();for(v=0;v<A;v+=1)(H=$[v].a)==null||H.fix()}s3(t,$,D,l)}}i&&mg(()=>{var P;if(m!==void 0)for(w of m)(P=w.a)==null||P.apply()}),Me.first=t.first&&t.first.e,Me.last=f&&f.e}function o3(n,t,e,s){(s&cw)!==0&&Pb(n.v,t),(s&dw)!==0?Pb(n.i,e):n.i=e}function a3(n,t,e,s,r,o,a,i,u,c){var l=(u&cw)!==0,d=(u&aO)===0,h=l?d?hS(r):$r(r):r,p=(u&dw)===0?a:$r(a),f={i:p,v:h,k:o,a:null,e:null,prev:e,next:s};try{return f.e=co(()=>i(n,h,p,c),vO),f.e.prev=e&&e.e,f.e.next=s&&s.e,e===null?t.first=f:(e.next=f,e.e.next=f.e),s!==null&&(s.prev=f,s.e.prev=f.e),f}finally{}}function nI(n,t,e){for(var s=n.next?n.next.e.nodes_start:e,r=t?t.e.nodes_start:e,o=n.e.nodes_start;o!==s;){var a=hg(o);r.before(o),o=a}}function ia(n,t,e){t===null?n.first=e:(t.next=e,t.e.next=e&&e.e),e!==null&&(e.prev=t,e.e.prev=t&&t.e)}function He(n,t,...e){var s=n,r=nn,o;Ba(()=>{r!==(r=t())&&(o&&(pr(o),o=null),o=co(()=>r(s,...e)))},fl)}function td(n,t,e){var s=n,r,o;Ba(()=>{r!==(r=t())&&(o&&(vi(o),o=null),r&&(o=co(()=>e(s,r))))},fl)}function i3(n,t,e,s,r,o){var a,i,u=null,c=n,l;Ba(()=>{const d=t()||null;var h=fO;d!==a&&(l&&(d===null?vi(l,()=>{l=null,i=null}):d===i?_d(l):pr(l)),d&&d!==i&&(l=co(()=>{if(u=document.createElementNS(h,d),Ed(u,u),s){var p=u.appendChild(dg());s(u,p)}Me.nodes_end=u,c.before(u)})),a=d,a&&(i=a))},fl)}function u3(n,t){var e=void 0,s;Ba(()=>{e!==(e=t())&&(s&&(pr(s),s=null),e&&(s=co(()=>{pg(()=>e(n))})))})}function LS(n){var t,e,s="";if(typeof n=="string"||typeof n=="number")s+=n;else if(typeof n=="object")if(Array.isArray(n)){var r=n.length;for(t=0;t<r;t++)n[t]&&(e=LS(n[t]))&&(s&&(s+=" "),s+=e)}else for(e in n)n[e]&&(s&&(s+=" "),s+=e);return s}function Af(){for(var n,t,e=0,s="",r=arguments.length;e<r;e++)(n=arguments[e])&&(t=LS(n))&&(s&&(s+=" "),s+=t);return s}function l3(n){return typeof n=="object"?Af(n):n??""}const sI=[...` 	
\r\f \v\uFEFF`];function c3(n,t,e){var s=n==null?"":""+n;if(e){for(var r in e)if(e[r])s=s?s+" "+r:r;else if(s.length)for(var o=r.length,a=0;(a=s.indexOf(r,a))>=0;){var i=a+o;(a===0||sI.includes(s[a-1]))&&(i===s.length||sI.includes(s[i]))?s=(a===0?"":s.substring(0,a))+s.substring(i+1):a=i}}return s===""?null:s}function rI(n,t=!1){var e=t?" !important;":";",s="";for(var r in n){var o=n[r];o!=null&&o!==""&&(s+=" "+r+": "+o+e)}return s}function Zy(n){return n[0]!=="-"||n[1]!=="-"?n.toLowerCase():n}function d3(n,t){if(t){var e="",s,r;if(Array.isArray(t)?(s=t[0],r=t[1]):s=t,n){n=String(n).replaceAll(/\s*\/\*.*?\*\/\s*/g,"").trim();var o=!1,a=0,i=!1,u=[];s&&u.push(...Object.keys(s).map(Zy)),r&&u.push(...Object.keys(r).map(Zy));var c=0,l=-1;const m=n.length;for(var d=0;d<m;d++){var h=n[d];if(i?h==="/"&&n[d-1]==="*"&&(i=!1):o?o===h&&(o=!1):h==="/"&&n[d+1]==="*"?i=!0:h==='"'||h==="'"?o=h:h==="("?a++:h===")"&&a--,!i&&o===!1&&a===0){if(h===":"&&l===-1)l=d;else if(h===";"||d===m-1){if(l!==-1){var p=Zy(n.substring(c,l).trim());if(!u.includes(p)){h!==";"&&d++;var f=n.substring(c,d).trim();e+=" "+f+";"}}c=d+1,l=-1}}}}return s&&(e+=rI(s)),r&&(e+=rI(r,!0)),e=e.trim(),e===""?null:e}return n==null?null:String(n)}function MS(n,t,e,s,r,o){var a=n.__className;if(a!==e||a===void 0){var i=c3(e,s,o);i==null?n.removeAttribute("class"):t?n.className=i:n.setAttribute("class",i),n.__className=e}else if(o&&r!==o)for(var u in o){var c=!!o[u];(r==null||c!==!!r[u])&&n.classList.toggle(u,c)}return o}function Qy(n,t={},e,s){for(var r in e){var o=e[r];t[r]!==o&&(e[r]==null?n.style.removeProperty(r):n.style.setProperty(r,o,s))}}function h3(n,t,e,s){var r=n.__style;if(r!==t){var o=d3(t,s);o==null?n.removeAttribute("style"):n.style.cssText=o,n.__style=t}else s&&(Array.isArray(s)?(Qy(n,e==null?void 0:e[0],s[0]),Qy(n,e==null?void 0:e[1],s[1],"important")):Qy(n,e,s));return s}const ed=Symbol("class"),nd=Symbol("style"),BS=Symbol("is custom element"),zS=Symbol("is html");function p3(n,t){t?n.hasAttribute("selected")||n.setAttribute("selected",""):n.removeAttribute("selected")}function em(n,t,e,s){var r=VS(n);r[t]!==(r[t]=e)&&(t==="loading"&&(n[qF]=e),e==null?n.removeAttribute(t):typeof e!="string"&&WS(n).includes(t)?n[t]=e:n.setAttribute(t,e))}function pa(n,t,e,s,r=!1){var o=VS(n),a=o[BS],i=!o[zS],u=t||{},c=n.tagName==="OPTION";for(var l in t)l in e||(e[l]=null);e.class?e.class=l3(e.class):e[ed]&&(e.class=null),e[nd]&&(e.style??(e.style=null));var d=WS(n);for(const x in e){let w=e[x];if(c&&x==="value"&&w==null){n.value=n.__value="",u[x]=w;continue}if(x==="class"){var h=n.namespaceURI==="http://www.w3.org/1999/xhtml";MS(n,h,w,s,t==null?void 0:t[ed],e[ed]),u[x]=w,u[ed]=e[ed];continue}if(x==="style"){h3(n,w,t==null?void 0:t[nd],e[nd]),u[x]=w,u[nd]=e[nd];continue}var p=u[x];if(w!==p){u[x]=w;var f=x[0]+x[1];if(f!=="$$")if(f==="on"){const v={},k="$$"+x;let S=x.slice(2);var m=UO(S);if(VO(S)&&(S=S.slice(0,-7),v.capture=!0),!m&&p){if(w!=null)continue;n.removeEventListener(S,u[k],v),u[k]=null}if(w!=null)if(m)n[`__${S}`]=w,FS([S]);else{let _=function(C){u[x].call(this,C)};var b=_;u[k]=mw(S,n,_,v)}else m&&(n[`__${S}`]=void 0)}else if(x==="style")em(n,x,w);else if(x==="autofocus")KO(n,!!w);else if(!a&&(x==="__value"||x==="value"&&w!=null))n.value=n.__value=w;else if(x==="selected"&&c)p3(n,w);else{var g=x;i||(g=HO(g));var y=g==="defaultValue"||g==="defaultChecked";if(w==null&&!a&&!y)if(o[x]=null,g==="value"||g==="checked"){let v=n;const k=t===void 0;if(g==="value"){let S=v.defaultValue;v.removeAttribute(g),v.defaultValue=S,v.value=v.__value=k?S:null}else{let S=v.defaultChecked;v.removeAttribute(g),v.defaultChecked=S,v.checked=k?S:!1}}else n.removeAttribute(x);else y||d.includes(g)&&(a||typeof w!="string")?n[g]=w:typeof w!="function"&&em(n,g,w)}}}for(let x of Object.getOwnPropertySymbols(e))x.description===mO&&u3(n,()=>e[x]);return u}function VS(n){return n.__attributes??(n.__attributes={[BS]:n.nodeName.includes("-"),[zS]:n.namespaceURI===pO})}var oI=new Map;function WS(n){var t=oI.get(n.nodeName);if(t)return t;oI.set(n.nodeName,t=[]);for(var e,s=n,r=Element.prototype;r!==s;){e=WF(s);for(var o in e)e[o].set&&t.push(o);s=eS(s)}return t}function f3(n,t,e=t){YO(n,"input",s=>{var r=s?n.defaultValue:n.value;if(r=tb(n)?eb(r):r,e(r),r!==(r=t())){var o=n.selectionStart,a=n.selectionEnd;n.value=r??"",a!==null&&(n.selectionStart=o,n.selectionEnd=Math.min(a,n.value.length))}}),Ca(t)==null&&n.value&&e(tb(n)?eb(n.value):n.value),fg(()=>{var s=t();tb(n)&&s===eb(n.value)||n.type==="date"&&!s&&!n.value||s!==n.value&&(n.value=s??"")})}function tb(n){var t=n.type;return t==="number"||t==="range"}function eb(n){return n===""?null:+n}function aI(n,t){return n===t||(n==null?void 0:n[Au])===t}function m3(n={},t,e,s){return pg(()=>{var r,o;return fg(()=>{r=o,o=[],Ca(()=>{n!==e(...o)&&(t(n,...o),r&&aI(e(...r),n)&&t(null,...r))})}),()=>{mg(()=>{o&&aI(e(...o),n)&&t(null,...o)})}}),n}let df=!1;function g3(n){var t=df;try{return df=!1,[n(),df]}finally{df=t}}const y3={get(n,t){if(!n.exclude.includes(t))return n.props[t]},set(n,t){return!1},getOwnPropertyDescriptor(n,t){if(!n.exclude.includes(t)&&t in n.props)return{enumerable:!0,configurable:!0,value:n.props[t]}},has(n,t){return n.exclude.includes(t)?!1:t in n.props},ownKeys(n){return Reflect.ownKeys(n.props).filter(t=>!n.exclude.includes(t))}};function Vr(n,t,e){return new Proxy({props:n,exclude:t},y3)}const b3={get(n,t){let e=n.props.length;for(;e--;){let s=n.props[e];if(Qc(s)&&(s=s()),typeof s=="object"&&s!==null&&t in s)return s[t]}},set(n,t,e){let s=n.props.length;for(;s--;){let r=n.props[s];Qc(r)&&(r=r());const o=xa(r,t);if(o&&o.set)return o.set(e),!0}return!1},getOwnPropertyDescriptor(n,t){let e=n.props.length;for(;e--;){let s=n.props[e];if(Qc(s)&&(s=s()),typeof s=="object"&&s!==null&&t in s){const r=xa(s,t);return r&&!r.configurable&&(r.configurable=!0),r}}},has(n,t){if(t===Au||t===oS)return!1;for(let e of n.props)if(Qc(e)&&(e=e()),e!=null&&t in e)return!0;return!1},ownKeys(n){const t=[];for(let e of n.props)if(Qc(e)&&(e=e()),!!e){for(const s in e)t.includes(s)||t.push(s);for(const s of Object.getOwnPropertySymbols(e))t.includes(s)||t.push(s)}return t}};function Vo(...n){return new Proxy({props:n},b3)}function iI(n){var t;return((t=n.ctx)==null?void 0:t.d)??!1}function vt(n,t,e,s){var v;var r=(e&iO)!==0,o=!0,a=(e&lO)!==0,i=(e&cO)!==0,u=!1,c;a?[c,u]=g3(()=>n[t]):c=n[t];var l=Au in n||oS in n,d=a&&(((v=xa(n,t))==null?void 0:v.set)??(l&&t in n&&(k=>n[t]=k)))||void 0,h=s,p=!0,f=!1,m=()=>(f=!0,p&&(p=!1,i?h=Ca(s):h=s),h);c===void 0&&s!==void 0&&(d&&o&&tO(),c=m(),d&&d(c));var g;if(g=()=>{var k=n[t];return k===void 0?m():(p=!0,f=!1,k)},(e&uO)===0)return g;if(d){var y=n.$$legacy;return function(k,S){return arguments.length>0?((!S||y||u)&&d(S?g():k),k):g()}}var b=!1,x=hS(c),w=cg(()=>{var k=g(),S=J(x);return b?(b=!1,S):x.v=k});return a&&J(w),r||(w.equals=lw),function(k,S){if(arguments.length>0){const _=S?J(w):a?ys(k):k;if(!w.equals(_)){if(b=!0,gt(x,_),f&&h!==void 0&&(h=_),iI(w))return k;Ca(()=>J(w))}return k}return iI(w)?w.v:J(w)}}function US(n){bn===null&&hw(),On(()=>{const t=Ca(n);if(typeof t=="function")return t})}function x3(n,t,{bubbles:e=!1,cancelable:s=!1}={}){return new CustomEvent(n,{detail:t,bubbles:e,cancelable:s})}function w3(){const n=bn;return n===null&&hw(),(t,e,s)=>{var o;const r=(o=n.s.$$events)==null?void 0:o[t];if(r){const a=ag(r)?r.slice():[r],i=x3(t,e,s);for(const u of a)u.call(n.x,i);return!i.defaultPrevented}return!0}}const v3="5";var tS;typeof window<"u"&&((tS=window.__svelte??(window.__svelte={})).v??(tS.v=new Set)).add(v3);function I3(n){return typeof n=="function"}function k3(n){return n!==null&&typeof n=="object"}const $3=["string","number","bigint","boolean"];function Vb(n){return n==null||$3.includes(typeof n)?!0:Array.isArray(n)?n.every(t=>Vb(t)):typeof n=="object"?Object.getPrototypeOf(n)===Object.prototype:!1}const Ad=Symbol("box"),gw=Symbol("is-writable");function S3(n){return k3(n)&&Ad in n}function N3(n){return mt.isBox(n)&&gw in n}function mt(n){let t=Xt(ys(n));return{[Ad]:!0,[gw]:!0,get current(){return J(t)},set current(e){gt(t,e,!0)}}}function C3(n,t){const e=qt(n);return t?{[Ad]:!0,[gw]:!0,get current(){return J(e)},set current(s){t(s)}}:{[Ad]:!0,get current(){return n()}}}function _3(n){return mt.isBox(n)?n:I3(n)?mt.with(n):mt(n)}function T3(n){return Object.entries(n).reduce((t,[e,s])=>mt.isBox(s)?(mt.isWritableBox(s)?Object.defineProperty(t,e,{get(){return s.current},set(r){s.current=r}}):Object.defineProperty(t,e,{get(){return s.current}}),t):Object.assign(t,{[e]:s}),{})}function E3(n){return mt.isWritableBox(n)?{[Ad]:!0,get current(){return n.current}}:n}mt.from=_3;mt.with=C3;mt.flatten=T3;mt.readonly=E3;mt.isBox=S3;mt.isWritableBox=N3;function GS(...n){return function(t){var e;for(const s of n)if(s){if(t.defaultPrevented)return;typeof s=="function"?s.call(this,t):(e=s.current)==null||e.call(this,t)}}}var uI=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function bg(n){return n&&n.__esModule&&Object.prototype.hasOwnProperty.call(n,"default")?n.default:n}function A3(n){if(Object.prototype.hasOwnProperty.call(n,"__esModule"))return n;var t=n.default;if(typeof t=="function"){var e=function s(){return this instanceof s?Reflect.construct(t,arguments,this.constructor):t.apply(this,arguments)};e.prototype=t.prototype}else e={};return Object.defineProperty(e,"__esModule",{value:!0}),Object.keys(n).forEach(function(s){var r=Object.getOwnPropertyDescriptor(n,s);Object.defineProperty(e,s,r.get?r:{enumerable:!0,get:function(){return n[s]}})}),e}var xu={},nb,lI;function D3(){if(lI)return nb;lI=1;var n=/\/\*[^*]*\*+([^/*][^*]*\*+)*\//g,t=/\n/g,e=/^\s*/,s=/^(\*?[-#/*\\\w]+(\[[0-9a-z_-]+\])?)\s*/,r=/^:\s*/,o=/^((?:'(?:\\'|.)*?'|"(?:\\"|.)*?"|\([^)]*?\)|[^};])+)/,a=/^[;\s]*/,i=/^\s+|\s+$/g,u=`
`,c="/",l="*",d="",h="comment",p="declaration";nb=function(m,g){if(typeof m!="string")throw new TypeError("First argument must be a string");if(!m)return[];g=g||{};var y=1,b=1;function x(D){var R=D.match(t);R&&(y+=R.length);var F=D.lastIndexOf(u);b=~F?D.length-F:b+D.length}function w(){var D={line:y,column:b};return function(R){return R.position=new v(D),_(),R}}function v(D){this.start=D,this.end={line:y,column:b},this.source=g.source}v.prototype.content=m;function k(D){var R=new Error(g.source+":"+y+":"+b+": "+D);if(R.reason=D,R.filename=g.source,R.line=y,R.column=b,R.source=m,!g.silent)throw R}function S(D){var R=D.exec(m);if(R){var F=R[0];return x(F),m=m.slice(F.length),R}}function _(){S(e)}function C(D){var R;for(D=D||[];R=N();)R!==!1&&D.push(R);return D}function N(){var D=w();if(!(c!=m.charAt(0)||l!=m.charAt(1))){for(var R=2;d!=m.charAt(R)&&(l!=m.charAt(R)||c!=m.charAt(R+1));)++R;if(R+=2,d===m.charAt(R-1))return k("End of comment missing");var F=m.slice(2,R-2);return b+=2,x(F),m=m.slice(R),b+=2,D({type:h,comment:F})}}function $(){var D=w(),R=S(s);if(R){if(N(),!S(r))return k("property missing ':'");var F=S(o),z=D({type:p,property:f(R[0].replace(n,d)),value:F?f(F[0].replace(n,d)):d});return S(a),z}}function A(){var D=[];C(D);for(var R;R=$();)R!==!1&&(D.push(R),C(D));return D}return _(),A()};function f(m){return m?m.replace(i,d):d}return nb}var cI;function R3(){if(cI)return xu;cI=1;var n=xu&&xu.__importDefault||function(s){return s&&s.__esModule?s:{default:s}};Object.defineProperty(xu,"__esModule",{value:!0}),xu.default=e;var t=n(D3());function e(s,r){var o=null;if(!s||typeof s!="string")return o;var a=(0,t.default)(s),i=typeof r=="function";return a.forEach(function(u){if(u.type==="declaration"){var c=u.property,l=u.value;i?r(c,l,u):l&&(o=o||{},o[c]=l)}}),o}return xu}var F3=R3();const dI=bg(F3),O3=dI.default||dI,P3=/\d/,L3=["-","_","/","."];function M3(n=""){if(!P3.test(n))return n!==n.toLowerCase()}function B3(n){const t=[];let e="",s,r;for(const o of n){const a=L3.includes(o);if(a===!0){t.push(e),e="",s=void 0;continue}const i=M3(o);if(r===!1){if(s===!1&&i===!0){t.push(e),e=o,s=i;continue}if(s===!0&&i===!1&&e.length>1){const u=e.at(-1);t.push(e.slice(0,Math.max(0,e.length-1))),e=u+o,s=i;continue}}e+=o,s=i,r=a}return t.push(e),t}function HS(n){return n?B3(n).map(t=>V3(t)).join(""):""}function z3(n){return W3(HS(n||""))}function V3(n){return n?n[0].toUpperCase()+n.slice(1):""}function W3(n){return n?n[0].toLowerCase()+n.slice(1):""}function hd(n){if(!n)return{};const t={};function e(s,r){if(s.startsWith("-moz-")||s.startsWith("-webkit-")||s.startsWith("-ms-")||s.startsWith("-o-")){t[HS(s)]=r;return}if(s.startsWith("--")){t[s]=r;return}t[z3(s)]=r}return O3(n,e),t}function gi(...n){return(...t)=>{for(const e of n)typeof e=="function"&&e(...t)}}function U3(n,t){const e=RegExp(n,"g");return s=>{if(typeof s!="string")throw new TypeError(`expected an argument of type string, but got ${typeof s}`);return s.match(e)?s.replace(e,t):s}}const G3=U3(/[A-Z]/,n=>`-${n.toLowerCase()}`);function H3(n){if(!n||typeof n!="object"||Array.isArray(n))throw new TypeError(`expected an argument of type object, but got ${typeof n}`);return Object.keys(n).map(t=>`${G3(t)}: ${n[t]};`).join(`
`)}function yw(n={}){return H3(n).replace(`
`," ")}const j3={position:"absolute",width:"1px",height:"1px",padding:"0",margin:"-1px",overflow:"hidden",clip:"rect(0, 0, 0, 0)",whiteSpace:"nowrap",borderWidth:"0",transform:"translateX(-100%)"};yw(j3);function q3(n){var t;return n.length>2&&n.startsWith("on")&&n[2]===((t=n[2])==null?void 0:t.toLowerCase())}function yi(...n){const t={...n[0]};for(let e=1;e<n.length;e++){const s=n[e];for(const r in s){const o=t[r],a=s[r],i=typeof o=="function",u=typeof a=="function";if(i&&q3(r)){const c=o,l=a;t[r]=GS(c,l)}else if(i&&u)t[r]=gi(o,a);else if(r==="class"){const c=Vb(o),l=Vb(a);c&&l?t[r]=Af(o,a):c?t[r]=Af(o):l&&(t[r]=Af(a))}else if(r==="style"){const c=typeof o=="object",l=typeof a=="object",d=typeof o=="string",h=typeof a=="string";if(c&&l)t[r]={...o,...a};else if(c&&h){const p=hd(a);t[r]={...o,...p}}else if(d&&l){const p=hd(o);t[r]={...p,...a}}else if(d&&h){const p=hd(o),f=hd(a);t[r]={...p,...f}}else c?t[r]=o:l?t[r]=a:d?t[r]=o:h&&(t[r]=a)}else t[r]=a!==void 0?a:o}}return typeof t.style=="object"&&(t.style=yw(t.style).replaceAll(`
`," ")),t.hidden!==!0&&(t.hidden=void 0,delete t.hidden),t.disabled!==!0&&(t.disabled=void 0,delete t.disabled),t}const jS=typeof window<"u"?window:void 0;function K3(n){let t=n.activeElement;for(;t!=null&&t.shadowRoot;){const e=t.shadowRoot.activeElement;if(e===t)break;t=e}return t}function Su(n){gt(n,n.v+1)}var Yr,Jr,Eo,Vu,Df;const Dv=class Dv extends Map{constructor(e){super();$t(this,Vu);$t(this,Yr,new Map);$t(this,Jr,$r(0));$t(this,Eo,$r(0));if(e){for(var[s,r]of e)super.set(s,r);st(this,Eo).v=super.size}}has(e){var s=st(this,Yr),r=s.get(e);if(r===void 0){var o=super.get(e);if(o!==void 0)r=$r(0),s.set(e,r);else return J(st(this,Jr)),!1}return J(r),!0}forEach(e,s){sa(this,Vu,Df).call(this),super.forEach(e,s)}get(e){var s=st(this,Yr),r=s.get(e);if(r===void 0){var o=super.get(e);if(o!==void 0)r=$r(0),s.set(e,r);else{J(st(this,Jr));return}}return J(r),super.get(e)}set(e,s){var d;var r=st(this,Yr),o=r.get(e),a=super.get(e),i=super.set(e,s),u=st(this,Jr);if(o===void 0)r.set(e,$r(0)),gt(st(this,Eo),super.size),Su(u);else if(a!==s){Su(o);var c=u.reactions===null?null:new Set(u.reactions),l=c===null||!((d=o.reactions)!=null&&d.every(h=>c.has(h)));l&&Su(u)}return i}delete(e){var s=st(this,Yr),r=s.get(e),o=super.delete(e);return r!==void 0&&(s.delete(e),gt(st(this,Eo),super.size),gt(r,-1),Su(st(this,Jr))),o}clear(){if(super.size!==0){super.clear();var e=st(this,Yr);gt(st(this,Eo),0);for(var s of e.values())gt(s,-1);Su(st(this,Jr)),e.clear()}}keys(){return J(st(this,Jr)),super.keys()}values(){return sa(this,Vu,Df).call(this),super.values()}entries(){return sa(this,Vu,Df).call(this),super.entries()}[Symbol.iterator](){return this.entries()}get size(){return J(st(this,Eo)),super.size}};Yr=new WeakMap,Jr=new WeakMap,Eo=new WeakMap,Vu=new WeakSet,Df=function(){J(st(this,Jr));var e=st(this,Yr);if(st(this,Eo).v!==e.size)for(var s of Kv(Dv.prototype,this,"keys").call(this))e.has(s)||e.set(s,$r(0));for(var[,r]of st(this,Yr))J(r)};let Wb=Dv;function X3(n){let t=0,e=$r(0),s;return()=>{SO()&&(J(e),fg(()=>(t===0&&(s=Ca(()=>n(()=>Su(e)))),t+=1,()=>{AS().then(()=>{t-=1,t===0&&(s==null||s(),s=void 0)})})))}}var Wu,nh;class Y3{constructor(t={}){$t(this,Wu);$t(this,nh);const{window:e=jS,document:s=e==null?void 0:e.document}=t;e!==void 0&&(Wn(this,Wu,s),Wn(this,nh,X3(r=>{const o=Rs(e,"focusin",r),a=Rs(e,"focusout",r);return()=>{o(),a()}})))}get current(){var t;return(t=st(this,nh))==null||t.call(this),st(this,Wu)?K3(st(this,Wu)):null}}Wu=new WeakMap,nh=new WeakMap;new Y3;function J3(n){return typeof n=="function"}function Z3(n,t){switch(n){case"post":On(t);break;case"pre":NO(t);break}}function qS(n,t,e,s={}){const{lazy:r=!1}=s;let o=!r,a=Array.isArray(n)?[]:void 0;Z3(t,()=>{const i=Array.isArray(n)?n.map(c=>c()):n();if(!o){o=!0,a=i;return}const u=Ca(()=>e(i,a));return a=i,u})}function xs(n,t,e){qS(n,"post",t,e)}function Q3(n,t,e){qS(n,"pre",t,e)}xs.pre=Q3;function tP(n){return J3(n)?n():n}var Ao;class eP{constructor(t,e={box:"border-box"}){$t(this,Ao,Xt(ys({width:0,height:0})));var r,o;const s=e.window??jS;gt(st(this,Ao),{width:((r=e.initialSize)==null?void 0:r.width)??0,height:((o=e.initialSize)==null?void 0:o.height)??0},!0),On(()=>{if(!s)return;const a=tP(t);if(!a)return;const i=new s.ResizeObserver(u=>{for(const c of u){const l=e.box==="content-box"?c.contentBoxSize:c.borderBoxSize,d=Array.isArray(l)?l:[l];J(st(this,Ao)).width=d.reduce((h,p)=>Math.max(h,p.inlineSize),0),J(st(this,Ao)).height=d.reduce((h,p)=>Math.max(h,p.blockSize),0)}});return i.observe(a),()=>{i.disconnect()}})}get current(){return J(st(this,Ao))}get width(){return J(st(this,Ao)).width}get height(){return J(st(this,Ao)).height}}Ao=new WeakMap;var sh,rh;class nP{constructor(t){$t(this,sh,Xt(void 0));$t(this,rh);On(()=>{gt(st(this,sh),st(this,rh),!0),Wn(this,rh,t())})}get current(){return J(st(this,sh))}}sh=new WeakMap,rh=new WeakMap;var oh,Do;class xg{constructor(t){$t(this,oh);$t(this,Do);Wn(this,oh,t),Wn(this,Do,Symbol(t))}get key(){return st(this,Do)}exists(){return yO(st(this,Do))}get(){const t=Zv(st(this,Do));if(t===void 0)throw new Error(`Context "${st(this,oh)}" not found`);return t}getOr(t){const e=Zv(st(this,Do));return e===void 0?t:e}set(t){return gO(st(this,Do),t)}}oh=new WeakMap,Do=new WeakMap;function KS(n){On(()=>()=>{n()})}function Wo({id:n,ref:t,deps:e=()=>!0,onRefChange:s,getRootNode:r}){xs([()=>n.current,e],([o])=>{const a=(r==null?void 0:r())??document,i=a==null?void 0:a.getElementById(o);i?t.current=i:t.current=null,s==null||s(t.current)}),KS(()=>{t.current=null,s==null||s(null)})}function bw(n,t){return setTimeout(t,n)}function wg(n){AS().then(n)}function XS(n){return n?"open":"closed"}function sP(n){return n?"true":"false"}function rP(n){return n?"true":void 0}const oP="Enter",aP="Escape",iP=" ",uP="Tab",xw=typeof document<"u",hI=lP();function lP(){var n,t;return xw&&((n=window==null?void 0:window.navigator)==null?void 0:n.userAgent)&&(/iP(ad|hone|od)/.test(window.navigator.userAgent)||((t=window==null?void 0:window.navigator)==null?void 0:t.maxTouchPoints)>2&&/iPad|Macintosh/.test(window==null?void 0:window.navigator.userAgent))}function Ub(n){return n instanceof HTMLElement}function YS(n){return n instanceof Element}function cP(n){return n!==null}function dP(n){return n instanceof HTMLInputElement&&"select"in n}function hP(n,t){if(getComputedStyle(n).visibility==="hidden")return!0;for(;n;){if(t!==void 0&&n===t)return!1;if(getComputedStyle(n).display==="none")return!0;n=n.parentElement}return!1}globalThis.bitsIdCounter??(globalThis.bitsIdCounter={current:0});function qi(n="bits"){return globalThis.bitsIdCounter.current++,`${n}-${globalThis.bitsIdCounter.current}`}function Hn(){}function pP(n,t){const e=mt(n);function s(o){return t[e.current][o]??e.current}return{state:e,dispatch:o=>{e.current=s(o)}}}function fP(n,t){let e=Xt(ys({})),s=Xt("none");const r=n.current?"mounted":"unmounted";let o=Xt(null);const a=new nP(()=>n.current);xs([()=>t.current,()=>n.current],([h,p])=>{!h||!p||wg(()=>{gt(o,document.getElementById(h),!0)})});const{state:i,dispatch:u}=pP(r,{mounted:{UNMOUNT:"unmounted",ANIMATION_OUT:"unmountSuspended"},unmountSuspended:{MOUNT:"mounted",ANIMATION_END:"unmounted"},unmounted:{MOUNT:"mounted"}});xs(()=>n.current,h=>{if(J(o)||gt(o,document.getElementById(t.current),!0),!J(o)||!(h!==a.current))return;const f=J(s),m=hf(J(o));h?u("MOUNT"):m==="none"||J(e).display==="none"?u("UNMOUNT"):u(a&&f!==m?"ANIMATION_OUT":"UNMOUNT")});function c(h){if(J(o)||gt(o,document.getElementById(t.current),!0),!J(o))return;const p=hf(J(o)),f=p.includes(h.animationName)||p==="none";h.target===J(o)&&f&&u("ANIMATION_END")}function l(h){J(o)||gt(o,document.getElementById(t.current),!0),J(o)&&h.target===J(o)&&gt(s,hf(J(o)),!0)}xs(()=>i.current,()=>{if(J(o)||gt(o,document.getElementById(t.current),!0),!J(o))return;const h=hf(J(o));gt(s,i.current==="mounted"?h:"none",!0)}),xs(()=>J(o),h=>{if(h)return gt(e,getComputedStyle(h),!0),gi(Rs(h,"animationstart",l),Rs(h,"animationcancel",c),Rs(h,"animationend",c))});const d=qt(()=>["mounted","unmountSuspended"].includes(i.current));return{get current(){return J(d)}}}function hf(n){return n&&getComputedStyle(n).animationName||"none"}function mP(n,t){rn(t,!0);const e=fP(mt.with(()=>t.present),mt.with(()=>t.id));var s=ye(),r=ne(s);{var o=a=>{var i=ye(),u=ne(i);He(u,()=>t.presence??nn,()=>({present:e})),Ot(a,i)};Rn(r,a=>{(t.forceMount||t.present||e.current)&&a(o)})}Ot(n,s),on()}function gP(n,t){var e=ye(),s=ne(e);n3(s,()=>t.children,r=>{var o=ye(),a=ne(o);He(a,()=>t.children??nn),Ot(r,o)}),Ot(n,e)}function yP(n,t){rn(t,!0);let e=vt(t,"to",3,"body");const s=bO();let r=qt(o);function o(){if(!xw||t.disabled)return null;let d=null;return typeof e()=="string"?d=document.querySelector(e()):(e()instanceof HTMLElement||e()instanceof DocumentFragment)&&(d=e()),d}let a;function i(){a&&(e3(a),a=null)}xs([()=>J(r),()=>t.disabled],([d,h])=>{if(!d||h){i();return}return a=PS(gP,{target:d,props:{children:t.children},context:s}),()=>{i()}});var u=ye(),c=ne(u);{var l=d=>{var h=ye(),p=ne(h);He(p,()=>t.children??nn),Ot(d,h)};Rn(c,d=>{t.disabled&&d(l)})}Ot(n,u),on()}function JS(n,t,e,s){const r=Array.isArray(t)?t:[t];return r.forEach(o=>n.addEventListener(o,e,s)),()=>{r.forEach(o=>n.removeEventListener(o,e,s))}}class ZS{constructor(t,e={bubbles:!0,cancelable:!0}){ke(this,"eventName");ke(this,"options");this.eventName=t,this.options=e}createEvent(t){return new CustomEvent(this.eventName,{...this.options,detail:t})}dispatch(t,e){const s=this.createEvent(e);return t.dispatchEvent(s),s}listen(t,e,s){const r=o=>{e(o)};return Rs(t,this.eventName,r,s)}}function pI(n,t=500){let e=null;const s=(...r)=>{e!==null&&clearTimeout(e),e=setTimeout(()=>{n(...r)},t)};return s.destroy=()=>{e!==null&&(clearTimeout(e),e=null)},s}function ww(n,t){return n===t||n.contains(t)}function QS(n){return(n==null?void 0:n.ownerDocument)??document}function bP(n,t){const{clientX:e,clientY:s}=n,r=t.getBoundingClientRect();return e<r.left||e>r.right||s<r.top||s>r.bottom}globalThis.bitsDismissableLayers??(globalThis.bitsDismissableLayers=new Map);var Uu,fi,ca,Gu,Hu,da,ah,ih,Ro,Gm,pl,tN,Hm,ju,jm,qm,Km,Xm,uh,eN,Ym,Jm;class xP{constructor(t){$t(this,pl);ke(this,"opts");$t(this,Uu);$t(this,fi);$t(this,ca,{pointerdown:!1});$t(this,Gu,!1);$t(this,Hu,!1);ke(this,"node",mt(null));$t(this,da);$t(this,ah);$t(this,ih,Xt(null));$t(this,Ro,Hn);$t(this,Gm,t=>{t.defaultPrevented||this.currNode&&wg(()=>{var e,s;!this.currNode||st(this,Xm).call(this,t.target)||t.target&&!st(this,Hu)&&((s=(e=st(this,ah)).current)==null||s.call(e,t))})});$t(this,Hm,t=>{let e=t;e.defaultPrevented&&(e=fI(t)),st(this,Uu).current(t)});$t(this,ju,pI(t=>{if(!this.currNode){st(this,Ro).call(this);return}const e=this.opts.isValidEvent.current(t,this.currNode)||kP(t,this.currNode);if(!st(this,Gu)||sa(this,pl,eN).call(this)||!e){st(this,Ro).call(this);return}let s=t;if(s.defaultPrevented&&(s=fI(s)),st(this,fi).current!=="close"&&st(this,fi).current!=="defer-otherwise-close"){st(this,Ro).call(this);return}t.pointerType==="touch"?(st(this,Ro).call(this),Wn(this,Ro,JS(st(this,da),"click",st(this,Hm),{once:!0}))):st(this,Uu).current(s)},10));$t(this,jm,t=>{st(this,ca)[t.type]=!0});$t(this,qm,t=>{st(this,ca)[t.type]=!1});$t(this,Km,()=>{this.node.current&&Wn(this,Gu,IP(this.node.current))});$t(this,Xm,t=>this.node.current?ww(this.node.current,t):!1);$t(this,uh,pI(()=>{for(const t in st(this,ca))st(this,ca)[t]=!1;Wn(this,Gu,!1)},20));$t(this,Ym,()=>{Wn(this,Hu,!0)});$t(this,Jm,()=>{Wn(this,Hu,!1)});ke(this,"props",{onfocuscapture:st(this,Ym),onblurcapture:st(this,Jm)});this.opts=t,Wo({id:t.id,ref:this.node,deps:()=>t.enabled.current,onRefChange:r=>{this.currNode=r}}),Wn(this,fi,t.interactOutsideBehavior),Wn(this,Uu,t.onInteractOutside),Wn(this,ah,t.onFocusOutside),On(()=>{Wn(this,da,QS(this.currNode))});let e=Hn;const s=()=>{st(this,uh).call(this),globalThis.bitsDismissableLayers.delete(this),st(this,ju).destroy(),e()};xs([()=>this.opts.enabled.current,()=>this.currNode],([r,o])=>{if(!(!r||!o))return bw(1,()=>{this.currNode&&(globalThis.bitsDismissableLayers.set(this,st(this,fi)),e(),e=sa(this,pl,tN).call(this))}),s}),KS(()=>{st(this,uh).destroy(),globalThis.bitsDismissableLayers.delete(this),st(this,ju).destroy(),st(this,Ro).call(this),e()})}get currNode(){return J(st(this,ih))}set currNode(t){gt(st(this,ih),t,!0)}}Uu=new WeakMap,fi=new WeakMap,ca=new WeakMap,Gu=new WeakMap,Hu=new WeakMap,da=new WeakMap,ah=new WeakMap,ih=new WeakMap,Ro=new WeakMap,Gm=new WeakMap,pl=new WeakSet,tN=function(){return gi(Rs(st(this,da),"pointerdown",gi(st(this,jm),st(this,Km)),{capture:!0}),Rs(st(this,da),"pointerdown",gi(st(this,qm),st(this,ju))),Rs(st(this,da),"focusin",st(this,Gm)))},Hm=new WeakMap,ju=new WeakMap,jm=new WeakMap,qm=new WeakMap,Km=new WeakMap,Xm=new WeakMap,uh=new WeakMap,eN=function(){return Object.values(st(this,ca)).some(Boolean)},Ym=new WeakMap,Jm=new WeakMap;function wP(n){return new xP(n)}function vP(n){return n.findLast(([t,{current:e}])=>e==="close"||e==="ignore")}function IP(n){const t=[...globalThis.bitsDismissableLayers],e=vP(t);if(e)return e[0].node.current===n;const[s]=t[0];return s.node.current===n}function kP(n,t){if("button"in n&&n.button>0)return!1;const e=n.target;return YS(e)?QS(e).documentElement.contains(e)&&!ww(t,e)&&bP(n,t):!1}function fI(n){const t=n.currentTarget,e=n.target;let s;n instanceof PointerEvent?s=new PointerEvent(n.type,n):s=new PointerEvent("pointerdown",n);let r=!1;return new Proxy(s,{get:(a,i)=>i==="currentTarget"?t:i==="target"?e:i==="preventDefault"?()=>{r=!0,typeof a.preventDefault=="function"&&a.preventDefault()}:i==="defaultPrevented"?r:i in a?a[i]:n[i]})}function $P(n,t){rn(t,!0);let e=vt(t,"interactOutsideBehavior",3,"close"),s=vt(t,"onInteractOutside",3,Hn),r=vt(t,"onFocusOutside",3,Hn),o=vt(t,"isValidEvent",3,()=>!1);const a=wP({id:mt.with(()=>t.id),interactOutsideBehavior:mt.with(()=>e()),onInteractOutside:mt.with(()=>s()),enabled:mt.with(()=>t.enabled),onFocusOutside:mt.with(()=>r()),isValidEvent:mt.with(()=>o())});var i=ye(),u=ne(i);He(u,()=>t.children??nn,()=>({props:a.props})),Ot(n,i),on()}globalThis.bitsEscapeLayers??(globalThis.bitsEscapeLayers=new Map);var Zm,Qm;class SP{constructor(t){ke(this,"opts");$t(this,Zm,()=>Rs(document,"keydown",st(this,Qm),{passive:!1}));$t(this,Qm,t=>{if(t.key!==aP||!CP(this))return;const e=new KeyboardEvent(t.type,t);t.preventDefault();const s=this.opts.escapeKeydownBehavior.current;s!=="close"&&s!=="defer-otherwise-close"||this.opts.onEscapeKeydown.current(e)});this.opts=t;let e=Hn;xs(()=>t.enabled.current,s=>(s&&(globalThis.bitsEscapeLayers.set(this,t.escapeKeydownBehavior),e=st(this,Zm).call(this)),()=>{e(),globalThis.bitsEscapeLayers.delete(this)}))}}Zm=new WeakMap,Qm=new WeakMap;function NP(n){return new SP(n)}function CP(n){const t=[...globalThis.bitsEscapeLayers],e=t.findLast(([r,{current:o}])=>o==="close"||o==="ignore");if(e)return e[0]===n;const[s]=t[0];return s===n}function _P(n,t){rn(t,!0);let e=vt(t,"escapeKeydownBehavior",3,"close"),s=vt(t,"onEscapeKeydown",3,Hn);NP({escapeKeydownBehavior:mt.with(()=>e()),onEscapeKeydown:mt.with(()=>s()),enabled:mt.with(()=>t.enabled)});var r=ye(),o=ne(r);He(o,()=>t.children??nn),Ot(n,r),on()}const ra=mt([]);function TP(){return{add(n){const t=ra.current[0];t&&n.id!==t.id&&t.pause(),ra.current=mI(ra.current,n),ra.current.unshift(n)},remove(n){var t;ra.current=mI(ra.current,n),(t=ra.current[0])==null||t.resume()},get current(){return ra.current}}}function EP(){let n=Xt(!1),t=Xt(!1);return{id:qi(),get paused(){return J(n)},get isHandlingFocus(){return J(t)},set isHandlingFocus(e){gt(t,e,!0)},pause(){gt(n,!0)},resume(){gt(n,!1)}}}function mI(n,t){return[...n].filter(e=>e.id!==t.id)}function AP(n){return n.filter(t=>t.tagName!=="A")}function oa(n,{select:t=!1}={}){if(!(n&&n.focus)||document.activeElement===n)return;const e=document.activeElement;n.focus({preventScroll:!0}),n!==e&&dP(n)&&t&&n.select()}function DP(n,{select:t=!1}={}){const e=document.activeElement;for(const s of n)if(oa(s,{select:t}),document.activeElement!==e)return!0}function gI(n,t){for(const e of n)if(!hP(e,t))return e}function nN(n){const t=[],e=document.createTreeWalker(n,NodeFilter.SHOW_ELEMENT,{acceptNode:s=>{const r=s.tagName==="INPUT"&&s.type==="hidden";return s.disabled||s.hidden||r?NodeFilter.FILTER_SKIP:s.tabIndex>=0?NodeFilter.FILTER_ACCEPT:NodeFilter.FILTER_SKIP}});for(;e.nextNode();)t.push(e.currentNode);return t}function RP(n){const t=nN(n),e=gI(t,n),s=gI(t.reverse(),n);return[e,s]}/*!
* tabbable 6.2.0
* @license MIT, https://github.com/focus-trap/tabbable/blob/master/LICENSE
*/var FP=["input:not([inert])","select:not([inert])","textarea:not([inert])","a[href]:not([inert])","button:not([inert])","[tabindex]:not(slot):not([inert])","audio[controls]:not([inert])","video[controls]:not([inert])",'[contenteditable]:not([contenteditable="false"]):not([inert])',"details>summary:first-of-type:not([inert])","details:not([inert])"],OP=FP.join(","),sN=typeof Element>"u",nm=sN?function(){}:Element.prototype.matches||Element.prototype.msMatchesSelector||Element.prototype.webkitMatchesSelector,sm=!sN&&Element.prototype.getRootNode?function(n){var t;return n==null||(t=n.getRootNode)===null||t===void 0?void 0:t.call(n)}:function(n){return n==null?void 0:n.ownerDocument},PP=function n(t,e){var s;e===void 0&&(e=!0);var r=t==null||(s=t.getAttribute)===null||s===void 0?void 0:s.call(t,"inert"),o=r===""||r==="true",a=o||e&&t&&n(t.parentNode);return a},LP=function(t){var e,s=t==null||(e=t.getAttribute)===null||e===void 0?void 0:e.call(t,"contenteditable");return s===""||s==="true"},MP=function(t){return!isNaN(parseInt(t.getAttribute("tabindex"),10))},BP=function(t){if(!t)throw new Error("No node provided");return t.tabIndex<0&&(/^(AUDIO|VIDEO|DETAILS)$/.test(t.tagName)||LP(t))&&!MP(t)?0:t.tabIndex},rN=function(t){return t.tagName==="INPUT"},zP=function(t){return rN(t)&&t.type==="hidden"},VP=function(t){var e=t.tagName==="DETAILS"&&Array.prototype.slice.apply(t.children).some(function(s){return s.tagName==="SUMMARY"});return e},WP=function(t,e){for(var s=0;s<t.length;s++)if(t[s].checked&&t[s].form===e)return t[s]},UP=function(t){if(!t.name)return!0;var e=t.form||sm(t),s=function(i){return e.querySelectorAll('input[type="radio"][name="'+i+'"]')},r;if(typeof window<"u"&&typeof window.CSS<"u"&&typeof window.CSS.escape=="function")r=s(window.CSS.escape(t.name));else try{r=s(t.name)}catch(a){return console.error("Looks like you have a radio button with a name attribute containing invalid CSS selector characters and need the CSS.escape polyfill: %s",a.message),!1}var o=WP(r,t.form);return!o||o===t},GP=function(t){return rN(t)&&t.type==="radio"},HP=function(t){return GP(t)&&!UP(t)},jP=function(t){var e,s=t&&sm(t),r=(e=s)===null||e===void 0?void 0:e.host,o=!1;if(s&&s!==t){var a,i,u;for(o=!!((a=r)!==null&&a!==void 0&&(i=a.ownerDocument)!==null&&i!==void 0&&i.contains(r)||t!=null&&(u=t.ownerDocument)!==null&&u!==void 0&&u.contains(t));!o&&r;){var c,l,d;s=sm(r),r=(c=s)===null||c===void 0?void 0:c.host,o=!!((l=r)!==null&&l!==void 0&&(d=l.ownerDocument)!==null&&d!==void 0&&d.contains(r))}}return o},yI=function(t){var e=t.getBoundingClientRect(),s=e.width,r=e.height;return s===0&&r===0},qP=function(t,e){var s=e.displayCheck,r=e.getShadowRoot;if(getComputedStyle(t).visibility==="hidden")return!0;var o=nm.call(t,"details>summary:first-of-type"),a=o?t.parentElement:t;if(nm.call(a,"details:not([open]) *"))return!0;if(!s||s==="full"||s==="legacy-full"){if(typeof r=="function"){for(var i=t;t;){var u=t.parentElement,c=sm(t);if(u&&!u.shadowRoot&&r(u)===!0)return yI(t);t.assignedSlot?t=t.assignedSlot:!u&&c!==t.ownerDocument?t=c.host:t=u}t=i}if(jP(t))return!t.getClientRects().length;if(s!=="legacy-full")return!0}else if(s==="non-zero-area")return yI(t);return!1},KP=function(t){if(/^(INPUT|BUTTON|SELECT|TEXTAREA)$/.test(t.tagName))for(var e=t.parentElement;e;){if(e.tagName==="FIELDSET"&&e.disabled){for(var s=0;s<e.children.length;s++){var r=e.children.item(s);if(r.tagName==="LEGEND")return nm.call(e,"fieldset[disabled] *")?!0:!r.contains(t)}return!0}e=e.parentElement}return!1},XP=function(t,e){return!(e.disabled||PP(e)||zP(e)||qP(e,t)||VP(e)||KP(e))},YP=function(t,e){return!(HP(e)||BP(e)<0||!XP(t,e))},JP=function(t,e){if(e=e||{},!t)throw new Error("No node provided");return nm.call(t,OP)===!1?!1:YP(e,t)};const ZP=new ZS("focusScope.autoFocusOnMount",{bubbles:!1,cancelable:!0}),QP=new ZS("focusScope.autoFocusOnDestroy",{bubbles:!1,cancelable:!0}),tL=new xg("FocusScope");function eL({id:n,loop:t,enabled:e,onOpenAutoFocus:s,onCloseAutoFocus:r,forceMount:o}){const a=TP(),i=EP(),u=mt(null),c=tL.getOr({ignoreCloseAutoFocus:!1});let l=null;Wo({id:n,ref:u,deps:()=>e.current});function d(y){if(!(i.paused||!u.current||i.isHandlingFocus)){i.isHandlingFocus=!0;try{const b=y.target;if(!Ub(b))return;const x=u.current.contains(b);if(y.type==="focusin")if(x)l=b;else{if(c.ignoreCloseAutoFocus)return;oa(l,{select:!0})}else y.type==="focusout"&&!x&&!c.ignoreCloseAutoFocus&&oa(l,{select:!0})}finally{i.isHandlingFocus=!1}}}function h(y){if(!l||!u.current)return;let b=!1;for(const x of y){if(x.type==="childList"&&x.removedNodes.length>0)for(const w of x.removedNodes){if(w===l){b=!0;break}if(w.nodeType===Node.ELEMENT_NODE&&w.contains(l)){b=!0;break}}if(b)break}b&&u.current&&!u.current.contains(document.activeElement)&&oa(u.current)}xs([()=>u.current,()=>e.current],([y,b])=>{if(!y||!b)return;const x=gi(Rs(document,"focusin",d),Rs(document,"focusout",d)),w=new MutationObserver(h);return w.observe(y,{childList:!0,subtree:!0,attributes:!1}),()=>{x(),w.disconnect()}}),xs([()=>o.current,()=>u.current],([y,b])=>{if(y)return;const x=document.activeElement;return p(b,x),()=>{b&&f(x)}}),xs([()=>o.current,()=>u.current,()=>e.current],([y,b])=>{if(!y)return;const x=document.activeElement;return p(b,x),()=>{b&&f(x)}});function p(y,b){if(y||(y=document.getElementById(n.current)),!y||!e.current)return;if(a.add(i),!y.contains(b)){const w=ZP.createEvent();s.current(w),w.defaultPrevented||wg(()=>{if(!y)return;DP(AP(nN(y)),{select:!0})||oa(y)})}}function f(y){var w;const b=QP.createEvent();(w=r.current)==null||w.call(r,b);const x=c.ignoreCloseAutoFocus;bw(0,()=>{!b.defaultPrevented&&y&&!x&&oa(JP(y)?y:document.body,{select:!0}),a.remove(i)})}function m(y){if(!e.current||!t.current&&!e.current||i.paused)return;const b=y.key===uP&&!y.ctrlKey&&!y.altKey&&!y.metaKey,x=document.activeElement;if(!(b&&x))return;const w=u.current;if(!w)return;const[v,k]=RP(w);v&&k?!y.shiftKey&&x===k?(y.preventDefault(),t.current&&oa(v,{select:!0})):y.shiftKey&&x===v&&(y.preventDefault(),t.current&&oa(k,{select:!0})):x===w&&y.preventDefault()}const g=qt(()=>({id:n.current,tabindex:-1,onkeydown:m}));return{get props(){return J(g)}}}function nL(n,t){rn(t,!0);let e=vt(t,"trapFocus",3,!1),s=vt(t,"loop",3,!1),r=vt(t,"onCloseAutoFocus",3,Hn),o=vt(t,"onOpenAutoFocus",3,Hn),a=vt(t,"forceMount",3,!1);const i=eL({enabled:mt.with(()=>e()),loop:mt.with(()=>s()),onCloseAutoFocus:mt.with(()=>r()),onOpenAutoFocus:mt.with(()=>o()),id:mt.with(()=>t.id),forceMount:mt.with(()=>a())});var u=ye(),c=ne(u);He(c,()=>t.focusScope??nn,()=>({props:i.props})),Ot(n,u),on()}globalThis.bitsTextSelectionLayers??(globalThis.bitsTextSelectionLayers=new Map);var qu,lh,tg,oN,eg,ch;class sL{constructor(t){$t(this,tg);ke(this,"opts");$t(this,qu,Hn);$t(this,lh,mt(null));$t(this,eg,t=>{const e=st(this,lh).current,s=t.target;!Ub(e)||!Ub(s)||!this.opts.enabled.current||!aL(this)||!ww(e,s)||(this.opts.onPointerDown.current(t),!t.defaultPrevented&&Wn(this,qu,oL(e)))});$t(this,ch,()=>{st(this,qu).call(this),Wn(this,qu,Hn)});this.opts=t,Wo({id:t.id,ref:st(this,lh),deps:()=>this.opts.enabled.current});let e=Hn;xs(()=>this.opts.enabled.current,s=>(s&&(globalThis.bitsTextSelectionLayers.set(this,this.opts.enabled),e(),e=sa(this,tg,oN).call(this)),()=>{e(),st(this,ch).call(this),globalThis.bitsTextSelectionLayers.delete(this)}))}}qu=new WeakMap,lh=new WeakMap,tg=new WeakSet,oN=function(){return gi(Rs(document,"pointerdown",st(this,eg)),Rs(document,"pointerup",GS(st(this,ch),this.opts.onPointerUp.current)))},eg=new WeakMap,ch=new WeakMap;function rL(n){return new sL(n)}const bI=n=>n.style.userSelect||n.style.webkitUserSelect;function oL(n){const t=document.body,e=bI(t),s=bI(n);return pf(t,"none"),pf(n,"text"),()=>{pf(t,e),pf(n,s)}}function pf(n,t){n.style.userSelect=t,n.style.webkitUserSelect=t}function aL(n){const t=[...globalThis.bitsTextSelectionLayers];if(!t.length)return!1;const e=t.at(-1);return e?e[0]===n:!1}function iL(n,t){rn(t,!0);let e=vt(t,"preventOverflowTextSelection",3,!0),s=vt(t,"onPointerDown",3,Hn),r=vt(t,"onPointerUp",3,Hn);rL({id:mt.with(()=>t.id),onPointerDown:mt.with(()=>s()),onPointerUp:mt.with(()=>r()),enabled:mt.with(()=>t.enabled&&e())});var o=ye(),a=ne(o);He(a,()=>t.children??nn),Ot(n,o),on()}function uL(n){let t=0,e=Xt(void 0),s;function r(){t-=1,s&&t<=0&&(s(),gt(e,void 0),s=void 0)}return(...o)=>(t+=1,J(e)===void 0&&(s=CO(()=>{gt(e,n(...o),!0)})),On(()=>()=>{r()}),J(e))}const lL=uL(()=>{const n=new Wb,t=qt(()=>{for(const o of n.values())if(o)return!0;return!1});let e=Xt(null),s=null;function r(){xw&&(document.body.setAttribute("style",J(e)??""),document.body.style.removeProperty("--scrollbar-width"),hI&&(s==null||s()))}return On(()=>{const o=J(t);return Ca(()=>{if(!o)return;gt(e,document.body.getAttribute("style"),!0);const a=getComputedStyle(document.body),i=window.innerWidth-document.documentElement.clientWidth,c={padding:Number.parseInt(a.paddingRight??"0",10)+i,margin:Number.parseInt(a.marginRight??"0",10)};i>0&&(document.body.style.paddingRight=`${c.padding}px`,document.body.style.marginRight=`${c.margin}px`,document.body.style.setProperty("--scrollbar-width",`${i}px`),document.body.style.overflow="hidden"),hI&&(s=JS(document,"touchmove",l=>{l.target===document.documentElement&&(l.touches.length>1||l.preventDefault())},{passive:!1})),wg(()=>{document.body.style.pointerEvents="none",document.body.style.overflow="hidden"})})}),On(()=>()=>{s==null||s()}),{get map(){return n},resetBodyStyle:r}});function cL(n,t=()=>null){const e=qi(),s=lL();if(!s)return;const r=qt(t);s.map.set(e,n??!1);const o=mt.with(()=>s.map.get(e)??!1,a=>s.map.set(e,a));return On(()=>()=>{s.map.delete(e),!dL(s.map)&&(J(r)===null?requestAnimationFrame(()=>s.resetBodyStyle()):bw(J(r),()=>s.resetBodyStyle()))}),o}function dL(n){for(const[t,e]of n)if(e)return!0;return!1}function xI(n,t){rn(t,!0);let e=vt(t,"preventScroll",3,!0),s=vt(t,"restoreScrollDelay",3,null);cL(e(),()=>s()),on()}const hL=["top","right","bottom","left"],_a=Math.min,Us=Math.max,rm=Math.round,ff=Math.floor,so=n=>({x:n,y:n}),pL={left:"right",right:"left",bottom:"top",top:"bottom"},fL={start:"end",end:"start"};function Gb(n,t,e){return Us(n,_a(t,e))}function Uo(n,t){return typeof n=="function"?n(t):n}function Go(n){return n.split("-")[0]}function ml(n){return n.split("-")[1]}function vw(n){return n==="x"?"y":"x"}function Iw(n){return n==="y"?"height":"width"}function Mo(n){return["top","bottom"].includes(Go(n))?"y":"x"}function kw(n){return vw(Mo(n))}function mL(n,t,e){e===void 0&&(e=!1);const s=ml(n),r=kw(n),o=Iw(r);let a=r==="x"?s===(e?"end":"start")?"right":"left":s==="start"?"bottom":"top";return t.reference[o]>t.floating[o]&&(a=om(a)),[a,om(a)]}function gL(n){const t=om(n);return[Hb(n),t,Hb(t)]}function Hb(n){return n.replace(/start|end/g,t=>fL[t])}function yL(n,t,e){const s=["left","right"],r=["right","left"],o=["top","bottom"],a=["bottom","top"];switch(n){case"top":case"bottom":return e?t?r:s:t?s:r;case"left":case"right":return t?o:a;default:return[]}}function bL(n,t,e,s){const r=ml(n);let o=yL(Go(n),e==="start",s);return r&&(o=o.map(a=>a+"-"+r),t&&(o=o.concat(o.map(Hb)))),o}function om(n){return n.replace(/left|right|bottom|top/g,t=>pL[t])}function xL(n){return{top:0,right:0,bottom:0,left:0,...n}}function aN(n){return typeof n!="number"?xL(n):{top:n,right:n,bottom:n,left:n}}function am(n){const{x:t,y:e,width:s,height:r}=n;return{width:s,height:r,top:e,left:t,right:t+s,bottom:e+r,x:t,y:e}}function wI(n,t,e){let{reference:s,floating:r}=n;const o=Mo(t),a=kw(t),i=Iw(a),u=Go(t),c=o==="y",l=s.x+s.width/2-r.width/2,d=s.y+s.height/2-r.height/2,h=s[i]/2-r[i]/2;let p;switch(u){case"top":p={x:l,y:s.y-r.height};break;case"bottom":p={x:l,y:s.y+s.height};break;case"right":p={x:s.x+s.width,y:d};break;case"left":p={x:s.x-r.width,y:d};break;default:p={x:s.x,y:s.y}}switch(ml(t)){case"start":p[a]-=h*(e&&c?-1:1);break;case"end":p[a]+=h*(e&&c?-1:1);break}return p}const wL=async(n,t,e)=>{const{placement:s="bottom",strategy:r="absolute",middleware:o=[],platform:a}=e,i=o.filter(Boolean),u=await(a.isRTL==null?void 0:a.isRTL(t));let c=await a.getElementRects({reference:n,floating:t,strategy:r}),{x:l,y:d}=wI(c,s,u),h=s,p={},f=0;for(let m=0;m<i.length;m++){const{name:g,fn:y}=i[m],{x:b,y:x,data:w,reset:v}=await y({x:l,y:d,initialPlacement:s,placement:h,strategy:r,middlewareData:p,rects:c,platform:a,elements:{reference:n,floating:t}});l=b??l,d=x??d,p={...p,[g]:{...p[g],...w}},v&&f<=50&&(f++,typeof v=="object"&&(v.placement&&(h=v.placement),v.rects&&(c=v.rects===!0?await a.getElementRects({reference:n,floating:t,strategy:r}):v.rects),{x:l,y:d}=wI(c,h,u)),m=-1)}return{x:l,y:d,placement:h,strategy:r,middlewareData:p}};async function Dd(n,t){var e;t===void 0&&(t={});const{x:s,y:r,platform:o,rects:a,elements:i,strategy:u}=n,{boundary:c="clippingAncestors",rootBoundary:l="viewport",elementContext:d="floating",altBoundary:h=!1,padding:p=0}=Uo(t,n),f=aN(p),g=i[h?d==="floating"?"reference":"floating":d],y=am(await o.getClippingRect({element:(e=await(o.isElement==null?void 0:o.isElement(g)))==null||e?g:g.contextElement||await(o.getDocumentElement==null?void 0:o.getDocumentElement(i.floating)),boundary:c,rootBoundary:l,strategy:u})),b=d==="floating"?{x:s,y:r,width:a.floating.width,height:a.floating.height}:a.reference,x=await(o.getOffsetParent==null?void 0:o.getOffsetParent(i.floating)),w=await(o.isElement==null?void 0:o.isElement(x))?await(o.getScale==null?void 0:o.getScale(x))||{x:1,y:1}:{x:1,y:1},v=am(o.convertOffsetParentRelativeRectToViewportRelativeRect?await o.convertOffsetParentRelativeRectToViewportRelativeRect({elements:i,rect:b,offsetParent:x,strategy:u}):b);return{top:(y.top-v.top+f.top)/w.y,bottom:(v.bottom-y.bottom+f.bottom)/w.y,left:(y.left-v.left+f.left)/w.x,right:(v.right-y.right+f.right)/w.x}}const vL=n=>({name:"arrow",options:n,async fn(t){const{x:e,y:s,placement:r,rects:o,platform:a,elements:i,middlewareData:u}=t,{element:c,padding:l=0}=Uo(n,t)||{};if(c==null)return{};const d=aN(l),h={x:e,y:s},p=kw(r),f=Iw(p),m=await a.getDimensions(c),g=p==="y",y=g?"top":"left",b=g?"bottom":"right",x=g?"clientHeight":"clientWidth",w=o.reference[f]+o.reference[p]-h[p]-o.floating[f],v=h[p]-o.reference[p],k=await(a.getOffsetParent==null?void 0:a.getOffsetParent(c));let S=k?k[x]:0;(!S||!await(a.isElement==null?void 0:a.isElement(k)))&&(S=i.floating[x]||o.floating[f]);const _=w/2-v/2,C=S/2-m[f]/2-1,N=_a(d[y],C),$=_a(d[b],C),A=N,D=S-m[f]-$,R=S/2-m[f]/2+_,F=Gb(A,R,D),z=!u.arrow&&ml(r)!=null&&R!==F&&o.reference[f]/2-(R<A?N:$)-m[f]/2<0,H=z?R<A?R-A:R-D:0;return{[p]:h[p]+H,data:{[p]:F,centerOffset:R-F-H,...z&&{alignmentOffset:H}},reset:z}}}),IL=function(n){return n===void 0&&(n={}),{name:"flip",options:n,async fn(t){var e,s;const{placement:r,middlewareData:o,rects:a,initialPlacement:i,platform:u,elements:c}=t,{mainAxis:l=!0,crossAxis:d=!0,fallbackPlacements:h,fallbackStrategy:p="bestFit",fallbackAxisSideDirection:f="none",flipAlignment:m=!0,...g}=Uo(n,t);if((e=o.arrow)!=null&&e.alignmentOffset)return{};const y=Go(r),b=Mo(i),x=Go(i)===i,w=await(u.isRTL==null?void 0:u.isRTL(c.floating)),v=h||(x||!m?[om(i)]:gL(i)),k=f!=="none";!h&&k&&v.push(...bL(i,m,f,w));const S=[i,...v],_=await Dd(t,g),C=[];let N=((s=o.flip)==null?void 0:s.overflows)||[];if(l&&C.push(_[y]),d){const F=mL(r,a,w);C.push(_[F[0]],_[F[1]])}if(N=[...N,{placement:r,overflows:C}],!C.every(F=>F<=0)){var $,A;const F=((($=o.flip)==null?void 0:$.index)||0)+1,z=S[F];if(z){var D;const P=d==="alignment"?b!==Mo(z):!1,U=((D=N[0])==null?void 0:D.overflows[0])>0;if(!P||U)return{data:{index:F,overflows:N},reset:{placement:z}}}let H=(A=N.filter(P=>P.overflows[0]<=0).sort((P,U)=>P.overflows[1]-U.overflows[1])[0])==null?void 0:A.placement;if(!H)switch(p){case"bestFit":{var R;const P=(R=N.filter(U=>{if(k){const Z=Mo(U.placement);return Z===b||Z==="y"}return!0}).map(U=>[U.placement,U.overflows.filter(Z=>Z>0).reduce((Z,tt)=>Z+tt,0)]).sort((U,Z)=>U[1]-Z[1])[0])==null?void 0:R[0];P&&(H=P);break}case"initialPlacement":H=i;break}if(r!==H)return{reset:{placement:H}}}return{}}}};function vI(n,t){return{top:n.top-t.height,right:n.right-t.width,bottom:n.bottom-t.height,left:n.left-t.width}}function II(n){return hL.some(t=>n[t]>=0)}const kL=function(n){return n===void 0&&(n={}),{name:"hide",options:n,async fn(t){const{rects:e}=t,{strategy:s="referenceHidden",...r}=Uo(n,t);switch(s){case"referenceHidden":{const o=await Dd(t,{...r,elementContext:"reference"}),a=vI(o,e.reference);return{data:{referenceHiddenOffsets:a,referenceHidden:II(a)}}}case"escaped":{const o=await Dd(t,{...r,altBoundary:!0}),a=vI(o,e.floating);return{data:{escapedOffsets:a,escaped:II(a)}}}default:return{}}}}};async function $L(n,t){const{placement:e,platform:s,elements:r}=n,o=await(s.isRTL==null?void 0:s.isRTL(r.floating)),a=Go(e),i=ml(e),u=Mo(e)==="y",c=["left","top"].includes(a)?-1:1,l=o&&u?-1:1,d=Uo(t,n);let{mainAxis:h,crossAxis:p,alignmentAxis:f}=typeof d=="number"?{mainAxis:d,crossAxis:0,alignmentAxis:null}:{mainAxis:d.mainAxis||0,crossAxis:d.crossAxis||0,alignmentAxis:d.alignmentAxis};return i&&typeof f=="number"&&(p=i==="end"?f*-1:f),u?{x:p*l,y:h*c}:{x:h*c,y:p*l}}const SL=function(n){return n===void 0&&(n=0),{name:"offset",options:n,async fn(t){var e,s;const{x:r,y:o,placement:a,middlewareData:i}=t,u=await $L(t,n);return a===((e=i.offset)==null?void 0:e.placement)&&(s=i.arrow)!=null&&s.alignmentOffset?{}:{x:r+u.x,y:o+u.y,data:{...u,placement:a}}}}},NL=function(n){return n===void 0&&(n={}),{name:"shift",options:n,async fn(t){const{x:e,y:s,placement:r}=t,{mainAxis:o=!0,crossAxis:a=!1,limiter:i={fn:g=>{let{x:y,y:b}=g;return{x:y,y:b}}},...u}=Uo(n,t),c={x:e,y:s},l=await Dd(t,u),d=Mo(Go(r)),h=vw(d);let p=c[h],f=c[d];if(o){const g=h==="y"?"top":"left",y=h==="y"?"bottom":"right",b=p+l[g],x=p-l[y];p=Gb(b,p,x)}if(a){const g=d==="y"?"top":"left",y=d==="y"?"bottom":"right",b=f+l[g],x=f-l[y];f=Gb(b,f,x)}const m=i.fn({...t,[h]:p,[d]:f});return{...m,data:{x:m.x-e,y:m.y-s,enabled:{[h]:o,[d]:a}}}}}},CL=function(n){return n===void 0&&(n={}),{options:n,fn(t){const{x:e,y:s,placement:r,rects:o,middlewareData:a}=t,{offset:i=0,mainAxis:u=!0,crossAxis:c=!0}=Uo(n,t),l={x:e,y:s},d=Mo(r),h=vw(d);let p=l[h],f=l[d];const m=Uo(i,t),g=typeof m=="number"?{mainAxis:m,crossAxis:0}:{mainAxis:0,crossAxis:0,...m};if(u){const x=h==="y"?"height":"width",w=o.reference[h]-o.floating[x]+g.mainAxis,v=o.reference[h]+o.reference[x]-g.mainAxis;p<w?p=w:p>v&&(p=v)}if(c){var y,b;const x=h==="y"?"width":"height",w=["top","left"].includes(Go(r)),v=o.reference[d]-o.floating[x]+(w&&((y=a.offset)==null?void 0:y[d])||0)+(w?0:g.crossAxis),k=o.reference[d]+o.reference[x]+(w?0:((b=a.offset)==null?void 0:b[d])||0)-(w?g.crossAxis:0);f<v?f=v:f>k&&(f=k)}return{[h]:p,[d]:f}}}},_L=function(n){return n===void 0&&(n={}),{name:"size",options:n,async fn(t){var e,s;const{placement:r,rects:o,platform:a,elements:i}=t,{apply:u=()=>{},...c}=Uo(n,t),l=await Dd(t,c),d=Go(r),h=ml(r),p=Mo(r)==="y",{width:f,height:m}=o.floating;let g,y;d==="top"||d==="bottom"?(g=d,y=h===(await(a.isRTL==null?void 0:a.isRTL(i.floating))?"start":"end")?"left":"right"):(y=d,g=h==="end"?"top":"bottom");const b=m-l.top-l.bottom,x=f-l.left-l.right,w=_a(m-l[g],b),v=_a(f-l[y],x),k=!t.middlewareData.shift;let S=w,_=v;if((e=t.middlewareData.shift)!=null&&e.enabled.x&&(_=x),(s=t.middlewareData.shift)!=null&&s.enabled.y&&(S=b),k&&!h){const N=Us(l.left,0),$=Us(l.right,0),A=Us(l.top,0),D=Us(l.bottom,0);p?_=f-2*(N!==0||$!==0?N+$:Us(l.left,l.right)):S=m-2*(A!==0||D!==0?A+D:Us(l.top,l.bottom))}await u({...t,availableWidth:_,availableHeight:S});const C=await a.getDimensions(i.floating);return f!==C.width||m!==C.height?{reset:{rects:!0}}:{}}}};function vg(){return typeof window<"u"}function gl(n){return iN(n)?(n.nodeName||"").toLowerCase():"#document"}function qs(n){var t;return(n==null||(t=n.ownerDocument)==null?void 0:t.defaultView)||window}function wo(n){var t;return(t=(iN(n)?n.ownerDocument:n.document)||window.document)==null?void 0:t.documentElement}function iN(n){return vg()?n instanceof Node||n instanceof qs(n).Node:!1}function Pr(n){return vg()?n instanceof Element||n instanceof qs(n).Element:!1}function po(n){return vg()?n instanceof HTMLElement||n instanceof qs(n).HTMLElement:!1}function kI(n){return!vg()||typeof ShadowRoot>"u"?!1:n instanceof ShadowRoot||n instanceof qs(n).ShadowRoot}function zh(n){const{overflow:t,overflowX:e,overflowY:s,display:r}=Lr(n);return/auto|scroll|overlay|hidden|clip/.test(t+s+e)&&!["inline","contents"].includes(r)}function TL(n){return["table","td","th"].includes(gl(n))}function Ig(n){return[":popover-open",":modal"].some(t=>{try{return n.matches(t)}catch{return!1}})}function $w(n){const t=Sw(),e=Pr(n)?Lr(n):n;return["transform","translate","scale","rotate","perspective"].some(s=>e[s]?e[s]!=="none":!1)||(e.containerType?e.containerType!=="normal":!1)||!t&&(e.backdropFilter?e.backdropFilter!=="none":!1)||!t&&(e.filter?e.filter!=="none":!1)||["transform","translate","scale","rotate","perspective","filter"].some(s=>(e.willChange||"").includes(s))||["paint","layout","strict","content"].some(s=>(e.contain||"").includes(s))}function EL(n){let t=Ta(n);for(;po(t)&&!Xu(t);){if($w(t))return t;if(Ig(t))return null;t=Ta(t)}return null}function Sw(){return typeof CSS>"u"||!CSS.supports?!1:CSS.supports("-webkit-backdrop-filter","none")}function Xu(n){return["html","body","#document"].includes(gl(n))}function Lr(n){return qs(n).getComputedStyle(n)}function kg(n){return Pr(n)?{scrollLeft:n.scrollLeft,scrollTop:n.scrollTop}:{scrollLeft:n.scrollX,scrollTop:n.scrollY}}function Ta(n){if(gl(n)==="html")return n;const t=n.assignedSlot||n.parentNode||kI(n)&&n.host||wo(n);return kI(t)?t.host:t}function uN(n){const t=Ta(n);return Xu(t)?n.ownerDocument?n.ownerDocument.body:n.body:po(t)&&zh(t)?t:uN(t)}function Rd(n,t,e){var s;t===void 0&&(t=[]),e===void 0&&(e=!0);const r=uN(n),o=r===((s=n.ownerDocument)==null?void 0:s.body),a=qs(r);if(o){const i=jb(a);return t.concat(a,a.visualViewport||[],zh(r)?r:[],i&&e?Rd(i):[])}return t.concat(r,Rd(r,[],e))}function jb(n){return n.parent&&Object.getPrototypeOf(n.parent)?n.frameElement:null}function lN(n){const t=Lr(n);let e=parseFloat(t.width)||0,s=parseFloat(t.height)||0;const r=po(n),o=r?n.offsetWidth:e,a=r?n.offsetHeight:s,i=rm(e)!==o||rm(s)!==a;return i&&(e=o,s=a),{width:e,height:s,$:i}}function Nw(n){return Pr(n)?n:n.contextElement}function Du(n){const t=Nw(n);if(!po(t))return so(1);const e=t.getBoundingClientRect(),{width:s,height:r,$:o}=lN(t);let a=(o?rm(e.width):e.width)/s,i=(o?rm(e.height):e.height)/r;return(!a||!Number.isFinite(a))&&(a=1),(!i||!Number.isFinite(i))&&(i=1),{x:a,y:i}}const AL=so(0);function cN(n){const t=qs(n);return!Sw()||!t.visualViewport?AL:{x:t.visualViewport.offsetLeft,y:t.visualViewport.offsetTop}}function DL(n,t,e){return t===void 0&&(t=!1),!e||t&&e!==qs(n)?!1:t}function Ii(n,t,e,s){t===void 0&&(t=!1),e===void 0&&(e=!1);const r=n.getBoundingClientRect(),o=Nw(n);let a=so(1);t&&(s?Pr(s)&&(a=Du(s)):a=Du(n));const i=DL(o,e,s)?cN(o):so(0);let u=(r.left+i.x)/a.x,c=(r.top+i.y)/a.y,l=r.width/a.x,d=r.height/a.y;if(o){const h=qs(o),p=s&&Pr(s)?qs(s):s;let f=h,m=jb(f);for(;m&&s&&p!==f;){const g=Du(m),y=m.getBoundingClientRect(),b=Lr(m),x=y.left+(m.clientLeft+parseFloat(b.paddingLeft))*g.x,w=y.top+(m.clientTop+parseFloat(b.paddingTop))*g.y;u*=g.x,c*=g.y,l*=g.x,d*=g.y,u+=x,c+=w,f=qs(m),m=jb(f)}}return am({width:l,height:d,x:u,y:c})}function Cw(n,t){const e=kg(n).scrollLeft;return t?t.left+e:Ii(wo(n)).left+e}function dN(n,t,e){e===void 0&&(e=!1);const s=n.getBoundingClientRect(),r=s.left+t.scrollLeft-(e?0:Cw(n,s)),o=s.top+t.scrollTop;return{x:r,y:o}}function RL(n){let{elements:t,rect:e,offsetParent:s,strategy:r}=n;const o=r==="fixed",a=wo(s),i=t?Ig(t.floating):!1;if(s===a||i&&o)return e;let u={scrollLeft:0,scrollTop:0},c=so(1);const l=so(0),d=po(s);if((d||!d&&!o)&&((gl(s)!=="body"||zh(a))&&(u=kg(s)),po(s))){const p=Ii(s);c=Du(s),l.x=p.x+s.clientLeft,l.y=p.y+s.clientTop}const h=a&&!d&&!o?dN(a,u,!0):so(0);return{width:e.width*c.x,height:e.height*c.y,x:e.x*c.x-u.scrollLeft*c.x+l.x+h.x,y:e.y*c.y-u.scrollTop*c.y+l.y+h.y}}function FL(n){return Array.from(n.getClientRects())}function OL(n){const t=wo(n),e=kg(n),s=n.ownerDocument.body,r=Us(t.scrollWidth,t.clientWidth,s.scrollWidth,s.clientWidth),o=Us(t.scrollHeight,t.clientHeight,s.scrollHeight,s.clientHeight);let a=-e.scrollLeft+Cw(n);const i=-e.scrollTop;return Lr(s).direction==="rtl"&&(a+=Us(t.clientWidth,s.clientWidth)-r),{width:r,height:o,x:a,y:i}}function PL(n,t){const e=qs(n),s=wo(n),r=e.visualViewport;let o=s.clientWidth,a=s.clientHeight,i=0,u=0;if(r){o=r.width,a=r.height;const c=Sw();(!c||c&&t==="fixed")&&(i=r.offsetLeft,u=r.offsetTop)}return{width:o,height:a,x:i,y:u}}function LL(n,t){const e=Ii(n,!0,t==="fixed"),s=e.top+n.clientTop,r=e.left+n.clientLeft,o=po(n)?Du(n):so(1),a=n.clientWidth*o.x,i=n.clientHeight*o.y,u=r*o.x,c=s*o.y;return{width:a,height:i,x:u,y:c}}function $I(n,t,e){let s;if(t==="viewport")s=PL(n,e);else if(t==="document")s=OL(wo(n));else if(Pr(t))s=LL(t,e);else{const r=cN(n);s={x:t.x-r.x,y:t.y-r.y,width:t.width,height:t.height}}return am(s)}function hN(n,t){const e=Ta(n);return e===t||!Pr(e)||Xu(e)?!1:Lr(e).position==="fixed"||hN(e,t)}function ML(n,t){const e=t.get(n);if(e)return e;let s=Rd(n,[],!1).filter(i=>Pr(i)&&gl(i)!=="body"),r=null;const o=Lr(n).position==="fixed";let a=o?Ta(n):n;for(;Pr(a)&&!Xu(a);){const i=Lr(a),u=$w(a);!u&&i.position==="fixed"&&(r=null),(o?!u&&!r:!u&&i.position==="static"&&!!r&&["absolute","fixed"].includes(r.position)||zh(a)&&!u&&hN(n,a))?s=s.filter(l=>l!==a):r=i,a=Ta(a)}return t.set(n,s),s}function BL(n){let{element:t,boundary:e,rootBoundary:s,strategy:r}=n;const a=[...e==="clippingAncestors"?Ig(t)?[]:ML(t,this._c):[].concat(e),s],i=a[0],u=a.reduce((c,l)=>{const d=$I(t,l,r);return c.top=Us(d.top,c.top),c.right=_a(d.right,c.right),c.bottom=_a(d.bottom,c.bottom),c.left=Us(d.left,c.left),c},$I(t,i,r));return{width:u.right-u.left,height:u.bottom-u.top,x:u.left,y:u.top}}function zL(n){const{width:t,height:e}=lN(n);return{width:t,height:e}}function VL(n,t,e){const s=po(t),r=wo(t),o=e==="fixed",a=Ii(n,!0,o,t);let i={scrollLeft:0,scrollTop:0};const u=so(0);function c(){u.x=Cw(r)}if(s||!s&&!o)if((gl(t)!=="body"||zh(r))&&(i=kg(t)),s){const p=Ii(t,!0,o,t);u.x=p.x+t.clientLeft,u.y=p.y+t.clientTop}else r&&c();o&&!s&&r&&c();const l=r&&!s&&!o?dN(r,i):so(0),d=a.left+i.scrollLeft-u.x-l.x,h=a.top+i.scrollTop-u.y-l.y;return{x:d,y:h,width:a.width,height:a.height}}function sb(n){return Lr(n).position==="static"}function SI(n,t){if(!po(n)||Lr(n).position==="fixed")return null;if(t)return t(n);let e=n.offsetParent;return wo(n)===e&&(e=e.ownerDocument.body),e}function pN(n,t){const e=qs(n);if(Ig(n))return e;if(!po(n)){let r=Ta(n);for(;r&&!Xu(r);){if(Pr(r)&&!sb(r))return r;r=Ta(r)}return e}let s=SI(n,t);for(;s&&TL(s)&&sb(s);)s=SI(s,t);return s&&Xu(s)&&sb(s)&&!$w(s)?e:s||EL(n)||e}const WL=async function(n){const t=this.getOffsetParent||pN,e=this.getDimensions,s=await e(n.floating);return{reference:VL(n.reference,await t(n.floating),n.strategy),floating:{x:0,y:0,width:s.width,height:s.height}}};function UL(n){return Lr(n).direction==="rtl"}const GL={convertOffsetParentRelativeRectToViewportRelativeRect:RL,getDocumentElement:wo,getClippingRect:BL,getOffsetParent:pN,getElementRects:WL,getClientRects:FL,getDimensions:zL,getScale:Du,isElement:Pr,isRTL:UL};function fN(n,t){return n.x===t.x&&n.y===t.y&&n.width===t.width&&n.height===t.height}function HL(n,t){let e=null,s;const r=wo(n);function o(){var i;clearTimeout(s),(i=e)==null||i.disconnect(),e=null}function a(i,u){i===void 0&&(i=!1),u===void 0&&(u=1),o();const c=n.getBoundingClientRect(),{left:l,top:d,width:h,height:p}=c;if(i||t(),!h||!p)return;const f=ff(d),m=ff(r.clientWidth-(l+h)),g=ff(r.clientHeight-(d+p)),y=ff(l),x={rootMargin:-f+"px "+-m+"px "+-g+"px "+-y+"px",threshold:Us(0,_a(1,u))||1};let w=!0;function v(k){const S=k[0].intersectionRatio;if(S!==u){if(!w)return a();S?a(!1,S):s=setTimeout(()=>{a(!1,1e-7)},1e3)}S===1&&!fN(c,n.getBoundingClientRect())&&a(),w=!1}try{e=new IntersectionObserver(v,{...x,root:r.ownerDocument})}catch{e=new IntersectionObserver(v,x)}e.observe(n)}return a(!0),o}function jL(n,t,e,s){s===void 0&&(s={});const{ancestorScroll:r=!0,ancestorResize:o=!0,elementResize:a=typeof ResizeObserver=="function",layoutShift:i=typeof IntersectionObserver=="function",animationFrame:u=!1}=s,c=Nw(n),l=r||o?[...c?Rd(c):[],...Rd(t)]:[];l.forEach(y=>{r&&y.addEventListener("scroll",e,{passive:!0}),o&&y.addEventListener("resize",e)});const d=c&&i?HL(c,e):null;let h=-1,p=null;a&&(p=new ResizeObserver(y=>{let[b]=y;b&&b.target===c&&p&&(p.unobserve(t),cancelAnimationFrame(h),h=requestAnimationFrame(()=>{var x;(x=p)==null||x.observe(t)})),e()}),c&&!u&&p.observe(c),p.observe(t));let f,m=u?Ii(n):null;u&&g();function g(){const y=Ii(n);m&&!fN(m,y)&&e(),m=y,f=requestAnimationFrame(g)}return e(),()=>{var y;l.forEach(b=>{r&&b.removeEventListener("scroll",e),o&&b.removeEventListener("resize",e)}),d==null||d(),(y=p)==null||y.disconnect(),p=null,u&&cancelAnimationFrame(f)}}const qL=SL,KL=NL,XL=IL,YL=_L,JL=kL,ZL=vL,QL=CL,tM=(n,t,e)=>{const s=new Map,r={platform:GL,...e},o={...r.platform,_c:s};return wL(n,t,{...r,platform:o})};function sd(n){return typeof n=="function"?n():n}function mN(n){return typeof window>"u"?1:(n.ownerDocument.defaultView||window).devicePixelRatio||1}function NI(n,t){const e=mN(n);return Math.round(t*e)/e}function CI(n){return{[`--bits-${n}-content-transform-origin`]:"var(--bits-floating-transform-origin)",[`--bits-${n}-content-available-width`]:"var(--bits-floating-available-width)",[`--bits-${n}-content-available-height`]:"var(--bits-floating-available-height)",[`--bits-${n}-anchor-width`]:"var(--bits-floating-anchor-width)",[`--bits-${n}-anchor-height`]:"var(--bits-floating-anchor-height)"}}function eM(n){const t=n.whileElementsMounted,e=qt(()=>sd(n.open)??!0),s=qt(()=>sd(n.middleware)),r=qt(()=>sd(n.transform)??!0),o=qt(()=>sd(n.placement)??"bottom"),a=qt(()=>sd(n.strategy)??"absolute"),i=n.reference;let u=Xt(0),c=Xt(0);const l=mt(null);let d=Xt(ys(J(a))),h=Xt(ys(J(o))),p=Xt(ys({})),f=Xt(!1);const m=qt(()=>{const v={position:J(d),left:"0",top:"0"};if(!l.current)return v;const k=NI(l.current,J(u)),S=NI(l.current,J(c));return J(r)?{...v,transform:`translate(${k}px, ${S}px)`,...mN(l.current)>=1.5&&{willChange:"transform"}}:{position:J(d),left:`${k}px`,top:`${S}px`}});let g;function y(){i.current===null||l.current===null||tM(i.current,l.current,{middleware:J(s),placement:J(o),strategy:J(a)}).then(v=>{gt(u,v.x,!0),gt(c,v.y,!0),gt(d,v.strategy,!0),gt(h,v.placement,!0),gt(p,v.middlewareData,!0),gt(f,!0)})}function b(){typeof g=="function"&&(g(),g=void 0)}function x(){if(b(),t===void 0){y();return}i.current===null||l.current===null||(g=t(i.current,l.current,y))}function w(){J(e)||gt(f,!1)}return On(y),On(x),On(w),On(()=>b),{floating:l,reference:i,get strategy(){return J(d)},get placement(){return J(h)},get middlewareData(){return J(p)},get isPositioned(){return J(f)},get floatingStyles(){return J(m)},get update(){return y}}}const nM={top:"bottom",right:"left",bottom:"top",left:"right"};class sM{constructor(){ke(this,"anchorNode",mt(null));ke(this,"customAnchorNode",mt(null));ke(this,"triggerNode",mt(null));On(()=>{this.customAnchorNode.current?typeof this.customAnchorNode.current=="string"?this.anchorNode.current=document.querySelector(this.customAnchorNode.current):this.anchorNode.current=this.customAnchorNode.current:this.anchorNode.current=this.triggerNode.current})}}var dh,ng,hh,sg,ph,rg,fh,mh,gh,yh,bh,xh,wh,vh,Ih,kh,$h,Sh,Nh,Ch,_h,Th,Eh,Ah;class rM{constructor(t,e){ke(this,"opts");ke(this,"root");ke(this,"contentRef",mt(null));ke(this,"wrapperRef",mt(null));ke(this,"arrowRef",mt(null));ke(this,"arrowId",mt(qi()));$t(this,dh,qt(()=>{if(typeof this.opts.style=="string")return hd(this.opts.style);if(!this.opts.style)return{}}));$t(this,ng);$t(this,hh,new eP(()=>this.arrowRef.current??void 0));$t(this,sg,qt(()=>{var t;return((t=st(this,hh))==null?void 0:t.width)??0}));$t(this,ph,qt(()=>{var t;return((t=st(this,hh))==null?void 0:t.height)??0}));$t(this,rg,qt(()=>{var t;return((t=this.opts.side)==null?void 0:t.current)+(this.opts.align.current!=="center"?`-${this.opts.align.current}`:"")}));$t(this,fh,qt(()=>Array.isArray(this.opts.collisionBoundary.current)?this.opts.collisionBoundary.current:[this.opts.collisionBoundary.current]));$t(this,mh,qt(()=>J(st(this,fh)).length>0));$t(this,gh,qt(()=>({padding:this.opts.collisionPadding.current,boundary:J(st(this,fh)).filter(cP),altBoundary:this.hasExplicitBoundaries})));$t(this,yh,Xt(void 0));$t(this,bh,Xt(void 0));$t(this,xh,Xt(void 0));$t(this,wh,Xt(void 0));$t(this,vh,qt(()=>[qL({mainAxis:this.opts.sideOffset.current+J(st(this,ph)),alignmentAxis:this.opts.alignOffset.current}),this.opts.avoidCollisions.current&&KL({mainAxis:!0,crossAxis:!1,limiter:this.opts.sticky.current==="partial"?QL():void 0,...this.detectOverflowOptions}),this.opts.avoidCollisions.current&&XL({...this.detectOverflowOptions}),YL({...this.detectOverflowOptions,apply:({rects:t,availableWidth:e,availableHeight:s})=>{const{width:r,height:o}=t.reference;gt(st(this,yh),e,!0),gt(st(this,bh),s,!0),gt(st(this,xh),r,!0),gt(st(this,wh),o,!0)}}),this.arrowRef.current&&ZL({element:this.arrowRef.current,padding:this.opts.arrowPadding.current}),cM({arrowWidth:J(st(this,sg)),arrowHeight:J(st(this,ph))}),this.opts.hideWhenDetached.current&&JL({strategy:"referenceHidden",...this.detectOverflowOptions})].filter(Boolean)));ke(this,"floating");$t(this,Ih,qt(()=>dM(this.floating.placement)));$t(this,kh,qt(()=>hM(this.floating.placement)));$t(this,$h,qt(()=>{var t;return((t=this.floating.middlewareData.arrow)==null?void 0:t.x)??0}));$t(this,Sh,qt(()=>{var t;return((t=this.floating.middlewareData.arrow)==null?void 0:t.y)??0}));$t(this,Nh,qt(()=>{var t;return((t=this.floating.middlewareData.arrow)==null?void 0:t.centerOffset)!==0}));$t(this,Ch,Xt());$t(this,_h,qt(()=>nM[this.placedSide]));$t(this,Th,qt(()=>{var t,e,s;return{id:this.opts.wrapperId.current,"data-bits-floating-content-wrapper":"",style:{...this.floating.floatingStyles,transform:this.floating.isPositioned?this.floating.floatingStyles.transform:"translate(0, -200%)",minWidth:"max-content",zIndex:this.contentZIndex,"--bits-floating-transform-origin":`${(t=this.floating.middlewareData.transformOrigin)==null?void 0:t.x} ${(e=this.floating.middlewareData.transformOrigin)==null?void 0:e.y}`,"--bits-floating-available-width":`${J(st(this,yh))}px`,"--bits-floating-available-height":`${J(st(this,bh))}px`,"--bits-floating-anchor-width":`${J(st(this,xh))}px`,"--bits-floating-anchor-height":`${J(st(this,wh))}px`,...((s=this.floating.middlewareData.hide)==null?void 0:s.referenceHidden)&&{visibility:"hidden","pointer-events":"none"},...J(st(this,dh))},dir:this.opts.dir.current}}));$t(this,Eh,qt(()=>({"data-side":this.placedSide,"data-align":this.placedAlign,style:yw({...J(st(this,dh))})})));$t(this,Ah,qt(()=>({position:"absolute",left:this.arrowX?`${this.arrowX}px`:void 0,top:this.arrowY?`${this.arrowY}px`:void 0,[this.arrowBaseSide]:0,"transform-origin":{top:"",right:"0 0",bottom:"center 0",left:"100% 0"}[this.placedSide],transform:{top:"translateY(100%)",right:"translateY(50%) rotate(90deg) translateX(-50%)",bottom:"rotate(180deg)",left:"translateY(50%) rotate(-90deg) translateX(50%)"}[this.placedSide],visibility:this.cannotCenterArrow?"hidden":void 0})));this.opts=t,this.root=e,t.customAnchor&&(this.root.customAnchorNode.current=t.customAnchor.current),xs(()=>t.customAnchor.current,s=>{this.root.customAnchorNode.current=s}),Wo({id:this.opts.wrapperId,ref:this.wrapperRef,deps:()=>this.opts.enabled.current}),Wo({id:this.opts.id,ref:this.contentRef,deps:()=>this.opts.enabled.current}),this.floating=eM({strategy:()=>this.opts.strategy.current,placement:()=>J(st(this,rg)),middleware:()=>this.middleware,reference:this.root.anchorNode,whileElementsMounted:(...s)=>{var o;return jL(...s,{animationFrame:((o=st(this,ng))==null?void 0:o.current)==="always"})},open:()=>this.opts.enabled.current}),On(()=>{var s;this.floating.isPositioned&&((s=this.opts.onPlaced)==null||s.current())}),xs(()=>this.contentRef.current,s=>{s&&(this.contentZIndex=window.getComputedStyle(s).zIndex)}),On(()=>{this.floating.floating.current=this.wrapperRef.current})}get hasExplicitBoundaries(){return J(st(this,mh))}set hasExplicitBoundaries(t){gt(st(this,mh),t)}get detectOverflowOptions(){return J(st(this,gh))}set detectOverflowOptions(t){gt(st(this,gh),t)}get middleware(){return J(st(this,vh))}set middleware(t){gt(st(this,vh),t)}get placedSide(){return J(st(this,Ih))}set placedSide(t){gt(st(this,Ih),t)}get placedAlign(){return J(st(this,kh))}set placedAlign(t){gt(st(this,kh),t)}get arrowX(){return J(st(this,$h))}set arrowX(t){gt(st(this,$h),t)}get arrowY(){return J(st(this,Sh))}set arrowY(t){gt(st(this,Sh),t)}get cannotCenterArrow(){return J(st(this,Nh))}set cannotCenterArrow(t){gt(st(this,Nh),t)}get contentZIndex(){return J(st(this,Ch))}set contentZIndex(t){gt(st(this,Ch),t,!0)}get arrowBaseSide(){return J(st(this,_h))}set arrowBaseSide(t){gt(st(this,_h),t)}get wrapperProps(){return J(st(this,Th))}set wrapperProps(t){gt(st(this,Th),t)}get props(){return J(st(this,Eh))}set props(t){gt(st(this,Eh),t)}get arrowStyle(){return J(st(this,Ah))}set arrowStyle(t){gt(st(this,Ah),t)}}dh=new WeakMap,ng=new WeakMap,hh=new WeakMap,sg=new WeakMap,ph=new WeakMap,rg=new WeakMap,fh=new WeakMap,mh=new WeakMap,gh=new WeakMap,yh=new WeakMap,bh=new WeakMap,xh=new WeakMap,wh=new WeakMap,vh=new WeakMap,Ih=new WeakMap,kh=new WeakMap,$h=new WeakMap,Sh=new WeakMap,Nh=new WeakMap,Ch=new WeakMap,_h=new WeakMap,Th=new WeakMap,Eh=new WeakMap,Ah=new WeakMap;class oM{constructor(t,e){ke(this,"opts");ke(this,"root");ke(this,"ref",mt(null));this.opts=t,this.root=e,t.virtualEl&&t.virtualEl.current?e.triggerNode=mt.from(t.virtualEl.current):Wo({id:t.id,ref:this.ref,onRefChange:s=>{e.triggerNode.current=s}})}}const _w=new xg("Floating.Root"),aM=new xg("Floating.Content");function iM(){return _w.set(new sM)}function uM(n){return aM.set(new rM(n,_w.get()))}function lM(n){return new oM(n,_w.get())}function cM(n){return{name:"transformOrigin",options:n,fn(t){var g,y,b;const{placement:e,rects:s,middlewareData:r}=t,a=((g=r.arrow)==null?void 0:g.centerOffset)!==0,i=a?0:n.arrowWidth,u=a?0:n.arrowHeight,[c,l]=Tw(e),d={start:"0%",center:"50%",end:"100%"}[l],h=(((y=r.arrow)==null?void 0:y.x)??0)+i/2,p=(((b=r.arrow)==null?void 0:b.y)??0)+u/2;let f="",m="";return c==="bottom"?(f=a?d:`${h}px`,m=`${-u}px`):c==="top"?(f=a?d:`${h}px`,m=`${s.floating.height+u}px`):c==="right"?(f=`${-u}px`,m=a?d:`${p}px`):c==="left"&&(f=`${s.floating.width+u}px`,m=a?d:`${p}px`),{data:{x:f,y:m}}}}}function Tw(n){const[t,e="center"]=n.split("-");return[t,e]}function dM(n){return Tw(n)[0]}function hM(n){return Tw(n)[1]}function pM(n,t){rn(t,!0),iM();var e=ye(),s=ne(e);He(s,()=>t.children??nn),Ot(n,e),on()}function fM(n,t){rn(t,!0),lM({id:mt.with(()=>t.id),virtualEl:mt.with(()=>t.virtualEl)});var e=ye(),s=ne(e);He(s,()=>t.children??nn),Ot(n,e),on()}function mM(n,t){rn(t,!0);let e=vt(t,"side",3,"bottom"),s=vt(t,"sideOffset",3,0),r=vt(t,"align",3,"center"),o=vt(t,"alignOffset",3,0),a=vt(t,"arrowPadding",3,0),i=vt(t,"avoidCollisions",3,!0),u=vt(t,"collisionBoundary",19,()=>[]),c=vt(t,"collisionPadding",3,0),l=vt(t,"hideWhenDetached",3,!1),d=vt(t,"onPlaced",3,()=>{}),h=vt(t,"sticky",3,"partial"),p=vt(t,"updatePositionStrategy",3,"optimized"),f=vt(t,"strategy",3,"fixed"),m=vt(t,"dir",3,"ltr"),g=vt(t,"style",19,()=>({})),y=vt(t,"wrapperId",19,qi),b=vt(t,"customAnchor",3,null);const x=uM({side:mt.with(()=>e()),sideOffset:mt.with(()=>s()),align:mt.with(()=>r()),alignOffset:mt.with(()=>o()),id:mt.with(()=>t.id),arrowPadding:mt.with(()=>a()),avoidCollisions:mt.with(()=>i()),collisionBoundary:mt.with(()=>u()),collisionPadding:mt.with(()=>c()),hideWhenDetached:mt.with(()=>l()),onPlaced:mt.with(()=>d()),sticky:mt.with(()=>h()),updatePositionStrategy:mt.with(()=>p()),strategy:mt.with(()=>f()),dir:mt.with(()=>m()),style:mt.with(()=>g()),enabled:mt.with(()=>t.enabled),wrapperId:mt.with(()=>y()),customAnchor:mt.with(()=>b())}),w=qt(()=>yi(x.wrapperProps,{style:{pointerEvents:"auto"}}));var v=ye(),k=ne(v);He(k,()=>t.content??nn,()=>({props:x.props,wrapperProps:J(w)})),Ot(n,v),on()}function gM(n,t){rn(t,!0),US(()=>{var r;(r=t.onPlaced)==null||r.call(t)});var e=ye(),s=ne(e);He(s,()=>t.content??nn,()=>({props:{},wrapperProps:{}})),Ot(n,e),on()}const yM="data-separator-root";var Dh;class bM{constructor(t){ke(this,"opts");$t(this,Dh,qt(()=>({id:this.opts.id.current,role:this.opts.decorative.current?"none":"separator","aria-orientation":this.opts.orientation.current,"aria-hidden":rP(this.opts.decorative.current),"data-orientation":this.opts.orientation.current,[yM]:""})));this.opts=t,Wo(t)}get props(){return J(st(this,Dh))}set props(t){gt(st(this,Dh),t)}}Dh=new WeakMap;function xM(n){return new bM(n)}var wM=$n("<div><!></div>");function vM(n,t){rn(t,!0);let e=vt(t,"id",19,qi),s=vt(t,"ref",15,null),r=vt(t,"decorative",3,!1),o=vt(t,"orientation",3,"horizontal"),a=Vr(t,["$$slots","$$events","$$legacy","id","ref","child","children","decorative","orientation"]);const i=xM({ref:mt.with(()=>s(),p=>s(p)),id:mt.with(()=>e()),decorative:mt.with(()=>r()),orientation:mt.with(()=>o())}),u=qt(()=>yi(a,i.props));var c=ye(),l=ne(c);{var d=p=>{var f=ye(),m=ne(f);He(m,()=>t.child,()=>({props:J(u)})),Ot(p,f)},h=p=>{var f=wM();let m;var g=$e(f);He(g,()=>t.children??nn),ps(()=>m=pa(f,m,{...J(u)})),Ot(p,f)};Rn(l,p=>{t.child?p(d):p(h,!1)})}Ot(n,c),on()}function IM(n,t){let e=vt(t,"isStatic",3,!1),s=Vr(t,["$$slots","$$events","$$legacy","content","isStatic","onPlaced"]);var r=ye(),o=ne(r);{var a=u=>{gM(u,{get content(){return t.content},get onPlaced(){return t.onPlaced}})},i=u=>{mM(u,Vo({get content(){return t.content},get onPlaced(){return t.onPlaced}},()=>s))};Rn(o,u=>{e()?u(a):u(i,!1)})}Ot(n,r)}var kM=$n("<!> <!>",1);function gN(n,t){rn(t,!0);let e=vt(t,"interactOutsideBehavior",3,"close"),s=vt(t,"trapFocus",3,!0),r=vt(t,"isValidEvent",3,()=>!1),o=vt(t,"customAnchor",3,null),a=vt(t,"isStatic",3,!1),i=Vr(t,["$$slots","$$events","$$legacy","popper","onEscapeKeydown","escapeKeydownBehavior","preventOverflowTextSelection","id","onPointerDown","onPointerUp","side","sideOffset","align","alignOffset","arrowPadding","avoidCollisions","collisionBoundary","collisionPadding","sticky","hideWhenDetached","updatePositionStrategy","strategy","dir","preventScroll","wrapperId","style","onPlaced","onInteractOutside","onCloseAutoFocus","onOpenAutoFocus","onFocusOutside","interactOutsideBehavior","loop","trapFocus","isValidEvent","customAnchor","isStatic","enabled"]);IM(n,{get isStatic(){return a()},get id(){return t.id},get side(){return t.side},get sideOffset(){return t.sideOffset},get align(){return t.align},get alignOffset(){return t.alignOffset},get arrowPadding(){return t.arrowPadding},get avoidCollisions(){return t.avoidCollisions},get collisionBoundary(){return t.collisionBoundary},get collisionPadding(){return t.collisionPadding},get sticky(){return t.sticky},get hideWhenDetached(){return t.hideWhenDetached},get updatePositionStrategy(){return t.updatePositionStrategy},get strategy(){return t.strategy},get dir(){return t.dir},get wrapperId(){return t.wrapperId},get style(){return t.style},get onPlaced(){return t.onPlaced},get customAnchor(){return o()},get enabled(){return t.enabled},content:(c,l)=>{let d=()=>l==null?void 0:l().props,h=()=>l==null?void 0:l().wrapperProps;var p=kM(),f=ne(p);{var m=x=>{xI(x,{get preventScroll(){return t.preventScroll}})},g=(x,w)=>{{var v=k=>{xI(k,{get preventScroll(){return t.preventScroll}})};Rn(x,k=>{t.forceMount||k(v)},w)}};Rn(f,x=>{t.forceMount&&t.enabled?x(m):x(g,!1)})}var y=Dn(f,2);const b=qt(()=>t.enabled&&s());nL(y,{get id(){return t.id},get onOpenAutoFocus(){return t.onOpenAutoFocus},get onCloseAutoFocus(){return t.onCloseAutoFocus},get loop(){return t.loop},get trapFocus(){return J(b)},get forceMount(){return t.forceMount},focusScope:(w,v)=>{let k=()=>v==null?void 0:v().props;_P(w,{get onEscapeKeydown(){return t.onEscapeKeydown},get escapeKeydownBehavior(){return t.escapeKeydownBehavior},get enabled(){return t.enabled},children:(S,_)=>{$P(S,{get id(){return t.id},get onInteractOutside(){return t.onInteractOutside},get onFocusOutside(){return t.onFocusOutside},get interactOutsideBehavior(){return e()},get isValidEvent(){return r()},get enabled(){return t.enabled},children:(N,$)=>{let A=()=>$==null?void 0:$().props;iL(N,{get id(){return t.id},get preventOverflowTextSelection(){return t.preventOverflowTextSelection},get onPointerDown(){return t.onPointerDown},get onPointerUp(){return t.onPointerUp},get enabled(){return t.enabled},children:(D,R)=>{var F=ye(),z=ne(F),H=Yf(()=>({props:yi(i,d(),A(),k(),{style:{pointerEvents:"auto"}}),wrapperProps:h()}));He(z,()=>t.popper??nn,()=>J(H)),Ot(D,F)},$$slots:{default:!0}})},$$slots:{default:!0}})},$$slots:{default:!0}})},$$slots:{focusScope:!0}}),Ot(c,p)},$$slots:{content:!0}}),on()}function $M(n,t){let e=vt(t,"interactOutsideBehavior",3,"close"),s=vt(t,"trapFocus",3,!0),r=vt(t,"isValidEvent",3,()=>!1),o=vt(t,"customAnchor",3,null),a=vt(t,"isStatic",3,!1),i=Vr(t,["$$slots","$$events","$$legacy","popper","present","onEscapeKeydown","escapeKeydownBehavior","preventOverflowTextSelection","id","onPointerDown","onPointerUp","side","sideOffset","align","alignOffset","arrowPadding","avoidCollisions","collisionBoundary","collisionPadding","sticky","hideWhenDetached","updatePositionStrategy","strategy","dir","preventScroll","wrapperId","style","onPlaced","onInteractOutside","onCloseAutoFocus","onOpenAutoFocus","onFocusOutside","interactOutsideBehavior","loop","trapFocus","isValidEvent","customAnchor","isStatic"]);mP(n,Vo({get id(){return t.id},get present(){return t.present}},()=>i,{presence:c=>{gN(c,Vo({get popper(){return t.popper},get onEscapeKeydown(){return t.onEscapeKeydown},get escapeKeydownBehavior(){return t.escapeKeydownBehavior},get preventOverflowTextSelection(){return t.preventOverflowTextSelection},get id(){return t.id},get onPointerDown(){return t.onPointerDown},get onPointerUp(){return t.onPointerUp},get side(){return t.side},get sideOffset(){return t.sideOffset},get align(){return t.align},get alignOffset(){return t.alignOffset},get arrowPadding(){return t.arrowPadding},get avoidCollisions(){return t.avoidCollisions},get collisionBoundary(){return t.collisionBoundary},get collisionPadding(){return t.collisionPadding},get sticky(){return t.sticky},get hideWhenDetached(){return t.hideWhenDetached},get updatePositionStrategy(){return t.updatePositionStrategy},get strategy(){return t.strategy},get dir(){return t.dir},get preventScroll(){return t.preventScroll},get wrapperId(){return t.wrapperId},get style(){return t.style},get onPlaced(){return t.onPlaced},get customAnchor(){return o()},get isStatic(){return a()},get enabled(){return t.present},get onInteractOutside(){return t.onInteractOutside},get onCloseAutoFocus(){return t.onCloseAutoFocus},get onOpenAutoFocus(){return t.onOpenAutoFocus},get interactOutsideBehavior(){return e()},get loop(){return t.loop},get trapFocus(){return s()},get isValidEvent(){return r()},get onFocusOutside(){return t.onFocusOutside},forceMount:!1},()=>i))},$$slots:{presence:!0}}))}function SM(n,t){let e=vt(t,"interactOutsideBehavior",3,"close"),s=vt(t,"trapFocus",3,!0),r=vt(t,"isValidEvent",3,()=>!1),o=vt(t,"customAnchor",3,null),a=vt(t,"isStatic",3,!1),i=Vr(t,["$$slots","$$events","$$legacy","popper","onEscapeKeydown","escapeKeydownBehavior","preventOverflowTextSelection","id","onPointerDown","onPointerUp","side","sideOffset","align","alignOffset","arrowPadding","avoidCollisions","collisionBoundary","collisionPadding","sticky","hideWhenDetached","updatePositionStrategy","strategy","dir","preventScroll","wrapperId","style","onPlaced","onInteractOutside","onCloseAutoFocus","onOpenAutoFocus","onFocusOutside","interactOutsideBehavior","loop","trapFocus","isValidEvent","customAnchor","isStatic","enabled"]);gN(n,Vo({get popper(){return t.popper},get onEscapeKeydown(){return t.onEscapeKeydown},get escapeKeydownBehavior(){return t.escapeKeydownBehavior},get preventOverflowTextSelection(){return t.preventOverflowTextSelection},get id(){return t.id},get onPointerDown(){return t.onPointerDown},get onPointerUp(){return t.onPointerUp},get side(){return t.side},get sideOffset(){return t.sideOffset},get align(){return t.align},get alignOffset(){return t.alignOffset},get arrowPadding(){return t.arrowPadding},get avoidCollisions(){return t.avoidCollisions},get collisionBoundary(){return t.collisionBoundary},get collisionPadding(){return t.collisionPadding},get sticky(){return t.sticky},get hideWhenDetached(){return t.hideWhenDetached},get updatePositionStrategy(){return t.updatePositionStrategy},get strategy(){return t.strategy},get dir(){return t.dir},get preventScroll(){return t.preventScroll},get wrapperId(){return t.wrapperId},get style(){return t.style},get onPlaced(){return t.onPlaced},get customAnchor(){return o()},get isStatic(){return a()},get enabled(){return t.enabled},get onInteractOutside(){return t.onInteractOutside},get onCloseAutoFocus(){return t.onCloseAutoFocus},get onOpenAutoFocus(){return t.onOpenAutoFocus},get interactOutsideBehavior(){return e()},get loop(){return t.loop},get trapFocus(){return s()},get isValidEvent(){return r()},get onFocusOutside(){return t.onFocusOutside}},()=>i,{forceMount:!0}))}var Rh,Fh;class NM{constructor(t){ke(this,"opts");$t(this,Rh,Xt(null));$t(this,Fh,Xt(null));this.opts=t}get contentNode(){return J(st(this,Rh))}set contentNode(t){gt(st(this,Rh),t,!0)}get triggerNode(){return J(st(this,Fh))}set triggerNode(t){gt(st(this,Fh),t,!0)}toggleOpen(){this.opts.open.current=!this.opts.open.current}handleClose(){this.opts.open.current&&(this.opts.open.current=!1)}}Rh=new WeakMap,Fh=new WeakMap;var og,yN,Oh;class CM{constructor(t,e){$t(this,og);ke(this,"opts");ke(this,"root");$t(this,Oh,qt(()=>({id:this.opts.id.current,"aria-haspopup":"dialog","aria-expanded":sP(this.root.opts.open.current),"data-state":XS(this.root.opts.open.current),"aria-controls":sa(this,og,yN).call(this),"data-popover-trigger":"",disabled:this.opts.disabled.current,onkeydown:this.onkeydown,onclick:this.onclick})));this.opts=t,this.root=e,Wo({...t,onRefChange:s=>{this.root.triggerNode=s}}),this.onclick=this.onclick.bind(this),this.onkeydown=this.onkeydown.bind(this)}onclick(t){this.opts.disabled.current||t.button===0&&this.root.toggleOpen()}onkeydown(t){this.opts.disabled.current||(t.key===oP||t.key===iP)&&(t.preventDefault(),this.root.toggleOpen())}get props(){return J(st(this,Oh))}set props(t){gt(st(this,Oh),t)}}og=new WeakSet,yN=function(){var t,e;if(this.root.opts.open.current&&((t=this.root.contentNode)!=null&&t.id))return(e=this.root.contentNode)==null?void 0:e.id},Oh=new WeakMap;var Ph,Lh;class _M{constructor(t,e){ke(this,"opts");ke(this,"root");ke(this,"onInteractOutside",t=>{this.opts.onInteractOutside.current(t),!(t.defaultPrevented||!YS(t.target)||t.target.closest("[data-popover-trigger]")===this.root.triggerNode)&&this.root.handleClose()});ke(this,"onEscapeKeydown",t=>{this.opts.onEscapeKeydown.current(t),!t.defaultPrevented&&this.root.handleClose()});ke(this,"onCloseAutoFocus",t=>{var e;this.opts.onCloseAutoFocus.current(t),!t.defaultPrevented&&(t.preventDefault(),(e=this.root.triggerNode)==null||e.focus())});$t(this,Ph,qt(()=>({open:this.root.opts.open.current})));$t(this,Lh,qt(()=>({id:this.opts.id.current,tabindex:-1,"data-state":XS(this.root.opts.open.current),"data-popover-content":"",style:{pointerEvents:"auto"}})));ke(this,"popperProps",{onInteractOutside:this.onInteractOutside,onEscapeKeydown:this.onEscapeKeydown,onCloseAutoFocus:this.onCloseAutoFocus});this.opts=t,this.root=e,Wo({...t,deps:()=>this.root.opts.open.current,onRefChange:s=>{this.root.contentNode=s}})}get snippetProps(){return J(st(this,Ph))}set snippetProps(t){gt(st(this,Ph),t)}get props(){return J(st(this,Lh))}set props(t){gt(st(this,Lh),t)}}Ph=new WeakMap,Lh=new WeakMap;const Ew=new xg("Popover.Root");function TM(n){return Ew.set(new NM(n))}function EM(n){return new CM(n,Ew.get())}function AM(n){return new _M(n,Ew.get())}var DM=$n("<div><div><!></div></div>"),RM=$n("<div><div><!></div></div>");function FM(n,t){rn(t,!0);let e=vt(t,"ref",15,null),s=vt(t,"id",19,qi),r=vt(t,"forceMount",3,!1),o=vt(t,"onCloseAutoFocus",3,Hn),a=vt(t,"onEscapeKeydown",3,Hn),i=vt(t,"onInteractOutside",3,Hn),u=vt(t,"trapFocus",3,!0),c=vt(t,"preventScroll",3,!1),l=Vr(t,["$$slots","$$events","$$legacy","child","children","ref","id","forceMount","onCloseAutoFocus","onEscapeKeydown","onInteractOutside","trapFocus","preventScroll"]);const d=AM({id:mt.with(()=>s()),ref:mt.with(()=>e(),y=>e(y)),onInteractOutside:mt.with(()=>i()),onEscapeKeydown:mt.with(()=>a()),onCloseAutoFocus:mt.with(()=>o())}),h=qt(()=>yi(l,d.props));var p=ye(),f=ne(p);{var m=y=>{SM(y,Vo(()=>J(h),()=>d.popperProps,{get enabled(){return d.root.opts.open.current},get id(){return s()},get trapFocus(){return u()},get preventScroll(){return c()},loop:!0,forceMount:!0,popper:(x,w)=>{let v=()=>w==null?void 0:w().props,k=()=>w==null?void 0:w().wrapperProps;var S=ye();const _=qt(()=>yi(v(),{style:CI("popover")}));var C=ne(S);{var N=A=>{var D=ye(),R=ne(D),F=Yf(()=>({props:J(_),wrapperProps:k(),...d.snippetProps}));He(R,()=>t.child,()=>J(F)),Ot(A,D)},$=A=>{var D=DM();let R;var F=$e(D);let z;var H=$e(F);He(H,()=>t.children??nn),ps(()=>{R=pa(D,R,{...k()}),z=pa(F,z,{...J(_)})}),Ot(A,D)};Rn(C,A=>{t.child?A(N):A($,!1)})}Ot(x,S)},$$slots:{popper:!0}}))},g=(y,b)=>{{var x=w=>{$M(w,Vo(()=>J(h),()=>d.popperProps,{get present(){return d.root.opts.open.current},get id(){return s()},get trapFocus(){return u()},get preventScroll(){return c()},loop:!0,forceMount:!1,popper:(k,S)=>{let _=()=>S==null?void 0:S().props,C=()=>S==null?void 0:S().wrapperProps;var N=ye();const $=qt(()=>yi(_(),{style:CI("popover")}));var A=ne(N);{var D=F=>{var z=ye(),H=ne(z),P=Yf(()=>({props:J($),wrapperProps:C(),...d.snippetProps}));He(H,()=>t.child,()=>J(P)),Ot(F,z)},R=F=>{var z=RM();let H;var P=$e(z);let U;var Z=$e(P);He(Z,()=>t.children??nn),ps(()=>{H=pa(z,H,{...C()}),U=pa(P,U,{...J($)})}),Ot(F,z)};Rn(A,F=>{t.child?F(D):F(R,!1)})}Ot(k,N)},$$slots:{popper:!0}}))};Rn(y,w=>{r()||w(x)},b)}};Rn(f,y=>{r()?y(m):y(g,!1)})}Ot(n,p),on()}var OM=$n("<button><!></button>");function PM(n,t){rn(t,!0);let e=vt(t,"id",19,qi),s=vt(t,"ref",15,null),r=vt(t,"type",3,"button"),o=vt(t,"disabled",3,!1),a=Vr(t,["$$slots","$$events","$$legacy","children","child","id","ref","type","disabled"]);const i=EM({id:mt.with(()=>e()),ref:mt.with(()=>s(),c=>s(c)),disabled:mt.with(()=>!!o())}),u=qt(()=>yi(a,i.props,{type:r()}));fM(n,{get id(){return e()},children:(c,l)=>{var d=ye(),h=ne(d);{var p=m=>{var g=ye(),y=ne(g);He(y,()=>t.child,()=>({props:J(u)})),Ot(m,g)},f=m=>{var g=OM();let y;var b=$e(g);He(b,()=>t.children??nn),ps(()=>y=pa(g,y,{...J(u)})),Ot(m,g)};Rn(h,m=>{t.child?m(p):m(f,!1)})}Ot(c,d)},$$slots:{default:!0}}),on()}function LM(n,t){rn(t,!0);let e=vt(t,"open",15,!1),s=vt(t,"onOpenChange",3,Hn);TM({open:mt.with(()=>e(),r=>{e(r),s()(r)})}),pM(n,{children:(r,o)=>{var a=ye(),i=ne(a);He(i,()=>t.children??nn),Ot(r,a)},$$slots:{default:!0}}),on()}/**
 * @license @lucide/svelte v0.511.0 - ISC
 *
 * ISC License
 * 
 * Copyright (c) for portions of Lucide are held by Cole Bemis 2013-2022 as part of Feather (MIT). All other copyright (c) for Lucide are held by Lucide Contributors 2022.
 * 
 * Permission to use, copy, modify, and/or distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 * 
 */const MM={xmlns:"http://www.w3.org/2000/svg",width:24,height:24,viewBox:"0 0 24 24",fill:"none",stroke:"currentColor","stroke-width":2,"stroke-linecap":"round","stroke-linejoin":"round"};var BM=QO("<svg><!><!></svg>");function Aw(n,t){rn(t,!0);const e=vt(t,"color",3,"currentColor"),s=vt(t,"size",3,24),r=vt(t,"strokeWidth",3,2),o=vt(t,"absoluteStrokeWidth",3,!1),a=vt(t,"iconNode",19,()=>[]),i=Vr(t,["$$slots","$$events","$$legacy","name","color","size","strokeWidth","absoluteStrokeWidth","iconNode","children"]);var u=BM();let c;var l=$e(u);$u(l,17,a,ku,(h,p)=>{let f=()=>J(p)[0],m=()=>J(p)[1];var g=ye(),y=ne(g);i3(y,f,!0,(b,x)=>{let w;ps(()=>w=pa(b,w,{...m()}))}),Ot(h,g)});var d=Dn(l);He(d,()=>t.children??nn),ps(h=>c=pa(u,c,{...MM,...i,width:s(),height:s(),stroke:e(),"stroke-width":h,class:["lucide-icon lucide",t.name&&`lucide-${t.name}`,t.class]}),[()=>o()?Number(r())*24/Number(s()):r()]),Ot(n,u),on()}function zM(n,t){rn(t,!0);let e=Vr(t,["$$slots","$$events","$$legacy"]);Aw(n,Vo({name:"search"},()=>e,{iconNode:[["path",{d:"m21 21-4.34-4.34"}],["circle",{cx:"11",cy:"11",r:"8"}]],children:(r,o)=>{var a=ye(),i=ne(a);He(i,()=>t.children??nn),Ot(r,a)},$$slots:{default:!0}})),on()}function _I(n,t){rn(t,!0);let e=Vr(t,["$$slots","$$events","$$legacy"]);Aw(n,Vo({name:"smile"},()=>e,{iconNode:[["circle",{cx:"12",cy:"12",r:"10"}],["path",{d:"M8 14s1.5 2 4 2 4-2 4-2"}],["line",{x1:"9",x2:"9.01",y1:"9",y2:"9"}],["line",{x1:"15",x2:"15.01",y1:"9",y2:"9"}]],children:(r,o)=>{var a=ye(),i=ne(a);He(i,()=>t.children??nn),Ot(r,a)},$$slots:{default:!0}})),on()}function VM(n,t){rn(t,!0);let e=Vr(t,["$$slots","$$events","$$legacy"]);Aw(n,Vo({name:"x"},()=>e,{iconNode:[["path",{d:"M18 6 6 18"}],["path",{d:"m6 6 12 12"}]],children:(r,o)=>{var a=ye(),i=ne(a);He(i,()=>t.children??nn),Ot(r,a)},$$slots:{default:!0}})),on()}const mf={"Smileys & People":["😀","😃","😄","😁","😆","😅","🤣","😂","🙂","🙃","😉","😊","😇","🥰","😍","🤩","😘","😗","☺️","😚","😙","😋","😛","😜","🤪","😝","🤑","🤗","🤭","🤫","🤔","🤐","🤨","😐","😑","😶","😏","😒","🙄","😬","🤥","😔","😪","🤤","😴","😷","🤒","🤕","🤢","🤮","🤧","🥵","🥶","🥴","😵","🤯","🤠","🥳","😎","🤓","🧐","😕","😟","🙁","☹️","😮","😯","😲","😳","🥺","😦","😧","😨","😰","😥","😢","😭","😱","😖","😣","😞","😓","😩","😫","🥱","😤","😡","😠","🤬","😈","👿","💀","☠️","💩","🤡","👹","👺","👻","👽","👾","🤖","😺","😸","😹","😻","😼","😽","🙀","😿","😾"],"Animals & Nature":["🐶","🐱","🐭","🐹","🐰","🦊","🐻","🐼","🐨","🐯","🦁","🐮","🐷","🐽","🐸","🐵","🙈","🙉","🙊","🐒","🐔","🐧","🐦","🐤","🐣","🐥","🦆","🦅","🦉","🦇","🐺","🐗","🐴","🦄","🐝","🐛","🦋","🐌","🐞","🐜","🦟","🦗","🕷️","🕸️","🦂","🐢","🐍","🦎","🦖","🦕","🐙","🦑","🦐","🦞","🦀","🐡","🐠","🐟","🐬","🐳","🐋","🦈","🐊","🐅","🐆","🦓","🦍","🦧","🐘","🦛","🦏","🐪","🐫","🦒","🦘","🐃","🐂","🐄","🐎","🐖","🐏","🐑","🦙","🐐","🦌","🐕","🐩","🦮","🐕‍🦺","🐈","🐓","🦃","🦚","🦜","🦢","🦩","🕊️","🐇","🦝","🦨","🦡","🦦","🦥","🐁","🐀","🐿️","🦔"],"Food & Drink":["🍏","🍎","🍐","🍊","🍋","🍌","🍉","🍇","🍓","🫐","🍈","🍒","🍑","🥭","🍍","🥥","🥝","🍅","🍆","🥑","🥦","🥬","🥒","🌶️","🫑","🌽","🥕","🫒","🧄","🧅","🥔","🍠","🥐","🥯","🍞","🥖","🥨","🧀","🥚","🍳","🧈","🥞","🧇","🥓","🥩","🍗","🍖","🦴","🌭","🍔","🍟","🍕","🫓","🥪","🥙","🧆","🌮","🌯","🫔","🥗","🥘","🫕","🍝","🍜","🍲","🍛","🍣","🍱","🥟","🦪","🍤","🍙","🍚","🍘","🍥","🥠","🥮","🍢","🍡","🍧","🍨","🍦","🥧","🧁","🍰","🎂","🍮","🍭","🍬","🍫","🍿","🍩","🍪","🌰","🥜","🍯","🥛","🍼","☕","🫖","🍵","🧃","🥤","🧋","🍶","🍺","🍻","🥂","🍷","🥃","🍸","🍹","🧉","🍾"],Activity:["⚽","🏀","🏈","⚾","🥎","🎾","🏐","🏉","🥏","🎱","🪀","🏓","🏸","🏒","🏑","🥍","🏏","🪃","🥅","⛳","🪁","🏹","🎣","🤿","🥊","🥋","🎽","🛹","🛷","⛸️","🥌","🎿","⛷️","🏂","🪂","🏋️‍♀️","🏋️","🏋️‍♂️","🤼‍♀️","🤼","🤼‍♂️","🤸‍♀️","🤸","🤸‍♂️","⛹️‍♀️","⛹️","⛹️‍♂️","🤺","🤾‍♀️","🤾","🤾‍♂️","🏌️‍♀️","🏌️","🏌️‍♂️","🧘‍♀️","🧘","🧘‍♂️","🏄‍♀️","🏄","🏄‍♂️","🏊‍♀️","🏊","🏊‍♂️","🤽‍♀️","🤽","🤽‍♂️","🚣‍♀️","🚣","🚣‍♂️","🧗‍♀️","🧗","🧗‍♂️","🚵‍♀️","🚵","🚵‍♂️","🚴‍♀️","🚴","🚴‍♂️","🏆","🥇","🥈","🥉","🏅","🎖️","🏵️","🎗️","🎫","🎟️","🎪","🤹","🤹‍♀️","🤹‍♂️","🎭","🩰","🎨","🎬","🎤","🎧","🎼","🎵","🎶","🥁","🪘","🎹","🎷","🎺","🎸","🪕","🎻"],"Travel & Places":["🚗","🚕","🚙","🚌","🚎","🏎️","🚓","🚑","🚒","🚐","🛻","🚚","🚛","🚜","🏍️","🛵","🚲","🛴","🛹","🛼","🚁","🛸","✈️","🛩️","🛫","🛬","🪂","💺","🚀","🛰️","🚉","🚞","🚝","🚄","🚅","🚈","🚂","🚆","🚇","🚊","🚟","🚠","🚡","🛤️","🛣️","🛑","🚥","🚦","🚧","⚓","⛵","🛶","🚤","🛥️","🛳️","⛴️","🚢","🏗️","🏭","🏠","🏡","🏘️","🏚️","🏗️","🏢","🏬","🏣","🏤","🏥","🏦","🏨","🏪","🏫","🏩","💒","🏛️","⛪","🕌","🛕","🕍","⛩️","🕋","⛲","⛺","🌁","🌃","🏙️","🌄","🌅","🌆","🌇","🌉","♨️","🎠","🎡","🎢","💈","🎪","🚂","🚃","🚄","🚅","🚆","🚇","🚈","🚉","🚊","🚝","🚞","🚋","🚃","🚟","🚠","🚡","⛴️","🛥️","🚤","⛵","🛶","🚁","🛸","✈️","🛩️","🛫","🛬","🪂","💺","🚀","🛰️"],Objects:["⌚","📱","📲","💻","⌨️","🖥️","🖨️","🖱️","🖲️","🕹️","🗜️","💽","💾","💿","📀","📼","📷","📸","📹","🎥","📽️","🎞️","📞","☎️","📟","📠","📺","📻","🎙️","🎚️","🎛️","🧭","⏱️","⏲️","⏰","🕰️","⌛","⏳","📡","🔋","🔌","💡","🔦","🕯️","🪔","🧯","🛢️","💸","💵","💴","💶","💷","🪙","💰","💳","💎","⚖️","🪜","🧰","🔧","🔨","⚒️","🛠️","⛏️","🔩","⚙️","🪚","🔫","🧨","💣","🔪","🗡️","⚔️","🛡️","🚬","⚰️","🪦","⚱️","🏺","🔮","📿","🧿","💈","⚗️","🔭","🔬","🕳️","🩹","🩺","💊","💉","🩸","🧬","🦠","🧫","🧪","🌡️","🧹","🪣","🧽","🧴","🛎️","🔑","🗝️","🚪","🪑","🛋️","🛏️","🛌","🧸","🖼️","🛍️","🛒","🎁","🎈","🎏","🎀","🎊","🎉","🎎","🏮","🎐","🧧","✉️","📩","📨","📧","💌","📥"],Symbols:["❤️","🧡","💛","💚","💙","💜","🖤","🤍","🤎","💔","❣️","💕","💞","💓","💗","💖","💘","💝","💟","☮️","✝️","☪️","🕉️","☸️","✡️","🔯","🕎","☯️","☦️","🛐","⛎","♈","♉","♊","♋","♌","♍","♎","♏","♐","♑","♒","♓","🆔","⚛️","🉑","☢️","☣️","📴","📳","🈶","🈚","🈸","🈺","🈷️","✴️","🆚","💮","🉐","㊙️","㊗️","🈴","🈵","🈹","🈲","🅰️","🅱️","🆎","🆑","🅾️","🆘","❌","⭕","🛑","⛔","📛","🚫","💯","💢","♨️","🚷","🚯","🚳","🚱","🔞","📵","🚭","❗","❕","❓","❔","‼️","⁉️","🔅","🔆","〽️","⚠️","🚸","🔱","⚜️","🔰","♻️","✅","🈯","💹","❇️","✳️","❎","🌐","💠","Ⓜ️","🌀","💤","🏧","🚾","♿","🅿️","🈳","🈂️","🛂","🛃","🛄","🛅","🚹","🚺","🚼","⚧️","🚻","🚮","🎦","📶"],Flags:["🏁","🚩","🎌","🏴","🏳️","🏳️‍🌈","🏳️‍⚧️","🏴‍☠️","🇦🇫","🇦🇽","🇦🇱","🇩🇿","🇦🇸","🇦🇩","🇦🇴","🇦🇮","🇦🇶","🇦🇬","🇦🇷","🇦🇲","🇦🇼","🇦🇺","🇦🇹","🇦🇿","🇧🇸","🇧🇭","🇧🇩","🇧🇧","🇧🇾","🇧🇪","🇧🇿","🇧🇯","🇧🇲","🇧🇹","🇧🇴","🇧🇦","🇧🇼","🇧🇷","🇮🇴","🇻🇬","🇧🇳","🇧🇬","🇧🇫","🇧🇮","🇰🇭","🇨🇲","🇨🇦","🇮🇨","🇨🇻","🇧🇶","🇰🇾","🇨🇫","🇹🇩","🇨🇱","🇨🇳","🇨🇽","🇨🇨","🇨🇴","🇰🇲","🇨🇬","🇨🇩","🇨🇰","🇨🇷","🇨🇮","🇭🇷","🇨🇺","🇨🇼","🇨🇾","🇨🇿","🇩🇰","🇩🇯","🇩🇲","🇩🇴","🇪🇨","🇪🇬","🇸🇻","🇬🇶","🇪🇷","🇪🇪","🇸🇿","🇪🇹","🇪🇺","🇫🇰","🇫🇴","🇫🇯","🇫🇮","🇫🇷","🇬🇫","🇵🇫","🇹🇫","🇬🇦","🇬🇲","🇬🇪","🇩🇪","🇬🇭","🇬🇮","🇬🇷","🇬🇱","🇬🇩","🇬🇵","🇬🇺","🇬🇹","🇬🇬","🇬🇳","🇬🇼","🇬🇾","🇭🇹","🇭🇳","🇭🇰","🇭🇺","🇮🇸","🇮🇳","🇮🇩","🇮🇷","🇮🇶","🇮🇪","🇮🇲","🇮🇱","🇮🇹","🇯🇲","🇯🇵","🇯🇪","🇯🇴","🇰🇿","🇰🇪","🇰🇮","🇽🇰","🇰🇼","🇰🇬","🇱🇦","🇱🇻","🇱🇧","🇱🇸","🇱🇷","🇱🇾","🇱🇮","🇱🇹","🇱🇺","🇲🇴","🇲🇬","🇲🇼","🇲🇾","🇲🇻","🇲🇱","🇲🇹","🇲🇭","🇲🇶","🇲🇷","🇲🇺","🇾🇹","🇲🇽","🇫🇲","🇲🇩","🇲🇨","🇲🇳","🇲🇪","🇲🇸","🇲🇦","🇲🇿","🇲🇲","🇳🇦","🇳🇷","🇳🇵","🇳🇱","🇳🇨","🇳🇿","🇳🇮","🇳🇪","🇳🇬","🇳🇺","🇳🇫","🇰🇵","🇲🇰","🇲🇵","🇳🇴","🇴🇲","🇵🇰","🇵🇼","🇵🇸","🇵🇦","🇵🇬","🇵🇾","🇵🇪","🇵🇭","🇵🇳","🇵🇱","🇵🇹","🇵🇷","🇶🇦","🇷🇪","🇷🇴","🇷🇺","🇷🇼","🇼🇸","🇸🇲","🇸🇹","🇸🇦","🇸🇳","🇷🇸","🇸🇨","🇸🇱","🇸🇬","🇸🇽","🇸🇰","🇸🇮","🇬🇸","🇸🇧","🇸🇴","🇿🇦","🇰🇷","🇸🇸","🇪🇸","🇱🇰","🇧🇱","🇸🇭","🇰🇳","🇱🇨","🇵🇲","🇻🇨","🇸🇩","🇸🇷","🇸🇪","🇨🇭","🇸🇾","🇹🇼","🇹🇯","🇹🇿","🇹🇭","🇹🇱","🇹🇬","🇹🇰","🇹🇴","🇹🇹","🇹🇳","🇹🇷","🇹🇲","🇹🇨","🇹🇻","🇺🇬","🇺🇦","🇦🇪","🇬🇧","🏴󠁧󠁢󠁥󠁮󠁧󠁿","🏴󠁧󠁢󠁳󠁣󠁴󠁿","🏴󠁧󠁢󠁷󠁬󠁳󠁿","🇺🇸","🇻🇮","🇺🇾","🇺🇿","🇻🇺","🇻🇦","🇻🇪","🇻🇳","🇼🇫","🇪🇭","🇾🇪","🇿🇲","🇿🇼"]},WM={"Smileys & People":["😀","😃","😄","😁","😆","😅","🤣","😂","🙂","🙃","😉","😊","😇","🥰","😍","🤩","😘","😗","☺️","😚","😙","😋","😛","😜","🤪","😝","🤑","🤗","🤭","🤫","🤔","🤐","🤨","😐","😑","😶","😏","😒","🙄","😬","🤥","😔","😪","🤤","😴","😷","🤒","🤕","🤢","🤮","🤧","🥵","🥶","🥴","😵","🤯","🤠","🥳","😎","🤓","🧐","😕","😟","🙁","☹️","😮","😯","😲","😳","🥺","😦","😧","😨","😰","😥","😢","😭","😱","😖","😣","😞","😓","😩","😫","🥱","😤","😡","😠","🤬","😈","👿","💀","☠️","💩","🤡","👹","👺","👻","👽","👾","🤖","😺","😸","😹","😻","😼","😽","🙀","😿","😾"],"Animals & Nature":["🐶","🐱","🐭","🐹","🐰","🦊","🐻","🐼","🐨","🐯","🦁","🐮","🐷","🐽","🐸","🐵","🙈","🙉","🙊","🐒","🐔","🐧","🐦","🐤","🐣","🐥","🦆","🦅","🦉","🦇","🐺","🐗","🐴","🦄","🐝","🐛","🦋","🐌","🐞","🐜","🦟","🦗","🕷️","🕸️","🦂","🐢","🐍","🦎","🦖","🦕","🐙","🦑","🦐","🦞","🦀","🐡","🐠","🐟","🐬","🐳","🐋","🦈","🐊","🐅","🐆","🦓","🦍","🦧","🐘","🦛","🦏","🐪","🐫","🦒","🦘","🐃","🐂","🐄","🐎","🐖","🐏","🐑","🦙","🐐","🦌","🐕","🐩","🦮","🐕‍🦺","🐈","🐓","🦃","🦚","🦜","🦢","🦩","🕊️","🐇","🦝","🦨","🦡","🦦","🦥","🐁","🐀","🐿️","🦔"],"Food & Drink":["🍏","🍎","🍐","🍊","🍋","🍌","🍉","🍇","🍓","🫐","🍈","🍒","🍑","🥭","🍍","🥥","🥝","🍅","🍆","🥑","🥦","🥬","🥒","🌶️","🫑","🌽","🥕","🫒","🧄","🧅","🥔","🍠","🥐","🥯","🍞","🥖","🥨","🧀","🥚","🍳","🧈","🥞","🧇","🥓","🥩","🍗","🍖","🦴","🌭","🍔","🍟","🍕","🫓","🥪","🥙","🧆","🌮","🌯","🫔","🥗","🥘","🫕","🍝","🍜","🍲","🍛","🍣","🍱","🥟","🦪","🍤","🍙","🍚","🍘","🍥","🥠","🥮","🍢","🍡","🍧","🍨","🍦","🥧","🧁","🍰","🎂","🍮","🍭","🍬","🍫","🍿","🍩","🍪","🌰","🥜","🍯","🥛","🍼","☕","🫖","🍵","🧃","🥤","🧋","🍶","🍺","🍻","🥂","🍷","🥃","🍸","🍹","🧉","🍾"],Activity:["⚽","🏀","🏈","⚾","🥎","🎾","🏐","🏉","🥏","🎱","🪀","🏓","🏸","🏒","🏑","🥍","🏏","🪃","🥅","⛳","🪁","🏹","🎣","🤿","🥊","🥋","🎽","🛹","🛷","⛸️","🥌","🎿","⛷️","🏂","🪂","🏋️‍♀️","🏋️","🏋️‍♂️","🤼‍♀️","🤼","🤼‍♂️","🤸‍♀️","🤸","🤸‍♂️","⛹️‍♀️","⛹️","⛹️‍♂️","🤺","🤾‍♀️","🤾","🤾‍♂️","🏌️‍♀️","🏌️","🏌️‍♂️","🧘‍♀️","🧘","🧘‍♂️","🏄‍♀️","🏄","🏄‍♂️","🏊‍♀️","🏊","🏊‍♂️","🤽‍♀️","🤽","🤽‍♂️","🚣‍♀️","🚣","🚣‍♂️","🧗‍♀️","🧗","🧗‍♂️","🚵‍♀️","🚵","🚵‍♂️","🚴‍♀️","🚴","🚴‍♂️","🏆","🥇","🥈","🥉","🏅","🎖️","🏵️","🎗️","🎫","🎟️","🎪","🤹","🤹‍♀️","🤹‍♂️","🎭","🩰","🎨","🎬","🎤","🎧","🎼","🎵","🎶","🥁","🪘","🎹","🎷","🎺","🎸","🪕","🎻"],"Travel & Places":["🚗","🚕","🚙","🚌","🚎","🏎️","🚓","🚑","🚒","🚐","🛻","🚚","🚛","🚜","🏍️","🛵","🚲","🛴","🛹","🛼","🚁","🛸","✈️","🛩️","🛫","🛬","🪂","💺","🚀","🛰️","🚉","🚞","🚝","🚄","🚅","🚈","🚂","🚆","🚇","🚊","🚟","🚠","🚡","🛤️","🛣️","🛑","🚥","🚦","🚧","⚓","⛵","🛶","🚤","🛥️","🛳️","⛴️","🚢","🏗️","🏭","🏠","🏡","🏘️","🏚️","🏗️","🏢","🏬","🏣","🏤","🏥","🏦","🏨","🏪","🏫","🏩","💒","🏛️","⛪","🕌","🛕","🕍","⛩️","🕋","⛲","⛺","🌁","🌃","🏙️","🌄","🌅","🌆","🌇","🌉","♨️","🎠","🎡","🎢","💈","🎪","🚂","🚃","🚄","🚅","🚆","🚇","🚈","🚉","🚊","🚝","🚞","🚋","🚃","🚟","🚠","🚡","⛴️","🛥️","🚤","⛵","🛶","🚁","🛸","✈️","🛩️","🛫","🛬","🪂","💺","🚀","🛰️"],Objects:["⌚","📱","📲","💻","⌨️","🖥️","🖨️","🖱️","🖲️","🕹️","🗜️","💽","💾","💿","📀","📼","📷","📸","📹","🎥","📽️","🎞️","📞","☎️","📟","📠","📺","📻","🎙️","🎚️","🎛️","🧭","⏱️","⏲️","⏰","🕰️","⌛","⏳","📡","🔋","🔌","💡","🔦","🕯️","🪔","🧯","🛢️","💸","💵","💴","💶","💷","🪙","💰","💳","💎","⚖️","🪜","🧰","🔧","🔨","⚒️","🛠️","⛏️","🔩","⚙️","🪚","🔫","🧨","💣","🔪","🗡️","⚔️","🛡️","🚬","⚰️","🪦","⚱️","🏺","🔮","📿","🧿","💈","⚗️","🔭","🔬","🕳️","🩹","🩺","💊","💉","🩸","🧬","🦠","🧫","🧪","🌡️","🧹","🪣","🧽","🧴","🛎️","🔑","🗝️","🚪","🪑","🛋️","🛏️","🛌","🧸","🖼️","🛍️","🛒","🎁","🎈","🎏","🎀","🎊","🎉","🎎","🏮","🎐","🧧","✉️","📩","📨","📧","💌","📥"],Symbols:["❤️","🧡","💛","💚","💙","💜","🖤","🤍","🤎","💔","❣️","💕","💞","💓","💗","💖","💘","💝","💟","☮️","✝️","☪️","🕉️","☸️","✡️","🔯","🕎","☯️","☦️","🛐","⛎","♈","♉","♊","♋","♌","♍","♎","♏","♐","♑","♒","♓","🆔","⚛️","🉑","☢️","☣️","📴","📳","🈶","🈚","🈸","🈺","🈷️","✴️","🆚","💮","🉐","㊙️","㊗️","🈴","🈵","🈹","🈲","🅰️","🅱️","🆎","🆑","🅾️","🆘","❌","⭕","🛑","⛔","📛","🚫","💯","💢","♨️","🚷","🚯","🚳","🚱","🔞","📵","🚭","❗","❕","❓","❔","‼️","⁉️","🔅","🔆","〽️","⚠️","🚸","🔱","⚜️","🔰","♻️","✅","🈯","💹","❇️","✳️","❎","🌐","💠","Ⓜ️","🌀","💤","🏧","🚾","♿","🅿️","🈳","🈂️","🛂","🛃","🛄","🛅","🚹","🚺","🚼","⚧️","🚻","🚮","🎦","📶"],Flags:["🏁","🚩","🎌","🏴","🏳️","🏳️‍🌈","🏳️‍⚧️","🏴‍☠️","🇦🇫","🇦🇽","🇦🇱","🇩🇿","🇦🇸","🇦🇩","🇦🇴","🇦🇮","🇦🇶","🇦🇬","🇦🇷","🇦🇲","🇦🇼","🇦🇺","🇦🇹","🇦🇿","🇧🇸","🇧🇭","🇧🇩","🇧🇧","🇧🇾","🇧🇪","🇧🇿","🇧🇯","🇧🇲","🇧🇹","🇧🇴","🇧🇦","🇧🇼","🇧🇷","🇮🇴","🇻🇬","🇧🇳","🇧🇬","🇧🇫","🇧🇮","🇰🇭","🇨🇲","🇨🇦","🇮🇨","🇨🇻","🇧🇶","🇰🇾","🇨🇫","🇹🇩","🇨🇱","🇨🇳","🇨🇽","🇨🇨","🇨🇴","🇰🇲","🇨🇬","🇨🇩","🇨🇰","🇨🇷","🇨🇮","🇭🇷","🇨🇺","🇨🇼","🇨🇾","🇨🇿","🇩🇰","🇩🇯","🇩🇲","🇩🇴","🇪🇨","🇪🇬","🇸🇻","🇬🇶","🇪🇷","🇪🇪","🇸🇿","🇪🇹","🇪🇺","🇫🇰","🇫🇴","🇫🇯","🇫🇮","🇫🇷","🇬🇫","🇵🇫","🇹🇫","🇬🇦","🇬🇲","🇬🇪","🇩🇪","🇬🇭","🇬🇮","🇬🇷","🇬🇱","🇬🇩","🇬🇵","🇬🇺","🇬🇹","🇬🇬","🇬🇳","🇬🇼","🇬🇾","🇭🇹","🇭🇳","🇭🇰","🇭🇺","🇮🇸","🇮🇳","🇮🇩","🇮🇷","🇮🇶","🇮🇪","🇮🇲","🇮🇱","🇮🇹","🇯🇲","🇯🇵","🇯🇪","🇯🇴","🇰🇿","🇰🇪","🇰🇮","🇽🇰","🇰🇼","🇰🇬","🇱🇦","🇱🇻","🇱🇧","🇱🇸","🇱🇷","🇱🇾","🇱🇮","🇱🇹","🇱🇺","🇲🇴","🇲🇬","🇲🇼","🇲🇾","🇲🇻","🇲🇱","🇲🇹","🇲🇭","🇲🇶","🇲🇷","🇲🇺","🇾🇹","🇲🇽","🇫🇲","🇲🇩","🇲🇨","🇲🇳","🇲🇪","🇲🇸","🇲🇦","🇲🇿","🇲🇲","🇳🇦","🇳🇷","🇳🇵","🇳🇱","🇳🇨","🇳🇿","🇳🇮","🇳🇪","🇳🇬","🇳🇺","🇳🇫","🇰🇵","🇲🇰","🇲🇵","🇳🇴","🇴🇲","🇵🇰","🇵🇼","🇵🇸","🇵🇦","🇵🇬","🇵🇾","🇵🇪","🇵🇭","🇵🇳","🇵🇱","🇵🇹","🇵🇷","🇶🇦","🇷🇪","🇷🇴","🇷🇺","🇷🇼","🇼🇸","🇸🇲","🇸🇹","🇸🇦","🇸🇳","🇷🇸","🇸🇨","🇸🇱","🇸🇬","🇸🇽","🇸🇰","🇸🇮","🇬🇸","🇸🇧","🇸🇴","🇿🇦","🇰🇷","🇸🇸","🇪🇸","🇱🇰","🇧🇱","🇸🇭","🇰🇳","🇱🇨","🇵🇲","🇻🇨","🇸🇩","🇸🇷","🇸🇪","🇨🇭","🇸🇾","🇹🇼","🇹🇯","🇹🇿","🇹🇭","🇹🇱","🇹🇬","🇹🇰","🇹🇴","🇹🇹","🇹🇳","🇹🇷","🇹🇲","🇹🇨","🇹🇻","🇺🇬","🇺🇦","🇦🇪","🇬🇧","🏴󠁧󠁢󠁥󠁮󠁧󠁿","🏴󠁧󠁢󠁳󠁣󠁴󠁿","🏴󠁧󠁢󠁷󠁬󠁳󠁿","🇺🇸","🇻🇮","🇺🇾","🇺🇿","🇻🇺","🇻🇦","🇻🇪","🇻🇳","🇼🇫","🇪🇭","🇾🇪","🇿🇲","🇿🇼"]};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UM=1e-7,GM=1e-4;class Dw{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}}let $g=class{refCount(t){return Ts("refCount")}incRef(t){return Ts("incRef")}timerAvailable(){return!0}time(t){return Ts("time")}read(t){return Ts("read")}readSync(t){return Ts("readSync")}readToGPU(t,e){return Ts("readToGPU")}numDataIds(){return Ts("numDataIds")}disposeData(t,e){return Ts("disposeData")}write(t,e,s){return Ts("write")}move(t,e,s,r,o){return Ts("move")}createTensorFromGPUData(t,e,s){return Ts("createTensorFromGPUData")}memory(){return Ts("memory")}floatPrecision(){return Ts("floatPrecision")}epsilon(){return this.floatPrecision()===32?UM:GM}dispose(){return Ts("dispose")}};function Ts(n){throw new Error(`'${n}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HM(n){let t=n.length,e=0;for(;t>0;)e=Math.random()*t|0,t--,Nu(n,t,e)}function ki(n,t,e){return Math.max(n,Math.min(t,e))}function Rw(n){return n%2===0?n:n+1}function Nu(n,t,e){const s=n[t];n[t]=n[e],n[e]=s}function jM(n){let t=0;for(let e=0;e<n.length;e++)t+=n[e];return t}function T(n,t){if(!n)throw new Error(typeof t=="string"?t:t())}function Sg(n,t,e=""){T(we(n,t),()=>e+` Shapes ${n} and ${t} must match`)}function bN(n){T(n!=null,()=>"The input to the tensor constructor must be a non-null value.")}function j(n){if(n.length===0)return 1;let t=n[0];for(let e=1;e<n.length;e++)t*=n[e];return t}function we(n,t){if(n===t)return!0;if(n==null||t==null||n.length!==t.length)return!1;for(let e=0;e<n.length;e++)if(n[e]!==t[e])return!1;return!0}function Yu(n){return n%1===0}function qb(n){const t=Math.ceil(Math.sqrt(n));return[t,Math.ceil(n/t)]}function Ru(n,t){return t<=n.length?n:n+" ".repeat(t-n.length)}function TI(n,t=r=>0,e,s){return new Promise((r,o)=>{let a=0;const i=()=>{if(n()){r();return}a++;const u=t(a);if(e!=null&&a>=e){o();return}s!=null?s(i,u):setTimeout(i,u)};i()})}function Fw(n,t){let e=1,s=-1;for(let o=0;o<n.length;++o)if(n[o]>=0)e*=n[o];else if(n[o]===-1){if(s!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${o}`);s=o}else if(n[o]<0)throw Error(`Shapes can not be < 0. Found ${n[o]} at dim ${o}`);if(s===-1){if(t>0&&t!==e)throw Error(`Size(${t}) must match the product of shape ${n}`);return n}if(e===0)throw Error(`Cannot infer the missing size in [${n}] when there are 0 elements`);if(t%e!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${e}`);const r=n.slice();return r[s]=t/e,r}function Gt(n,t){const e=t.length;return n=n==null?t.map((s,r)=>r):[].concat(n),T(n.every(s=>s>=-e&&s<e),()=>`All values in axis param must be in range [-${e}, ${e}) but got axis ${n}`),T(n.every(s=>Yu(s)),()=>`All values in axis param must be integers but got axis ${n}`),n.map(s=>s<0?e+s:s)}function za(n,t){const e=[],s=[],r=t!=null&&Array.isArray(t)&&t.length===0,o=t==null||r?null:Gt(t,n).sort();let a=0;for(let i=0;i<n.length;++i){if(o!=null){if(o[a]===i&&n[i]!==1)throw new Error(`Can't squeeze axis ${i} since its dim '${n[i]}' is not 1`);(o[a]==null||o[a]>i)&&n[i]===1&&(e.push(n[i]),s.push(i)),o[a]<=i&&a++}n[i]!==1&&(e.push(n[i]),s.push(i))}return{newShape:e,keptDims:s}}function jn(n,t){return tn(n,t)}function tn(n,t){let e=null;if(n==null||n==="float32")e=new Float32Array(t);else if(n==="int32")e=new Int32Array(t);else if(n==="bool")e=new Uint8Array(t);else if(n==="string")e=new Array(t);else throw new Error(`Unknown data type ${n}`);return e}function qM(n,t){for(let e=0;e<n.length;e++){const s=n[e];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${t} being uploaded contains ${s}.`)}}function KM(n){return n==="bool"||n==="complex64"||n==="float32"||n==="int32"||n==="string"}function xN(n,t){return!(t==="complex64"||t==="float32"&&n!=="complex64"||t==="int32"&&n!=="float32"&&n!=="complex64"||t==="bool"&&n==="bool")}function Ju(n){if(n==="float32"||n==="int32")return 4;if(n==="complex64")return 8;if(n==="bool")return 1;throw new Error(`Unknown dtype ${n}`)}function XM(n){if(n==null)return 0;let t=0;return n.forEach(e=>t+=e.length),t}function Vh(n){return typeof n=="string"||n instanceof String}function YM(n){return typeof n=="boolean"}function Kb(n){return typeof n=="number"}function Ki(n){return Array.isArray(n)?Ki(n[0]):n instanceof Float32Array?"float32":n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray?"int32":Kb(n)?"float32":Vh(n)?"string":YM(n)?"bool":"float32"}function Xb(n){return!!(n&&n.constructor&&n.call&&n.apply)}function Yb(n,t){for(let e=t;e<n;++e)if(n%e===0)return e;return n}function St(n){const t=n.length;if(t<2)return[];const e=new Array(t-1);e[t-2]=n[t-1];for(let s=t-3;s>=0;--s)e[s]=e[s+1]*n[s+1];return e}function wN(n,t,e,s=!1){const r=new Array;if(t.length===1){const o=t[0]*(s?2:1);for(let a=0;a<o;a++)r[a]=e[n+a]}else{const o=t[0],a=t.slice(1),i=a.reduce((u,c)=>u*c)*(s?2:1);for(let u=0;u<o;u++)r[u]=wN(n+u*i,a,e,s)}return r}function Er(n,t,e=!1){if(n.length===0)return t[0];const s=n.reduce((r,o)=>r*o)*(e?2:1);if(s===0)return[];if(s!==t.length)throw new Error(`[${n}] does not match the input size ${t.length}${e?" for a complex tensor":""}.`);return wN(0,n,t,e)}function JM(n,t){if(Array.isArray(n))return n;if(t==="float32")return n instanceof Float32Array?n:new Float32Array(n);if(t==="int32")return n instanceof Int32Array?n:new Int32Array(n);if(t==="bool"||t==="string")return Uint8Array.from(new Int32Array(n));throw new Error(`Unknown dtype ${t}`)}function Ow(n,t){const e=qn(n,t);for(let s=0;s<e.length;s++)e[s]=1;return e}function qn(n,t){if(t==null||t==="float32"||t==="complex64")return new Float32Array(n);if(t==="int32")return new Int32Array(n);if(t==="bool")return new Uint8Array(n);throw new Error(`Unknown data type ${t}`)}function vN(n,t){const e=n.reduce((s,r)=>s*r,1);if(t==null||t==="float32")return Er(n,new Float32Array(e));if(t==="int32")return Er(n,new Int32Array(e));if(t==="bool")return Er(n,new Uint8Array(e));throw new Error(`Unknown data type ${t}`)}function Qo(n){n.forEach(t=>{T(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${n}].`)})}function ro(n,t,e){if(t===0)return 0;if(t===1)return n[0];let s=n[n.length-1];for(let r=0;r<n.length-1;++r)s+=e[r]*n[r];return s}function yl(n,t,e){if(t===0)return[];if(t===1)return[n];const s=new Array(t);for(let r=0;r<s.length-1;++r)s[r]=Math.floor(n/e[r]),n-=s[r]*e[r];return s[s.length-1]=n,s}function Pw(n){return n&&n.then&&typeof n.then=="function"}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EI="tfjsflags";let ZM=class{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=QM,this.populateURLFlags()}setPlatform(t,e){this.platform!=null&&(et().getBool("IS_TEST")||et().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`)),this.platformName=t,this.platform=e}registerFlag(t,e,s){if(this.flagRegistry[t]={evaluationFn:e,setHook:s},this.urlFlags[t]!=null){const r=this.urlFlags[t];et().getBool("IS_TEST")||et().getBool("PROD")||console.warn(`Setting feature override from URL ${t}: ${r}.`),this.set(t,r)}}async getAsync(t){return t in this.flags?this.flags[t]:(this.flags[t]=await this.evaluateFlag(t),this.flags[t])}get(t){if(t in this.flags)return this.flags[t];const e=this.evaluateFlag(t);if(Pw(e))throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getString(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(this.flagRegistry[t]==null)throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=e,this.flagRegistry[t].setHook!=null&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(this.flagRegistry[t]==null)throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;const t=this.getQueryParams(this.global.location.search);EI in t&&t[EI].split(",").forEach(s=>{const[r,o]=s.split(":");this.urlFlags[r]=eB(r,o)})}};function QM(n){const t={};return n.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(e,...s)=>(tB(t,s[0],s[1]),s.join("="))),t}function tB(n,t,e){n[decodeURIComponent(t)]=decodeURIComponent(e||"")}function eB(n,t){const e=t.toLowerCase();return e==="true"||e==="false"?e==="true":`${+e}`===e?+e:t}function et(){return IN}let IN=null;function nB(n){IN=n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let rb;function kN(){if(rb==null){let n;if(typeof window<"u")n=window;else if(typeof global<"u")n=global;else if(typeof process<"u")n=process;else if(typeof self<"u")n=self;else throw new Error("Could not find a global object");rb=n}return rb}function sB(){const n=kN();return n._tfGlobals==null&&(n._tfGlobals=new Map),n._tfGlobals}function Lw(n,t){const e=sB();if(e.has(n))return e.get(n);{const s=t();return e.set(n,s),e.get(n)}}const Wh="Abs",bl="Acos",xl="Acosh",Xi="Add",Uh="AddN",Gh="All",Hh="Any",jh="ArgMax",qh="ArgMin",wl="Asin",vl="Asinh",Il="Atan",kl="Atanh",$l="Atan2",Sl="AvgPool",Ng="AvgPoolGrad",Kh="AvgPool3D",Cg="AvgPool3DGrad",Nl="BatchMatMul",Xh="BatchToSpaceND",Yh="Bincount",_g="BitwiseAnd",rB="BroadcastTo",Mw="BroadcastArgs",Cl="Cast",_l="Ceil",Yi="ClipByValue",Bw="Complex",Tg="ComplexAbs",Jh="Concat",Tl="Conv2D",zw="Conv2DBackpropFilter",El="Conv2DBackpropInput",Al="Conv3D",Zh="Conv3DBackpropFilterV2",Qh="Conv3DBackpropInputV2",Dl="Cos",Rl="Cosh",tp="Cumprod",Fl="Cumsum",ep="CropAndResize",Eg="DenseBincount",np="DepthToSpace",Ol="DepthwiseConv2dNative",Vw="DepthwiseConv2dNativeBackpropFilter",Ww="DepthwiseConv2dNativeBackpropInput",Uw="Diag",Pl="Dilation2D",Fd="Dilation2DBackpropInput",Od="Dilation2DBackpropFilter",oB="Draw",Ll="RealDiv",Gw="Einsum",Ml="Elu",sp="EluGrad",Bl="Erf",rp="Equal",zl="Exp",op="ExpandDims",Vl="Expm1",Hw="FFT",Ag="Fill",ap="FlipLeftRight",Wl="Floor",Ul="FloorDiv",Gl="FusedBatchNorm",ip="GatherV2",Dg="GatherNd",up="Greater",Hl="GreaterEqual",jl="Identity",jw="IFFT",qw="Imag",ql="IsFinite",Kl="IsInf",Xl="IsNan",Yl="LeakyRelu",lp="Less",cp="LessEqual",Rg="LinSpace",Jl="Log",Zl="Log1p",dp="LogicalAnd",hp="LogicalNot",pp="LogicalOr",aB="LogicalXor",iB="LogSoftmax",Ql="LRN",fp="LRNGrad",tc="Max",ec="Maximum",nc="MaxPool",Fg="MaxPoolGrad",mp="MaxPool3D",Og="MaxPool3DGrad",Kw="MaxPoolWithArgmax",sc="Mean",rc="Min",oc="Minimum",ac="MirrorPad",ic="Mod",Pg="Multinomial",uc="Multiply",gp="Neg",yp="NotEqual",bp="NonMaxSuppressionV3",xp="NonMaxSuppressionV4",wp="NonMaxSuppressionV5",vp="OnesLike",lc="OneHot",Ip="Pack",cc="PadV2",dc="Pow",hc="Prelu",pc="Prod",$N="RaggedGather",SN="RaggedRange",NN="RaggedTensorToTensor",Lg="Range",Xw="Real",fc="Reciprocal",mc="Relu",kp="Reshape",gc="ResizeNearestNeighbor",$p="ResizeNearestNeighborGrad",yc="ResizeBilinear",Sp="ResizeBilinearGrad",bc="Relu6",xc="Reverse",wc="Round",vc="Rsqrt",Mg="ScatterNd",Bg="TensorScatterUpdate",zg="SearchSorted",Np="Select",Ic="Selu",Cp="Slice",kc="Sin",$c="Sinh",Sc="Sign",Nc="Sigmoid",Cc="Softplus",_c="Sqrt",Tc="Sum",_p="SpaceToBatchND",Tp="SplitV",Ec="Softmax",Yw="SparseFillEmptyRows",Vg="SparseReshape",Jw="SparseSegmentMean",Zw="SparseSegmentSum",Wg="SparseToDense",Ac="SquaredDifference",Ug="Square",Qw="StaticRegexReplace",Ep="StridedSlice",t1="StringNGrams",e1="StringSplit",n1="StringToHashBucketFast",Dc="Sub",Rc="Tan",Fc="Tanh",Ji="Tile",Ap="TopK",Dp="Transform",wa="Transpose",Gg="Unique",Rp="Unpack",Hg="UnsortedSegmentSum",Fp="ZerosLike",Zi="Step",uB="FromPixels",Op="RotateWithOffset",Zu="_FusedMatMul",Qu="FusedConv2D",jg="FusedDepthwiseConv2D";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gs(...n){et().getBool("IS_TEST")||et().getBool("PROD")||console.warn(...n)}function lB(...n){et().getBool("IS_TEST")||et().getBool("PROD")||console.log(...n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const im=Lw("kernelRegistry",()=>new Map),Jb=Lw("gradRegistry",()=>new Map);function AI(n,t){const e=CN(n,t);return im.get(e)}function DI(n){return Jb.get(n)}function RI(n){const t=im.entries(),e=[];for(;;){const{done:s,value:r}=t.next();if(s)break;const[o,a]=r,[i]=o.split("_");i===n&&e.push(a)}return e}function s1(n){const{kernelName:t,backendName:e}=n,s=CN(t,e);im.has(s)&&Gs(`The kernel '${t}' for backend '${e}' is already registered`),im.set(s,n)}function cB(n){const{kernelName:t}=n;Jb.has(t)&&et().getBool("DEBUG")&&Gs(`Overriding the gradient for '${t}'`),Jb.set(t,n)}function CN(n,t){return`${t}_${n}`}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _N(n){return n instanceof Float32Array||n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray}var ob,FI;function dB(){if(FI)return ob;FI=1,ob=t;var n=null;try{n=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function t(N,$,A){this.low=N|0,this.high=$|0,this.unsigned=!!A}t.prototype.__isLong__,Object.defineProperty(t.prototype,"__isLong__",{value:!0});function e(N){return(N&&N.__isLong__)===!0}t.isLong=e;var s={},r={};function o(N,$){var A,D,R;return $?(N>>>=0,(R=0<=N&&N<256)&&(D=r[N],D)?D:(A=i(N,(N|0)<0?-1:0,!0),R&&(r[N]=A),A)):(N|=0,(R=-128<=N&&N<128)&&(D=s[N],D)?D:(A=i(N,N<0?-1:0,!1),R&&(s[N]=A),A))}t.fromInt=o;function a(N,$){if(isNaN(N))return $?b:y;if($){if(N<0)return b;if(N>=f)return S}else{if(N<=-9223372036854776e3)return _;if(N+1>=m)return k}return N<0?a(-N,$).neg():i(N%p|0,N/p|0,$)}t.fromNumber=a;function i(N,$,A){return new t(N,$,A)}t.fromBits=i;var u=Math.pow;function c(N,$,A){if(N.length===0)throw Error("empty string");if(N==="NaN"||N==="Infinity"||N==="+Infinity"||N==="-Infinity")return y;if(typeof $=="number"?(A=$,$=!1):$=!!$,A=A||10,A<2||36<A)throw RangeError("radix");var D;if((D=N.indexOf("-"))>0)throw Error("interior hyphen");if(D===0)return c(N.substring(1),$,A).neg();for(var R=a(u(A,8)),F=y,z=0;z<N.length;z+=8){var H=Math.min(8,N.length-z),P=parseInt(N.substring(z,z+H),A);if(H<8){var U=a(u(A,H));F=F.mul(U).add(a(P))}else F=F.mul(R),F=F.add(a(P))}return F.unsigned=$,F}t.fromString=c;function l(N,$){return typeof N=="number"?a(N,$):typeof N=="string"?c(N,$):i(N.low,N.high,typeof $=="boolean"?$:N.unsigned)}t.fromValue=l;var d=65536,h=1<<24,p=d*d,f=p*p,m=f/2,g=o(h),y=o(0);t.ZERO=y;var b=o(0,!0);t.UZERO=b;var x=o(1);t.ONE=x;var w=o(1,!0);t.UONE=w;var v=o(-1);t.NEG_ONE=v;var k=i(-1,2147483647,!1);t.MAX_VALUE=k;var S=i(-1,-1,!0);t.MAX_UNSIGNED_VALUE=S;var _=i(0,-2147483648,!1);t.MIN_VALUE=_;var C=t.prototype;return C.toInt=function(){return this.unsigned?this.low>>>0:this.low},C.toNumber=function(){return this.unsigned?(this.high>>>0)*p+(this.low>>>0):this.high*p+(this.low>>>0)},C.toString=function($){if($=$||10,$<2||36<$)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(_)){var A=a($),D=this.div(A),R=D.mul(A).sub(this);return D.toString($)+R.toInt().toString($)}else return"-"+this.neg().toString($);for(var F=a(u($,6),this.unsigned),z=this,H="";;){var P=z.div(F),U=z.sub(P.mul(F)).toInt()>>>0,Z=U.toString($);if(z=P,z.isZero())return Z+H;for(;Z.length<6;)Z="0"+Z;H=""+Z+H}},C.getHighBits=function(){return this.high},C.getHighBitsUnsigned=function(){return this.high>>>0},C.getLowBits=function(){return this.low},C.getLowBitsUnsigned=function(){return this.low>>>0},C.getNumBitsAbs=function(){if(this.isNegative())return this.eq(_)?64:this.neg().getNumBitsAbs();for(var $=this.high!=0?this.high:this.low,A=31;A>0&&($&1<<A)==0;A--);return this.high!=0?A+33:A+1},C.isZero=function(){return this.high===0&&this.low===0},C.eqz=C.isZero,C.isNegative=function(){return!this.unsigned&&this.high<0},C.isPositive=function(){return this.unsigned||this.high>=0},C.isOdd=function(){return(this.low&1)===1},C.isEven=function(){return(this.low&1)===0},C.equals=function($){return e($)||($=l($)),this.unsigned!==$.unsigned&&this.high>>>31===1&&$.high>>>31===1?!1:this.high===$.high&&this.low===$.low},C.eq=C.equals,C.notEquals=function($){return!this.eq($)},C.neq=C.notEquals,C.ne=C.notEquals,C.lessThan=function($){return this.comp($)<0},C.lt=C.lessThan,C.lessThanOrEqual=function($){return this.comp($)<=0},C.lte=C.lessThanOrEqual,C.le=C.lessThanOrEqual,C.greaterThan=function($){return this.comp($)>0},C.gt=C.greaterThan,C.greaterThanOrEqual=function($){return this.comp($)>=0},C.gte=C.greaterThanOrEqual,C.ge=C.greaterThanOrEqual,C.compare=function($){if(e($)||($=l($)),this.eq($))return 0;var A=this.isNegative(),D=$.isNegative();return A&&!D?-1:!A&&D?1:this.unsigned?$.high>>>0>this.high>>>0||$.high===this.high&&$.low>>>0>this.low>>>0?-1:1:this.sub($).isNegative()?-1:1},C.comp=C.compare,C.negate=function(){return!this.unsigned&&this.eq(_)?_:this.not().add(x)},C.neg=C.negate,C.add=function($){e($)||($=l($));var A=this.high>>>16,D=this.high&65535,R=this.low>>>16,F=this.low&65535,z=$.high>>>16,H=$.high&65535,P=$.low>>>16,U=$.low&65535,Z=0,tt=0,at=0,ot=0;return ot+=F+U,at+=ot>>>16,ot&=65535,at+=R+P,tt+=at>>>16,at&=65535,tt+=D+H,Z+=tt>>>16,tt&=65535,Z+=A+z,Z&=65535,i(at<<16|ot,Z<<16|tt,this.unsigned)},C.subtract=function($){return e($)||($=l($)),this.add($.neg())},C.sub=C.subtract,C.multiply=function($){if(this.isZero())return y;if(e($)||($=l($)),n){var A=n.mul(this.low,this.high,$.low,$.high);return i(A,n.get_high(),this.unsigned)}if($.isZero())return y;if(this.eq(_))return $.isOdd()?_:y;if($.eq(_))return this.isOdd()?_:y;if(this.isNegative())return $.isNegative()?this.neg().mul($.neg()):this.neg().mul($).neg();if($.isNegative())return this.mul($.neg()).neg();if(this.lt(g)&&$.lt(g))return a(this.toNumber()*$.toNumber(),this.unsigned);var D=this.high>>>16,R=this.high&65535,F=this.low>>>16,z=this.low&65535,H=$.high>>>16,P=$.high&65535,U=$.low>>>16,Z=$.low&65535,tt=0,at=0,ot=0,lt=0;return lt+=z*Z,ot+=lt>>>16,lt&=65535,ot+=F*Z,at+=ot>>>16,ot&=65535,ot+=z*U,at+=ot>>>16,ot&=65535,at+=R*Z,tt+=at>>>16,at&=65535,at+=F*U,tt+=at>>>16,at&=65535,at+=z*P,tt+=at>>>16,at&=65535,tt+=D*Z+R*U+F*P+z*H,tt&=65535,i(ot<<16|lt,tt<<16|at,this.unsigned)},C.mul=C.multiply,C.divide=function($){if(e($)||($=l($)),$.isZero())throw Error("division by zero");if(n){if(!this.unsigned&&this.high===-2147483648&&$.low===-1&&$.high===-1)return this;var A=(this.unsigned?n.div_u:n.div_s)(this.low,this.high,$.low,$.high);return i(A,n.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?b:y;var D,R,F;if(this.unsigned){if($.unsigned||($=$.toUnsigned()),$.gt(this))return b;if($.gt(this.shru(1)))return w;F=b}else{if(this.eq(_)){if($.eq(x)||$.eq(v))return _;if($.eq(_))return x;var z=this.shr(1);return D=z.div($).shl(1),D.eq(y)?$.isNegative()?x:v:(R=this.sub($.mul(D)),F=D.add(R.div($)),F)}else if($.eq(_))return this.unsigned?b:y;if(this.isNegative())return $.isNegative()?this.neg().div($.neg()):this.neg().div($).neg();if($.isNegative())return this.div($.neg()).neg();F=y}for(R=this;R.gte($);){D=Math.max(1,Math.floor(R.toNumber()/$.toNumber()));for(var H=Math.ceil(Math.log(D)/Math.LN2),P=H<=48?1:u(2,H-48),U=a(D),Z=U.mul($);Z.isNegative()||Z.gt(R);)D-=P,U=a(D,this.unsigned),Z=U.mul($);U.isZero()&&(U=x),F=F.add(U),R=R.sub(Z)}return F},C.div=C.divide,C.modulo=function($){if(e($)||($=l($)),n){var A=(this.unsigned?n.rem_u:n.rem_s)(this.low,this.high,$.low,$.high);return i(A,n.get_high(),this.unsigned)}return this.sub(this.div($).mul($))},C.mod=C.modulo,C.rem=C.modulo,C.not=function(){return i(~this.low,~this.high,this.unsigned)},C.and=function($){return e($)||($=l($)),i(this.low&$.low,this.high&$.high,this.unsigned)},C.or=function($){return e($)||($=l($)),i(this.low|$.low,this.high|$.high,this.unsigned)},C.xor=function($){return e($)||($=l($)),i(this.low^$.low,this.high^$.high,this.unsigned)},C.shiftLeft=function($){return e($)&&($=$.toInt()),($&=63)===0?this:$<32?i(this.low<<$,this.high<<$|this.low>>>32-$,this.unsigned):i(0,this.low<<$-32,this.unsigned)},C.shl=C.shiftLeft,C.shiftRight=function($){return e($)&&($=$.toInt()),($&=63)===0?this:$<32?i(this.low>>>$|this.high<<32-$,this.high>>$,this.unsigned):i(this.high>>$-32,this.high>=0?0:-1,this.unsigned)},C.shr=C.shiftRight,C.shiftRightUnsigned=function($){if(e($)&&($=$.toInt()),$&=63,$===0)return this;var A=this.high;if($<32){var D=this.low;return i(D>>>$|A<<32-$,A>>>$,this.unsigned)}else return $===32?i(A,0,this.unsigned):i(A>>>$-32,0,this.unsigned)},C.shru=C.shiftRightUnsigned,C.shr_u=C.shiftRightUnsigned,C.toSigned=function(){return this.unsigned?i(this.low,this.high,!1):this},C.toUnsigned=function(){return this.unsigned?this:i(this.low,this.high,!0)},C.toBytes=function($){return $?this.toBytesLE():this.toBytesBE()},C.toBytesLE=function(){var $=this.high,A=this.low;return[A&255,A>>>8&255,A>>>16&255,A>>>24,$&255,$>>>8&255,$>>>16&255,$>>>24]},C.toBytesBE=function(){var $=this.high,A=this.low;return[$>>>24,$>>>16&255,$>>>8&255,$&255,A>>>24,A>>>16&255,A>>>8&255,A&255]},t.fromBytes=function($,A,D){return D?t.fromBytesLE($,A):t.fromBytesBE($,A)},t.fromBytesLE=function($,A){return new t($[0]|$[1]<<8|$[2]<<16|$[3]<<24,$[4]|$[5]<<8|$[6]<<16|$[7]<<24,A)},t.fromBytesBE=function($,A){return new t($[4]<<24|$[5]<<16|$[6]<<8|$[7],$[0]<<24|$[1]<<16|$[2]<<8|$[3],A)},ob}var TN=dB();const EN=bg(TN),hB=aw({__proto__:null,default:EN},[TN]);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ii=EN||hB;function qg(n){return ii.fromString(n,!0,16)}const AN=qg("c3a5c85c97cb3127"),oi=qg("b492b66fbe98f273"),ss=qg("9ae16a3b2f90404f");function Zb(n){return n.xor(n.shru(47))}function DN(n,t,e){const s=n.slice(t,t+e);return ii.fromBytes(Array.from(s),!0,!0)}function Oe(n,t){return DN(n,t,8)}function OI(n,t){return DN(n,t,4)}function Nn(n,t){return t===0?n:n.shru(t).or(n.shl(64-t))}function va(n,t,e=qg("9ddfea08eb382d69")){let s=n.xor(t).mul(e);s=s.xor(s.shru(47));let r=t.xor(s).mul(e);return r=r.xor(r.shru(47)),r=r.mul(e),r}function pB(n,t,e,s,r,o){r=r.add(n),o=Nn(o.add(r).add(s),21);const a=r;return r=r.add(t),r=r.add(e),o=o.add(Nn(r,44)),[r.add(s),o.add(a)]}function gf(n,t,e,s){return pB(Oe(n,t),Oe(n,t+8),Oe(n,t+16),Oe(n,t+24),e,s)}function fB(n,t=n.length){if(t>=8){const e=ss.add(t*2),s=Oe(n,0).add(ss),r=Oe(n,t-8),o=Nn(r,37).mul(e).add(s),a=Nn(s,25).add(r).mul(e);return va(o,a,e)}if(t>=4){const e=ss.add(t*2),s=OI(n,0);return va(s.shl(3).add(t),OI(n,t-4),e)}if(t>0){const e=n[0],s=n[t>>1],r=n[t-1],o=e+(s<<8),a=t+(r<<2);return Zb(ss.mul(o).xor(AN.mul(a))).mul(ss)}return ss}function mB(n,t=n.length){const e=ss.add(t*2),s=Oe(n,0).mul(oi),r=Oe(n,8),o=Oe(n,t-8).mul(e),a=Oe(n,t-16).mul(ss);return va(Nn(s.add(r),43).add(Nn(o,30)).add(a),s.add(Nn(r.add(ss),18)).add(o),e)}function gB(n,t=n.length){const e=ss.add(t*2),s=Oe(n,0).mul(ss),r=Oe(n,8),o=Oe(n,t-8).mul(e),a=Oe(n,t-16).mul(ss),i=Nn(s.add(r),43).add(Nn(o,30)).add(a),u=va(i,s.add(Nn(r.add(ss),18)).add(o),e),c=Oe(n,16).mul(e),l=Oe(n,24),d=i.add(Oe(n,t-32)).mul(e),h=u.add(Oe(n,t-24)).mul(e);return va(Nn(c.add(l),43).add(Nn(d,30)).add(h),c.add(Nn(l.add(s),18)).add(d),e)}function yB(n,t=n.length){const e=ii.fromNumber(81,!0);if(t<=32)return t<=16?fB(n,t):mB(n,t);if(t<=64)return gB(n,t);let s=e,r=e.mul(oi).add(113),o=Zb(r.mul(ss).add(113)).mul(ss),a=[ii.UZERO,ii.UZERO],i=[ii.UZERO,ii.UZERO];s=s.mul(ss).add(Oe(n,0));let u=0;const c=(t-1>>6)*64,l=c+(t-1&63)-63;do s=Nn(s.add(r).add(a[0]).add(Oe(n,u+8)),37).mul(oi),r=Nn(r.add(a[1]).add(Oe(n,u+48)),42).mul(oi),s=s.xor(i[1]),r=r.add(a[0]).add(Oe(n,u+40)),o=Nn(o.add(i[0]),33).mul(oi),a=gf(n,u,a[1].mul(oi),s.add(i[0])),i=gf(n,u+32,o.add(i[1]),r.add(Oe(n,u+16))),[o,s]=[s,o],u+=64;while(u!==c);const d=oi.add(o.and(255).shl(1));return u=l,i[0]=i[0].add(t-1&63),a[0]=a[0].add(i[0]),i[0]=i[0].add(a[0]),s=Nn(s.add(r).add(a[0]).add(Oe(n,u+8)),37).mul(d),r=Nn(r.add(a[1]).add(Oe(n,u+48)),42).mul(d),s=s.xor(i[1].mul(9)),r=r.add(a[0].mul(9).add(Oe(n,u+40))),o=Nn(o.add(i[0]),33).mul(d),a=gf(n,u,a[1].mul(d),s.add(i[0])),i=gf(n,u+32,o.add(i[1]),r.add(Oe(n,u+16))),[o,s]=[s,o],va(va(a[0],i[0],d).add(Zb(r).mul(AN)).add(o),va(a[1],i[1],d).add(s),d)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Va(n,t){return t==="string"?Ia(n):Qi([n],t)}function bB(n,t){return n instanceof Float32Array&&t==="float32"||n instanceof Int32Array&&t==="int32"||n instanceof Uint8Array&&t==="bool"}function Qi(n,t){if(t==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(n)&&(n=$i(n)),et().getBool("DEBUG")&&qM(n,t),bB(n,t))return n;if(t==null||t==="float32"||t==="complex64")return new Float32Array(n);if(t==="int32")return new Int32Array(n);if(t==="bool"){const e=new Uint8Array(n.length);for(let s=0;s<e.length;++s)Math.round(n[s])!==0&&(e[s]=1);return e}else throw new Error(`Unknown data type ${t}`)}function Un(){return et().platform.now()}function Ia(n,t="utf-8"){return t=t||"utf-8",et().platform.encode(n,t)}function Ea(n,t="utf-8"){return t=t||"utf-8",et().platform.decode(n,t)}function fr(n){return et().platform.isTypedArray!=null?et().platform.isTypedArray(n):_N(n)}function $i(n,t=[],e=!1){if(t==null&&(t=[]),typeof n=="boolean"||typeof n=="number"||typeof n=="string"||Pw(n)||n==null||fr(n)&&e)t.push(n);else if(Array.isArray(n)||fr(n))for(let s=0;s<n.length;++s)$i(n[s],t,e);else{let s=-1;for(const r of Object.keys(n))/^([1-9]+[0-9]*|0)$/.test(r)&&(s=Math.max(s,Number(r)));for(let r=0;r<=s;r++)$i(n[r],t,e)}return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let xB=class{constructor(t,e){this.backendTimer=t,this.logger=e,e==null&&(this.logger=new vB)}profileKernel(t,e,s){let r;const o=()=>{r=s()};let a;const i=Un();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(o);else{o();for(const c of r)c.dataSync();a=Promise.resolve({kernelMs:Un()-i})}if(et().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let c=0;c<r.length;c++){const l=r[c];l.data().then(d=>{wB(d,l.dtype,t)})}return{kernelName:t,outputs:r,inputs:e,timeMs:a.then(c=>c.kernelMs),extraInfo:a.then(c=>c.getExtraProfileInfo!=null?c.getExtraProfileInfo():"")}}logKernelProfile(t){const{kernelName:e,outputs:s,timeMs:r,inputs:o,extraInfo:a}=t;s.forEach(i=>{Promise.all([i.data(),r,a]).then(u=>{this.logger.logKernelProfile(e,i,u[0],u[1],o,u[2])})})}};function wB(n,t,e){if(t!=="float32")return!1;for(let s=0;s<n.length;s++){const r=n[s];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${e}'`),!0}return!1}let vB=class{logKernelProfile(t,e,s,r,o,a){const i=typeof r=="number"?Ru(`${r}ms`,9):r.error,u=Ru(t,25),c=e.rank,l=e.size,d=Ru(e.shape.toString(),14);let h="";for(const p in o){const f=o[p];if(f!=null){const m=f.shape||e.shape,g=m.length;h+=`${p}: ${g}D ${g>0?m:""} `}}console.log(`%c${u}	%c${i}	%c${c}D ${d}	%c${l}	%c${h}	%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IB(n,t,e){const s={},r={};for(let u=0;u<t.length;u++)s[t[u].id]=!0;for(let u=0;u<n.length;u++){const c=n[u],l=c.inputs;for(const d in l){const h=l[d];let p=!1;for(let f=0;f<t.length;f++)if(s[h.id]){c.outputs.forEach(m=>s[m.id]=!0),p=!0,r[c.id]=!0;break}if(p)break}}const o={};o[e.id]=!0;const a={};for(let u=n.length-1;u>=0;u--){const c=n[u],l=c.inputs;for(let d=0;d<c.outputs.length;d++)if(o[c.outputs[d].id]){for(const h in l)o[l[h].id]=!0,a[c.id]=!0;break}}const i=[];for(let u=0;u<n.length;u++){const c=n[u];if(r[c.id]&&a[c.id]){const l={};for(const h in c.inputs){const p=c.inputs[h];s[p.id]&&(l[h]=p)}const d=Object.assign({},c);d.inputs=l,d.outputs=c.outputs,i.push(d)}}return i}function kB(n,t,e,s){for(let r=t.length-1;r>=0;r--){const o=t[r],a=[];if(o.outputs.forEach(u=>{const c=n[u.id];c!=null?a.push(c):a.push(null)}),o.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${o.kernelName}.`);const i=o.gradient(a);for(const u in o.inputs){if(!(u in i))throw new Error(`Cannot backprop through input ${u}. Available gradients found: ${Object.keys(i)}.`);const c=e(()=>i[u]());if(c.dtype!=="float32")throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input ${u} must have 'float32' dtype, but has '${c.dtype}'`);const l=o.inputs[u];if(!we(c.shape,l.shape))throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input '${u}' has shape '${c.shape}', which does not match the shape of the input '${l.shape}'`);if(n[l.id]==null)n[l.id]=c;else{const d=n[l.id];n[l.id]=s(d,c),d.dispose()}}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PI=20,rd=3,ab=7;function $B(n,t,e,s){const r=St(t),o=SB(n,t,e,r),a=t.length,i=Rf(n,t,e,r,o),u=["Tensor"];return s&&(u.push(`  dtype: ${e}`),u.push(`  rank: ${a}`),u.push(`  shape: [${t}]`),u.push("  values:")),u.push(i.map(c=>"    "+c).join(`
`)),u.join(`
`)}function SB(n,t,e,s){const r=j(t),o=s[s.length-1],a=new Array(o).fill(0),i=t.length,u=e==="complex64"?fd(n):n;if(i>1)for(let c=0;c<r/o;c++){const l=c*o;for(let d=0;d<o;d++)a[d]=Math.max(a[d],pd(u[l+d],0,e).length)}return a}function pd(n,t,e){let s;return Array.isArray(n)?s=`${parseFloat(n[0].toFixed(ab))} + ${parseFloat(n[1].toFixed(ab))}j`:Vh(n)?s=`'${n}'`:e==="bool"?s=RN(n):s=parseFloat(n.toFixed(ab)).toString(),Ru(s,t)}function RN(n){return n===0?"false":"true"}function Rf(n,t,e,s,r,o=!0){const a=e==="complex64"?2:1,i=t[0],u=t.length;if(u===0){if(e==="complex64"){const m=fd(n);return[pd(m[0],0,e)]}return e==="bool"?[RN(n[0])]:[n[0].toString()]}if(u===1){if(i>PI){const g=rd*a;let y=Array.from(n.slice(0,g)),b=Array.from(n.slice((i-rd)*a,i*a));return e==="complex64"&&(y=fd(y),b=fd(b)),["["+y.map((x,w)=>pd(x,r[w],e)).join(", ")+", ..., "+b.map((x,w)=>pd(x,r[i-rd+w],e)).join(", ")+"]"]}return["["+(e==="complex64"?fd(n):Array.from(n)).map((g,y)=>pd(g,r[y],e)).join(", ")+"]"]}const c=t.slice(1),l=s.slice(1),d=s[0]*a,h=[];if(i>PI){for(let m=0;m<rd;m++){const g=m*d,y=g+d;h.push(...Rf(n.slice(g,y),c,e,l,r,!1))}h.push("...");for(let m=i-rd;m<i;m++){const g=m*d,y=g+d;h.push(...Rf(n.slice(g,y),c,e,l,r,m===i-1))}}else for(let m=0;m<i;m++){const g=m*d,y=g+d;h.push(...Rf(n.slice(g,y),c,e,l,r,m===i-1))}const p=u===2?",":"";h[0]="["+(i>0?h[0]+p:"");for(let m=1;m<h.length-1;m++)h[m]=" "+h[m]+p;let f=`,
`;for(let m=2;m<u;m++)f+=`
`;return h[h.length-1]=" "+h[h.length-1]+"]"+(o?"":f),h}function fd(n){const t=[];for(let e=0;e<n.length;e+=2)t.push([n[e],n[e+1]]);return t}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Pn=class{constructor(t,e,s){if(this.dtype=e,this.shape=t.slice(),this.size=j(t),s!=null){const r=s.length;T(r===this.size,()=>`Length of values '${r}' does not match the size inferred by the shape '${this.size}'.`)}if(e==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=s||tn(e,this.size),this.strides=St(t)}set(t,...e){e.length===0&&(e=[0]),T(e.length===this.rank,()=>`The number of provided coordinates (${e.length}) must match the rank (${this.rank})`);const s=this.locToIndex(e);this.values[s]=t}get(...t){t.length===0&&(t=[0]);let e=0;for(const r of t){if(r<0||r>=this.shape[e]){const o=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(o)}e++}let s=t[t.length-1];for(let r=0;r<t.length-1;++r)s+=this.strides[r]*t[r];return this.values[s]}locToIndex(t){if(this.rank===0)return 0;if(this.rank===1)return t[0];let e=t[t.length-1];for(let s=0;s<t.length-1;++s)e+=this.strides[s]*t[s];return e}indexToLoc(t){if(this.rank===0)return[];if(this.rank===1)return[t];const e=new Array(this.shape.length);for(let s=0;s<e.length-1;++s)e[s]=Math.floor(t/this.strides[s]),t-=e[s]*this.strides[s];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return Sr().makeTensor(this.values,this.shape,this.dtype)}},Sr=null,Cu=null;function NB(n){Sr=n}function CB(n){Cu=n}let yn=class{constructor(t,e,s,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=j(t),this.strides=St(t),this.dataId=s,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const t=await this.data();return Cu.buffer(this.shape,this.dtype,t)}bufferSync(){return Cu.buffer(this.shape,this.dtype,this.dataSync())}async array(){const t=await this.data();return Er(this.shape,t,this.dtype==="complex64")}arraySync(){return Er(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();const t=Sr().read(this.dataId);if(this.dtype==="string"){const e=await t;try{return e.map(s=>Ea(s))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t}dataToGPU(t){return this.throwIfDisposed(),Sr().readToGPU(this.dataId,t)}dataSync(){this.throwIfDisposed();const t=Sr().readSync(this.dataId);if(this.dtype==="string")try{return t.map(e=>Ea(e))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}async bytes(){this.throwIfDisposed();const t=await Sr().read(this.dataId);return this.dtype==="string"?t:new Uint8Array(t.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),Sr().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return Cu.print(this,t)}clone(){return this.throwIfDisposed(),Cu.clone(this)}toString(t=!1){const e=this.dataSync();return $B(e,this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),Cu.cast(this,t)}variable(t=!0,e,s){return this.throwIfDisposed(),Sr().makeVariable(this,t,e,s)}};Object.defineProperty(yn,Symbol.hasInstance,{value:n=>!!n&&n.data!=null&&n.dataSync!=null&&n.throwIfDisposed!=null});function rt(){return Lw("Tensor",()=>yn)}rt();let um=class extends yn{constructor(t,e,s,r){super(t.shape,t.dtype,t.dataId,r),this.trainable=e,this.name=s}assign(t){if(t.dtype!==this.dtype)throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`);if(!we(t.shape,this.shape))throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`);Sr().disposeTensor(this),this.dataId=t.dataId,Sr().incRef(this,null)}dispose(){Sr().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(um,Symbol.hasInstance,{value:n=>n instanceof yn&&n.assign!=null&&n.assign instanceof Function});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var LI;(function(n){n.R0="R0",n.R1="R1",n.R2="R2",n.R3="R3",n.R4="R4",n.R5="R5",n.R6="R6"})(LI||(LI={}));var Qb;(function(n){n.float32="float32",n.int32="int32",n.bool="int32",n.complex64="complex64"})(Qb||(Qb={}));var tx;(function(n){n.float32="float32",n.int32="int32",n.bool="bool",n.complex64="complex64"})(tx||(tx={}));var ex;(function(n){n.float32="float32",n.int32="float32",n.bool="float32",n.complex64="complex64"})(ex||(ex={}));var nx;(function(n){n.float32="complex64",n.int32="complex64",n.bool="complex64",n.complex64="complex64"})(nx||(nx={}));const _B={float32:ex,int32:Qb,bool:tx,complex64:nx};function Os(n,t){if(n==="string"||t==="string"){if(n==="string"&&t==="string")return"string";throw new Error(`Can not upcast ${n} with ${t}`)}return _B[n][t]}function r1(n){return Os(n,"int32")}function FN(n){return n!=null&&typeof n=="object"&&"texture"in n&&n.texture instanceof WebGLTexture}function ON(n){return typeof GPUBuffer<"u"&&n!=null&&typeof n=="object"&&"buffer"in n&&n.buffer instanceof GPUBuffer}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sn(n,t){if(n.dtype===t.dtype)return[n,t];const e=Os(n.dtype,t.dtype);return[n.cast(e),t.cast(e)]}function PN(n){const t=[];return LN(n,t,new Set),t}function LN(n,t,e){if(n==null)return;if(n instanceof yn){t.push(n);return}if(!TB(n))return;const s=n;for(const r in s){const o=s[r];e.has(o)||(e.add(o),LN(o,t,e))}}function TB(n){return Array.isArray(n)||typeof n=="object"}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ib(n){return n.kernelName!=null}let MI=class{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(t=>t.name)))}}}dispose(){for(const t in this.registeredVariables)this.registeredVariables[t].dispose()}},o1=class sx{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new MI}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const s=t[e];if(await this.initializeBackend(s).success){await this.setBackend(s);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){const{name:t,asyncInit:e}=this.initializeBackendsAndReturnBest();if(e)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry))if(t in this.registryFactory){const{asyncInit:e}=this.initializeBackend(t);if(e)return null}else return null;return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,e,s=1){return t in this.registryFactory?(Gs(`${t} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[t]={factory:e,priority:s},!0)}async setBackend(t){if(this.registryFactory[t]==null)throw new Error(`Backend name '${t}' not found in registry`);if(this.backendName=t,this.registry[t]==null){this.backendInstance=null;const{success:e,asyncInit:s}=this.initializeBackend(t);if(!(s?await e:e))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new xB(this.backendInstance),!0}setupRegisteredKernels(){RI(this.backendName).forEach(e=>{e.setupFunc!=null&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(t){RI(t).forEach(s=>{s.disposeFunc!=null&&s.disposeFunc(this.registry[t])})}initializeBackend(t){const e=this.registryFactory[t];if(e==null)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{const s=e.factory();if(s&&!(s instanceof $g)&&typeof s.then=="function"){const r=++this.pendingBackendInitId,o=s.then(a=>r<this.pendingBackendInitId?!1:(this.registry[t]=a,this.pendingBackendInit=null,!0)).catch(a=>(r<this.pendingBackendInitId||(this.pendingBackendInit=null,Gs(`Initialization of backend ${t} failed`),Gs(a.stack||a.message)),!1));return this.pendingBackendInit=o,{success:o,asyncInit:!0}}else return this.registry[t]=s,{success:!0,asyncInit:!1}}catch(s){return Gs(`Initialization of backend ${t} failed`),Gs(s.stack||s.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(`${t} backend not found in registry`);this.backendName===t&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((t,e)=>this.registryFactory[e].priority-this.registryFactory[t].priority)}initializeBackendsAndReturnBest(){const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const s=t[e],{success:r,asyncInit:o}=this.initializeBackend(s);if(o||r)return{name:s,asyncInit:o}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,e){const s=this.state.tensorInfo.get(e),r=s.backend,o=this.readSync(e),a=r.refCount(e);r.disposeData(e,!0),s.backend=t,t.move(e,o,s.shape,s.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,e){let s=null;if(e==null){if(typeof t!="function")throw new Error("Please provide a function to tidy()");e=t}else{if(typeof t!="string"&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof e!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");s=t}let r;return this.scopedRun(()=>this.startScope(s),()=>this.endScope(r),()=>(r=e(),r instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),r))}scopedRun(t,e,s){t();try{const r=s();return e(),r}catch(r){throw e(),r}}nextTensorId(){return sx.nextTensorId++}nextVariableId(){return sx.nextVariableId++}clone(t){const e=G.runKernel(jl,{x:t}),s={x:t},r=a=>({x:()=>{const i="float32",u={x:a},c={dtype:i};return G.runKernel(Cl,u,c)}}),o=[];return this.addTapeNode(this.state.activeScope.name,s,[e],r,o,{}),e}runKernel(t,e,s){if(this.backendName==null&&this.backend,!(AI(t,this.backendName)!=null))throw new Error(`Kernel '${t}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:t,inputs:e,attrs:s})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,e,s){const r=this.backend.numDataIds();let o=0;s.forEach(u=>{o+=u.dtype==="complex64"?3:1});const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-e-o-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${t}'`)}runKernelFunc(t){let e,s=[];const r=this.isTapeOn(),o=this.state.numBytes,a=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let i;this.backendName==null&&this.backend;let u;const c=ib(t)?t.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(ib(t)){const{kernelName:f,inputs:m,attrs:g}=t;this.backendName==null&&this.backend;const y=AI(f,this.backendName);T(y!=null,()=>`Cannot find registered kernel '${f}' for backend '${this.backendName}'`),i=()=>{const b=this.backend.numDataIds();u=y.kernelFunc({inputs:m,attrs:g,backend:this.backend});const x=Array.isArray(u)?u:[u];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(f,b,x);const w=x.map(v=>v.rank!=null?v:this.makeTensorFromTensorInfo(v));if(r){const v=this.getTensorsForGradient(f,m,w);s=this.saveTensorsForBackwardMode(v)}return w}}else{const{forwardFunc:f}=t,m=g=>{r&&(s=g.map(y=>this.keep(this.clone(y))))};i=()=>{const g=this.backend.numDataIds();u=this.tidy(()=>f(this.backend,m));const y=Array.isArray(u)?u:[u];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(c,g,y),y}}const{inputs:l,attrs:d}=t,h=ib(t)?null:t.backwardsFunc;let p;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?e=i():(p=this.profiler.profileKernel(c,l,()=>i()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(p),e=p.outputs)}),r&&this.addTapeNode(c,l,e,h,s,d),this.state.profiling&&this.state.activeProfile.kernels.push({name:c,bytesAdded:this.state.numBytes-o,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(l).map(f=>l[f]!=null?l[f].shape:null),outputShapes:e.map(f=>f.shape),kernelTimeMs:p.timeMs,extraInfo:p.extraInfo}),Array.isArray(u)?e:e[0]}saveTensorsForBackwardMode(t){return t.map(s=>this.keep(this.clone(s)))}getTensorsForGradient(t,e,s){const r=DI(t);if(r!=null){const o=r.inputsToSave||[],a=r.outputsToSave||[];let i;r.saveAllInputs?(T(Array.isArray(e),()=>"saveAllInputs is true, expected inputs to be an array."),i=Object.keys(e).map(c=>e[c])):i=o.map(c=>e[c]);const u=s.filter((c,l)=>a[l]);return i.concat(u)}return[]}makeTensor(t,e,s,r){if(t==null)throw new Error("Values passed to engine.makeTensor() are null");s=s||"float32",r=r||this.backend;let o=t;s==="string"&&Vh(t[0])&&(o=t.map(u=>Ia(u)));const a=r.write(o,e,s),i=new yn(e,s,a,this.nextTensorId());if(this.trackTensor(i,r),s==="string"){const u=this.state.tensorInfo.get(a),c=XM(o);this.state.numBytes+=c-u.bytes,u.bytes=c}return i}makeTensorFromDataId(t,e,s,r){s=s||"float32";const o={dataId:t,shape:e,dtype:s};return this.makeTensorFromTensorInfo(o,r)}makeTensorFromTensorInfo(t,e){const{dataId:s,shape:r,dtype:o}=t,a=new yn(r,o,s,this.nextTensorId());return this.trackTensor(a,e),a}makeVariable(t,e=!0,s,r){s=s||this.nextVariableId().toString(),r!=null&&r!==t.dtype&&(t=t.cast(r));const o=new um(t,e,s,this.nextTensorId());if(this.state.registeredVariables[o.name]!=null)throw new Error(`Variable with name ${o.name} was already registered`);return this.state.registeredVariables[o.name]=o,this.incRef(o,this.backend),o}trackTensor(t,e){this.state.numTensors++,t.dtype==="string"&&this.state.numStringTensors++;let s=0;t.dtype!=="complex64"&&t.dtype!=="string"&&(s=t.size*Ju(t.dtype)),this.state.numBytes+=s,this.state.tensorInfo.has(t.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(t.dataId,{backend:e||this.backend,dtype:t.dtype,shape:t.shape,bytes:s})),t instanceof um||this.track(t)}incRef(t,e){this.trackTensor(t,e),this.backend.incRef(t.dataId)}removeDataId(t,e){this.state.tensorInfo.has(t)&&this.state.tensorInfo.get(t).backend===e&&(this.state.tensorInfo.delete(t),this.state.numDataBuffers--)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;const e=this.state.tensorInfo.get(t.dataId);if(this.state.numTensors--,t.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=e.bytes),t.dtype!=="complex64"&&t.dtype!=="string"){const s=t.size*Ju(t.dtype);this.state.numBytes-=s}e.backend.disposeData(t.dataId)&&this.removeDataId(t.dataId,e.backend)}disposeVariables(){for(const t in this.state.registeredVariables){const e=this.state.registeredVariables[t];this.disposeVariable(e)}}disposeVariable(t){this.disposeTensor(t),this.state.registeredVariables[t.name]!=null&&delete this.state.registeredVariables[t.name]}memory(){const t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,t.reasons==null&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;const e=this.state.numBytes,s=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(r=>r.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-s;for(const r of this.state.activeProfile.kernels)r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(t,e,s,r,o,a){const i={id:this.state.nextTapeNodeId++,kernelName:t,inputs:e,outputs:s,saved:o},u=DI(t);u!=null&&(r=u.gradFunc),r!=null&&(i.gradient=c=>(c=c.map((l,d)=>{if(l==null){const h=s[d],p=qn(h.size,h.dtype);return this.makeTensor(p,h.shape,h.dtype)}return l}),r(c.length>1?c:c[0],o,a))),this.state.activeTape.push(i)}keep(t){return t.kept=!0,t}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){const e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e}endScope(t){const e=PN(t),s=new Set(e.map(o=>o.id));for(let o=0;o<this.state.activeScope.track.length;o++){const a=this.state.activeScope.track[o];!a.kept&&!s.has(a.id)&&a.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],e.forEach(o=>{!o.kept&&o.scopeId===r.id&&this.track(o)})}gradients(t,e,s,r=!1){if(T(e.length>0,()=>"gradients() received an empty list of xs."),s!=null&&s.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${s.dtype}'`);const o=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",t));T(o instanceof yn,()=>"The result y returned by f() must be a tensor.");const a=IB(this.state.activeTape,e,o);if(!r&&a.length===0&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const i={};i[o.id]=s??EB(o.shape),kB(i,a,c=>this.tidy(c),AB);const u=e.map(c=>i[c.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(c=>{for(const l of c.saved)l.dispose()}),this.state.activeTape=null),{value:o,grads:u}})}customGrad(t){return T(Xb(t),()=>"The f passed in customGrad(f) must be a function."),(...e)=>{T(e.every(i=>i instanceof yn),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let s;const r={};e.forEach((i,u)=>{r[u]=i});const o=(i,u)=>(s=t(...e,u),T(s.value instanceof yn,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),T(Xb(s.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),s.value),a=(i,u)=>{const c=s.gradFunc(i,u),l=Array.isArray(c)?c:[c];T(l.length===e.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),T(l.every(h=>h instanceof yn),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const d={};return l.forEach((h,p)=>{d[p]=()=>h}),d};return this.runKernelFunc({forwardFunc:o,backwardsFunc:a,inputs:r})}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}readToGPU(t,e){return this.state.tensorInfo.get(t).backend.readToGPU(t,e)}async time(t){const e=Un(),s=await this.backend.time(t);return s.wallMs=Un()-e,s}track(t){return this.state.activeScope!=null&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new MI;for(const t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}};o1.nextTensorId=0;o1.nextVariableId=0;function EB(n){const t=Ow(j(n),"float32");return G.makeTensor(t,n,"float32")}function MN(){const n=kN();if(n._tfengine==null){const t=new ZM(n);n._tfengine=new o1(t)}return nB(n._tfengine.ENV),NB(()=>n._tfengine),n._tfengine}const G=MN();function AB(n,t){const e={a:n,b:t};return G.runKernel(Xi,e)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DB(){return typeof navigator<"u"&&navigator!=null}function BN(n){if(n||DB()){if(n||(n=navigator),n.product==="ReactNative")return!0;const t=n.userAgent||n.vendor||(typeof window<"u"?window.opera:"");if(!t){const e=n;return e.userAgentData&&e.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function zN(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ks=et();ks.registerFlag("DEBUG",()=>!1,n=>{n&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});ks.registerFlag("IS_BROWSER",()=>zN());ks.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");ks.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));ks.registerFlag("IS_SAFARI",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor));ks.registerFlag("PROD",()=>!1);ks.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>ks.getBool("DEBUG"));ks.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);ks.registerFlag("IS_TEST",()=>!1);ks.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>ks.getBool("DEBUG"));ks.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);ks.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);ks.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kg(n,t){let e=n;if(fr(n))return t==="string"?[]:[n.length];if(FN(n)){const r=n.channels||"RGBA";return[n.height,n.width*r.length]}else if(ON(n))return[n.buffer.size/(t==null?4:Ju(t))];if(!Array.isArray(n))return[];const s=[];for(;Array.isArray(e)||fr(e)&&t!=="string";)s.push(e.length),e=e[0];return Array.isArray(n)&&et().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&VN(n,s,[]),s}function VN(n,t,e){if(e=e||[],!Array.isArray(n)&&!fr(n)){T(t.length===0,()=>`Element arr[${e.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);return}T(t.length>0,()=>`Element arr[${e.join("][")}] should be a primitive, but is an array of ${n.length} elements`),T(n.length===t[0],()=>`Element arr[${e.join("][")}] should have ${t[0]} elements, but has ${n.length} elements`);const s=t.slice(1);for(let r=0;r<n.length;++r)VN(n[r],s,e.concat(r))}function BI(n,t,e,s){if(n!=="string_or_numeric"){if(n==null)throw new Error("Expected dtype cannot be null.");if(n!=="numeric"&&n!==t||n==="numeric"&&t==="string")throw new Error(`Argument '${e}' passed to '${s}' must be ${n} tensor, but got ${t} tensor`)}}function M(n,t,e,s="numeric"){if(n instanceof rt())return BI(s,n.dtype,t,e),n;let r=Ki(n);if(r!=="string"&&["bool","int32","float32"].indexOf(s)>=0&&(r=s),BI(s,r,t,e),n==null||!fr(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string"){const u=n==null?"null":n.constructor.name;throw new Error(`Argument '${t}' passed to '${e}' must be a Tensor or TensorLike, but got '${u}'`)}const o=Kg(n,r);!fr(n)&&!Array.isArray(n)&&(n=[n]);const i=r!=="string"?Qi(n,r):$i(n,[],!0);return G.makeTensor(i,o,r)}function WN(n,t,e,s="numeric"){if(!Array.isArray(n))throw new Error(`Argument ${t} passed to ${e} must be a \`Tensor[]\` or \`TensorLike[]\``);return n.map((o,a)=>M(o,`${t}[${a}]`,e,s))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RB="__op";function X(n){const t=Object.keys(n);if(t.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let e=t[0];const s=n[e];e.endsWith("_")&&(e=e.substring(0,e.length-1)),e=e+RB;const r=(...o)=>{G.startScope(e);try{const a=s(...o);return Pw(a)&&console.error("Cannot return a Promise inside of tidy."),G.endScope(a),a}catch(a){throw G.endScope(null),a}};return Object.defineProperty(r,"name",{value:e,configurable:!0}),r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FB(n,t){const e=M(n,"real","complex"),s=M(t,"imag","complex");Sg(e.shape,s.shape,`real and imag shapes, ${e.shape} and ${s.shape}, must match in call to tf.complex().`);const r={real:e,imag:s};return G.runKernel(Bw,r)}const tl=X({complex_:FB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xg(n,t,e,s){if(s==null)s=Ki(n);else if(s==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(ON(n)||FN(n)){if(s!=="float32"&&s!=="int32")throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${s}.`);return G.backend.createTensorFromGPUData(n,t||e,s)}if(!fr(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(t!=null){Qo(t);const r=j(t),o=j(e);T(r===o,()=>`Based on the provided shape, [${t}], the tensor should have ${r} values but has ${o}`);for(let a=0;a<e.length;++a){const i=e[a],u=a===e.length-1?i!==j(t.slice(a)):!0;T(e[a]===t[a]||!u,()=>`Error creating a new Tensor. Inferred shape (${e}) does not match the provided shape (${t}). `)}}return!fr(n)&&!Array.isArray(n)&&(n=[n]),t=t||e,n=s!=="string"?Qi(n,s):$i(n,[],!0),G.makeTensor(n,t,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a1(n,t,e){const s=Kg(n,e);return Xg(n,t,s,e)}class Oc{static join(t){return new Oc(t).slice()}constructor(t){if(this.shards=[],this.previousShardIndex=0,t==null||(t instanceof Array||(t=[t]),t=t.map(s=>fr(s)?s.buffer:s),t.length===0))return;this.bufferUniformSize=t[0].byteLength;let e=0;for(let s=0;s<t.length;s++){const r=t[s];s!==t.length-1&&r.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const o=e+r.byteLength;this.shards.push({buffer:r,start:e,end:o}),e=o}this.shards.length===0&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(t=0,e=this.byteLength){if(this.shards.length===0)return new ArrayBuffer(0);if(t=isNaN(Number(t))?0:t,e=isNaN(Number(e))?0:e,t=Math.max(0,t),e=Math.min(this.byteLength,e),e<=t)return new ArrayBuffer(0);const s=this.findShardForByte(t);if(s===-1)throw new Error(`Could not find start shard for byte ${t}`);const r=e-t,o=new ArrayBuffer(r),a=new Uint8Array(o);let i=0;for(let u=s;u<this.shards.length;u++){const c=this.shards[u],d=t+i-c.start,h=i,f=Math.min(e,c.end)-c.start,m=new Uint8Array(c.buffer,d,f-d);if(a.set(m,h),i+=m.length,e<c.end)break}return o}findShardForByte(t){if(this.shards.length===0||t<0||t>=this.byteLength)return-1;if(this.bufferUniformSize!=null)return this.previousShardIndex=Math.floor(t/this.bufferUniformSize),this.previousShardIndex;function e(r){return t<r.start?-1:t>=r.end?1:0}if(e(this.shards[this.previousShardIndex])===0)return this.previousShardIndex;const s=OB(this.shards,e);return s===-1?-1:(this.previousShardIndex=s,this.previousShardIndex)}}function OB(n,t){let e=0,s=n.length;for(;e<=s;){const r=Math.floor((s-e)/2)+e,o=t(n[r]);if(o===0)return r;o<0?s=r:e=r+1}return-1}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kr(){return G}function zI(){return G.memory()}function Q(n,t){return G.tidy(n,t)}function te(n){PN(n).forEach(e=>e.dispose())}function oo(n){return G.keep(n)}function VI(n){return G.setBackend(n)}function WI(){return G.ready()}function i1(n,t,e=1){return G.registerBackend(n,t,e)}function PB(){return G.backend}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UI=4;async function GI(n,t){const e=[],s=[],r=Array.isArray(n)?n.map(a=>a.name):Object.keys(n);for(let a=0;a<r.length;++a){const i=r[a],u=Array.isArray(n)?n[a].tensor:n[i];if(u.dtype!=="float32"&&u.dtype!=="int32"&&u.dtype!=="bool"&&u.dtype!=="string"&&u.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${i}': ${u.dtype}`);const c={name:i,shape:u.shape,dtype:u.dtype};if(u.dtype==="string"){const l=new Promise(async d=>{const h=await u.bytes(),p=h.reduce((g,y)=>g+y.length,0)+UI*h.length,f=new Uint8Array(p);let m=0;for(let g=0;g<h.length;g++){const y=h[g],b=new Uint8Array(new Uint32Array([y.length]).buffer);f.set(b,m),m+=UI,f.set(y,m),m+=y.length}d(f)});s.push(l)}else s.push(u.data());t!=null&&(c.group=t),e.push(c)}const o=await Promise.all(s);return{data:LB(o),specs:e}}function LB(n){if(n===null)throw new Error(`Invalid input value: ${JSON.stringify(n)}`);let t=0;const e=[];n.forEach(o=>{if(t+=o.byteLength,e.push(o.byteLength===o.buffer.byteLength?o:new o.constructor(o)),!(o instanceof Float32Array||o instanceof Int32Array||o instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${o.constructor.name}`)});const s=new Uint8Array(t);let r=0;return e.forEach(o=>{s.set(new Uint8Array(o.buffer),r),r+=o.byteLength}),s.buffer}const u1=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function HI(n){return u1?Buffer.byteLength(n,"utf8"):new Blob([n]).size}function MB(n){if(u1)return Buffer.from(n).toString("base64");const t=new Uint8Array(n);let e="";for(let s=0,r=t.length;s<r;s++)e+=String.fromCharCode(t[s]);return btoa(e)}function BB(n){if(u1){const s=Buffer.from(n,"base64");return s.buffer.slice(s.byteOffset,s.byteOffset+s.byteLength)}const t=atob(n),e=new Uint8Array(t.length);for(let s=0;s<t.length;++s)e.set([t.charCodeAt(s)],s);return e.buffer}function zB(n){return Oc.join(n)}function UN(n){if(n.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:n.modelTopology==null?0:HI(JSON.stringify(n.modelTopology)),weightSpecsBytes:n.weightSpecs==null?0:HI(JSON.stringify(n.weightSpecs)),weightDataBytes:n.weightData==null?0:new Oc(n.weightData).byteLength}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Pp=class vr{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return vr.instance==null&&(vr.instance=new vr),vr.instance}static registerSaveRouter(t){vr.getInstance().saveRouters.push(t)}static registerLoadRouter(t){vr.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return vr.getHandlers(t,"save")}static getLoadHandlers(t,e){return vr.getHandlers(t,"load",e)}static getHandlers(t,e,s){const r=[];return(e==="load"?vr.getInstance().loadRouters:vr.getInstance().saveRouters).forEach(a=>{const i=a(t,s);i!==null&&r.push(i)}),r}};const VB=n=>Pp.getSaveHandlers(n);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rx="tensorflowjs",ox=1,ci="models_store",fa="model_info_store";function GN(){if(!et().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const n=typeof window>"u"?self:window,t=n.indexedDB||n.mozIndexedDB||n.webkitIndexedDB||n.msIndexedDB||n.shimIndexedDB;if(t==null)throw new Error("The current browser does not appear to support IndexedDB.");return t}function ax(n){const t=n.result;t.createObjectStore(ci,{keyPath:"modelPath"}),t.createObjectStore(fa,{keyPath:"modelPath"})}let Si=class{constructor(t){if(this.indexedDB=GN(),t==null||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)}async load(){return this.databaseAction(this.modelPath)}databaseAction(t,e){return new Promise((s,r)=>{const o=this.indexedDB.open(rx,ox);o.onupgradeneeded=()=>ax(o),o.onsuccess=()=>{const a=o.result;if(e==null){const i=a.transaction(ci,"readonly"),c=i.objectStore(ci).get(this.modelPath);c.onsuccess=()=>{if(c.result==null)return a.close(),r(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));s(c.result.modelArtifacts)},c.onerror=l=>(a.close(),r(c.error)),i.oncomplete=()=>a.close()}else{e.weightData=Oc.join(e.weightData);const i=UN(e),u=a.transaction(fa,"readwrite");let c=u.objectStore(fa),l;try{l=c.put({modelPath:this.modelPath,modelArtifactsInfo:i})}catch(h){return r(h)}let d;l.onsuccess=()=>{d=a.transaction(ci,"readwrite");const h=d.objectStore(ci);let p;try{p=h.put({modelPath:this.modelPath,modelArtifacts:e,modelArtifactsInfo:i})}catch(f){return r(f)}p.onsuccess=()=>s({modelArtifactsInfo:i}),p.onerror=f=>{c=u.objectStore(fa);const m=c.delete(this.modelPath);m.onsuccess=()=>(a.close(),r(p.error)),m.onerror=g=>(a.close(),r(p.error))}},l.onerror=h=>(a.close(),r(l.error)),u.oncomplete=()=>{d==null?a.close():d.oncomplete=()=>a.close()}}},o.onerror=a=>r(o.error)})}};Si.URL_SCHEME="indexeddb://";const HN=n=>et().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(Si.URL_SCHEME)?WB(n.slice(Si.URL_SCHEME.length)):null;Pp.registerSaveRouter(HN);Pp.registerLoadRouter(HN);function WB(n){return new Si(n)}function UB(n){return n.startsWith(Si.URL_SCHEME)?n.slice(Si.URL_SCHEME.length):n}let GB=class{constructor(){this.indexedDB=GN()}async listModels(){return new Promise((t,e)=>{const s=this.indexedDB.open(rx,ox);s.onupgradeneeded=()=>ax(s),s.onsuccess=()=>{const r=s.result,o=r.transaction(fa,"readonly"),i=o.objectStore(fa).getAll();i.onsuccess=()=>{const u={};for(const c of i.result)u[c.modelPath]=c.modelArtifactsInfo;t(u)},i.onerror=u=>(r.close(),e(i.error)),o.oncomplete=()=>r.close()},s.onerror=r=>e(s.error)})}async removeModel(t){return t=UB(t),new Promise((e,s)=>{const r=this.indexedDB.open(rx,ox);r.onupgradeneeded=()=>ax(r),r.onsuccess=()=>{const o=r.result,a=o.transaction(fa,"readwrite"),i=a.objectStore(fa),u=i.get(t);let c;u.onsuccess=()=>{if(u.result==null)return o.close(),s(new Error(`Cannot find model with path '${t}' in IndexedDB.`));{const l=i.delete(t),d=()=>{c=o.transaction(ci,"readwrite");const p=c.objectStore(ci).delete(t);p.onsuccess=()=>e(u.result.modelArtifactsInfo),p.onerror=f=>s(u.error)};l.onsuccess=d,l.onerror=h=>(d(),o.close(),s(u.error))}},u.onerror=l=>(o.close(),s(u.error)),a.oncomplete=()=>{c==null?o.close():c.oncomplete=()=>o.close()}},r.onerror=o=>s(r.error)})}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fo="/",_u="tensorflowjs_models",jN="info",HB="model_topology",jB="weight_specs",qB="weight_data",KB="model_metadata";function qN(n){return{info:[_u,n,jN].join(Fo),topology:[_u,n,HB].join(Fo),weightSpecs:[_u,n,jB].join(Fo),weightData:[_u,n,qB].join(Fo),modelMetadata:[_u,n,KB].join(Fo)}}function KN(n){for(const t of Object.values(n))window.localStorage.removeItem(t)}function XB(n){const t=n.split(Fo);if(t.length<3)throw new Error(`Invalid key format: ${n}`);return t.slice(1,t.length-1).join(Fo)}function YB(n){return n.startsWith(Ni.URL_SCHEME)?n.slice(Ni.URL_SCHEME.length):n}let Ni=class{constructor(t){if(!et().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,t==null||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=qN(this.modelPath)}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const e=JSON.stringify(t.modelTopology),s=JSON.stringify(t.weightSpecs),r=UN(t),o=Oc.join(t.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,e),this.LS.setItem(this.keys.weightSpecs,s),this.LS.setItem(this.keys.weightData,MB(o));const a={format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,signature:t.signature!=null?t.signature:void 0,userDefinedMetadata:t.userDefinedMetadata!=null?t.userDefinedMetadata:void 0,modelInitializer:t.modelInitializer!=null?t.modelInitializer:void 0,initializerSignature:t.initializerSignature!=null?t.initializerSignature:void 0,trainingConfig:t.trainingConfig!=null?t.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:r}}catch{throw KN(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const t=JSON.parse(this.LS.getItem(this.keys.info));if(t==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(t.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const e={},s=JSON.parse(this.LS.getItem(this.keys.topology));if(s==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);e.modelTopology=s;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(r==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);e.weightSpecs=r;const o=this.LS.getItem(this.keys.modelMetadata);if(o!=null){const i=JSON.parse(o);e.format=i.format,e.generatedBy=i.generatedBy,e.convertedBy=i.convertedBy,i.signature!=null&&(e.signature=i.signature),i.userDefinedMetadata!=null&&(e.userDefinedMetadata=i.userDefinedMetadata),i.modelInitializer!=null&&(e.modelInitializer=i.modelInitializer),i.initializerSignature!=null&&(e.initializerSignature=i.initializerSignature),i.trainingConfig!=null&&(e.trainingConfig=i.trainingConfig)}const a=this.LS.getItem(this.keys.weightData);if(a==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return e.weightData=BB(a),e}};Ni.URL_SCHEME="localstorage://";const XN=n=>et().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(Ni.URL_SCHEME)?JB(n.slice(Ni.URL_SCHEME.length)):null;Pp.registerSaveRouter(XN);Pp.registerLoadRouter(XN);function JB(n){return new Ni(n)}let ZB=class{constructor(){T(et().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),T(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const t={},e=_u+Fo,s=Fo+jN;for(let r=0;r<this.LS.length;++r){const o=this.LS.key(r);if(o.startsWith(e)&&o.endsWith(s)){const a=XB(o);t[a]=JSON.parse(this.LS.getItem(o))}}return t}async removeModel(t){t=YB(t);const e=qN(t);if(this.LS.getItem(e.info)==null)throw new Error(`Cannot find model at path '${t}'`);const s=JSON.parse(this.LS.getItem(e.info));return KN(e),s}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jI="://";let qI=class aa{constructor(){this.managers={}}static getInstance(){return aa.instance==null&&(aa.instance=new aa),aa.instance}static registerManager(t,e){T(t!=null,()=>"scheme must not be undefined or null."),t.endsWith(jI)&&(t=t.slice(0,t.indexOf(jI))),T(t.length>0,()=>"scheme must not be an empty string.");const s=aa.getInstance();T(s.managers[t]==null,()=>`A model store manager is already registered for scheme '${t}'.`),s.managers[t]=e}static getManager(t){const e=aa.getInstance().managers[t];if(e==null)throw new Error(`Cannot find model manager for scheme '${t}'`);return e}static getSchemes(){return Object.keys(aa.getInstance().managers)}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let QB=class{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if(e!=="utf-8"&&e!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${e}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}setTimeoutCustom(t,e){if(typeof window>"u"||!et().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(t,e);return}this.functionRefs.push(t),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},e),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",s=>{if(s.source===window&&s.data.name===this.messageName){s.stopPropagation();const r=this.functionRefs[s.data.index];r(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}isTypedArray(t){return _N(t)}};if(et().get("IS_BROWSER")){et().setPlatform("browser",new QB);try{qI.registerManager(Ni.URL_SCHEME,new ZB)}catch{}try{qI.registerManager(Si.URL_SCHEME,new GB)}catch{}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tz={importFetch:()=>require("node-fetch")};let ub,ez=class{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(t,e){return et().global.fetch!=null?et().global.fetch(t,e):(ub==null&&(ub=tz.importFetch()),ub(t,e))}now(){const t=process.hrtime();return t[0]*1e3+t[1]/1e6}encode(t,e){if(e!=="utf-8"&&e!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${e}`);return this.textEncoder.encode(t)}decode(t,e){return t.length===0?"":new this.util.TextDecoder(e).decode(t)}isTypedArray(t){return this.util.types.isFloat32Array(t)||this.util.types.isInt32Array(t)||this.util.types.isUint8Array(t)||this.util.types.isUint8ClampedArray(t)}};et().get("IS_NODE")&&!et().get("IS_BROWSER")&&et().setPlatform("node",new ez);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zt(n,t="float32",e){return t=t||"float32",Qo(n),new Pn(n,t,e)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nz(n,t){const e=M(n,"x","cast");if(!KM(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if(t==="string"&&e.dtype!=="string"||t!=="string"&&e.dtype==="string")throw new Error("Only strings can be casted to strings");const s={x:e},r={dtype:t};return G.runKernel(Cl,s,r)}const It=X({cast_:nz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sz(n){const e={x:M(n,"x","clone","string_or_numeric")};return G.runKernel(jl,e)}const bi=X({clone_:sz});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rz(n,t=!1){console.log(n.toString(t))}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */MN();const oz={buffer:Zt,cast:It,clone:bi,print:rz};CB(oz);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function az(n,t){let e=M(n,"a","add"),s=M(t,"b","add");[e,s]=sn(e,s);const r={a:e,b:s};return G.runKernel(Xi,r)}const ht=X({add_:az});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iz(n,t){let e=M(n,"a","floorDiv"),s=M(t,"b","floorDiv");[e,s]=sn(e,s);const r={a:e,b:s};return G.runKernel(Ul,r)}const YN=X({floorDiv_:iz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uz(n,t){let e=M(n,"a","div"),s=M(t,"b","div");if([e,s]=sn(e,s),e.dtype==="int32"&&s.dtype==="int32")return YN(e,s);const r={a:e,b:s},o={};return G.runKernel(Ll,r,o)}const Ft=X({div_:uz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lz(n,t){let e=M(n,"a","mul"),s=M(t,"b","mul");[e,s]=sn(e,s);const r={a:e,b:s};return G.runKernel(uc,r)}const W=X({mul_:lz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cz(n){const t=M(n,"x","abs");if(t.dtype==="complex64"){const e={x:t};return G.runKernel(Tg,e)}else{const e={x:t};return G.runKernel(Wh,e)}}const es=X({abs_:cz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dz(n){const e={x:M(n,"x","acos")};return G.runKernel(bl,e)}const hz=X({acos_:dz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pz(n){const e={x:M(n,"x","acosh")};return G.runKernel(xl,e)}const fz=X({acosh_:pz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mz(n,t=null,e=!1){const r={x:M(n,"x","all","bool")},o={axis:t,keepDims:e};return G.runKernel(Gh,r,o)}const JN=X({all_:mz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gz(n,t=null,e=!1){const r={x:M(n,"x","any","bool")},o={axis:t,keepDims:e};return G.runKernel(Hh,r,o)}const ix=X({any_:gz});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yz(n,t=0){const s={x:M(n,"x","argMax")},r={axis:t};return G.runKernel(jh,s,r)}const Pd=X({argMax_:yz});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bz(n,t=0){const s={x:M(n,"x","argMin")},r={axis:t};return G.runKernel(qh,s,r)}const xz=X({argMin_:bz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wz(n){const e={x:M(n,"x","asin")};return G.runKernel(wl,e)}const vz=X({asin_:wz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Iz(n){const e={x:M(n,"x","asinh")};return G.runKernel(vl,e)}const kz=X({asinh_:Iz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $z(n){const e={x:M(n,"x","atan")};return G.runKernel(Il,e)}const Sz=X({atan_:$z});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nz(n,t){let e=M(n,"a","atan2"),s=M(t,"b","atan2");[e,s]=sn(e,s);const r={a:e,b:s};return G.runKernel($l,r)}const Cz=X({atan2_:Nz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _z(n){const e={x:M(n,"x","atanh")};return G.runKernel(kl,e)}const Tz=X({atanh_:_z});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wa(n,t,e,s,r="NHWC",o){const a=n[3],i=[...t,a],u=Ur(r);return Ze(n,i,e,o,s,null,null,u)}function Xn(n,t,e,s,r,o,a="channelsLast"){const[i,u]=Ld(t);let c;if(a==="channelsLast")c=[i,u,n[3],n[3]];else if(a==="channelsFirst")c=[i,u,n[1],n[1]];else throw new Error(`Unknown dataFormat ${a}`);return Ze(n,c,e,s,r,o,!1,a)}function Js(n,t,e,s,r,o,a="NDHWC"){const[i,u,c]=ux(t);let l,d;if(a==="NDHWC")d="channelsLast",l=[i,u,c,n[4],n[4]];else if(a==="NCDHW")d="channelsFirst",l=[i,u,c,n[1],n[1]];else throw new Error(`Unknown dataFormat ${a}`);return Wr(n,l,e,s,r,!1,d,o)}function Ze(n,t,e,s,r,o,a=!1,i="channelsLast"){let[u,c,l,d]=[-1,-1,-1,-1];if(i==="channelsLast")[u,c,l,d]=n;else if(i==="channelsFirst")[u,d,c,l]=n;else throw new Error(`Unknown dataFormat ${i}`);const[h,p,,f]=t,[m,g]=Ld(e),[y,b]=Ld(s),x=Fu(h,y),w=Fu(p,b),{padInfo:v,outHeight:k,outWidth:S}=Dz(r,c,l,m,g,x,w,o,i),_=a?f*d:f;let C;return i==="channelsFirst"?C=[u,_,k,S]:i==="channelsLast"&&(C=[u,k,S,_]),{batchSize:u,dataFormat:i,inHeight:c,inWidth:l,inChannels:d,outHeight:k,outWidth:S,outChannels:_,padInfo:v,strideHeight:m,strideWidth:g,filterHeight:h,filterWidth:p,effectiveFilterHeight:x,effectiveFilterWidth:w,dilationHeight:y,dilationWidth:b,inShape:n,outShape:C,filterShape:t}}function Wr(n,t,e,s,r,o=!1,a="channelsLast",i){let[u,c,l,d,h]=[-1,-1,-1,-1,-1];if(a==="channelsLast")[u,c,l,d,h]=n;else if(a==="channelsFirst")[u,h,c,l,d]=n;else throw new Error(`Unknown dataFormat ${a}`);const[p,f,m,,g]=t,[y,b,x]=ux(e),[w,v,k]=ux(s),S=Fu(p,w),_=Fu(f,v),C=Fu(m,k),{padInfo:N,outDepth:$,outHeight:A,outWidth:D}=Rz(r,c,l,d,y,b,x,S,_,C,i),R=o?g*h:g;let F;return a==="channelsFirst"?F=[u,R,$,A,D]:a==="channelsLast"&&(F=[u,$,A,D,R]),{batchSize:u,dataFormat:a,inDepth:c,inHeight:l,inWidth:d,inChannels:h,outDepth:$,outHeight:A,outWidth:D,outChannels:R,padInfo:N,strideDepth:y,strideHeight:b,strideWidth:x,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:S,effectiveFilterHeight:_,effectiveFilterWidth:C,dilationDepth:w,dilationHeight:v,dilationWidth:k,inShape:n,outShape:F,filterShape:t}}function Ez(n,t,e,s,r){s==null&&(s=l1(n,t,e));const o=n[0],a=n[1],i=Md((o-t+2*s)/e+1,r),u=Md((a-t+2*s)/e+1,r);return[i,u]}function Az(n,t,e,s,r,o){r==null&&(r=l1(n,t[0],s[0]));const a=[0,0,0,e];for(let i=0;i<3;i++)n[i]+2*r>=t[i]&&(a[i]=Md((n[i]-t[i]+2*r)/s[i]+1,o));return a}function l1(n,t,e,s=1){const r=Fu(t,s);return Math.floor((n[0]*(e-1)-e+r)/2)}function Ld(n){return typeof n=="number"?[n,n,n]:n.length===2?[n[0],n[1],1]:n}function ux(n){return typeof n=="number"?[n,n,n]:n}function Fu(n,t){return t<=1?n:n+(n-1)*(t-1)}function Dz(n,t,e,s,r,o,a,i,u){let c,l,d;if(typeof n=="number"){c={top:n,bottom:n,left:n,right:n,type:n===0?"VALID":"NUMBER"};const p=Ez([t,e],o,s,n,i);l=p[0],d=p[1]}else if(n==="same"){l=Math.ceil(t/s),d=Math.ceil(e/r);const h=Math.max(0,(l-1)*s+o-t),p=Math.max(0,(d-1)*r+a-e),f=Math.floor(h/2),m=h-f,g=Math.floor(p/2),y=p-g;c={top:f,bottom:m,left:g,right:y,type:"SAME"}}else if(n==="valid")c={top:0,bottom:0,left:0,right:0,type:"VALID"},l=Math.ceil((t-o+1)/s),d=Math.ceil((e-a+1)/r);else if(typeof n=="object"){const h=u==="channelsLast"?n[1][0]:n[2][0],p=u==="channelsLast"?n[1][1]:n[2][1],f=u==="channelsLast"?n[2][0]:n[3][0],m=u==="channelsLast"?n[2][1]:n[3][1];c={top:h,bottom:p,left:f,right:m,type:h===0&&p===0&&f===0&&m===0?"VALID":"EXPLICIT"},l=Md((t-o+h+p)/s+1,i),d=Md((e-a+f+m)/r+1,i)}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:c,outHeight:l,outWidth:d}}function Rz(n,t,e,s,r,o,a,i,u,c,l){let d,h,p,f;if(n==="valid"&&(n=0),typeof n=="number"){d={top:n,bottom:n,left:n,right:n,front:n,back:n,type:n===0?"VALID":"NUMBER"};const g=Az([t,e,s,1],[i,u,c],1,[r,o,a],n,l);h=g[0],p=g[1],f=g[2]}else if(n==="same"){h=Math.ceil(t/r),p=Math.ceil(e/o),f=Math.ceil(s/a);const m=(h-1)*r+i-t,g=(p-1)*o+u-e,y=(f-1)*a+c-s,b=Math.floor(m/2),x=m-b,w=Math.floor(g/2),v=g-w,k=Math.floor(y/2),S=y-k;d={top:w,bottom:v,left:k,right:S,front:b,back:x,type:"SAME"}}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:d,outDepth:h,outHeight:p,outWidth:f}}function Md(n,t){if(!t)return Math.trunc(n);switch(t){case"round":return Math.round(n);case"ceil":return Math.ceil(n);case"floor":return Math.floor(n);default:throw new Error(`Unknown roundingMode ${t}`)}}function Ci(n){const[t,e,s]=Ld(n);return t===1&&e===1&&s===1}function Mn(n,t){return Ci(n)||Ci(t)}function _i(n){return Ld(n).every(t=>t>0)}function Ur(n){if(n==="NHWC")return"channelsLast";if(n==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${n}`)}function Ss(n,t,e){if(e!=null){if(typeof t=="string")throw Error(`Error in ${n}: pad must be an integer when using dimRoundingMode ${e} but got pad ${t}.`);if(typeof t=="number")T(Yu(t),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${e} but got pad ${t}.`);else if(typeof t=="object")t.forEach(s=>{s.forEach(r=>{T(Yu(r),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${e} but got pad ${r}.`)})});else throw Error(`Error in ${n}: Unknown padding parameter: ${t}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fz(n,t){const s={x:M(n,"x","reshape","string_or_numeric")},r={shape:t};return G.runKernel(kp,s,r)}const K=X({reshape_:Fz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oz(n,t,e,s,r){const o=M(n,"x","avgPool","float32"),a=1;T(Mn(e,a),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${e} and dilations '${a}'`);let i=o,u=!1;o.rank===3&&(u=!0,i=K(o,[1,o.shape[0],o.shape[1],o.shape[2]])),T(i.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`),Ss("avgPool",s,r);const c={x:i},l={filterSize:t,strides:e,pad:s,dimRoundingMode:r};let d=G.runKernel(Sl,c,l);return d=It(d,o.dtype),u?K(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const c1=X({avgPool_:Oz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pz(n,t,e,s,r,o="NDHWC"){const a=M(n,"x","avgPool3d","float32");let i=a,u=!1;a.rank===4&&(u=!0,i=K(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),T(i.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${i.rank}.`),T(o==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${o}`),T(typeof e=="number"&&e>0||Array.isArray(e)&&e[0]>0&&e[1]>0&&e[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${e}'`),Ss("avgPool3d",s,r);const c={x:i},l={filterSize:t,strides:e,pad:s,dimRoundingMode:r,dataFormat:o};let d=G.runKernel(Kh,c,l);return d=It(d,i.dtype),u?K(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const Lz=X({avgPool3d_:Pz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mz(n,t=0){T(n.length>=1,()=>"Pass at least one tensor to concat");const e=WN(n,"tensors","concat","string_or_numeric");if(e[0].dtype==="complex64"&&e.forEach(o=>{if(o.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${o.dtype}. `)}),e.length===1)return bi(e[0]);const s=e,r={axis:t};return G.runKernel(Jh,s,r)}const vs=X({concat_:Mz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bz(n,t,e=!1,s=!1){let r=M(n,"a","matMul"),o=M(t,"b","matMul");[r,o]=sn(r,o);const a={a:r,b:o},i={transposeA:e,transposeB:s};return G.runKernel(Nl,a,i)}const ge=X({matMul_:Bz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zz(n){const e={x:M(n,"x","sigmoid","float32")};return G.runKernel(Nc,e)}const Pc=X({sigmoid_:zz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vz(n,t,e){const s=M(n,"x","slice","string_or_numeric");if(s.rank===0)throw new Error("Slicing scalar is not possible");const r={x:s},o={begin:t,size:e};return G.runKernel(Cp,r,o)}const Pe=X({slice_:Vz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wz(n){const e={x:M(n,"x","tanh","float32")};return G.runKernel(Fc,e)}const Yg=X({tanh_:Wz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uz(n,t,e){const s=M(n,"x","batchToSpaceND"),r=t.reduce((i,u)=>i*u);T(s.rank>=1+t.length,()=>`input rank is ${s.rank} but should be > than blockShape.length ${t.length}`),T(e.length===t.length,()=>`crops.length is ${e.length} but should be equal to blockShape.length  ${t.length}`),T(s.shape[0]%r===0,()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${r}`);const o={x:s},a={blockShape:t,crops:e};return G.runKernel(Xh,o,a)}const d1=X({batchToSpaceND_:Uz});function Gz(n){let t;return n.rank===0||n.rank===1?t=K(n,[1,1,1,n.size]):n.rank===2?t=K(n,[1,1,n.shape[0],n.shape[1]]):n.rank===3?t=K(n,[1,n.shape[0],n.shape[1],n.shape[2]]):t=n,t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hz(n,t,e,s,r,o){o==null&&(o=.001);const a=M(n,"x","batchNorm"),i=M(t,"mean","batchNorm"),u=M(e,"variance","batchNorm");let c;r!=null&&(c=M(r,"scale","batchNorm"));let l;s!=null&&(l=M(s,"offset","batchNorm")),T(i.rank===u.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),T(l==null||i.rank===l.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),T(c==null||i.rank===c.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const h={x:Gz(a),scale:c,offset:l,mean:i,variance:u},p={varianceEpsilon:o},f=G.runKernel(Gl,h,p);return K(f,a.shape)}const Jg=X({batchNorm_:Hz});function jz(n,t,e,s,r,o){const a=M(n,"x","batchNorm"),i=M(t,"mean","batchNorm"),u=M(e,"variance","batchNorm");let c;r!=null&&(c=M(r,"scale","batchNorm"));let l;return s!=null&&(l=M(s,"offset","batchNorm")),T(a.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${a.rank}.`),T(i.rank===2||i.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${i.rank}.`),T(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`),c!=null&&T(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${c.rank}.`),l!=null&&T(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${l.rank}.`),Jg(a,i,u,l,c,o)}const qz=X({batchNorm2d_:jz});function Kz(n,t,e,s,r,o){const a=M(n,"x","batchNorm"),i=M(t,"mean","batchNorm"),u=M(e,"variance","batchNorm");let c;r!=null&&(c=M(r,"scale","batchNorm"));let l;return s!=null&&(l=M(s,"offset","batchNorm")),T(a.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${a.rank}.`),T(i.rank===3||i.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${i.rank}.`),T(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`),c!=null&&T(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${c.rank}.`),l!=null&&T(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${l.rank}.`),Jg(a,i,u,l,c,o)}const Xz=X({batchNorm3d_:Kz});function Yz(n,t,e,s,r,o){const a=M(n,"x","batchNorm"),i=M(t,"mean","batchNorm"),u=M(e,"variance","batchNorm");let c;r!=null&&(c=M(r,"scale","batchNorm"));let l;return s!=null&&(l=M(s,"offset","batchNorm")),T(a.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${a.rank}.`),T(i.rank===4||i.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${i.rank}.`),T(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`),c!=null&&T(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${c.rank}.`),l!=null&&T(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${l.rank}.`),Jg(a,i,u,l,c,o)}const Jz=X({batchNorm4d_:Yz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zz(n,t,e){const s=M(n,"x","bincount"),r=M(t,"weights","bincount");T(s.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`),T(e>=0,()=>`size must be non-negative, but got ${e}.`),T(r.size===s.size||r.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${r.shape}.`);const o={x:s,weights:r},a={size:e};return G.runKernel(Yh,o,a)}const Qz=X({bincount_:Zz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tV(n,t){let e=M(n,"broadcastTo","x");const s=e.shape;if(Qo(t),t.length<e.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${e.rank}.`);if(t.length>e.rank){const c=e.shape.slice();for(;c.length<t.length;)c.unshift(1);e=K(e,c)}const r=e.shape,o=Array.from(t);for(let c=t.length-1;c>=0;c--)if(r[c]===t[c])o[c]=1;else if(e.shape[c]!==1)throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${t}].`);if(o.map((c,l)=>c>1?l:-1).filter(c=>c>=0).length===0)return bi(e);const i={x:e},u={reps:o};return G.runKernel(Ji,i,u)}const Id=X({broadcastTo_:tV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eV(n){const e={x:M(n,"x","ceil","float32")};return G.runKernel(_l,e)}const nV=X({ceil_:eV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zg(n,t,e){Qo(n),e=e||Ki(t);const s={shape:n,value:t,dtype:e};return G.runKernel(Ag,{},s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sV(n,t,e){const s=M(n,"x","clipByValue");if(T(t<=e,()=>`Error in clip: min (${t}) must be less than or equal to max (${e}).`),t===e)return Zg(s.shape,t,s.dtype);const r={x:s},o={clipValueMin:t,clipValueMax:e};return G.runKernel(Yi,r,o)}const Ys=X({clipByValue_:sV});function rV(n){return vs(n,0)}const oV=X({concat1d_:rV});function aV(n,t){return vs(n,t)}const iV=X({concat2d_:aV});function uV(n,t){return vs(n,t)}const lV=X({concat3d_:uV});function cV(n,t){return vs(n,t)}const dV=X({concat4d_:cV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hV(n,t,e,s,r="NHWC",o=[1,1],a){const i=M(n,"x","conv2d","float32"),u=M(t,"filter","conv2d","float32");let c=i,l=!1;i.rank===3&&(l=!0,c=K(i,[1,i.shape[0],i.shape[1],i.shape[2]])),T(c.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${c.rank}.`),T(u.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`),Ss("conv2d",s,a);const d=r==="NHWC"?c.shape[3]:c.shape[1];T(d===u.shape[2],()=>`Error in conv2d: depth of input (${d}) must match input depth for filter ${u.shape[2]}.`),T(Mn(e,o),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${o}'`),T(_i(o),()=>"Error in conv2D: Dilated rates should be larger than 0."),T(_i(e),()=>"Error in conv2D: Strides should be larger than 0.");const h={x:c,filter:u},p={strides:e,pad:s,dataFormat:r,dilations:o,dimRoundingMode:a},f=G.runKernel(Tl,h,p);return l?K(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const Ti=X({conv2d_:hV});function pV(n,t,e,s,r="NWC",o=1,a){const i=M(n,"x","conv1d"),u=M(t,"filter","conv1d");let c=i,l=!1;i.rank===2&&(l=!0,c=K(i,[1,i.shape[0],i.shape[1]])),T(c.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${c.rank}.`),T(u.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`),Ss("conv1d",s,a),T(c.shape[2]===u.shape[1],()=>`Error in conv1d: depth of input (${c.shape[2]}) must match input depth for filter ${u.shape[1]}.`),T(Mn(e,o),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${e} and dilation '${o}'`),T(_i(o),()=>"Error in conv1D: Dilated rates should be larger than 0."),T(_i(e),()=>"Error in conv1D: Stride should be larger than 0."),T(r==="NWC",()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`);const d=K(u,[1,u.shape[0],u.shape[1],u.shape[2]]),h=K(c,[c.shape[0],1,c.shape[1],c.shape[2]]),g=Ti(h,d,[1,e],s,"NHWC",[1,o],a);return l?K(g,[g.shape[2],g.shape[3]]):K(g,[g.shape[0],g.shape[2],g.shape[3]])}const ZN=X({conv1d_:pV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fV(n,t,e,s,r,o="NHWC",a){T(n.length===t.rank,()=>`Length of inShape (${n.length}) and rank of dy (${t.rank}) must match`);let i=n,u=t,c=!1;t.rank===3&&(c=!0,u=K(t,[1,t.shape[0],t.shape[1],t.shape[2]]),i=[1,n[0],n[1],n[2]]),T(i.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${i.length}.`),T(u.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`),T(e.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${e.rank}`);const l=o==="NHWC"?i[3]:i[1],d=o==="NHWC"?u.shape[3]:u.shape[1];T(l===e.shape[2],()=>`Error in conv2dDerInput: depth of input (${l}) must match input depth for filter ${e.shape[2]}.`),T(d===e.shape[3],()=>`Error in conv2dDerInput: depth of output (${d}) must match output depth for filter ${e.shape[3]}.`),Ss("conv2dDerInput",r,a);const h={dy:u,filter:e},p={strides:s,pad:r,dataFormat:o,dimRoundingMode:a,inputShape:i},f=G.runKernel(El,h,p);return c?K(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const h1=X({conv2DBackpropInput_:fV});function mV(n,t,e,s,r,o){const a=M(n,"x","conv2dTranspose"),i=M(t,"filter","conv2dTranspose");return h1(e,a,i,s,r,"NHWC",o)}const QN=X({conv2dTranspose_:mV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gV(n,t,e,s,r="NDHWC",o=[1,1,1]){const a=M(n,"x","conv3d"),i=M(t,"filter","conv3d");let u=a,c=!1;a.rank===4&&(c=!0,u=K(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),T(u.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`),T(i.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${i.rank}.`),T(u.shape[4]===i.shape[3],()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${i.shape[3]}.`),T(Mn(e,o),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${e} and dilations '${o}'`),T(r==="NDHWC",()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`),T(_i(o),()=>"Error in conv3D: Dilated rates should be larger than 0."),T(_i(e),()=>"Error in conv3D: Strides should be larger than 0.");const l={x:u,filter:i},d={strides:e,pad:s,dataFormat:r,dilations:o},h=G.runKernel(Al,l,d);return c?K(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const yV=X({conv3d_:gV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bV(n,t,e,s,r){T(n.length===t.rank,()=>`Length of inShape (${n.length}) and rank of dy (${t.rank}) must match`);let o=n,a=t,i=!1;t.rank===4&&(i=!0,a=K(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),o=[1,n[0],n[1],n[2],n[3]]);const u=o[4],c=a.shape[4];T(o.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${o.length}.`),T(a.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${a.rank}`),T(e.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${e.rank}`),T(u===e.shape[3],()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${e.shape[3]}.`),T(c===e.shape[4],()=>`Error in conv3dDerInput: depth of output (${c}) must match output depth for filter ${e.shape[4]}.`);const l={dy:a,filter:e},d={pad:r,strides:s,inputShape:o},h=G.runKernel(Qh,l,d);return i?K(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const tC=X({conv3DBackpropInput_:bV});function xV(n,t,e,s,r){const o=M(n,"x","conv3dTranspose"),a=M(t,"filter","conv3dTranspose");return tC(e,o,a,s,r)}const wV=X({conv3dTranspose_:xV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vV(n){const e={x:M(n,"x","cos","float32")};return G.runKernel(Dl,e)}const p1=X({cos_:vV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IV(n){const e={x:M(n,"x","cosh","float32")};return G.runKernel(Rl,e)}const eC=X({cosh_:IV});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kV(n,t=0,e=!1,s=!1){const o={x:M(n,"x","cumprod")},a={axis:t,exclusive:e,reverse:s};return G.runKernel(tp,o,a)}const lx=X({cumprod_:kV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $V(n,t=0,e=!1,s=!1){const o={x:M(n,"x","cumsum")},a={axis:t,exclusive:e,reverse:s};return G.runKernel(Fl,o,a)}const nC=X({cumsum_:$V});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SV(n,t,e,s=!1){const r=M(n,"x","denseBincount"),o=M(t,"weights","denseBincount");T(r.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${r.dtype}`),T(r.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${r.rank}.`),T(e>=0,()=>`size must be non-negative, but got ${e}.`),T(o.size===r.size||o.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${r.shape}, weights shape: ${o.shape}.`);const a={x:r,weights:o},i={size:e,binaryOutput:s};return G.runKernel(Eg,a,i)}const KI=X({denseBincount_:SV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NV(n,t,e="NHWC"){const s=M(n,"x","depthToSpace","float32"),r=e==="NHWC"?s.shape[1]:s.shape[2],o=e==="NHWC"?s.shape[2]:s.shape[3],a=e==="NHWC"?s.shape[3]:s.shape[1];T(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),T(r*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${r} and ${t}  for depthToSpace with input shape
    ${s.shape}`),T(o*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${o} and ${t} for depthToSpace with input shape
        ${s.shape}`),T(a%(t*t)===0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${a} for depthToSpace with input shape ${s.shape}`);const i={x:s},u={blockSize:t,dataFormat:e};return G.runKernel(np,i,u)}const CV=X({depthToSpace_:NV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _V(n,t,e,s,r="NHWC",o=[1,1],a){const i=M(n,"x","depthwiseConv2d","float32"),u=M(t,"filter","depthwiseConv2d","float32");let c=i,l=!1;i.rank===3&&(l=!0,c=K(i,[1,i.shape[0],i.shape[1],i.shape[2]])),T(c.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`),T(u.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`);const d=r==="NHWC"?c.shape[3]:c.shape[1];T(d===u.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${d}) must match the inChannels dimension in filter ${u.shape[2]}.`),Ss("depthwiseConv2d",s,a);const h={x:c,filter:u},p={strides:e,pad:s,dataFormat:r,dilations:o,dimRoundingMode:a},f=G.runKernel(Ol,h,p);return l?K(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const f1=X({depthwiseConv2d_:_V});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TV(n,t,e,s,r=[1,1],o="NHWC"){const a=M(n,"x","dilation2d"),i=M(t,"filter","dilation2d");T(a.rank===3||a.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${a.rank}.`),T(i.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${i.rank}.`),T(o==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${o}`);let u=a,c=!1;a.rank===3&&(u=K(a,[1,a.shape[0],a.shape[1],a.shape[2]]),c=!0),T(u.shape[3]===i.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${u.shape[3]} vs ${i.shape[2]}`);const l={x:u,filter:i},d={strides:e,pad:s,dilations:r},h=G.runKernel(Pl,l,d);return c?K(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const EV=X({dilation2d_:TV});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function el(n,t){const e=n.length,s=[];for(let r=0;r<e;r++){const o=e-1-r,a=n[o]||1;(t[t.length-1-r]||1)>1&&a===1&&s.unshift(o)}return s}function kn(n,t){const e=[];for(let s=0;s<t.length;s++){const r=n[n.length-s-1],o=t.length-s-1,a=t[o];(r==null||r===1&&a>1)&&e.unshift(o)}return e}function Ut(n,t){const e=Math.max(n.length,t.length),s=new Array(e);for(let r=0;r<e;r++){let o=n[n.length-r-1];o==null&&(o=1);let a=t[t.length-r-1];if(a==null&&(a=1),o===1)s[e-r-1]=a;else if(a===1)s[e-r-1]=o;else if(o!==a){const i=`Operands could not be broadcast together with shapes ${n} and ${t}.`;throw Error(i)}else s[e-r-1]=o}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AV(n,t){let e=M(n,"a","equal","string_or_numeric"),s=M(t,"b","equal","string_or_numeric");[e,s]=sn(e,s),Ut(e.shape,s.shape);const r={a:e,b:s};return G.runKernel(rp,r)}const fo=X({equal_:AV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DV(n,t,e){const s=M(t,"a","where"),r=M(e,"b","where"),o=M(n,"condition","where","bool"),a=Ut(Ut(o.shape,s.shape),r.shape),i=Id(o,a),u=Id(s,a),c=Id(r,a),l={condition:i,t:u,e:c};return G.runKernel(Np,l)}const is=X({where_:DV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RV(n){const e={x:M(n,"x","zerosLike")};return G.runKernel(Fp,e)}const ae=X({zerosLike_:RV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FV(n,t){let e=M(n,"a","div"),s=M(t,"b","div");[e,s]=sn(e,s);const r=Ft(e,s),o=ae(r),a=fo(s,o);return is(a,o,r)}const OV=X({divNoNan_:FV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PV(n,t){const e=M(n,"t1","dot"),s=M(t,"t2","dot");T((e.rank===1||e.rank===2)&&(s.rank===1||s.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${e.rank} and ${s.rank}.`);const r=e.rank===1?e.size:e.shape[1],o=s.rank===1?s.size:s.shape[0];if(T(r===o,()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${o}.`),e.rank===1&&s.rank===1){const a=K(e,[1,-1]),i=K(s,[-1,1]),u=ge(a,i);return K(u,[])}else if(e.rank===1&&s.rank===2){const a=K(e,[1,-1]),i=K(s,[s.shape[0],s.shape[1]]),u=ge(a,i);return K(u,[u.size])}else if(e.rank===2&&s.rank===1){const a=K(s,[-1,1]),i=ge(e,a);return K(i,[i.size])}else{const a=K(s,[s.shape[0],s.shape[1]]);return ge(e,a)}}const LV=X({dot_:PV});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MV(n,...t){const e=t.map((r,o)=>M(r,`tensors${o}`,"einsum")),s={equation:n};return G.runKernel(Gw,e,s)}const od=X({einsum_:MV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BV(n){const e={x:M(n,"x","elu","float32")};return G.runKernel(Ml,e)}const Qg=X({elu_:BV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zV(n){let t=M(n,"x","erf");T(t.dtype==="int32"||t.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),t.dtype==="int32"&&(t=It(t,"float32"));const e={x:t};return G.runKernel(Bl,e)}const sC=X({erf_:zV});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m1(n,t){for(let e=0;e<n.length;++e)if(n[n.length-e-1]!==t-1-e)return!1;return!0}function rC(n,t,e){const s=n.length+t.length,r=[];let o=0,a=0;for(let i=0;i<s;i++)e.indexOf(i)===-1?r.push(n[o++]):r.push(t[a++]);return r}function Ge(n,t){const e=[],s=n.length;for(let o=0;o<s;o++)t.indexOf(o)===-1&&e.push(n[o]);const r=t.map(o=>n[o]);return[e,r]}function Re(n,t){const e=t.map(s=>1);return rC(n,e,t)}function ze(n,t,e){T(m1(t,e),()=>`${n} supports only inner-most axes for now. Got axes ${t} and rank-${e} input.`)}function Ve(n,t){if(m1(n,t))return null;const e=[];for(let s=0;s<t;++s)n.indexOf(s)===-1&&e.push(s);return n.forEach(s=>e.push(s)),e}function vo(n){return n.map((t,e)=>[e,t]).sort((t,e)=>t[1]-e[1]).map(t=>t[0])}function Fe(n,t){const e=[];for(let s=t-n;s<t;++s)e.push(s);return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VV(n,t=null,e=!1){const r={x:M(n,"x","max")},o={reductionIndices:t,keepDims:e};return G.runKernel(tc,r,o)}const Ar=X({max_:VV});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WV(n,t=null,e=!1){const r={x:M(n,"x","min")},o={axis:t,keepDims:e};return G.runKernel(rc,r,o)}const lm=X({min_:WV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UV(n,t){let e=M(n,"base","pow"),s=M(t,"exp","pow");[e,s]=sn(e,s);const r={a:e,b:s};return G.runKernel(dc,r)}const Ei=X({pow_:UV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xe(n,t){if((fr(n)&&t!=="string"||Array.isArray(n))&&t!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(t==="string"&&fr(n)&&!(n instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Xg(n,[],[],t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GV(n){const e={x:M(n,"x","sqrt","float32")};return G.runKernel(_c,e)}const Kn=X({sqrt_:GV});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HV(n){const t=M(n,"x","square"),e={};return G.runKernel("Square",{x:t},e)}const Ue=X({square_:HV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jV(n,t=null,e=!1){let s=M(n,"x","sum");s.dtype==="bool"&&(s=It(s,"int32"));const r={x:s},o={axis:t,keepDims:e};return G.runKernel(Tc,r,o)}const Rt=X({sum_:jV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qV(n,t="euclidean",e=null,s=!1){n=M(n,"x","norm");const r=oC(n,t,e);let o=r.shape;if(s){const a=Gt(e,n.shape);o=Re(r.shape,a)}return K(r,o)}function oC(n,t,e=null){if(n.rank===0)return es(n);if(n.rank!==1&&e===null)return oC(K(n,[-1]),t,e);if(n.rank===1||typeof e=="number"||Array.isArray(e)&&e.length===1){if(t===1)return Rt(es(n),e);if(t===1/0)return Ar(es(n),e);if(t===-1/0)return lm(es(n),e);if(t==="euclidean"||t===2)return Kn(Rt(Ei(es(n),xe(2,"int32")),e));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(e)&&e.length===2){if(t===1)return Ar(Rt(es(n),e[0]),e[1]-1);if(t===1/0)return Ar(Rt(es(n),e[1]),e[0]);if(t===-1/0)return lm(Rt(es(n),e[1]),e[0]);if(t==="fro"||t==="euclidean")return Kn(Rt(Ue(n),e));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${e}`)}const ty=X({norm_:qV});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KV(n,t=null,e=!1){return ty(n,"euclidean",t,e)}const XV=X({euclideanNorm_:KV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YV(n){const e={x:M(n,"x","exp")};return G.runKernel(zl,e)}const mo=X({exp_:YV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JV(n,t=0){const e=M(n,"x","expandDims","string_or_numeric");T(t<=e.rank,()=>"Axis must be <= rank of the tensor");const s={input:e},r={dim:t};return G.runKernel(op,s,r)}const ms=X({expandDims_:JV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZV(n){const e={x:M(n,"x","expm1")};return G.runKernel(Vl,e)}const QV=X({expm1_:ZV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tW(n,t){const e=M(n,"x","tile","string_or_numeric");T(e.rank===t.length,()=>`Error in transpose: rank of input ${e.rank} must match length of reps ${t}.`);const s={x:e},r={reps:t};return G.runKernel(Ji,s,r)}const Tr=X({tile_:tW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eW(n,t,e,s="float32"){t==null&&(t=n);const r=Zt([n,t],s),o=n<=t?n:t;for(let i=0;i<o;++i)r.set(1,i,i);const a=K(r.toTensor(),[n,t]);if(e==null)return a;if(e.length===1)return Tr(ms(a,0),[e[0],1,1]);if(e.length===2)return Tr(ms(ms(a,0),0),[e[0],e[1],1,1]);if(e.length===3)return Tr(ms(ms(ms(a,0),0),0),[e[0],e[1],e[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${e.length}D.`)}const aC=X({eye_:eW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nW(n){const e={x:M(n,"x","floor","float32")};return G.runKernel(Wl,e)}const ey=X({floor_:nW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sW(n,t,e=0,s=0){const r=M(n,"x","gather"),o=M(t,"indices","gather","int32"),a={x:r,indices:o},i={axis:e,batchDims:s};return G.runKernel(ip,a,i)}const g1=X({gather_:sW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rW(n,t){let e=M(n,"a","greater","string_or_numeric"),s=M(t,"b","greater","string_or_numeric");[e,s]=sn(e,s),Ut(e.shape,s.shape);const r={a:e,b:s};return G.runKernel(up,r)}const Zs=X({greater_:rW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oW(n,t){let e=M(n,"a","greaterEqual","string_or_numeric"),s=M(t,"b","greaterEqual","string_or_numeric");[e,s]=sn(e,s),Ut(e.shape,s.shape);const r={a:e,b:s};return G.runKernel(Hl,r)}const tu=X({greaterEqual_:oW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aW(n){const e={input:M(n,"input","imag")};return G.runKernel(qw,e)}const y1=X({imag_:aW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iW(n){const e={x:M(n,"x","isFinite")};return G.runKernel(ql,e)}const uW=X({isFinite_:iW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lW(n){const e={x:M(n,"x","isInf")};return G.runKernel(Kl,e)}const cW=X({isInf_:lW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dW(n){const e={x:M(n,"x","isNaN")};return G.runKernel(Xl,e)}const hW=X({isNaN_:dW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pW(n,t=.2){const s={x:M(n,"x","leakyRelu")},r={alpha:t};return G.runKernel(Yl,s,r)}const b1=X({leakyRelu_:pW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fW(n,t){let e=M(n,"a","less","string_or_numeric"),s=M(t,"b","less","string_or_numeric");[e,s]=sn(e,s),Ut(e.shape,s.shape);const r={a:e,b:s};return G.runKernel(lp,r)}const cm=X({less_:fW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mW(n,t){let e=M(n,"a","lessEqual","string_or_numeric"),s=M(t,"b","lessEqual","string_or_numeric");[e,s]=sn(e,s),Ut(e.shape,s.shape);const r={a:e,b:s};return G.runKernel(cp,r)}const Lc=X({lessEqual_:mW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gW(n,t=5,e=1,s=1,r=.5){const o=M(n,"x","localResponseNormalization");T(o.rank===4||o.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${o.rank}.`),T(Yu(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let a=o,i=!1;o.rank===3&&(i=!0,a=K(o,[1,o.shape[0],o.shape[1],o.shape[2]]));const u={x:a},c={depthRadius:t,bias:e,alpha:s,beta:r},l=G.runKernel(Ql,u,c);return i?K(l,[l.shape[1],l.shape[2],l.shape[3]]):l}const yW=X({localResponseNormalization_:gW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bW(n){const e={x:M(n,"x","log","float32")};return G.runKernel(Jl,e)}const go=X({log_:bW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xW(n){const e={x:M(n,"x","log1p")};return G.runKernel(Zl,e)}const iC=X({log1p_:xW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wW(n,t){T(Xb(n),()=>"The f passed in variableGrads(f) must be a function"),T(t==null||Array.isArray(t)&&t.every(c=>c instanceof um),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const e=t!=null;if(!e){t=[];for(const c in G.registeredVariables)t.push(G.registeredVariables[c])}const s=e?t.filter(c=>!c.trainable):null,r=t.length;t=t.filter(c=>c.trainable),T(t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`);const o=!0,{value:a,grads:i}=G.gradients(n,t,null,o);T(i.some(c=>c!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),T(a.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`);const u={};return t.forEach((c,l)=>{i[l]!=null&&(u[c.name]=i[l])}),s!=null&&s.forEach(c=>u[c.name]=null),{value:a,grads:u}}function nl(n){return G.customGrad(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vW(n){const e={x:M(n,"x","neg")};return G.runKernel(gp,e)}const en=X({neg_:vW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IW(n){const e={x:M(n,"x","softplus")};return G.runKernel(Cc,e)}const Lp=X({softplus_:IW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kW(n){const t=M(n,"x","logSigmoid");return nl(s=>({value:en(Lp(en(s))),gradFunc:a=>W(a,Pc(en(s)))}))(t)}const $W=X({logSigmoid_:kW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SW(n,t){let e=M(n,"a","sub"),s=M(t,"b","sub");[e,s]=sn(e,s);const r={a:e,b:s};return G.runKernel(Dc,r)}const Mt=X({sub_:SW});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NW(n,t=-1){const e=M(n,"logits","logSoftmax");if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and axis was ${t}`);return nl((r,o)=>{const i=Ar(r,t,!0),u=Mt(r,i),c=Mt(It(u,"float32"),go(Rt(mo(u),t,!0)));return o([c]),{value:c,gradFunc:(d,h)=>{const[p]=h,f=!0,m=mo(p);return Mt(d,W(Rt(d,t,f),m))}}})(e)}const uC=X({logSoftmax_:NW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CW(n,t=null,e=!1){const s=M(n,"x","logSumExp"),r=Gt(t,s.shape),o=Ar(s,r,!0),a=Mt(s,o),i=mo(a),u=Rt(i,r),c=go(u),l=ht(K(o,c.shape),c);if(e){const d=Re(l.shape,r);return K(l,d)}return l}const lC=X({logSumExp_:CW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _W(n,t){const e=M(n,"a","logicalAnd","bool"),s=M(t,"b","logicalAnd","bool");Ut(e.shape,s.shape);const r={a:e,b:s};return G.runKernel(dp,r)}const Ho=X({logicalAnd_:_W});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TW(n){const e={x:M(n,"x","logicalNot","bool")};return G.runKernel(hp,e)}const x1=X({logicalNot_:TW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EW(n,t){const e=M(n,"a","logicalOr","bool"),s=M(t,"b","logicalOr","bool");Ut(e.shape,s.shape);const r={a:e,b:s};return G.runKernel(pp,r)}const cC=X({logicalOr_:EW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AW(n,t){const e=M(n,"a","logicalXor","bool"),s=M(t,"b","logicalXor","bool");return Ut(e.shape,s.shape),Ho(cC(n,t),x1(Ho(n,t)))}const DW=X({logicalXor_:AW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RW(n,t,e,s,r){const o=M(n,"x","maxPool"),a=1;let i=o,u=!1;o.rank===3&&(u=!0,i=K(o,[1,o.shape[0],o.shape[1],o.shape[2]])),T(i.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`),T(Mn(e,a),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${e} and dilations '${a}'`),Ss("maxPool",s,r);const c={x:i},l={filterSize:t,strides:e,pad:s,dimRoundingMode:r},d=G.runKernel(nc,c,l);return u?K(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const w1=X({maxPool_:RW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FW(n,t=[1,1,1],e,s,r,o="NDHWC"){const a=M(n,"x","maxPool3d");let i=a,u=!1;a.rank===4&&(u=!0,i=K(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),T(i.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${i.rank}.`),T(o==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${o}`),Ss("maxPool3d",s,r);const c={x:i},l={filterSize:t,strides:e,pad:s,dimRoundingMode:r,dataFormat:o},d=G.runKernel(mp,c,l);return u?K(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const OW=X({maxPool3d_:FW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PW(n,t){let e=M(n,"a","maximum"),s=M(t,"b","maximum");[e,s]=sn(e,s),e.dtype==="bool"&&(e=It(e,"int32"),s=It(s,"int32")),Ut(e.shape,s.shape);const r={a:e,b:s};return G.runKernel(ec,r)}const Ua=X({maximum_:PW});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LW(n,t=null,e=!1){const r={x:M(n,"x","mean")},o={axis:t,keepDims:e};return G.runKernel(sc,r,o)}const pn=X({mean_:LW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cn(n,t="float32"){if(Qo(n),t==="complex64"){const s=Cn(n,"float32"),r=Cn(n,"float32");return tl(s,r)}const e=qn(j(n),t);return G.makeTensor(e,n,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ga(n,t="float32"){if(Qo(n),t==="complex64"){const s=Ga(n,"float32"),r=Cn(n,"float32");return tl(s,r)}const e=Ow(j(n),t);return G.makeTensor(e,n,t)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MW(n,t){let e=M(n,"a","minimum"),s=M(t,"b","minimum");[e,s]=sn(e,s),e.dtype==="bool"&&(e=It(e,"int32"),s=It(s,"int32")),Ut(e.shape,s.shape);const r={a:e,b:s};return G.runKernel(oc,r)}const Bd=X({minimum_:MW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BW(n,t,e){T(e==="reflect"||e==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${e}.`);const s=M(n,"x","mirrorPad");if(s.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");T(t.length===s.rank,()=>`Padding doesn't match input. Must be ${s.rank}. Got ${t.length}.`);const r=e==="reflect"?1:0;for(let i=0;i<s.rank;i++)T(t[i].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),T(t[i][0]>=0&&t[i][0]<=s.shape[i]-r&&t[i][1]>=0&&t[i][1]<=s.shape[i]-r,()=>`Padding in dimension ${i} cannot be greater than or equal to ${s.shape[i]-r} or less than 0 for input of shape ${s.shape}`);const o={paddings:t,mode:e},a={x:s};return G.runKernel(ac,a,o)}const zW=X({mirrorPad_:BW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VW(n,t){let e=M(n,"a","mod"),s=M(t,"b","mod");[e,s]=sn(e,s);const r={a:e,b:s};return G.runKernel(ic,r)}const WW=X({mod_:VW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UW(n,t=null,e=!1){n=M(n,"x","moments");const s=Gt(t,n.shape),r=pn(n,s,e);let o=r.shape;e||(o=Re(r.shape,s));const a=Ue(Mt(It(n,"float32"),K(r,o))),i=pn(a,s,e);return{mean:r,variance:i}}const v1=X({moments_:UW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GW(n,t){let e=M(n,"a","notEqual","string_or_numeric"),s=M(t,"b","notEqual","string_or_numeric");[e,s]=sn(e,s),Ut(e.shape,s.shape);const r={a:e,b:s};return G.runKernel(yp,r)}const dm=X({notEqual_:GW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HW(n,t,e=1,s=0,r="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const a={indices:M(n,"indices","oneHot","int32")},i={dtype:r,depth:t,onValue:e,offValue:s};return G.runKernel(lc,a,i)}const dC=X({oneHot_:HW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jW(n){const e={x:M(n,"x","onesLike")};return G.runKernel(vp,e)}const mr=X({onesLike_:jW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qW(n,t,e=0){const s=M(n,"x","pad");if(s.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const r={paddings:t,constantValue:e},o={x:s};return G.runKernel(cc,o,r)}const I1=X({pad_:qW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KW(n,t,e){const s=M(n,"x","spaceToBatchND");T(s.rank>=1+t.length,()=>`input rank ${s.rank} should be > than [blockShape] ${t.length}`),T(e.length===t.length,()=>`paddings.shape[0] ${e.length} must be equal to [blockShape] ${t.length}`),T(s.shape.reduce((a,i,u)=>u>0&&u<=t.length?a&&(i+e[u-1][0]+e[u-1][1])%t[u-1]===0:a,!0),()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${e.toString()} must be divisible by blockShapes ${t.toString()}`);const r={x:s},o={blockShape:t,paddings:e};return G.runKernel(_p,r,o)}const k1=X({spaceToBatchND_:KW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XW(n,t,e,s,r,o,a){r==null&&(r=[1,1]),o==null&&(o=1),s===0&&(s="valid");const i=M(n,"x","maxPool");let u=i,c=!1;i.rank===3&&(c=!0,u=K(i,[1,i.shape[0],i.shape[1],i.shape[2]])),T(Mn(o,r),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${o} and dilations '${r}'`);const l=Xn(u.shape,t,o,r,s),d=[l.dilationHeight,l.dilationWidth];let h;s==="same"?h=JW([l.filterHeight,l.filterWidth],d):h=[[0,0],[0,0]];const p=d[0]===1&&d[1]===1,[f,m]=YW([l.inHeight,l.inWidth],d,h),g=p?s:"valid",y=p?u:k1(u,d,f),x=(e==="avg"?()=>c1(y,t,o,g,a):()=>w1(y,t,o,g,a))(),w=p?x:d1(x,d,m);return c?K(w,[w.shape[1],w.shape[2],w.shape[3]]):w}function YW(n,t,e){const s=e.map(l=>l[0]),r=e.map(l=>l[1]),o=n.concat(s,r),a=t.map((l,d)=>(l-o[d]%l)%l),i=r.map((l,d)=>l+a[d]),u=t.map((l,d)=>[s[d],i[d]]),c=t.map((l,d)=>[0,a[d]]);return[u,c]}function JW(n,t){const s=n.map((a,i)=>a+(a-1)*(t[i]-1)).map(a=>a-1),r=s.map(a=>Math.floor(a/2)),o=s.map((a,i)=>a-r[i]);return s.map((a,i)=>[r[i],o[i]])}const ZW=X({pool_:XW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QW(n,t){const e=M(n,"x","prelu"),s=M(t,"alpha","prelu"),r={x:e,alpha:s};return G.runKernel(hc,r)}const $1=X({prelu_:QW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t4(n,t=null,e=!1){let s=M(n,"x","prod");s.dtype==="bool"&&(s=It(s,"int32"));const r={x:s},o={axis:t,keepDims:e};return G.runKernel(pc,r,o)}const e4=X({prod_:t4});var Ff={exports:{}},n4=Ff.exports,XI;function s4(){return XI||(XI=1,function(n){(function(t,e,s){function r(u){var c=this,l=i();c.next=function(){var d=2091639*c.s0+c.c*23283064365386963e-26;return c.s0=c.s1,c.s1=c.s2,c.s2=d-(c.c=d|0)},c.c=1,c.s0=l(" "),c.s1=l(" "),c.s2=l(" "),c.s0-=l(u),c.s0<0&&(c.s0+=1),c.s1-=l(u),c.s1<0&&(c.s1+=1),c.s2-=l(u),c.s2<0&&(c.s2+=1),l=null}function o(u,c){return c.c=u.c,c.s0=u.s0,c.s1=u.s1,c.s2=u.s2,c}function a(u,c){var l=new r(u),d=c&&c.state,h=l.next;return h.int32=function(){return l.next()*4294967296|0},h.double=function(){return h()+(h()*2097152|0)*11102230246251565e-32},h.quick=h,d&&(typeof d=="object"&&o(d,l),h.state=function(){return o(l,{})}),h}function i(){var u=4022871197,c=function(l){l=String(l);for(var d=0;d<l.length;d++){u+=l.charCodeAt(d);var h=.02519603282416938*u;u=h>>>0,h-=u,h*=u,u=h>>>0,h-=u,u+=h*4294967296}return(u>>>0)*23283064365386963e-26};return c}e&&e.exports?e.exports=a:this.alea=a})(n4,n)}(Ff)),Ff.exports}var Of={exports:{}},r4=Of.exports,YI;function o4(){return YI||(YI=1,function(n){(function(t,e,s){function r(i){var u=this,c="";u.x=0,u.y=0,u.z=0,u.w=0,u.next=function(){var d=u.x^u.x<<11;return u.x=u.y,u.y=u.z,u.z=u.w,u.w^=u.w>>>19^d^d>>>8},i===(i|0)?u.x=i:c+=i;for(var l=0;l<c.length+64;l++)u.x^=c.charCodeAt(l)|0,u.next()}function o(i,u){return u.x=i.x,u.y=i.y,u.z=i.z,u.w=i.w,u}function a(i,u){var c=new r(i),l=u&&u.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var h=c.next()>>>11,p=(c.next()>>>0)/4294967296,f=(h+p)/(1<<21);while(f===0);return f},d.int32=c.next,d.quick=d,l&&(typeof l=="object"&&o(l,c),d.state=function(){return o(c,{})}),d}e&&e.exports?e.exports=a:this.xor128=a})(r4,n)}(Of)),Of.exports}var Pf={exports:{}},a4=Pf.exports,JI;function i4(){return JI||(JI=1,function(n){(function(t,e,s){function r(i){var u=this,c="";u.next=function(){var d=u.x^u.x>>>2;return u.x=u.y,u.y=u.z,u.z=u.w,u.w=u.v,(u.d=u.d+362437|0)+(u.v=u.v^u.v<<4^(d^d<<1))|0},u.x=0,u.y=0,u.z=0,u.w=0,u.v=0,i===(i|0)?u.x=i:c+=i;for(var l=0;l<c.length+64;l++)u.x^=c.charCodeAt(l)|0,l==c.length&&(u.d=u.x<<10^u.x>>>4),u.next()}function o(i,u){return u.x=i.x,u.y=i.y,u.z=i.z,u.w=i.w,u.v=i.v,u.d=i.d,u}function a(i,u){var c=new r(i),l=u&&u.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var h=c.next()>>>11,p=(c.next()>>>0)/4294967296,f=(h+p)/(1<<21);while(f===0);return f},d.int32=c.next,d.quick=d,l&&(typeof l=="object"&&o(l,c),d.state=function(){return o(c,{})}),d}e&&e.exports?e.exports=a:this.xorwow=a})(a4,n)}(Pf)),Pf.exports}var Lf={exports:{}},u4=Lf.exports,ZI;function l4(){return ZI||(ZI=1,function(n){(function(t,e,s){function r(i){var u=this;u.next=function(){var l=u.x,d=u.i,h,p;return h=l[d],h^=h>>>7,p=h^h<<24,h=l[d+1&7],p^=h^h>>>10,h=l[d+3&7],p^=h^h>>>3,h=l[d+4&7],p^=h^h<<7,h=l[d+7&7],h=h^h<<13,p^=h^h<<9,l[d]=p,u.i=d+1&7,p};function c(l,d){var h,p=[];if(d===(d|0))p[0]=d;else for(d=""+d,h=0;h<d.length;++h)p[h&7]=p[h&7]<<15^d.charCodeAt(h)+p[h+1&7]<<13;for(;p.length<8;)p.push(0);for(h=0;h<8&&p[h]===0;++h);for(h==8?p[7]=-1:p[h],l.x=p,l.i=0,h=256;h>0;--h)l.next()}c(u,i)}function o(i,u){return u.x=i.x.slice(),u.i=i.i,u}function a(i,u){i==null&&(i=+new Date);var c=new r(i),l=u&&u.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var h=c.next()>>>11,p=(c.next()>>>0)/4294967296,f=(h+p)/(1<<21);while(f===0);return f},d.int32=c.next,d.quick=d,l&&(l.x&&o(l,c),d.state=function(){return o(c,{})}),d}e&&e.exports?e.exports=a:this.xorshift7=a})(u4,n)}(Lf)),Lf.exports}var Mf={exports:{}},c4=Mf.exports,QI;function d4(){return QI||(QI=1,function(n){(function(t,e,s){function r(i){var u=this;u.next=function(){var l=u.w,d=u.X,h=u.i,p,f;return u.w=l=l+1640531527|0,f=d[h+34&127],p=d[h=h+1&127],f^=f<<13,p^=p<<17,f^=f>>>15,p^=p>>>12,f=d[h]=f^p,u.i=h,f+(l^l>>>16)|0};function c(l,d){var h,p,f,m,g,y=[],b=128;for(d===(d|0)?(p=d,d=null):(d=d+"\0",p=0,b=Math.max(b,d.length)),f=0,m=-32;m<b;++m)d&&(p^=d.charCodeAt((m+32)%d.length)),m===0&&(g=p),p^=p<<10,p^=p>>>15,p^=p<<4,p^=p>>>13,m>=0&&(g=g+1640531527|0,h=y[m&127]^=p+g,f=h==0?f+1:0);for(f>=128&&(y[(d&&d.length||0)&127]=-1),f=127,m=4*128;m>0;--m)p=y[f+34&127],h=y[f=f+1&127],p^=p<<13,h^=h<<17,p^=p>>>15,h^=h>>>12,y[f]=p^h;l.w=g,l.X=y,l.i=f}c(u,i)}function o(i,u){return u.i=i.i,u.w=i.w,u.X=i.X.slice(),u}function a(i,u){i==null&&(i=+new Date);var c=new r(i),l=u&&u.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var h=c.next()>>>11,p=(c.next()>>>0)/4294967296,f=(h+p)/(1<<21);while(f===0);return f},d.int32=c.next,d.quick=d,l&&(l.X&&o(l,c),d.state=function(){return o(c,{})}),d}e&&e.exports?e.exports=a:this.xor4096=a})(c4,n)}(Mf)),Mf.exports}var Bf={exports:{}},h4=Bf.exports,tk;function p4(){return tk||(tk=1,function(n){(function(t,e,s){function r(i){var u=this,c="";u.next=function(){var d=u.b,h=u.c,p=u.d,f=u.a;return d=d<<25^d>>>7^h,h=h-p|0,p=p<<24^p>>>8^f,f=f-d|0,u.b=d=d<<20^d>>>12^h,u.c=h=h-p|0,u.d=p<<16^h>>>16^f,u.a=f-d|0},u.a=0,u.b=0,u.c=-1640531527,u.d=1367130551,i===Math.floor(i)?(u.a=i/4294967296|0,u.b=i|0):c+=i;for(var l=0;l<c.length+20;l++)u.b^=c.charCodeAt(l)|0,u.next()}function o(i,u){return u.a=i.a,u.b=i.b,u.c=i.c,u.d=i.d,u}function a(i,u){var c=new r(i),l=u&&u.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var h=c.next()>>>11,p=(c.next()>>>0)/4294967296,f=(h+p)/(1<<21);while(f===0);return f},d.int32=c.next,d.quick=d,l&&(typeof l=="object"&&o(l,c),d.state=function(){return o(c,{})}),d}e&&e.exports?e.exports=a:this.tychei=a})(h4,n)}(Bf)),Bf.exports}var zf={exports:{}};const f4={},m4=Object.freeze(Object.defineProperty({__proto__:null,default:f4},Symbol.toStringTag,{value:"Module"})),la=A3(m4);var g4=zf.exports,ek;function y4(){return ek||(ek=1,function(n){(function(t,e,s){var r=256,o=6,a=52,i="random",u=s.pow(r,o),c=s.pow(2,a),l=c*2,d=r-1,h;function p(w,v,k){var S=[];v=v==!0?{entropy:!0}:v||{};var _=y(g(v.entropy?[w,x(e)]:w??b(),3),S),C=new f(S),N=function(){for(var $=C.g(o),A=u,D=0;$<c;)$=($+D)*r,A*=r,D=C.g(1);for(;$>=l;)$/=2,A/=2,D>>>=1;return($+D)/A};return N.int32=function(){return C.g(4)|0},N.quick=function(){return C.g(4)/4294967296},N.double=N,y(x(C.S),e),(v.pass||k||function($,A,D,R){return R&&(R.S&&m(R,C),$.state=function(){return m(C,{})}),D?(s[i]=$,A):$})(N,_,"global"in v?v.global:this==s,v.state)}function f(w){var v,k=w.length,S=this,_=0,C=S.i=S.j=0,N=S.S=[];for(k||(w=[k++]);_<r;)N[_]=_++;for(_=0;_<r;_++)N[_]=N[C=d&C+w[_%k]+(v=N[_])],N[C]=v;(S.g=function($){for(var A,D=0,R=S.i,F=S.j,z=S.S;$--;)A=z[R=d&R+1],D=D*r+z[d&(z[R]=z[F=d&F+A])+(z[F]=A)];return S.i=R,S.j=F,D})(r)}function m(w,v){return v.i=w.i,v.j=w.j,v.S=w.S.slice(),v}function g(w,v){var k=[],S=typeof w,_;if(v&&S=="object")for(_ in w)try{k.push(g(w[_],v-1))}catch{}return k.length?k:S=="string"?w:w+"\0"}function y(w,v){for(var k=w+"",S,_=0;_<k.length;)v[d&_]=d&(S^=v[d&_]*19)+k.charCodeAt(_++);return x(v)}function b(){try{var w;return h&&(w=h.randomBytes)?w=w(r):(w=new Uint8Array(r),(t.crypto||t.msCrypto).getRandomValues(w)),x(w)}catch{var v=t.navigator,k=v&&v.plugins;return[+new Date,t,k,t.screen,x(e)]}}function x(w){return String.fromCharCode.apply(0,w)}if(y(s.random(),e),n.exports){n.exports=p;try{h=la}catch{}}else s["seed"+i]=p})(typeof self<"u"?self:g4,[],Math)}(zf)),zf.exports}var lb,nk;function b4(){if(nk)return lb;nk=1;var n=s4(),t=o4(),e=i4(),s=l4(),r=d4(),o=p4(),a=y4();return a.alea=n,a.xor128=t,a.xorwow=e,a.xorshift7=s,a.xor4096=r,a.tychei=o,lb=a,lb}var Mc=b4();/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let hC=class{constructor(t,e,s,r,o){this.mean=t,this.stdDev=e,this.dtype=s,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);const a=o||Math.random();this.random=Mc.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const r=this.nextVal;return this.nextVal=NaN,r}let t,e,s=!1;for(;!s;){let r,o,a;do r=2*this.random()-1,o=2*this.random()-1,a=r*r+o*o;while(a>=1||a===0);const i=Math.sqrt(-2*Math.log(a)/a);t=this.mean+this.stdDev*r*i,e=this.mean+this.stdDev*o*i,(!this.truncated||this.isValidTruncated(t))&&(s=!0)}return(!this.truncated||this.isValidTruncated(e))&&(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return this.dtype==null||this.dtype==="float32"?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}},x4=class{constructor(t=0,e=1,s,r){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=t,this.range=e-t,this.dtype=s,r==null&&(r=Math.random()),typeof r=="number"&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${t} - ${e} <= 1 and dtype is not float`);this.random=Mc.alea(r)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w4(n,t=0,e=1,s,r){if(Qo(n),s!=null&&s==="bool")throw new Error(`Unsupported data type ${s}`);const o=new hC(t,e,s,!1,r),a=Zt(n,s);for(let i=0;i<a.values.length;i++)a.values[i]=o.nextValue();return a.toTensor()}const v4=X({randomNormal_:w4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I4(n,t=0,e=1,s="float32",r){Qo(n);const o=Zt(n,s),a=new x4(t,e,null,r);for(let i=0;i<o.values.length;i++)o.values[i]=a.nextValue();return o.toTensor()}const Mp=X({randomUniform_:I4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zd(n,t,e=1,s="float32"){if(e===0)throw new Error("Cannot have a step of zero");const r={start:n,stop:t,step:e,dtype:s};return G.runKernel(Lg,{},r)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k4(n){const e={input:M(n,"input","real")};return G.runKernel(Xw,e)}const hm=X({real_:k4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $4(n){const e={x:M(n,"x","reciprocal")};return G.runKernel(fc,e)}const S4=X({reciprocal_:$4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N4(n){const e={x:M(n,"x","relu")};return G.runKernel(mc,e)}const eu=X({relu_:N4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C4(n){const e={x:M(n,"x","relu6")};return G.runKernel(bc,e)}const pC=X({relu6_:C4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _4(n,t){const s={x:M(n,"x","reverse")},r={dims:t};return G.runKernel(xc,s,r)}const Ai=X({reverse_:_4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T4(n){const e={x:M(n,"x","round")};return G.runKernel(wc,e)}const fC=X({round_:T4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E4(n){const e={x:M(n,"x","rsqrt","float32")};return G.runKernel(vc,e)}const mC=X({rsqrt_:E4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A4(n){const e={x:M(n,"x","selu")};return G.runKernel(Ic,e)}const gC=X({selu_:A4});function D4(n,t,e,s,r,o=[1,1],a="NHWC"){const i=M(n,"x","separableConv2d"),u=M(t,"depthwiseFilter","separableConv2d"),c=M(e,"pointwiseFilter","separableConv2d");let l=i,d=!1;if(i.rank===3&&(d=!0,l=K(i,[1,i.shape[0],i.shape[1],i.shape[2]])),a==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");T(l.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${l.rank}.`),T(u.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`),T(c.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`),T(c.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${c.shape[0]}.`),T(c.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${c.shape[1]}.`);const h=u.shape[2],p=u.shape[3];T(c.shape[2]===h*p,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${h*p}, but got ${c.shape[2]}.`);const f=f1(l,u,s,r,a,o),g=Ti(f,c,1,"valid",a);return d?K(g,[g.shape[1],g.shape[2],g.shape[3]]):g}const yC=X({separableConv2d_:D4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R4(n){const e={x:M(n,"x","sign")};return G.runKernel(Sc,e)}const F4=X({sign_:R4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O4(n){const e={x:M(n,"x","sin","float32")};return G.runKernel(kc,e)}const bC=X({sin_:O4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P4(n){const e={x:M(n,"x","sinh")};return G.runKernel($c,e)}const xC=X({sinh_:P4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L4(n,t,e){const s=M(n,"x","slice1d");return T(s.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`),Pe(s,[t],[e])}const S1=X({slice1d_:L4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M4(n,t,e){const s=M(n,"x","slice2d");return T(s.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`),Pe(s,t,e)}const wC=X({slice2d_:M4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B4(n,t,e){const s=M(n,"x","slice3d");return T(s.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`),Pe(s,t,e)}const N1=X({slice3d_:B4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z4(n,t,e){const s=M(n,"x","slice4d");return T(s.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`),Pe(s,t,e)}const pm=X({slice4d_:z4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V4(n,t=-1){const e=M(n,"logits","softmax","float32");if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and dim was ${t}`);const s={logits:e},r={dim:t};return G.runKernel(Ec,s,r)}const C1=X({softmax_:V4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W4(n){T(n.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${n.dtype}.`);const t={input:n};return G.runKernel(Hw,t)}const vC=X({fft_:W4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U4(n){T(n.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${n.dtype}.`);const t={input:n};return G.runKernel(jw,t)}const cx=X({ifft_:U4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G4(n){const t=n.shape[n.shape.length-1],e=n.size/t;let s;if(t<=2){const r=K(n,[e,t]);s=cx(r)}else{const r=[e,2*(t-1)],o=K(hm(n),[e,t]),a=K(y1(n),[e,t]),i=Ai(Pe(o,[0,1],[e,t-2]),1),u=W(Ai(Pe(a,[0,1],[e,t-2]),1),xe(-1)),c=vs([o,i],1),l=vs([a,u],1),d=K(tl(c,l),[r[0],r[1]]);s=cx(d)}if(s=hm(s),n.rank===3&&n.shape[0]!==0){const r=s,o=n.shape[0];s=K(s,[o,s.shape[0]/o,s.shape[1]]),r.dispose()}return s}const H4=X({irfft_:G4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j4(n,t,e=0){const r={x:M(n,"x","split")},o={numOrSizeSplits:t,axis:e};return G.runKernel(Tp,r,o)}const Ks=X({split_:j4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q4(n,t){T(n.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${n.dtype}`);let e=n.shape[n.shape.length-1];const s=n.size/e;let r;if(t!=null&&t<e){const f=n.shape.map(g=>0),m=n.shape.map(g=>g);m[n.shape.length-1]=t,r=Pe(n,f,m),e=t}else if(t!=null&&t>e){const f=n.shape.map(m=>m);f[n.shape.length-1]=t-e,r=vs([n,Cn(f)],n.shape.length-1),e=t}else r=n;const o=ae(r),a=K(tl(r,o),[s,e]),i=vC(a),u=Math.floor(e/2)+1,c=hm(i),l=y1(i),d=Ks(c,[u,e-u],c.shape.length-1),h=Ks(l,[u,e-u],l.shape.length-1),p=r.shape.slice();return p[r.shape.length-1]=u,K(tl(d[0],h[0]),p)}const K4=X({rfft_:q4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X4(n,t){let e=M(n,"a","squaredDifference"),s=M(t,"b","squaredDifference");[e,s]=sn(e,s),Ut(e.shape,s.shape);const r={a:e,b:s},o={};return G.runKernel(Ac,r,o)}const Y4=X({squaredDifference_:X4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J4(n,t){const e=M(n,"x","squeeze","string_or_numeric");return K(e,za(e.shape,t).newShape)}const Bp=X({squeeze_:J4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z4(n,t=0){const e=WN(n,"tensors","stack","string_or_numeric");T(e.length>=1,()=>"Pass at least one tensor to tf.stack"),e.length>0&&T(t<=e[0].rank,()=>"Axis must be <= rank of the tensor");const s=e,r={axis:t};return G.runKernel(Ip,s,r)}const jo=X({stack_:Z4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q4(n,t=0){const s={x:M(n,"x","step")},r={alpha:t};return G.runKernel(Zi,s,r)}const zp=X({step_:Q4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tU(n,t,e,s,r=0,o=0,a=0,i=0,u=0){const l={x:M(n,"x","stridedSlice","string_or_numeric")},d={begin:t,end:e,strides:s,beginMask:r,endMask:o,ellipsisMask:a,newAxisMask:i,shrinkAxisMask:u};return G.runKernel(Ep,l,d)}const eU=X({stridedSlice_:tU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nU(n){const e={x:M(n,"x","tan","float32")};return G.runKernel(Rc,e)}const sU=X({tan_:nU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ds(n,t){bN(n);const e=Kg(n,t);if(e.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Xg(n,null,e,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vf(n,t,e){if(bN(n),t!=null&&t.length!==2)throw new Error("tensor2d() requires shape to have two numbers");const s=Kg(n,e);if(s.length!==2&&s.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Xg(n,t,s,e)}function IC(n,t,e){const s=t.rank>1?t.shape[t.rank-1]:1,r=t.rank>1?t.rank-1:1,o=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${e.shape}, indices.shape: ${t.shape}, shape: ${n}, sliceDim: ${s}, and batchDim: ${r}.`;if(e.rank<r)throw new Error(o+` update.rank < ${r}. `);if(n.length<s+(e.rank-r))throw new Error(o+` Output shape length < ${s+(e.rank-r)}`);if(e.rank!==r+n.length-s)throw new Error(o+` update.rank != ${r+n.length-s}`);for(let a=0;a<r;++a)if(e.shape[a]!==t.shape[a])throw new Error(o+` updates.shape[${a}] (${e.shape[a]}) != indices.shape[${a}] (${t.shape[a]}).`);for(let a=0;a<e.rank-r;++a)if(e.shape[a+r]!==n[a+s])throw new Error(o+` updates.shape[${a+r}] (${e.shape[a+r]}) != shape[${a+r}] (${n[a+r]})`)}function rU(n,t,e){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(n.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${n.rank}.`);if(t.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(e.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${e}`);if(e.length===0){if(t.size===0)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(n.size===0)throw new Error(`Updates specified for empty output. updates shape: ${n.shape}`)}IC(e,t,n)}function Io(n,t,e){const s=t.shape.length,r=s>1?t.shape[s-1]:1,o=e.length;let a=1;for(let d=r;d<o;++d)a*=e[d];const i=r<1?1:r,u=j(t.shape)/i,c=[...St(e.slice(0,r)),1],l=j(e);return{sliceRank:r,numUpdates:u,sliceSize:a,strides:c,outputSize:l}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oU(n,t=1,e=!0){const s=M(n,"x","topk");if(s.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");const r=s.shape[s.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>r)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${t}`);const o={x:s},a={k:t,sorted:e},[i,u]=G.runKernel(Ap,o,a);return{values:i,indices:u}}const aU=X({topk_:oU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iU(n,t=0,e=1,s,r){if(Qo(n),s!=null&&s==="bool")throw new Error("Unsupported data type $ { dtype }");const o=new hC(t,e,s,!0,r),a=Zt(n,s);for(let i=0;i<a.values.length;i++)a.values[i]=o.nextValue();return a.toTensor()}const kC=X({truncatedNormal_:iU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uU(n,t=0){const e=M(n,"x","unique","string_or_numeric");T(e.rank>0,()=>"The input tensor must be at least 1D");const s={x:e},r={axis:t},[o,a]=G.runKernel(Gg,s,r);return{values:o,indices:a}}const lU=X({unique_:uU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cU(n,t,e){const s=M(n,"x","unsortedSegmentSum"),r=M(t,"segmentIds","unsortedSegmentSum","int32");T(Yu(e),()=>"numSegments must be of dtype int");const o={x:s,segmentIds:r},a={numSegments:e};return G.runKernel(Hg,o,a)}const $C=X({unsortedSegmentSum_:cU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dU(n,t=0){const e=M(n,"x","unstack","string_or_numeric");T(t>=-e.shape.length&&t<e.shape.length,()=>`Axis = ${t} is not in [-${e.shape.length}, ${e.shape.length})`);const s={value:e},r={axis:t};return G.runKernel(Rp,s,r)}const Di=X({unstack_:dU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hU(n,t=!0,e,s){return G.makeVariable(n,t,e,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SC(n,t){const e=[];for(let o=0;o<t.length;o++)t[o]&&e.push(o);const s=Zt(n,"int32"),r=Zt([e.length,n.length],"int32");for(let o=0;o<e.length;o++){const a=s.indexToLoc(e[o]),i=o*n.length;r.values.set(a,i)}return r.toTensor()}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pU(n,t,e){const s=M(n,"x","transpose");if(t==null&&(t=s.shape.map((a,i)=>i).reverse()),T(s.rank===t.length,()=>`Error in transpose: rank of input ${s.rank} must match length of perm ${t}.`),t.forEach(a=>{T(a>=0&&a<s.rank,()=>`All entries in 'perm' must be between 0 and ${s.rank-1} but got ${t}`)}),s.rank<=1)return s.clone();const r={x:s},o={perm:t};return s.dtype==="complex64"?Q(()=>{let a=hm(s),i=y1(s);return a=G.runKernel(wa,{x:a},o),i=G.runKernel(wa,{x:i},o),e&&(i=en(i)),tl(a,i)}):G.runKernel(wa,r,o)}const oe=X({transpose_:pU});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fU(n,t){if(t==null)return n.shape.slice();if(we(n.shape,t))return t;if(n.shape.length===t.length){const e=[];for(let s=0;s<n.shape.length;s++)t[s]==null&&n.shape[s]!=null?e.push(n.shape[s]):e.push(t[s]);return e}return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mU(n,t,e,s){const r=M(n,"x","dropout");if(T(r.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`),T(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),t===0)return n instanceof yn?r.clone():r;const o=fU(r,e),a=1-t,i=Ft(ey(ht(Mp(o,0,1,"float32",s),a)),a);return W(r,i)}const gU=X({dropout_:mU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yU(n,t,e,s,r,o="NHWC",a){let i=n;n.rank===3&&(i=K(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let u=t;u.rank===3&&(u=K(t,[1,t.shape[0],t.shape[1],t.shape[2]])),T(i.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${i.shape}.`),T(u.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`),T(e.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${e}.`);const c=o==="NHWC"?i.shape[3]:i.shape[1],l=o==="NHWC"?u.shape[3]:u.shape[1];T(c===e[2],()=>`Error in conv2dDerFilter: depth of input ${c}) must match input depth in filter (${e[2]}.`),T(l===e[3],()=>`Error in conv2dDerFilter: depth of dy (${l}) must match output depth for filter (${e[3]}).`),Ss("conv2dDerFilter",r,a);const d={x:i,dy:u},h={strides:s,pad:r,dataFormat:o,dimRoundingMode:a,filterShape:e};return G.runKernel(zw,d,h)}const _1=X({conv2DBackpropFilter_:yU});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T1(n,t,e){if(e==null||e==="linear")return n;if(e==="relu")return W(n,zp(t));throw new Error(`Cannot compute gradient for fused activation ${e}.`)}function E1(n,t){let e=t;const s=kn(n.shape,t.shape);return s.length>0&&(e=Rt(e,s)),K(e,n.shape)}function A1(n,t,e,s){if(t==="linear")return n;if(t==="relu")return eu(n);if(t==="elu")return Qg(n);if(t==="relu6")return pC(n);if(t==="prelu")return $1(n,e);if(t==="leakyrelu")return b1(n,s);if(t==="sigmoid")return Pc(n);throw new Error(`Unknown fused activation ${t}.`)}const D1=(n,t)=>!(n>0)||t==="linear";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bU({x:n,filter:t,strides:e,pad:s,dataFormat:r="NHWC",dilations:o=[1,1],dimRoundingMode:a,bias:i,activation:u="linear",preluActivationWeights:c,leakyreluAlpha:l}){if(u=u||"linear",D1(G.state.gradientDepth,u)===!1){T(r==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${r} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let k=Ti(n,t,e,s,r,o,a);return i!=null&&(k=ht(k,i)),A1(k,u,c,l)}const d=M(n,"x","conv2d","float32"),h=M(t,"filter","conv2d","float32");let p=d,f=!1;d.rank===3&&(f=!0,p=K(d,[1,d.shape[0],d.shape[1],d.shape[2]])),T(p.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`),T(h.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${h.rank}.`),Ss("fused conv2d",s,a);const m=r==="NHWC"?p.shape[3]:p.shape[1];T(h.shape[2]===m,()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${h.shape[2]}.`),T(Mn(e,o),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${o}'`);const g=Ze(p.shape,h.shape,e,o,s,a);let y;i!=null&&(y=M(i,"bias","fused conv2d"),[y]=sn(y,d),r==="NHWC"?Ut(g.outShape,y.shape):(T(y.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${y.shape.length}.`),T(y.shape.length===0||y.shape[0]===g.outChannels||y.shape[0]===1,()=>`Error in fused conv2d: bias shape (${y.shape}) is not compatible with the number of output channels (${g.outChannels})`)));let b;if(c!=null){const k=c.shape;if(T(k.length<=1||k.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${k.length}.`),k.length===1)T(k[0]===1||k[0]===g.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${k}) is not compatible with the number of output channels (${g.outChannels}).`);else if(k.length===3)try{Ut(k,g.outShape)}catch{const _=`Error in fused conv2d: PReLU activation weights (${k}) is not compatible with the output shape of the conv2d (${g.outShape}).`;throw Error(_)}b=M(c,"prelu weights","fused conv2d")}const x=(k,S)=>{T(r==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${r} but only NHWC is currently supported.`);const[_,C,N,$]=S,A=T1(k,N,u);T(Ci(o),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${o}'`);const D=h1(C.shape,A,_,e,s),R=_1(C,A,_.shape,e,s),F=[D,R];if($!=null){const z=E1($,A);F.push(z)}return F},w={x:p,filter:h,bias:y,preluActivationWeights:b},v={strides:e,pad:s,dataFormat:r,dilations:o,dimRoundingMode:a,activation:u,leakyreluAlpha:l};return i==null?nl((S,_,C)=>{let N=G.runKernel(Qu,w,v);return C([_,S,N]),f&&(N=K(N,[N.shape[1],N.shape[2],N.shape[3]])),{value:N,gradFunc:x}})(p,h):nl((S,_,C,N)=>{let $=G.runKernel(Qu,w,v);return N([_,S,$,C]),f&&($=K($,[$.shape[1],$.shape[2],$.shape[3]])),{value:$,gradFunc:x}})(p,h,y)}const xU=X({fusedConv2d_:bU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wU(n,t,e,s,r,o=[1,1],a){let i=n;n.rank===3&&(i=K(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let u=t;u.rank===3&&(u=K(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const c={x:i,dy:u},l={strides:s,pad:r,dimRoundingMode:a,dilations:o,filterShape:e};return G.runKernel(Vw,c,l)}const vU=X({depthwiseConv2dNativeBackpropFilter_:wU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IU(n,t,e,s,r,o=[1,1],a){let i=t,u=!1;t.rank===3&&(u=!0,i=K(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const c={dy:i,filter:e},l={strides:s,pad:r,dimRoundingMode:a,dilations:o,inputShape:n},d=G.runKernel(Ww,c,l);return u?K(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const kU=X({depthwiseConv2dNativeBackpropInput_:IU});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $U({a:n,b:t,transposeA:e=!1,transposeB:s=!1,bias:r,activation:o="linear",preluActivationWeights:a,leakyreluAlpha:i=.2}){if(D1(G.state.gradientDepth,o)===!1){let $=ge(n,t,e,s);return r!=null&&($=ht($,r)),A1($,o,a,i)}let u=M(n,"a","fused matMul"),c=M(t,"b","fused matMul");[u,c]=sn(u,c);const l=e?u.shape[u.rank-2]:u.shape[u.rank-1],d=s?c.shape[c.rank-1]:c.shape[c.rank-2],h=e?u.shape[u.rank-1]:u.shape[u.rank-2],p=s?c.shape[c.rank-2]:c.shape[c.rank-1],f=u.shape.slice(0,-2),m=c.shape.slice(0,-2),g=j(f),y=j(m);T(l===d,()=>`Error in fused matMul: inner shapes (${l}) and (${d}) of Tensors with shapes ${u.shape} and ${c.shape} and transposeA=${e} and transposeB=${s} must match.`);const x=Ut(u.shape.slice(0,-2),c.shape.slice(0,-2)).concat([h,p]),w=e?K(u,[g,l,h]):K(u,[g,h,l]),v=s?K(c,[y,p,d]):K(c,[y,d,p]);let k;r!=null&&(k=M(r,"bias","fused matMul"),[k]=sn(k,u),Ut(x,k.shape));let S;a!=null&&(S=M(a,"prelu weights","fused matMul"));const _=($,A)=>{const[D,R,F,z]=A,H=T1(K($,F.shape),F,o);let P,U;if(!e&&!s?(P=ge(H,R,!1,!0),U=ge(D,H,!0,!1)):!e&&s?(P=ge(H,R,!1,!1),U=ge(H,D,!0,!1)):e&&!s?(P=ge(R,H,!1,!0),U=ge(D,H,!1,!1)):(P=ge(R,H,!0,!0),U=ge(H,D,!0,!0)),r!=null){const Z=E1(z,H);return[P,U,Z]}else return[P,U]},C={a:w,b:v,bias:k,preluActivationWeights:S},N={transposeA:e,transposeB:s,activation:o,leakyreluAlpha:i};return r==null?nl((A,D,R)=>{const F=G.runKernel(Zu,C,N);return R([A,D,F]),{value:K(F,x),gradFunc:_}})(w,v):nl((A,D,R,F)=>{const z=G.runKernel(Zu,C,N);return F([A,D,z,R]),{value:K(z,x),gradFunc:_}})(w,v,k)}const sk=X({fusedMatMul_:$U});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SU(n,t,e,s,r="bilinear",o=0){const a=M(n,"image","cropAndResize"),i=M(t,"boxes","cropAndResize","float32"),u=M(e,"boxInd","cropAndResize","int32"),c=i.shape[0];T(a.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${a.rank}.`),T(i.rank===2&&i.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${c},4] but had shape ${i.shape}.`),T(u.rank===1&&u.shape[0]===c,()=>`Error in cropAndResize: boxInd must be have size [${c}] but had shape ${i.shape}.`),T(s.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`),T(s[0]>=1&&s[1]>=1,()=>`cropSize must be atleast [1,1], but was ${s}`),T(r==="bilinear"||r==="nearest",()=>`method must be bilinear or nearest, but was ${r}`);const l={image:a,boxes:i,boxInd:u},d={method:r,extrapolationValue:o,cropSize:s};return G.runKernel(ep,l,d)}const NU=X({cropAndResize_:SU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CU(n){const t=M(n,"image","flipLeftRight","float32");T(t.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);const e={image:t};return G.runKernel(ap,e,{})}const _U=X({flipLeftRight_:CU});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TU(n){const t=M(n,"image","grayscaleToRGB"),e=t.rank-1,s=t.shape[e];T(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),T(s===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${s}.`);const r=new Array(t.rank);return r.fill(1,0,e),r[e]=3,Tr(t,r)}const EU=X({grayscaleToRGB_:TU});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AU(n){const t=M(n,"image","RGBToGrayscale"),e=t.rank-1,s=t.shape[e];T(t.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${t.rank}.`),T(s===3,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${s}.`);const r=t.dtype,o=It(t,"float32"),a=Ds([.2989,.587,.114]);let i;switch(t.rank){case 2:i=od("ij,j->i",o,a);break;case 3:i=od("ijk,k->ij",o,a);break;case 4:i=od("ijkl,l->ijk",o,a);break;case 5:i=od("ijklm,m->ijkl",o,a);break;case 6:i=od("ijklmn,n->ijklm",o,a);break;default:throw new Error("Not a valid tensor rank.")}return i=ms(i,-1),It(i,r)}const DU=X({rgbToGrayscale_:AU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RU(n,t,e=0,s=.5){const r=M(n,"image","rotateWithOffset","float32");T(r.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`);const o={image:r},a={radians:t,fillValue:e,center:s};return G.runKernel(Op,o,a)}const FU=X({rotateWithOffset_:RU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bc(n,t,e,s,r,o){s==null&&(s=.5),r==null&&(r=Number.NEGATIVE_INFINITY),o==null&&(o=0);const a=n.shape[0];return e=Math.min(e,a),T(0<=s&&s<=1,()=>`iouThreshold must be in [0, 1], but was '${s}'`),T(n.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${n.rank}'`),T(n.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${n.shape[1]}`),T(t.rank===1,()=>"scores must be a 1D tensor"),T(t.shape[0]===a,()=>`scores has incompatible shape with boxes. Expected ${a}, but was ${t.shape[0]}`),T(0<=o&&o<=1,()=>`softNmsSigma must be in [0, 1], but was '${o}'`),{maxOutputSize:e,iouThreshold:s,scoreThreshold:r,softNmsSigma:o}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OU(n,t,e,s=.5,r=Number.NEGATIVE_INFINITY){const o=M(n,"boxes","nonMaxSuppression","float32"),a=M(t,"scores","nonMaxSuppression","float32"),i=Bc(o,a,e,s,r);e=i.maxOutputSize,s=i.iouThreshold,r=i.scoreThreshold;const u={maxOutputSize:e,iouThreshold:s,scoreThreshold:r};return G.runKernel(bp,{boxes:o,scores:a},u)}const PU=X({nonMaxSuppression_:OU});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LU(n,t,e){const s=MU(n,t,e),r=s<0?-(s+1):s;n.splice(r,0,t)}function MU(n,t,e){return zU(n,t,e||BU)}function BU(n,t){return n>t?1:n<t?-1:0}function zU(n,t,e){let s=0,r=n.length,o=0,a=!1;for(;s<r;){o=s+(r-s>>>1);const i=e(t,n[o]);i>0?s=o+1:(r=o,a=!i)}return a?s:-s-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R1(n,t,e,s,r){return P1(n,t,e,s,r,0)}function F1(n,t,e,s,r,o){return P1(n,t,e,s,r,0,!1,o,!0)}function O1(n,t,e,s,r,o){return P1(n,t,e,s,r,o,!0)}function P1(n,t,e,s,r,o,a=!1,i=!1,u=!1){const c=[];for(let g=0;g<t.length;g++)t[g]>r&&c.push({score:t[g],boxIndex:g,suppressBeginIndex:0});c.sort(rk);const l=o>0?-.5/o:0,d=[],h=[];for(;d.length<e&&c.length>0;){const g=c.pop(),{score:y,boxIndex:b,suppressBeginIndex:x}=g;if(y<r)break;let w=!1;for(let v=d.length-1;v>=x;--v){const k=VU(n,b,d[v]);if(k>=s){w=!0;break}if(g.score=g.score*WU(s,l,k),g.score<=r)break}g.suppressBeginIndex=d.length,w||(g.score===y?(d.push(b),h.push(g.score)):g.score>r&&LU(c,g,rk))}const p=d.length,f=e-p;i&&f>0&&(d.push(...new Array(f).fill(0)),h.push(...new Array(f).fill(0)));const m={selectedIndices:d};return a&&(m.selectedScores=h),u&&(m.validOutputs=p),m}function VU(n,t,e){const s=n.subarray(t*4,t*4+4),r=n.subarray(e*4,e*4+4),o=Math.min(s[0],s[2]),a=Math.min(s[1],s[3]),i=Math.max(s[0],s[2]),u=Math.max(s[1],s[3]),c=Math.min(r[0],r[2]),l=Math.min(r[1],r[3]),d=Math.max(r[0],r[2]),h=Math.max(r[1],r[3]),p=(i-o)*(u-a),f=(d-c)*(h-l);if(p<=0||f<=0)return 0;const m=Math.max(o,c),g=Math.max(a,l),y=Math.min(i,d),b=Math.min(u,h),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(p+f-x)}function WU(n,t,e){const s=Math.exp(t*e*e);return e<=n?s:0}function rk(n,t){return n.score-t.score||n.score===t.score&&t.boxIndex-n.boxIndex}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function UU(n,t,e,s=.5,r=Number.NEGATIVE_INFINITY){const o=M(n,"boxes","nonMaxSuppressionAsync"),a=M(t,"scores","nonMaxSuppressionAsync"),i=Bc(o,a,e,s,r);e=i.maxOutputSize,s=i.iouThreshold,r=i.scoreThreshold;const u=await Promise.all([o.data(),a.data()]),c=u[0],l=u[1],{selectedIndices:d}=R1(c,l,e,s,r);return o!==n&&o.dispose(),a!==t&&a.dispose(),Ds(d,"int32")}const GU=UU;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HU(n,t,e,s=.5,r=Number.NEGATIVE_INFINITY,o=0){const a=M(n,"boxes","nonMaxSuppression"),i=M(t,"scores","nonMaxSuppression"),u=Bc(a,i,e,s,r,o);e=u.maxOutputSize,s=u.iouThreshold,r=u.scoreThreshold,o=u.softNmsSigma;const c={boxes:a,scores:i},l={maxOutputSize:e,iouThreshold:s,scoreThreshold:r,softNmsSigma:o},d=G.runKernel(wp,c,l);return{selectedIndices:d[0],selectedScores:d[1]}}const jU=X({nonMaxSuppressionWithScore_:HU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function qU(n,t,e,s=.5,r=Number.NEGATIVE_INFINITY,o=0){const a=M(n,"boxes","nonMaxSuppressionAsync"),i=M(t,"scores","nonMaxSuppressionAsync"),u=Bc(a,i,e,s,r,o);e=u.maxOutputSize,s=u.iouThreshold,r=u.scoreThreshold,o=u.softNmsSigma;const c=await Promise.all([a.data(),i.data()]),l=c[0],d=c[1],{selectedIndices:h,selectedScores:p}=O1(l,d,e,s,r,o);return a!==n&&a.dispose(),i!==t&&i.dispose(),{selectedIndices:Ds(h,"int32"),selectedScores:Ds(p)}}const KU=qU;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XU(n,t,e,s=.5,r=Number.NEGATIVE_INFINITY,o=!1){const a=M(n,"boxes","nonMaxSuppression"),i=M(t,"scores","nonMaxSuppression"),u=Bc(a,i,e,s,r,null),c=u.maxOutputSize,l=u.iouThreshold,d=u.scoreThreshold,h={boxes:a,scores:i},p={maxOutputSize:c,iouThreshold:l,scoreThreshold:d,padToMaxOutputSize:o},f=G.runKernel(xp,h,p);return{selectedIndices:f[0],validOutputs:f[1]}}const YU=X({nonMaxSuppressionPadded_:XU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function JU(n,t,e,s=.5,r=Number.NEGATIVE_INFINITY,o=!1){const a=M(n,"boxes","nonMaxSuppressionAsync"),i=M(t,"scores","nonMaxSuppressionAsync"),u=Bc(a,i,e,s,r,null),c=u.maxOutputSize,l=u.iouThreshold,d=u.scoreThreshold,[h,p]=await Promise.all([a.data(),i.data()]),{selectedIndices:f,validOutputs:m}=F1(h,p,c,l,d,o);return a!==n&&a.dispose(),i!==t&&i.dispose(),{selectedIndices:Ds(f,"int32"),validOutputs:xe(m,"int32")}}const ZU=JU;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QU(n,t,e=!1,s=!1){const r=M(n,"images","resizeBilinear");T(r.rank===3||r.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`),T(t.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),T(s===!1||e===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let o=r,a=!1;r.rank===3&&(a=!0,o=K(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const i={images:o},u={alignCorners:e,halfPixelCenters:s,size:t},c=G.runKernel(yc,i,u);return a?K(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const NC=X({resizeBilinear_:QU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tG(n,t,e=!1,s=!1){const r=M(n,"images","resizeNearestNeighbor");T(r.rank===3||r.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`),T(t.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),T(r.dtype==="float32"||r.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),T(s===!1||e===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let o=r,a=!1;r.rank===3&&(a=!0,o=K(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const i={images:o},u={alignCorners:e,halfPixelCenters:s,size:t},c=G.runKernel(gc,i,u);return a?K(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const CC=X({resizeNearestNeighbor_:tG});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eG(n,t="binary",e=!1,s=.5){const r=M(n,"image","threshold"),o=.2989,a=.587,i=.114,u=r.shape[0]*r.shape[1];let c=W(Ds([s]),255),l,d,h,p;if(T(r.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${r.rank}.`),T(r.shape[2]===3||r.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${r.shape[2]}.`),T(r.dtype==="int32"||r.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${r.dtype}.`),T(t==="otsu"||t==="binary",()=>`Method must be binary or otsu, but was ${t}`),r.shape[2]===3){[l,d,h]=Ks(r,[1,1,1],-1);const g=W(l,o),y=W(d,a),b=W(h,i);p=ht(ht(g,y),b)}else p=n;if(t==="otsu"){const g=Qz(It(fC(p),"int32"),a1([]),256);c=nG(g,u)}const f=e?Lc(p,c):Zs(p,c);return It(W(f,255),"int32")}function nG(n,t){let e=Ds([-1]),s=Ds([0]),r=Ds([0]),o,a,i,u,c,l;for(let d=0;d<n.size-1;d++){o=Pe(n,0,d+1),a=Pe(n,d+1),c=Ft(Rt(o),t),l=Ft(Rt(a),t);const h=Rt(W(o,zd(0,o.size)));i=Ft(h,Rt(o));const p=Zg(a.shape,o.size),f=ht(zd(0,a.size),p),m=W(a,f);u=Ft(Rt(m),Rt(a));const g=Mt(i,u),y=Mt(i,u),b=W(c,l);r=W(W(b,g),y);const x=Zs(r,s);s=is(x,r,s),e=is(x,Ds([d]),e)}return e}const sG=X({threshold_:eG});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rG(n,t,e="nearest",s="constant",r=0,o){const a=M(n,"image","transform","float32"),i=M(t,"transforms","transform","float32");T(a.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${a.rank}.`),T(i.rank===2&&(i.shape[0]===a.shape[0]||i.shape[0]===1)&&i.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),T(o==null||o.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${o}.`);const u={image:a,transforms:i},c={interpolation:e,fillMode:s,fillValue:r,outputShape:o};return G.runKernel(Dp,u,c)}const oG=X({transform_:rG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aG(n,t,e){const s=M(n,"a","bandPart");T(s.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`);const r=s.shape,[o,a]=s.shape.slice(-2);let i,u;typeof t=="number"?(T(t%1===0,()=>`bandPart(): numLower must be an integer, got ${t}.`),T(t<=o,()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${o}).`),i=M(t<0?o:t,"numLower","bandPart")):(T(t.dtype==="int32",()=>"bandPart(): numLower's dtype must be an int32."),i=is(cm(t,0),o,Bd(t,o))),typeof e=="number"?(T(e%1===0,()=>`bandPart(): numUpper must be an integer, got ${e}.`),T(e<=a,()=>`bandPart(): numUpper (${e}) must not be greater than the number of columns (${a}).`),u=M(e<0?a:e,"numUpper","bandPart")):(T(e.dtype==="int32",()=>"bandPart(): numUpper's dtype must be an int32."),u=is(cm(e,0),a,Bd(e,a)));const c=K(zd(0,o,1,"int32"),[-1,1]),l=zd(0,a,1,"int32"),d=Mt(c,l),h=Ho(Lc(d,i),tu(d,en(u))),p=Cn([o,a],s.dtype);return K(jo(Di(K(s,[-1,o,a])).map(f=>is(h,f,p))),r)}const iG=X({bandPart_:aG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uG(n){let t;if(Array.isArray(n)){t=!1,T(n!=null&&n.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const r=n[0].shape[0];for(let o=1;o<n.length;++o)T(n[o].shape[0]===r,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${n[o].shape[0]} vs. ${r})`)}else t=!0,n=Ks(n,n.shape[0],0).map(r=>Bp(r,[0]));T(n.length<=n[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${n.length}) exceeds number of dimensions (${n[0].shape[0]}).`);const e=[],s=n;for(let r=0;r<n.length;++r)e.push(G.tidy(()=>{let o=s[r];if(r>0)for(let a=0;a<r;++a){const i=W(Rt(W(e[a],o)),e[a]);o=Mt(o,i)}return Ft(o,ty(o,"euclidean"))}));return t?jo(e,0):e}const lG=X({gramSchmidt_:uG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cG(n,t=!1){if(T(n.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${n.rank}`),n.rank===2)return ok(n,t);{const e=n.shape.slice(0,n.shape.length-2).reduce((u,c)=>u*c),s=Di(K(n,[e,n.shape[n.shape.length-2],n.shape[n.shape.length-1]]),0),r=[],o=[];s.forEach(u=>{const[c,l]=ok(u,t);r.push(c),o.push(l)});const a=K(jo(r,0),n.shape),i=K(jo(o,0),n.shape);return[a,i]}}function ok(n,t=!1){return G.tidy(()=>{T(n.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${n.shape.length}D Tensor.`);const e=n.shape[0],s=n.shape[1];let r=aC(e),o=bi(n);const a=Vf([[1]],[1,1]);let i=bi(a);const u=e>=s?s:e;for(let c=0;c<u;++c){const l=o,d=i,h=r;[i,o,r]=G.tidy(()=>{const p=Pe(o,[c,c],[e-c,1]),f=ty(p),m=Pe(o,[c,c],[1,1]),g=is(Zs(m,0),Vf([[-1]]),Vf([[1]])),y=Mt(m,W(g,f)),b=Ft(p,y);b.shape[0]===1?i=bi(a):i=vs([a,Pe(b,[1,0],[b.shape[0]-1,b.shape[1]])],0);const x=en(Ft(ge(g,y),f)),w=Pe(o,[c,0],[e-c,s]),v=W(x,i),k=oe(i);if(c===0)o=Mt(w,ge(v,ge(k,w)));else{const C=Mt(w,ge(v,ge(k,w)));o=vs([Pe(o,[0,0],[c,s]),C],0)}const S=oe(v),_=Pe(r,[0,c],[e,r.shape[1]-c]);if(c===0)r=Mt(_,ge(ge(_,i),S));else{const C=Mt(_,ge(ge(_,i),S));r=vs([Pe(r,[0,0],[e,c]),C],1)}return[i,o,r]}),te([l,d,h])}return!t&&e>s&&(r=Pe(r,[0,0],[e,s]),o=Pe(o,[0,0],[s,s])),[r,o]})}const dG=X({qr_:cG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Po={flipLeftRight:_U,grayscaleToRGB:EU,resizeNearestNeighbor:CC,resizeBilinear:NC,rgbToGrayscale:DU,rotateWithOffset:FU,cropAndResize:NU,nonMaxSuppression:PU,nonMaxSuppressionAsync:GU,nonMaxSuppressionWithScore:jU,nonMaxSuppressionWithScoreAsync:KU,nonMaxSuppressionPadded:YU,nonMaxSuppressionPaddedAsync:ZU,threshold:sG,transform:oG},hG={bandPart:iG,gramSchmidt:lG,qr:dG};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pG=new Map,fG=new Map;class zc{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}}class lr{constructor(){this.classNameMap={}}static getMap(){return lr.instance==null&&(lr.instance=new lr),lr.instance}static register(t){lr.getMap().classNameMap[t.className]=[t,t.fromConfig]}}function ut(n,t,e){T(n.className!=null,()=>"Class being registered does not have the static className property defined."),T(typeof n.className=="string",()=>"className is required to be a string, but got type "+typeof n.className),T(n.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),typeof t>"u"&&(t="Custom"),typeof e>"u"&&(e=n.className);const s=e,r=t+">"+s;return lr.register(n),pG.set(r,n),fG.set(n,r),n}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ha extends zc{minimize(t,e=!1,s){const{value:r,grads:o}=this.computeGradients(t,s);if(s!=null){const a=s.map(i=>({name:i.name,tensor:o[i.name]}));this.applyGradients(a)}else this.applyGradients(o);return te(o),e?r:(r.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,e){return wW(t,e)}dispose(){this.iterations_!=null&&te(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:xe(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(t){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(t){return this.iterations_=(await t[0].tensor.data())[0],t.slice(1)}}Object.defineProperty(Ha,Symbol.hasInstance,{value:n=>n.minimize!=null&&n.computeGradients!=null&&n.applyGradients!=null});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _C extends Ha{static get className(){return"Adadelta"}constructor(t,e,s=null){super(),this.learningRate=t,this.rho=e,this.epsilon=s,this.accumulatedGrads=[],this.accumulatedUpdates=[],s==null&&(this.epsilon=G.backend.epsilon())}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,r)=>{const o=G.registeredVariables[s],a=!1;this.accumulatedGrads[r]==null&&(this.accumulatedGrads[r]={originalName:`${s}/accum_grad`,variable:Q(()=>ae(o).variable(a))}),this.accumulatedUpdates[r]==null&&(this.accumulatedUpdates[r]={originalName:`${s}/accum_var`,variable:Q(()=>ae(o).variable(a))});const i=Array.isArray(t)?t[r].tensor:t[s];if(i==null)return;const u=this.accumulatedGrads[r].variable,c=this.accumulatedUpdates[r].variable;Q(()=>{const l=ht(W(u,this.rho),W(Ue(i),1-this.rho)),d=W(Ft(Kn(ht(c,this.epsilon)),Kn(ht(u,this.epsilon))),i),h=ht(W(c,this.rho),W(Ue(d),1-this.rho));u.assign(l),c.assign(h);const p=ht(W(d,-this.learningRate),o);o.assign(p)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(te(this.accumulatedGrads.map(t=>t.variable)),te(this.accumulatedUpdates.map(t=>t.variable)))}async getWeights(){const t=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=t.length/2,s=!1;this.accumulatedGrads=t.slice(0,e).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedUpdates=t.slice(e,e*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.rho,e.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TC extends Ha{static get className(){return"Adagrad"}constructor(t,e=.1){super(),this.learningRate=t,this.initialAccumulatorValue=e,this.accumulatedGrads=[]}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,r)=>{const o=G.registeredVariables[s];this.accumulatedGrads[r]==null&&(this.accumulatedGrads[r]={originalName:`${s}/accumulator`,variable:Q(()=>Zg(o.shape,this.initialAccumulatorValue).variable(!1))});const a=Array.isArray(t)?t[r].tensor:t[s];if(a==null)return;const i=this.accumulatedGrads[r].variable;Q(()=>{const u=ht(i,Ue(a));i.assign(u);const c=ht(W(Ft(a,Kn(ht(u,G.backend.epsilon()))),-this.learningRate),o);o.assign(c)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&te(this.accumulatedGrads.map(t=>t.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=!1;this.accumulatedGrads=t.map(s=>({originalName:s.name,variable:s.tensor.variable(e)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,e){return new t(e.learningRate,e.initialAccumulatorValue)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class EC extends Ha{static get className(){return"Adam"}constructor(t,e,s,r=null){super(),this.learningRate=t,this.beta1=e,this.beta2=s,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Q(()=>{this.accBeta1=xe(e).variable(),this.accBeta2=xe(s).variable()}),r==null&&(this.epsilon=G.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(s=>s.name):Object.keys(t);Q(()=>{const s=Mt(1,this.accBeta1),r=Mt(1,this.accBeta2);e.forEach((o,a)=>{const i=G.registeredVariables[o],u=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${o}/m`,variable:Q(()=>ae(i).variable(u))}),this.accumulatedSecondMoment[a]==null&&(this.accumulatedSecondMoment[a]={originalName:`${o}/v`,variable:Q(()=>ae(i).variable(u))});const c=Array.isArray(t)?t[a].tensor:t[o];if(c==null)return;const l=this.accumulatedFirstMoment[a].variable,d=this.accumulatedSecondMoment[a].variable,h=ht(W(l,this.beta1),W(c,1-this.beta1)),p=ht(W(d,this.beta2),W(Ue(c),1-this.beta2)),f=Ft(h,s),m=Ft(p,r);l.assign(h),d.assign(p);const g=ht(W(Ft(f,ht(Kn(m),this.epsilon)),-this.learningRate),i);i.assign(g)}),this.accBeta1.assign(W(this.accBeta1,this.beta1)),this.accBeta2.assign(W(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&te(this.accumulatedFirstMoment.map(t=>t.variable)),this.accumulatedSecondMoment!=null&&te(this.accumulatedSecondMoment.map(t=>t.variable))}async getWeights(){const t=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(t){t=await this.extractIterations(t),Q(()=>{this.accBeta1.assign(Ei(this.beta1,this.iterations_+1)),this.accBeta2.assign(Ei(this.beta2,this.iterations_+1))});const e=t.length/2,s=!1;this.accumulatedFirstMoment=t.slice(0,e).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedSecondMoment=t.slice(e,e*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AC extends Ha{static get className(){return"Adamax"}constructor(t,e,s,r=null,o=0){super(),this.learningRate=t,this.beta1=e,this.beta2=s,this.epsilon=r,this.decay=o,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Q(()=>{this.iteration=xe(0).variable(),this.accBeta1=xe(e).variable()}),r==null&&(this.epsilon=G.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(s=>s.name):Object.keys(t);Q(()=>{const s=Mt(1,this.accBeta1),r=Ft(-this.learningRate,ht(W(this.iteration,this.decay),1));e.forEach((o,a)=>{const i=G.registeredVariables[o],u=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${o}/m`,variable:ae(i).variable(u)}),this.accumulatedWeightedInfNorm[a]==null&&(this.accumulatedWeightedInfNorm[a]={originalName:`${o}/v`,variable:ae(i).variable(u)});const c=Array.isArray(t)?t[a].tensor:t[o];if(c==null)return;const l=this.accumulatedFirstMoment[a].variable,d=this.accumulatedWeightedInfNorm[a].variable,h=ht(W(l,this.beta1),W(c,1-this.beta1)),p=W(d,this.beta2),f=es(c),m=Ua(p,f);l.assign(h),d.assign(m);const g=ht(W(Ft(r,s),Ft(h,ht(m,this.epsilon))),i);i.assign(g)}),this.iteration.assign(ht(this.iteration,1)),this.accBeta1.assign(W(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&te(this.accumulatedFirstMoment.map(t=>t.variable)),this.accumulatedWeightedInfNorm!=null&&te(this.accumulatedWeightedInfNorm.map(t=>t.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class L1 extends Ha{static get className(){return"SGD"}constructor(t){super(),this.learningRate=t,this.setLearningRate(t)}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,r)=>{const o=Array.isArray(t)?t[r].tensor:t[s];if(o==null)return;const a=G.registeredVariables[s];Q(()=>{const i=ht(W(this.c,o),a);a.assign(i)})}),this.incrementIterations()}setLearningRate(t){this.learningRate=t,this.c!=null&&this.c.dispose(),this.c=oo(xe(-t))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(t){if(t=await this.extractIterations(t),t.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,e){return new t(e.learningRate)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DC extends L1{static get className(){return"Momentum"}constructor(t,e,s=!1){super(t),this.learningRate=t,this.momentum=e,this.useNesterov=s,this.accumulations=[],this.m=xe(this.momentum)}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,r)=>{const o=G.registeredVariables[s];this.accumulations[r]==null&&(this.accumulations[r]={originalName:`${s}/momentum`,variable:Q(()=>ae(o).variable(!1))});const a=this.accumulations[r].variable,i=Array.isArray(t)?t[r].tensor:t[s];i!=null&&Q(()=>{let u;const c=ht(W(this.m,a),i);this.useNesterov?u=ht(W(this.c,ht(i,W(c,this.m))),o):u=ht(W(this.c,c),o),a.assign(c),o.assign(u)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&te(this.accumulations.map(t=>t.variable))}setMomentum(t){this.momentum=t}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=!1;this.accumulations=t.map(s=>({originalName:s.name,variable:s.tensor.variable(e)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class RC extends Ha{static get className(){return"RMSProp"}constructor(t,e=.9,s=0,r=null,o=!1){if(super(),this.learningRate=t,this.decay=e,this.momentum=s,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=o,r==null&&(this.epsilon=G.backend.epsilon()),t==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,r)=>{const o=G.registeredVariables[s],a=!1;this.accumulatedMeanSquares[r]==null&&(this.accumulatedMeanSquares[r]={originalName:`${s}/rms`,variable:Q(()=>ae(o).variable(a))}),this.accumulatedMoments[r]==null&&(this.accumulatedMoments[r]={originalName:`${s}/momentum`,variable:Q(()=>ae(o).variable(a))}),this.accumulatedMeanGrads[r]==null&&this.centered&&(this.accumulatedMeanGrads[r]={originalName:`${s}/mg`,variable:Q(()=>ae(o).variable(a))});const i=Array.isArray(t)?t[r].tensor:t[s];if(i==null)return;const u=this.accumulatedMeanSquares[r].variable,c=this.accumulatedMoments[r].variable;Q(()=>{const l=ht(W(u,this.decay),W(Ue(i),1-this.decay));if(this.centered){const d=this.accumulatedMeanGrads[r].variable,h=ht(W(d,this.decay),W(i,1-this.decay)),p=Ft(W(i,this.learningRate),Kn(Mt(l,ht(Ue(h),this.epsilon)))),f=ht(W(c,this.momentum),p);u.assign(l),d.assign(h),c.assign(f);const m=Mt(o,f);o.assign(m)}else{const d=ht(W(u,this.decay),W(Ue(i),1-this.decay)),h=ht(W(c,this.momentum),Ft(W(i,this.learningRate),Kn(ht(d,this.epsilon))));u.assign(d),c.assign(h);const p=Mt(o,h);o.assign(p)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&te(this.accumulatedMeanSquares.map(t=>t.variable)),this.accumulatedMeanGrads!=null&&this.centered&&te(this.accumulatedMeanGrads.map(t=>t.variable)),this.accumulatedMoments!=null&&te(this.accumulatedMoments.map(t=>t.variable))}async getWeights(){const t=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&t.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=this.centered?t.length/3:t.length/2,s=!1;this.accumulatedMeanSquares=t.slice(0,e).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedMoments=t.slice(e,e*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.centered&&(this.accumulatedMeanGrads=t.slice(e*2,e*3).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mG=[_C,TC,EC,AC,DC,RC,L1];function gG(){for(const n of mG)ut(n)}function ny(n,t){const e=n.shape.length,s=t.shape.length;if(e<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${e}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if(t.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[s-1]>e)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[s-1]} vs. ${e}`);if(j(n.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${n.shape}.`);const r=t.shape,o=r[r.length-1];let a=1;for(let d=0;d<r.length-1;++d)a*=r[d];const i=n.shape,u=r.slice();u.pop();let c=1;for(let d=o;d<e;++d)c*=i[d],u.push(i[d]);const l=[...St(n.shape).map(d=>d/c),1].slice(0,o);return[u,a,c,l]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dx=-2,yG=-1;function M1(n,t,e){const s=n.shape.length;T(s===t.length,()=>`Error in slice${s}D: Length of begin ${t} must match the rank of the array (${s}).`),T(s===e.length,()=>`Error in slice${s}D: Length of size ${e} must match the rank of the array (${s}).`);for(let r=0;r<s;++r)T(t[r]+e[r]<=n.shape[r],()=>`Error in slice${s}D: begin[${r}] + size[${r}] (${t[r]+e[r]}) would overflow input.shape[${r}] (${n.shape[r]})`)}function bG(n){const t=[];let e=0;for(;n>0;)n&1&&t.push(e),n/=2,e++;return t}function sy(n,t,e){const s=[];for(let r=0;r<n.length;r++)s[r]=Math.ceil((t[r]-n[r])/e[r]);return s}function FC(n,t,e,s){const r=[...n];for(let o=r.length;o<s.length;o++)r.push(1);for(let o=0;o<e;o++)o===0?r[t]=1:(r.splice(t,0,1),r.pop());return r}function OC(n,t,e){return e<=n?e:e-(t-1)}function PC(n,t){const e=[];for(let s=0;s<n;s++)e.push(t+s);return e}function xG(n,t,e,s,r,o,a,i,u){const c=n.length;let l=new Array(c),d=new Array(c),h=new Array(c);if(t.length&&e>0){const p=t[0],f=e+1;l=LC(a,p,f,s,n),d=MC(i,p,f,r,n),h=FC(o,p,f,n)}else for(let p=0;p<c;p++)l[p]=zC(a,s,o,n,p,u),d[p]=VC(i,r,o,n,p,u),h[p]=BC(o,p,u);return{begin:l,end:d,strides:h}}function LC(n,t,e,s,r){const o=[...r],a=PC(e,t);for(let i=0;i<o.length;i++)if(a.indexOf(i)>-1)o[i]=0;else{const u=OC(t,e,i);let c=s[u];n&1<<u&&(c=0),o[i]=c}return o}function MC(n,t,e,s,r){const o=[...r],a=PC(e,t);for(let i=0;i<o.length;i++)if(a.indexOf(i)>-1)o[i]=Number.MAX_SAFE_INTEGER;else{const u=OC(t,e,i);let c=s[u];n&1<<u&&(c=Number.MAX_SAFE_INTEGER),o[i]=c}for(let i=0;i<o.length;i++){const u=r[i];o[i]<0&&(o[i]+=u),o[i]=ki(0,o[i],r[i])}return o}function BC(n,t,e){let s=n[t];return(e&1<<t||s==null)&&(s=1),s}function zC(n,t,e,s,r,o){let a=t[r];const i=e[r]||1;(n&1<<r||o&1<<r||a==null)&&(i>0?a=Number.MIN_SAFE_INTEGER:a=Number.MAX_SAFE_INTEGER);const u=s[r];return a<0&&(a+=u),a=ki(0,a,u-1),a}function VC(n,t,e,s,r,o){let a=t[r];const i=e[r]||1;(n&1<<r||o&1<<r||a==null)&&(i>0?a=Number.MAX_SAFE_INTEGER:a=Number.MIN_SAFE_INTEGER);const u=s[r];return a<0&&(a+=u),i>0?a=ki(0,a,u):a=ki(-1,a,u-1),a}function ry(n,t,e){let s=e.length;for(let r=0;r<e.length;r++)if(e[r]>1){s=r;break}for(let r=s+1;r<e.length;r++)if(t[r]>0||e[r]!==n[r])return!1;return!0}function oy(n,t){let e=n.length>0?n[n.length-1]:1;for(let s=0;s<n.length-1;s++)e+=n[s]*t[s];return e}function Vp(n,t,e){let s;const r=n.shape.length;typeof t=="number"?s=[t,...new Array(r-1).fill(0)]:t.length<r?s=t.concat(new Array(r-t.length).fill(0)):s=t.slice(),s.forEach(a=>{T(a!==-1,()=>"slice() does not support negative begin indexing.")});let o;return e==null?o=new Array(r).fill(-1):typeof e=="number"?o=[e,...new Array(r-1).fill(-1)]:e.length<r?o=e.concat(new Array(r-e.length).fill(-1)):o=e,o=o.map((a,i)=>a>=0?a:(T(a===-1,()=>`Negative size values should be exactly -1 but got ${a} for the slice() size at index ${i}.`),n.shape[i]-s[i])),[s,o]}function ay(n,t,e,s,r,o,a,i,u){let c;if(s==null?(c=new Array(t.length),c.fill(1)):c=s,a!=null&&(a&a-1)!==0)throw new Error("Multiple ellipses in slice is not allowed.");let l=!1;const d={dims:c.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:e.slice(),strides:c.slice(),beginMask:r,endMask:o,ellipsisMask:a,newAxisMask:i,shrinkAxisMask:u};for(let x=0;x<d.dims;x++)l&&(1<<x&i)!==0&&d.numAddAxisAfterEllipsis++,1<<x&a&&(l=!0);l||(d.ellipsisMask|=1<<d.dims,d.dims++);const h={dims:n.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};wG(d,h);let p=!0,f=!0,m=!0;const g=[],y=[];for(let x=0;x<n.length;++x){if(h.strides[x]===0)throw Error(`strides[${x}] must be non-zero`);const w=!!(h.shrinkAxisMask&1<<x),v=n[x];if(v===-1){g.push(w?1:-1);continue}const k=[h.beginMask&1<<x,h.endMask&1<<x],S=[h.strides[x]>0?0:-1,h.strides[x]>0?v:v-1];if(w&&h.strides[x]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&h.strides[x]===1;const _=!!(h.beginMask&1<<x&&h.endMask&1<<x);if(h.beginValid&&h.endValid){if(w){const A=h.begin[x]<0?v+h.begin[x]:h.begin[x];if(h.begin[x]=A,h.end[x]=h.begin[x]+1,A<0||A>=v)throw Error(`slice index ${h.begin[x]} of dimension ${x} out of bounds.`)}else h.begin[x]=ak(h.begin[x],0,h.strides[x],v,k,S),h.end[x]=ak(h.end[x],1,h.strides[x],v,k,S);const $=h.strides[x]===1&&h.begin[x]===0&&h.end[x]===v;p=p&&$,f=f&&(x===0&&h.strides[x]===1||$)}else p=p&&h.strides[x]===1&&_,f=f&&(x===0&&h.strides[x]===1||_);let C,N=!1;if(h.beginValid&&h.endValid?(C=h.end[x]-h.begin[x],N=!0):w?(C=1,N=!0):_&&v>=0&&(h.strides[x]<0?C=-v:C=v,N=!0),N){let $;C===0||C<0!=h.strides[x]<0?$=0:$=Math.trunc(C/h.strides[x])+(C%h.strides[x]!==0?1:0),g.push($)}else g.push(-1)}for(let x=0;x<h.finalShapeGatherIndices.length;++x){const w=h.finalShapeGatherIndices[x];w>=0?y.push(g[w]):w===dx&&y.push(1)}return{finalShapeSparse:y.filter((x,w)=>h.finalShapeGatherIndices[w]!==dx),finalShape:y,isIdentity:p,sliceDim0:f,isSimpleSlice:m,begin:h.begin,end:h.end,strides:h.strides}}function wG(n,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let e=0;t.beginValid=n.begin!=null,t.endValid=n.end!=null,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let s=0;s<n.dims;s++)if(1<<s&n.ellipsisMask){const r=Math.min(t.dims-(n.dims-s)+1+n.numAddAxisAfterEllipsis,t.dims);for(;e<r;e++)t.begin[e]=0,t.end[e]=0,t.strides[e]=1,t.beginMask|=1<<e,t.endMask|=1<<e,t.finalShapeGatherIndices.push(e),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[e]=s}else if(1<<s&n.newAxisMask)t.finalShapeGatherIndices.push(dx),t.finalShapeGatherIndicesSparse.push(-1);else{if(e===t.begin.length)throw Error(`Index out of range using input dim ${e}; input has only ${t.dims} dims, ${t.begin.length}.`);n.begin!=null&&(t.begin[e]=n.begin[s]),n.end!=null&&(t.end[e]=n.end[s]),t.strides[e]=n.strides[s],n.beginMask&1<<s&&(t.beginMask|=1<<e),n.endMask&1<<s&&(t.endMask|=1<<e),n.shrinkAxisMask&1<<s?(t.finalShapeGatherIndices.push(yG),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<e):(t.finalShapeGatherIndices.push(e),t.finalShapeGatherIndicesSparse.push(s)),t.inputShapeGatherIndicesSparse[e]=s,e++}}function ak(n,t,e,s,r,o){if(r[t])return e>0?o[t]:o[t+1&1];{const a=n<0?s+n:n;return a<o[0]?o[0]:a>o[1]?o[1]:a}}const vG=Object.freeze(Object.defineProperty({__proto__:null,assertParamsValid:M1,computeFlatOffset:oy,computeOutShape:sy,getNormalizedAxes:xG,isSliceContinous:ry,maskToAxes:bG,parseSliceParams:Vp,sliceInfo:ay,startForAxis:zC,startIndicesWithElidedDims:LC,stopForAxis:VC,stopIndicesWithElidedDims:MC,stridesForAxis:BC,stridesWithElidedDims:FC},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class IG{static sgd(t){return new L1(t)}static momentum(t,e,s=!1){return new DC(t,e,s)}static rmsprop(t,e=.9,s=0,r=null,o=!1){return new RC(t,e,s,r,o)}static adam(t=.001,e=.9,s=.999,r=null){return new EC(t,e,s,r)}static adadelta(t=.001,e=.95,s=null){return new _C(t,e,s)}static adamax(t=.002,e=.9,s=.999,r=null,o=0){return new AC(t,e,s,r,o)}static adagrad(t,e=.1){return new TC(t,e)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wu=IG;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kG=typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:n=>n();function WC(){return new Promise(n=>kG(()=>n()))}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iy(n,t){const e=n[0].length;n.forEach((r,o)=>{T(r.length===e,()=>`Error in concat${e}D: rank of tensors[${o}] must be the same as the rank of the rest (${e})`)}),T(t>=0&&t<e,()=>`Error in concat${e}D: axis must be between 0 and ${e-1}.`);const s=n[0];n.forEach((r,o)=>{for(let a=0;a<e;a++)T(a===t||r[a]===s[a],()=>`Error in concat${e}D: Shape of tensors[${o}] (${r}) does not match the shape of the rest (${s}) along the non-concatenated axis ${o}.`)})}function Xs(n,t){const e=n[0].slice();for(let s=1;s<n.length;s++)e[t]+=n[s][t];return e}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Nr;(function(n){n[n.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",n[n.VALUE_ROWIDS=1]="VALUE_ROWIDS",n[n.ROW_LENGTHS=2]="ROW_LENGTHS",n[n.ROW_SPLITS=3]="ROW_SPLITS",n[n.ROW_LIMITS=4]="ROW_LIMITS",n[n.ROW_STARTS=5]="ROW_STARTS"})(Nr||(Nr={}));function UC(n,t,e){let s=new Array;if(e==null&&t==null)return s;if(t==null)for(;s.length<n+e.length;)s.push(-1);else s=t.slice();if(e==null)return s;if(n+e.length!==s.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${n+e.length}, but shape.rank = ${s.length}`);for(let r=1;r<e.length;++r){const o=e[r],a=s[s.length-e.length+r],i=s[a];if(o>=0)if(i>=0){if(i!==o)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${r+n}] = ${o} but shape[${r+n}] = ${i}`)}else s[a]=o}return s}function GC(n){const t={FIRST_DIM_SIZE:Nr.FIRST_DIM_SIZE,VALUE_ROWIDS:Nr.VALUE_ROWIDS,ROW_LENGTHS:Nr.ROW_LENGTHS,ROW_SPLITS:Nr.ROW_SPLITS,ROW_LIMITS:Nr.ROW_LIMITS,ROW_STARTS:Nr.ROW_STARTS},e=[];for(const s of n)if(s in t)e.push(t[s]);else break;return e}function HC(n){return n.length===0?0:n[0]===Nr.FIRST_DIM_SIZE?n.length-1:n.length}function jC(n,t){if(n==null||t==null)return;const e=n.length,s=t.length;if(e>=s)throw new Error(`defaultValue.shape=${n} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${e} must be less than ragged tensor input flatValues.rank = ${s})`);for(let r=0;r<Math.min(e,s-1);++r){const o=n[r],a=t[r+1];if(o>=0&&a>=0&&o!==1&&o!==a)throw new Error(`defaultValue.shape=${n}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${r-n.length}] = ${o} but ragged tensor input.flatValues.shape[${r-n.length}] = ${a}`)}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B1=30;function uy(n){return n<=B1?n:Yb(n,Math.floor(Math.sqrt(n)))}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ly(n,t,e){const s=e*(typeof n=="number"?n:n[0]),r=t*(typeof n=="number"?n:n[1]);return[s,r]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nu(n,t,e,s=!0){let r=[];if(s)r=r.concat(t.slice(0)),r.push(n[0]/e),r=r.concat(n.slice(1));else{r=r.concat(n[0]);const o=t.length;for(let a=0;a<o;++a)r=r.concat([n[a+1]/t[a],t[a]]);r=r.concat(n.slice(o+1))}return r}function su(n,t,e=!0){const s=[];if(e){s.push(t);for(let r=t+1;r<n;++r)r<=2*t?(s.push(r),s.push(r-(t+1))):s.push(r)}else{const r=[],o=[];for(let a=1;a<n;++a)a>=t*2+1||a%2===1?o.push(a):r.push(a);s.push(...r),s.push(0),s.push(...o)}return s}function ru(n,t,e,s=!0){const r=[];s?r.push(n[0]/e):r.push(n[0]*e);for(let o=1;o<n.length;++o)o<=t.length?s?r.push(t[o-1]*n[o]):r.push(n[o]/t[o-1]):r.push(n[o]);return r}function cy(n,t){const e=[0];for(let s=0;s<t;++s)e.push(n[s][0]);return e}function dy(n,t,e){const s=n.slice(0,1);for(let r=0;r<e;++r)s.push(n[r+1]-t[r][0]-t[r][1]);return s}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hy=1.7580993408473768,py=1.0507009873554805;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z1=.3275911,V1=.254829592,W1=-.284496736,U1=1.421413741,G1=-1.453152027,H1=1.061405429;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qo(n,t){if(n.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${n.length}, imag: ${t.length}.`);const e=new Float32Array(n.length*2);for(let s=0;s<e.length;s+=2)e[s]=n[s/2],e[s+1]=t[s/2];return e}function qC(n){const t=new Float32Array(n.length/2),e=new Float32Array(n.length/2);for(let s=0;s<n.length;s+=2)t[s/2]=n[s],e[s/2]=n[s+1];return{real:t,imag:e}}function KC(n){const t=Math.ceil(n.length/4),e=new Float32Array(t),s=new Float32Array(t);for(let r=0;r<n.length;r+=4)e[Math.floor(r/4)]=n[r],s[Math.floor(r/4)]=n[r+1];return{real:e,imag:s}}function XC(n){const t=Math.floor(n.length/4),e=new Float32Array(t),s=new Float32Array(t);for(let r=2;r<n.length;r+=4)e[Math.floor(r/4)]=n[r],s[Math.floor(r/4)]=n[r+1];return{real:e,imag:s}}function j1(n,t){const e=n[t*2],s=n[t*2+1];return{real:e,imag:s}}function YC(n,t,e,s){n[s*2]=t,n[s*2+1]=e}function JC(n,t){const e=new Float32Array(n/2),s=new Float32Array(n/2);for(let r=0;r<Math.ceil(n/2);r++){const o=(t?2:-2)*Math.PI*(r/n);e[r]=Math.cos(o),s[r]=Math.sin(o)}return{real:e,imag:s}}function ZC(n,t,e){const s=(e?2:-2)*Math.PI*(n/t),r=Math.cos(s),o=Math.sin(s);return{real:r,imag:o}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cb="->",$G=/->/g,ik=",",uk="...";function q1(n,t){n=n.replace(/\s/g,"");const e=(n.length-n.replace($G,"").length)/cb.length;if(e<1)throw new Error("Equations without an arrow are not supported.");if(e>1)throw new Error(`Equation must contain exactly one arrow ("${cb}").`);const[s,r]=n.split(cb);T(s.indexOf(uk)===-1,()=>`The ellipsis notation ("${uk}") is not supported yet.`);const o=s.split(ik),a=o.length;if(t!==a)throw new Error(`Expected ${a} input tensors, received ${t}`);if(a>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const i=[];for(let h=0;h<r.length;++h){const p=r[h];if(!o.some(f=>f.indexOf(p)!==-1))throw new Error(`Output subscripts contain the label ${p} not present in the input subscripts.`);i.indexOf(p)===-1&&i.push(p)}for(let h=0;h<s.length;++h){const p=s[h];i.indexOf(p)===-1&&p!==ik&&i.push(p)}const u=new Array(o.length);for(let h=0;h<a;++h){if(new Set(o[h].split("")).size!==o[h].length)throw new Error(`Found duplicate axes in input component ${o[h]}. Support for duplicate axes in input is not implemented yet.`);u[h]=[];for(let p=0;p<o[h].length;++p)u[h].push(i.indexOf(o[h][p]))}const c=i.length,l=r.length,d=[];for(let h=l;h<c;++h)d.push(h);return{allDims:i,summedDims:d,idDims:u}}function K1(n,t){let e=new Array(n);e.fill(-1);for(let r=0;r<t.length;++r)e[t[r]]=r;const s=[];for(let r=0;r<n;++r)e[r]===-1&&s.push(r);return e=e.filter(r=>r!==-1),{permutationIndices:e,expandDims:s}}function X1(n,t,e){const s=new Array(n);for(let r=0;r<e.length;++r){const o=e[r].shape;for(let a=0;a<t[r].length;++a)s[t[r][a]]===void 0?s[t[r][a]]=o[a]:T(s[t[r][a]]===o[a],()=>`Expected dimension ${s[t[r][a]]} at axis ${a} of input shaped ${JSON.stringify(o)}, but got dimension ${o[a]}`)}}function Y1(n,t){const e=n,s=[];let r=0;n.length===0&&e.push(-1),r=n.length+1;for(let a=0;a<r;++a)s.push([]);const o=[];for(let a=0;a<e.length;++a){const i=e[a],u=SG(t,i);for(const c of u)o.indexOf(c)===-1&&(s[a].push(c),o.push(c))}return{path:e,steps:s}}function J1(n){return n.every((t,e)=>t===e)}function SG(n,t){const e=[];for(let s=0;s<n.length;++s)(n[s].length===0||n[s].indexOf(t)!==-1||t===-1)&&e.push(s);return e}function fy(n,t,e=0){let s=[];if(typeof t=="number")T(n.shape[e]%t===0,()=>"Number of splits must evenly divide the axis."),s=new Array(t).fill(n.shape[e]/t);else{const r=t.reduce((a,i)=>(i===-1&&(a+=1),a),0);T(r<=1,()=>"There should be only one negative value in split array.");const o=t.indexOf(-1);if(o!==-1){const a=t.reduce((i,u)=>u>0?i+u:i);t[o]=n.shape[e]-a}T(n.shape[e]===t.reduce((a,i)=>a+i),()=>"The sum of sizes must match the size of the axis dimension."),s=t}return s}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z1(n){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${n}`}function Q1(n,t){return`indices(${n}, 0) is invalid: ${t} < 0`}function t0(n,t,e){return`indices(${n}, 0) is invalid: ${t} >= ${e}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e0(n,t){return`only one output dimension may be -1, not both ${n} and ${t}`}function n0(n,t){return`size ${n} must be non-negative, not ${t}`}function s0(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function r0(n,t){const e=j(n),s=j(t);return`Input to reshape is a SparseTensor with ${e}
  dense values, but the requested shape requires a multiple of ${s}. inputShape=${n} outputShape= ${t}`}function o0(n,t){const e=j(n),s=j(t);return`Input to reshape is a tensor with ${e} dense values, but the requested shape has ${s}. inputShape=${n} outputShape=${t}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vd(){return"segment ids must be >= 0"}function a0(){return"segment ids are not increasing"}function i0(n,t){return`Segment id ${n} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function u0(n,t,e){return`Bad: indices[${n}] == ${t} out of range [0, ${e})`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QC(n,t){let e=!1,s;for(n<=B1?(s=n,e=!0):s=Yb(n,Math.floor(Math.sqrt(n)));!e;)s>t||s===n?e=!0:s=Yb(n,s+1);return s}function t2(n,t,e){const s=[],r=n.length;for(let o=0;o<r;o++)o!==t?s.push(n[o]):s.push(e);return s}function my(n,t,e,s){const r=t.shape.length,o=n.shape.length;if(s!==0&&(s<-r||s>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${s}`);if(s<0&&(s+=r),s>o)throw new Error(`batchDims (${s}) must be less than rank(x) (
    ${o}).`);if(e<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${e}).`);for(let d=0;d<s;++d)if(n.shape[d]!==t.shape[d])throw new Error(`x.shape[${d}]: ${n.shape[d]} should be equal to indices.shape[${d}]: ${t.shape[d]}.`);const a=n.shape[e],i=[];let u=1,c=1,l=1;for(let d=0;d<s;++d)i.push(n.shape[d]),u*=n.shape[d];for(let d=s;d<e;d++)i.push(n.shape[d]),c*=n.shape[d];for(let d=s;d<r;d++)i.push(t.shape[d]);for(let d=e+1;d<o;d++)i.push(n.shape[d]),l*=n.shape[d];return{batchSize:u,sliceSize:l,outerSize:c,dimSize:a,outputShape:i}}const NG=Object.freeze(Object.defineProperty({__proto__:null,collectGatherOpShapeInfo:my,computeOutShape:t2,segOpComputeOptimalWindowSize:QC},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ko(n){try{return n.map(t=>Ea(t))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function l0(n){return n.map(t=>Ia(t))}const CG=Object.freeze(Object.defineProperty({__proto__:null,ERF_A1:V1,ERF_A2:W1,ERF_A3:U1,ERF_A4:G1,ERF_A5:H1,ERF_P:z1,PARALLELIZE_THRESHOLD:B1,get RowPartitionType(){return Nr},SELU_SCALE:py,SELU_SCALEALPHA:hy,applyActivation:A1,assertAndGetBroadcastShape:Ut,assertAxesAreInnerMostDims:ze,assertParamsConsistent:iy,assignToTypedArray:YC,axesAreInnerMostDims:m1,calculateShapes:Io,checkEinsumDimSizes:X1,checkPadOnDimRoundingMode:Ss,combineLocations:rC,combineRaggedTensorToTensorShapes:UC,complexWithEvenIndex:KC,complexWithOddIndex:XC,computeConv2DInfo:Ze,computeConv3DInfo:Wr,computeDefaultPad:l1,computeDilation2DInfo:Wa,computeOptimalWindowSize:uy,computeOutAndReduceShapes:Ge,computeOutShape:Xs,computePool2DInfo:Xn,computePool3DInfo:Js,convertConv2DDataFormat:Ur,decodeEinsumEquation:q1,eitherStridesOrDilationsAreOne:Mn,expandShapeToKeepDim:Re,exponent:ZC,exponents:JC,fromStringArrayToUint8:l0,fromUint8ToStringArray:Ko,getAxesPermutation:Ve,getBroadcastDims:el,getComplexWithIndex:j1,getEinsumComputePath:Y1,getEinsumPermutation:K1,getFusedBiasGradient:E1,getFusedDyActivation:T1,getImageCenter:ly,getInnerMostAxes:Fe,getPermuted:su,getRaggedRank:HC,getReductionAxes:kn,getReshaped:nu,getReshapedPermuted:ru,getRowPartitionTypesHelper:GC,getSliceBeginCoords:cy,getSliceSize:dy,getSparseFillEmptyRowsIndicesDenseShapeMismatch:Z1,getSparseFillEmptyRowsNegativeIndexErrorMessage:Q1,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:t0,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:s0,getSparseReshapeInputOutputMismatchErrorMessage:o0,getSparseReshapeInputOutputMultipleErrorMessage:r0,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:e0,getSparseReshapeNegativeOutputDimErrorMessage:n0,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:u0,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:Vd,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:a0,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:i0,getUndoAxesPermutation:vo,isIdentityPermutation:J1,log:lB,mergeRealAndImagArrays:qo,prepareAndValidate:ny,prepareSplitSize:fy,segment_util:NG,shouldFuse:D1,slice_util:vG,splitRealAndImagArrays:qC,stridesOrDilationsArePositive:_i,tupleValuesAreOne:Ci,upcastType:Os,validateDefaultValueShape:jC,validateInput:rU,validateUpdateShape:IC,warn:Gs},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gG();/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const e2={kernelName:Wh,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>W(n,zp(It(e,"float32"),-1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _G={kernelName:bl,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>{const s=Ue(It(e,"float32")),r=Kn(Mt(xe(1),s));return en(Ft(n,r))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TG={kernelName:xl,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>{const s=Kn(Mt(Ue(It(e,"float32")),1));return Ft(n,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EG={kernelName:Xi,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,r=Ut(e.shape,s.shape);return{a:()=>{let i=n;const u=kn(e.shape,r);return u.length>0&&(i=Rt(i,u)),K(i,e.shape)},b:()=>{let i=n;const u=kn(s.shape,r);return u.length>0&&(i=Rt(i,u)),K(i,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AG={kernelName:Uh,saveAllInputs:!0,gradFunc:(n,t)=>{const e={};return t.forEach((s,r)=>{e[r]=()=>n.clone()}),e}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DG={kernelName:jh,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>ae(e)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RG={kernelName:qh,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>ae(e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FG={kernelName:wl,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Ft(n,Kn(Mt(xe(1),Ue(It(e,"float32")))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OG={kernelName:vl,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>{const s=Kn(ht(xe(1),Ue(It(e,"float32"))));return Ft(n,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PG={kernelName:$l,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,r=Ut(e.shape,s.shape);return{a:()=>{const i=ht(Ue(e),Ue(s));let u=W(n,Ft(s,i));const c=kn(e.shape,r);return c.length>0&&(u=Rt(u,c)),K(u,e.shape)},b:()=>{const i=ht(Ue(e),Ue(s));let u=en(W(n,Ft(e,i)));const c=kn(s.shape,r);return c.length>0&&(u=Rt(u,c)),K(u,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LG={kernelName:Il,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Ft(n,ht(Ue(It(e,"float32")),1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MG={kernelName:kl,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Ft(n,Mt(xe(1),Ue(It(e,"float32"))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BG(n,t,e,s,r,o){const a=M(n,"dy","avgPool3dGrad"),i=M(t,"input","avgPool3dGrad");let u=a,c=i,l=!1;i.rank===4&&(l=!0,u=K(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),c=K(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),T(u.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`),T(c.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${c.rank}.`),Ss("avgPool3dGrad",r,o);const d={dy:u,input:c},h={filterSize:e,strides:s,pad:r,dimRoundingMode:o},p=G.runKernel(Cg,d,h);return l?K(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}const zG=X({avgPool3dGrad_:BG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VG={kernelName:Kh,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{filterSize:r,strides:o,pad:a,dimRoundingMode:i}=e;return{x:()=>zG(n,s,r,o,a,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WG(n,t,e,s,r){const o=M(n,"dy","avgPoolGrad"),a=M(t,"input","avgPoolGrad");T(a.rank===o.rank,()=>`Rank of input (${a.rank}) does not match rank of dy (${o.rank})`);let i=a,u=o,c=!1;a.rank===3&&(c=!0,i=K(a,[1,a.shape[0],a.shape[1],a.shape[2]]),u=K(o,[1,o.shape[0],o.shape[1],o.shape[2]])),T(u.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${u.rank}.`),T(i.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${i.rank}.`);const l={dy:u,input:i},d={filterSize:e,strides:s,pad:r},h=G.runKernel(Ng,l,d);return c?K(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const UG=X({avgPoolGrad_:WG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GG={kernelName:Sl,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{filterSize:r,strides:o,pad:a}=e;return{x:()=>UG(n,s,r,o,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HG={kernelName:Nl,inputsToSave:["a","b"],gradFunc:(n,t,e)=>{const[s,r]=t,{transposeA:o,transposeB:a}=e;return!o&&!a?{a:()=>ge(n,r,!1,!0),b:()=>ge(s,n,!0,!1)}:!o&&a?{a:()=>ge(n,r,!1,!1),b:()=>ge(n,s,!0,!1)}:o&&!a?{a:()=>ge(r,n,!1,!0),b:()=>ge(s,n,!1,!1)}:{a:()=>ge(r,n,!0,!0),b:()=>ge(n,s,!0,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jG={kernelName:Xh,gradFunc:(n,t,e)=>{const{blockShape:s,crops:r}=e;return{x:()=>k1(n,s,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qG={kernelName:rB,gradFunc:(n,t,e)=>{const s=e,r=s.inputShape,o=s.shape,a=Array.from(o);for(let u=r.length-1;u>=0;u--)if(r[u]===o[u])a[u]=1;else if(r[u]!==1)throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${o}].`);const i=[];for(let u=0;u<a.length;u++)a[u]>1&&i.push(u);return{x:()=>Rt(n,i,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KG={kernelName:Cl,gradFunc:n=>({x:()=>n.clone()})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XG={kernelName:_l,gradFunc:n=>({x:()=>ae(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YG={kernelName:Yi,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{clipValueMin:r,clipValueMax:o}=e;return{x:()=>is(Ho(tu(s,r),Lc(s,o)),n,ae(n))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JG={kernelName:Tg,inputsToSave:["x"],gradFunc:e2.gradFunc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZG={kernelName:Jh,saveAllInputs:!0,gradFunc:(n,t,e)=>{const s=t.map(u=>u.shape),{axis:r}=e,o=Gt(r,t[0].shape)[0],a=s.map(u=>u[o]);return Ks(n,a,o).map(u=>()=>u)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QG={kernelName:Tl,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{const[s,r]=t,{dilations:o,strides:a,pad:i,dataFormat:u}=e;return T(Ci(o),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${o}'`),{x:()=>h1(s.shape,n,r,a,i,u),filter:()=>_1(s,n,r.shape,a,i,u)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tH={kernelName:El,inputsToSave:["dy","filter"],gradFunc:(n,t,e)=>{const[s,r]=t,{strides:o,pad:a,dataFormat:i,dimRoundingMode:u}=e;return{dy:()=>Ti(n,r,o,a,i,1,u),filter:()=>_1(n,s,r.shape,o,a,i,u)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eH(n,t,e,s,r){let o=n;n.rank===4&&(o=K(n,[1,n.shape[0],n.shape[1],n.shape[2],n.shape[3]]));let a=t;a.rank===4&&(a=K(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),T(o.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${o.shape}.`),T(a.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${a.shape}.`),T(e.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${e}.`),T(o.shape[4]===e[3],()=>`Error in conv3dDerFilter: depth of input ${o.shape[4]}) must match input depth in filter (${e[3]}.`),T(a.shape[4]===e[4],()=>`Error in conv3dDerFilter: depth of dy (${a.shape[4]}) must match output depth for filter (${e[4]}).`);const i={x:o,dy:a},u={strides:s,pad:r,filterShape:e};return G.runKernel(Zh,i,u)}const nH=X({conv3DBackpropFilter_:eH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sH={kernelName:Al,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{const{dilations:s,strides:r,pad:o}=e;T(Ci(s),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);const[a,i]=t;return{x:()=>tC(a.shape,n,i,r,o),filter:()=>nH(a,n,i.shape,r,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rH={kernelName:Dl,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>W(en(bC(It(e,"float32"))),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oH={kernelName:Rl,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>W(xC(It(e,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aH={kernelName:Fl,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{axis:r,exclusive:o,reverse:a}=e;return{x:()=>{const i=Ve([r],s.rank);let u=nC(n,r,o,!a);return i!=null&&(u=oe(u,i)),u}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iH={kernelName:Ol,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{const{dilations:s,strides:r,pad:o,dimRoundingMode:a}=e,i=s??[1,1];T(Ci(i),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`);const[u,c]=t;return T(u.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`),T(c.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${c.rank}.`),T(u.shape[3]===c.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`),T(Mn(r,i),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations '${i}'.`),Ss("depthwiseConv2d",o,a),{x:()=>kU(u.shape,n,c,r,o,i,a),filter:()=>vU(u,n,c.shape,r,o,i,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uH={kernelName:Pl,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{const[s,r]=t,o={x:s,filter:r,dy:n},a={x:s,filter:r,dy:n};return{x:()=>G.runKernel(Fd,o,e),filter:()=>G.runKernel(Od,a,e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lH={kernelName:Ml,outputsToSave:[!0],gradFunc:(n,t)=>{const[e]=t,s={dy:n,y:e};return{x:()=>G.runKernel(sp,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cH={kernelName:Bl,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t,s=W(mo(en(Ue(e))),2/Math.sqrt(Math.PI));return{x:()=>W(n,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dH={kernelName:zl,outputsToSave:[!0],gradFunc:(n,t)=>{const[e]=t;return{x:()=>W(n,e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hH={kernelName:op,inputsToSave:["input"],gradFunc:(n,t)=>{const[e]=t;return{input:()=>K(n,e.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pH={kernelName:Vl,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>W(n,mo(e))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fH={kernelName:Wl,gradFunc:n=>({x:()=>ae(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mH={kernelName:Ul,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,r=Ut(e.shape,s.shape);return{a:()=>{const i=Ft(n,It(s,"float32")),u=kn(e.shape,r);return u.length>0?K(Rt(i,u),e.shape):i},b:()=>{let i=W(n,It(e,"float32"));const u=kn(s.shape,r);u.length>0&&(i=K(Rt(i,u),s.shape));const c=Ue(s);return en(Ft(i,It(c,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gH={kernelName:Gl,inputsToSave:["x","mean","variance","scale"],gradFunc:(n,t,e)=>{const{varianceEpsilon:s}=e,[r,o,a,i]=t,u=i??xe(1),c=kn(o.shape,r.shape),l=[];if(o.rank===1){for(let w=0;w<r.shape.length-1;++w)l.push(r.shape[w]);l.push(1)}const d=Mt(r,o),h=W(n,u),p=mC(ht(a,xe(s))),f=W(W(W(p,p),p),xe(-.5));return{x:()=>o.rank===1?K(W(W(n,Tr(K(p,[1,1,1,o.shape[0]]),l)),u),r.shape):K(W(W(n,p),u),r.shape),mean:()=>{let w=W(W(p,xe(-1)),h);return o.rank===1&&(w=Rt(w,c)),K(w,o.shape)},variance:()=>{let w=W(W(f,d),h);return o.rank===1&&(w=Rt(w,c)),K(w,o.shape)},scale:()=>{const w=W(d,p);let v=W(n,w);return o.rank===1&&(v=Rt(v,c)),K(v,o.shape)},offset:()=>{let w=n;return o.rank===1&&(w=Rt(w,c)),K(w,o.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yH={kernelName:ip,inputsToSave:["x","indices"],gradFunc:(n,t,e)=>{const[s,r]=t,{axis:o,batchDims:a}=e,i=Gt(o,s.shape)[0],u=(c,l,d)=>()=>{const h=c.shape,p=l.size,f=h.slice(0,i),m=f.length,g=h.slice(o,h.length).slice(1),y=g.length,b=lk(0,m),x=lk(m+1,m+1+y),w=ck([f,[p],g]),v=K(d,w),k=K(l,[p]),S=ck([[m],b,x]),_=oe(v,S);let C=$C(_,k,c.shape[i]);const N=vo(S);return C=oe(C,N),C};if(a===1){const c=s.shape[0],l=s.split(c,0);return{x:()=>jo(l.map((p,f)=>u(p,r.slice(f,1),n.slice(f,1))())).reshape(s.shape),indices:()=>r}}else return{x:u(s,r,n),indices:()=>r}}};function lk(n,t){const e=[];for(let s=n;s<t;++s)e.push(s);return e}function ck(n){const t=[];for(let e=0;e<n.length;++e)for(let s=0;s<n[e].length;++s)t.push(n[e][s]);return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bH={kernelName:Hl,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t;return{a:()=>ae(e),b:()=>ae(s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xH={kernelName:jl,gradFunc:n=>({x:()=>It(n,"float32")})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wH={kernelName:ql,gradFunc:n=>({x:()=>ae(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vH={kernelName:Kl,gradFunc:n=>({x:()=>ae(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IH={kernelName:Xl,gradFunc:n=>({x:()=>ae(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kH={kernelName:Yl,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{alpha:r}=e,o=Zs(s,0);return{x:()=>is(o,n,W(n,r))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $H={kernelName:Zl,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Ft(n,ht(e,1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SH={kernelName:Jl,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Ft(n,It(e,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NH={kernelName:iB,inputsToSave:[],outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s]=t,{axis:r}=e;return{logits:()=>{const a=mo(s);return Mt(n,W(Rt(n,r,!0),a))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CH(n,t,e,s=5,r=1,o=1,a=.5){const i={x:n,y:t,dy:e},u={depthRadius:s,bias:r,alpha:o,beta:a};return G.runKernel(fp,i,u)}const _H=X({localResponseNormalizationBackprop_:CH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TH={kernelName:Ql,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s,r]=t,{depthRadius:o,bias:a,alpha:i,beta:u}=e;return{x:()=>_H(s,r,n,o,a,i,u)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n2(n,t,e,s){return t.rank<e.rank&&(t=K(t,Re(t.shape,s))),n.rank<e.rank&&(n=K(n,Re(n.shape,s))),{x:()=>W(n,It(fo(e,t),n.dtype))}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dk={kernelName:tc,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const s=e,{reductionIndices:r}=s,o=t[0],a=t[1],i=Gt(r,o.shape),u=n2(n,a,o,i);return{x:()=>u.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EH={kernelName:ec,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t;return{a:()=>W(n,It(tu(e,s),"float32")),b:()=>W(n,It(cm(e,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AH(n,t,e,s,r,o,a){const i=M(n,"dy","maxPool3dGrad"),u=M(t,"input","maxPool3dGrad"),c=M(e,"output","maxPool3dGrad");let l=i,d=u,h=c,p=!1;u.rank===4&&(p=!0,l=K(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),d=K(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),h=K(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),T(l.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),T(d.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${d.rank}.`),T(h.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${h.rank}.`),Ss("maxPool3dGrad",o,a);const f={dy:l,input:d,output:h},m={filterSize:s,strides:r,pad:o,dimRoundingMode:a},g=G.runKernel(Og,f,m);return p?K(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}const DH=X({maxPool3dGrad_:AH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RH={kernelName:mp,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s,r]=t,{filterSize:o,strides:a,pad:i,dimRoundingMode:u}=e;return{x:()=>DH(n,s,r,o,a,i,u)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FH(n,t,e,s,r,o,a){const i=M(n,"dy","maxPoolGrad"),u=M(t,"input","maxPoolGrad"),c=M(e,"output","maxPoolGrad");T(u.rank===i.rank,()=>`Rank of input (${u.rank}) does not match rank of dy (${i.rank})`),T(i.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${i.rank}.`),T(u.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${u.rank}.`),Ss("maxPoolGrad",o,a);const l={dy:i,input:u,output:c},d={filterSize:s,strides:r,pad:o,dimRoundingMode:a};return G.runKernel(Fg,l,d)}const OH=X({maxPoolGrad_:FH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PH={kernelName:nc,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s,r]=t,{filterSize:o,strides:a,pad:i}=e;return{x:()=>OH(n,s,r,o,a,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LH={kernelName:sc,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{axis:r}=e,o=Gt(r,s.shape),i=Ge(s.shape,o)[1],u=j(i);return{x:()=>{const l=s.shape.slice();o.forEach(p=>{l[p]=1});const d=K(n,l);return Ft(W(d,Ga(s.shape,"float32")),u)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MH={kernelName:rc,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const s=e,{axis:r}=s,[o,a]=t,i=Gt(r,o.shape),u=n2(n,a,o,i);return{x:()=>u.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BH={kernelName:oc,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t;return{a:()=>W(n,It(Lc(e,s),"float32")),b:()=>W(n,It(Zs(e,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zH={kernelName:ac,inputsToSave:["x"],gradFunc:(n,t,e)=>{const s=t[0],{paddings:r}=e,o=r.map(a=>a[0]);return{x:()=>Pe(n,o,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VH={kernelName:ic,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,r=Ut(e.shape,s.shape);return{a:()=>{const i=kn(e.shape,r);return i.length>0?K(Rt(n,i),e.shape):n},b:()=>{const i=W(n,en(ey(Ft(e,s)))),u=kn(s.shape,r);return u.length>0?K(Rt(i,u),s.shape):i}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WH={kernelName:uc,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,r=Ut(e.shape,s.shape);return{a:()=>{const i=W(n,It(s,"float32")),u=kn(e.shape,r);return u.length>0?K(Rt(i,u),e.shape):i},b:()=>{const i=W(n,It(e,"float32")),u=kn(s.shape,r);return u.length>0?K(Rt(i,u),s.shape):i}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UH={kernelName:gp,gradFunc:n=>({x:()=>en(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GH={kernelName:lc,inputsToSave:["indices"],gradFunc:(n,t)=>{const e=t[0];return{indices:()=>Cn(e.shape,"float32")}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HH={kernelName:vp,gradFunc:n=>({x:()=>ae(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jH={kernelName:Ip,saveAllInputs:!0,gradFunc:(n,t,e)=>{const{axis:s}=e;return Di(n,s).map(o=>()=>o)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hk={kernelName:cc,inputsToSave:["x"],gradFunc:(n,t,e)=>{const s=t[0],{paddings:r}=e,o=r.map(a=>a[0]);return{x:()=>Pe(n,o,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qH={kernelName:dc,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(n,t)=>{const[e,s,r]=t,o=e,a=s,i=Ut(o.shape,a.shape);return{a:()=>{const l=It(a,"float32");let d=W(n,W(l,Ei(o,Mt(l,xe(1)))));const h=kn(o.shape,i);return h.length>0&&(d=Rt(d,h)),K(d,o.shape)},b:()=>{const l=Zs(o,0),d=is(l,go(o),ae(o));let h=W(n,W(r,d));const p=kn(a.shape,i);return p.length>0&&(h=Rt(h,p)),K(h,a.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KH={kernelName:hc,inputsToSave:["x","alpha"],gradFunc:(n,t)=>{const[e,s]=t,r=Zs(e,0);return{x:()=>is(r,n,W(n,s)),alpha:()=>{let o=is(r,ae(n),W(n,e));const a=kn(s.shape,n.shape);return a.length>0&&(o=Rt(o,a)),K(o,s.shape)}}}};/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XH(n,t,e){const s=n.shape.slice();s[e]=1;const r=K(t,s),o=lx(n,e,!0,!1),a=lx(n,e,!0,!0),i=W(o,a);return W(r,i)}function YH(n,t,e){const s=n.shape.length,r=s-e.length,o=Ve(e,s);let a=n;o!=null&&(a=oe(n,o));const i=a.shape.slice(),c=i.splice(s-e.length,e.length).reduce((h,p)=>h*p,1);i.push(c);const l=a.reshape(i);let d=XH(l,t,r);if(d=d.reshape(a.shape),o!=null){const h=vo(o);d=oe(d,h)}return d}const JH={kernelName:pc,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{axis:r}=e;let o=[];return r==null?o=s.shape.map((a,i)=>i):typeof r=="number"?o=[r]:o=r,{x:()=>YH(s,n,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZH={kernelName:Ll,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,r=Ut(e.shape,s.shape);return{a:()=>{const i=Ft(n,It(s,"float32")),u=kn(e.shape,r);return u.length>0?K(Rt(i,u),e.shape):i},b:()=>{let i=W(n,It(e,"float32"));const u=kn(s.shape,r);u.length>0&&(i=K(Rt(i,u),s.shape));const c=Ue(s);return en(Ft(i,It(c,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QH={kernelName:fc,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Ft(n,en(Ue(e)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tj={kernelName:bc,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t,s=W(Lc(e,6),zp(e));return{x:()=>W(n,It(s,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ej={kernelName:mc,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>W(n,It(zp(e),"float32"))}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nj={kernelName:kp,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>K(n,e.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sj={kernelName:yc,inputsToSave:["images"],gradFunc:(n,t,e)=>{const[s]=t,r={dy:n,images:s};return{images:()=>G.runKernel(Sp,r,e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rj={kernelName:gc,inputsToSave:["images"],gradFunc:(n,t,e)=>{const[s]=t,r={dy:n,images:s};return{images:()=>G.runKernel($p,r,e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oj={kernelName:xc,gradFunc:(n,t,e)=>{const{dims:s}=e,r=Gt(s,n.shape);return{x:()=>Ai(n,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aj={kernelName:wc,gradFunc:n=>({x:()=>ae(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ij={kernelName:vc,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>en(Ft(n,W(Ei(e,1.5),2)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uj={kernelName:Np,inputsToSave:["condition"],gradFunc:(n,t)=>{const[e]=t;return{condition:()=>It(ae(e),"float32"),t:()=>W(n,It(e,n.dtype)),e:()=>W(n,It(x1(e),n.dtype))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lj={kernelName:Ic,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>{const s=Zs(e,xe(0)),r=xe(hy),o=xe(py),a=W(n,o),i=W(W(n,r),mo(It(e,"float32")));return is(s,a,i)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cj={kernelName:Nc,outputsToSave:[!0],gradFunc:(n,t)=>{const[e]=t;return{x:()=>W(n,W(e,Mt(xe(1),e)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dj={kernelName:Sc,gradFunc:n=>({x:()=>ae(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hj={kernelName:kc,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>W(p1(It(e,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pj={kernelName:$c,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>W(eC(It(e,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fj={kernelName:Cp,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{begin:r,size:o}=e,a=s.shape,[i,u]=Vp(s,r,o),c=[];for(let l=0;l<n.rank;l++)c.push([i[l],a[l]-i[l]-u[l]]);return{x:()=>I1(n,c)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mj={kernelName:Ec,outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s]=t,{dim:r}=e,o=!0,a=W(n,s);return{logits:()=>Mt(a,W(Rt(a,[r],o),s))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gj={kernelName:Cc,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>W(n,Pc(e))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pk={kernelName:_p,gradFunc:(n,t,e)=>{const{blockShape:s,paddings:r}=e;return{x:()=>d1(n,s,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fk={kernelName:Tp,gradFunc:(n,t,e)=>{const{axis:s}=e;return{x:()=>vs(n,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yj={kernelName:_c,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Ft(n,W(Kn(It(e,"float32")),2))}}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bj={kernelName:Ug,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>W(n,W(It(e,"float32"),2))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xj={kernelName:Ac,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,r=xe(2);return{a:()=>W(n,W(r,Mt(e,s))),b:()=>W(n,W(r,Mt(s,e)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wj={kernelName:Zi,gradFunc:n=>({x:()=>ae(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vj={kernelName:Dc,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,r=Ut(e.shape,s.shape);return{a:()=>{let i=n;const u=kn(e.shape,r);return u.length>0&&(i=Rt(i,u)),K(i,e.shape)},b:()=>{let i=n;const u=kn(s.shape,r);return u.length>0&&(i=Rt(i,u)),K(en(i),s.shape)}}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ij={kernelName:Tc,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,r=s.shape.slice(),{axis:o}=e;Gt(o,s.shape).forEach(c=>{r[c]=1});const i=K(n,r),u=W(i,Ga(s.shape,"float32"));return{x:()=>u}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kj={kernelName:Rc,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Ft(n,Ue(p1(e)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $j={kernelName:Fc,outputsToSave:[!0],gradFunc:(n,t)=>{const[e]=t;return{x:()=>W(Mt(xe(1),Ue(e)),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sj={kernelName:Ji,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{reps:r}=e;return{x:()=>{let a=ae(s);if(s.rank===1)for(let i=0;i<r[0];++i)a=ht(a,Pe(n,[i*s.shape[0]],[s.shape[0]]));else if(s.rank===2)for(let i=0;i<r[0];++i)for(let u=0;u<r[1];++u)a=ht(a,Pe(n,[i*s.shape[0],u*s.shape[1]],[s.shape[0],s.shape[1]]));else if(s.rank===3)for(let i=0;i<r[0];++i)for(let u=0;u<r[1];++u)for(let c=0;c<r[2];++c)a=ht(a,Pe(n,[i*s.shape[0],u*s.shape[1],c*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else if(s.rank===4)for(let i=0;i<r[0];++i)for(let u=0;u<r[1];++u)for(let c=0;c<r[2];++c)for(let l=0;l<r[3];++l)a=ht(a,Pe(n,[i*s.shape[0],u*s.shape[1],c*s.shape[2],l*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);return a}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nj={kernelName:wa,gradFunc:(n,t,e)=>{const s=e,{perm:r}=s,o=vo(r);return{x:()=>oe(n,o)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cj={kernelName:Rp,gradFunc:(n,t,e)=>{const s=e,{axis:r}=s;return{value:()=>jo(n,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _j={kernelName:Hg,inputsToSave:["segmentIds"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Tj(n,e)}}};function Tj(n,t){const e=Ua(t,ae(t)),s=g1(n,e);let r=tu(t,xe(0,"int32"));const o=s.rank-r.rank;for(let i=0;i<o;++i)r=ms(r,i+1);r=Ho(r,Ga(s.shape,"bool"));const a=ae(s);return is(r,s,a)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ej={kernelName:Fp,gradFunc:n=>({x:()=>ae(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Aj=[e2,_G,TG,EG,AG,DG,RG,FG,OG,PG,LG,MG,VG,GG,HG,jG,qG,KG,XG,YG,JG,ZG,tH,QG,sH,rH,oH,aH,iH,uH,ZH,lH,cH,dH,hH,pH,mH,fH,gH,yH,bH,xH,wH,vH,IH,kH,$H,SH,NH,TH,dk,dk,EH,RH,PH,LH,MH,BH,zH,VH,WH,UH,GH,HH,jH,hk,hk,qH,KH,JH,QH,tj,ej,nj,sj,rj,oj,aj,ij,uj,lj,cj,dj,hj,pj,fj,mj,gj,pk,pk,fk,fk,yj,xj,bj,wj,vj,Ij,kj,$j,Sj,Nj,Cj,_j,Ej];for(const n of Aj)cB(n);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.abs=function(){return this.throwIfDisposed(),es(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.acos=function(){return this.throwIfDisposed(),hz(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.acosh=function(){return this.throwIfDisposed(),fz(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.add=function(n){return this.throwIfDisposed(),ht(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.all=function(n,t){return this.throwIfDisposed(),JN(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.any=function(n,t){return this.throwIfDisposed(),ix(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.argMax=function(n){return this.throwIfDisposed(),Pd(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.argMin=function(n){return this.throwIfDisposed(),xz(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.asScalar=function(){return this.throwIfDisposed(),T(this.size===1,()=>"The array must have only 1 element."),K(this,[])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.asType=function(n){return this.throwIfDisposed(),It(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.as1D=function(){return this.throwIfDisposed(),K(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.as2D=function(n,t){return this.throwIfDisposed(),K(this,[n,t])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.as3D=function(n,t,e){return this.throwIfDisposed(),K(this,[n,t,e])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.as4D=function(n,t,e,s){return this.throwIfDisposed(),K(this,[n,t,e,s])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.as5D=function(n,t,e,s,r){return this.throwIfDisposed(),K(this,[n,t,e,s,r])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.asin=function(){return this.throwIfDisposed(),vz(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.asinh=function(){return this.throwIfDisposed(),kz(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.atan=function(){return this.throwIfDisposed(),Sz(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.atan2=function(n){return this.throwIfDisposed(),Cz(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.atanh=function(){return this.throwIfDisposed(),Tz(this)};rt().prototype.avgPool=function(n,t,e,s){return this.throwIfDisposed(),c1(this,n,t,e,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.batchToSpaceND=function(n,t){return this.throwIfDisposed(),d1(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.batchNorm=function(n,t,e,s,r){return this.throwIfDisposed(),Jg(this,n,t,e,s,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.broadcastTo=function(n){return this.throwIfDisposed(),Id(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.cast=function(n){return this.throwIfDisposed(),It(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.ceil=function(){return this.throwIfDisposed(),nV(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.clipByValue=function(n,t){return this.throwIfDisposed(),Ys(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.concat=function(n,t){return this.throwIfDisposed(),n instanceof yn&&(n=[n]),vs([this,...n],t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.conv1d=function(n,t,e,s,r,o){return this.throwIfDisposed(),ZN(this,n,t,e,s,r,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.conv2dTranspose=function(n,t,e,s,r){return this.throwIfDisposed(),QN(this,n,t,e,s,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.conv2d=function(n,t,e,s,r,o){return this.throwIfDisposed(),Ti(this,n,t,e,s,r,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.cos=function(){return this.throwIfDisposed(),p1(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.cosh=function(){return this.throwIfDisposed(),eC(this)};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.cumprod=function(n,t,e){return this.throwIfDisposed(),lx(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.cumsum=function(n,t,e){return this.throwIfDisposed(),nC(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.depthToSpace=function(n,t){return this.throwIfDisposed(),CV(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.depthwiseConv2d=function(n,t,e,s,r,o){return this.throwIfDisposed(),f1(this,n,t,e,s,r,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.dilation2d=function(n,t,e,s,r){return this.throwIfDisposed(),EV(this,n,t,e,s,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.divNoNan=function(n){return this.throwIfDisposed(),OV(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.div=function(n){return this.throwIfDisposed(),Ft(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.dot=function(n){return this.throwIfDisposed(),LV(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.elu=function(){return this.throwIfDisposed(),Qg(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.equal=function(n){return this.throwIfDisposed(),fo(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.erf=function(){return this.throwIfDisposed(),sC(this)};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.euclideanNorm=function(n,t){return this.throwIfDisposed(),XV(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.exp=function(){return this.throwIfDisposed(),mo(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.expandDims=function(n){return this.throwIfDisposed(),ms(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.expm1=function(){return this.throwIfDisposed(),QV(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.fft=function(){return this.throwIfDisposed(),vC(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.flatten=function(){return this.throwIfDisposed(),K(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.floor=function(){return this.throwIfDisposed(),ey(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.floorDiv=function(n){return this.throwIfDisposed(),YN(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.gather=function(n,t,e){return this.throwIfDisposed(),g1(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.greaterEqual=function(n){return this.throwIfDisposed(),tu(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.greater=function(n){return this.throwIfDisposed(),Zs(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.ifft=function(){return this.throwIfDisposed(),cx(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.irfft=function(){return this.throwIfDisposed(),H4(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.isFinite=function(){return this.throwIfDisposed(),uW(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.isInf=function(){return this.throwIfDisposed(),cW(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.isNaN=function(){return this.throwIfDisposed(),hW(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.leakyRelu=function(n){return this.throwIfDisposed(),b1(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.lessEqual=function(n){return this.throwIfDisposed(),Lc(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.less=function(n){return this.throwIfDisposed(),cm(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.localResponseNormalization=function(n,t,e,s){return this.throwIfDisposed(),yW(this,n,t,e,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.logSigmoid=function(){return this.throwIfDisposed(),$W(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.logSoftmax=function(n){return this.throwIfDisposed(),uC(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.logSumExp=function(n,t){return this.throwIfDisposed(),lC(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.log=function(){return this.throwIfDisposed(),go(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.log1p=function(){return this.throwIfDisposed(),iC(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.logicalAnd=function(n){return this.throwIfDisposed(),Ho(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.logicalNot=function(){return this.throwIfDisposed(),x1(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.logicalOr=function(n){return this.throwIfDisposed(),cC(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.logicalXor=function(n){return this.throwIfDisposed(),DW(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.matMul=function(n,t,e){return this.throwIfDisposed(),ge(this,n,t,e)};rt().prototype.maxPool=function(n,t,e,s){return this.throwIfDisposed(),w1(this,n,t,e,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.max=function(n,t){return this.throwIfDisposed(),Ar(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.maximum=function(n){return this.throwIfDisposed(),Ua(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.mean=function(n,t){return this.throwIfDisposed(),pn(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.min=function(n,t){return this.throwIfDisposed(),lm(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.minimum=function(n){return this.throwIfDisposed(),Bd(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.mirrorPad=function(n,t){return this.throwIfDisposed(),zW(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.mod=function(n){return this.throwIfDisposed(),WW(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.mul=function(n){return this.throwIfDisposed(),W(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.neg=function(){return this.throwIfDisposed(),en(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.norm=function(n,t,e){return this.throwIfDisposed(),ty(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.notEqual=function(n){return this.throwIfDisposed(),dm(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.oneHot=function(n,t=1,e=0){return this.throwIfDisposed(),dC(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.onesLike=function(){return this.throwIfDisposed(),mr(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.pad=function(n,t){return this.throwIfDisposed(),I1(this,n,t)};rt().prototype.pool=function(n,t,e,s,r,o){return this.throwIfDisposed(),ZW(this,n,t,e,s,r,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.pow=function(n){return this.throwIfDisposed(),Ei(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.prelu=function(n){return this.throwIfDisposed(),$1(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.prod=function(n,t){return this.throwIfDisposed(),e4(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.reciprocal=function(){return this.throwIfDisposed(),S4(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.relu=function(){return this.throwIfDisposed(),eu(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.relu6=function(){return this.throwIfDisposed(),pC(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.reshapeAs=function(n){return this.throwIfDisposed(),K(this,n.shape)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.reshape=function(n){return this.throwIfDisposed(),K(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.resizeBilinear=function(n,t,e){return this.throwIfDisposed(),NC(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.resizeNearestNeighbor=function(n,t,e){return this.throwIfDisposed(),CC(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.reverse=function(n){return this.throwIfDisposed(),Ai(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.rfft=function(){return this.throwIfDisposed(),K4(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.round=function(){return this.throwIfDisposed(),fC(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.rsqrt=function(){return this.throwIfDisposed(),mC(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.selu=function(){return this.throwIfDisposed(),gC(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.separableConv2d=function(n,t,e,s,r,o){return this.throwIfDisposed(),yC(this,n,t,e,s,r,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.sigmoid=function(){return this.throwIfDisposed(),Pc(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.sign=function(){return this.throwIfDisposed(),F4(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.sin=function(){return this.throwIfDisposed(),bC(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.sinh=function(){return this.throwIfDisposed(),xC(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.slice=function(n,t){return this.throwIfDisposed(),Pe(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.softmax=function(n){return this.throwIfDisposed(),C1(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.softplus=function(){return this.throwIfDisposed(),Lp(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.spaceToBatchND=function(n,t){return this.throwIfDisposed(),k1(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.split=function(n,t){return this.throwIfDisposed(),Ks(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.sqrt=function(){return this.throwIfDisposed(),Kn(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.square=function(){return this.throwIfDisposed(),Ue(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.squaredDifference=function(n){return this.throwIfDisposed(),Y4(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.squeeze=function(n){return this.throwIfDisposed(),Bp(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.stack=function(n,t){this.throwIfDisposed();const e=n instanceof yn?[this,n]:[this,...n];return jo(e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.step=function(n){return this.throwIfDisposed(),zp(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.stridedSlice=function(n,t,e,s,r,o,a,i){return this.throwIfDisposed(),eU(this,n,t,e,s,r,o,a,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.sub=function(n){return this.throwIfDisposed(),Mt(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.sum=function(n,t){return this.throwIfDisposed(),Rt(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.tan=function(){return this.throwIfDisposed(),sU(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.tanh=function(){return this.throwIfDisposed(),Yg(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.tile=function(n){return this.throwIfDisposed(),Tr(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.toBool=function(){return this.throwIfDisposed(),It(this,"bool")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.toFloat=function(){return this.throwIfDisposed(),It(this,"float32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.toInt=function(){return this.throwIfDisposed(),It(this,"int32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.topk=function(n,t){return this.throwIfDisposed(),aU(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.transpose=function(n){return this.throwIfDisposed(),oe(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.unique=function(n){return this.throwIfDisposed(),lU(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.unsortedSegmentSum=function(n,t){return this.throwIfDisposed(),$C(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.unstack=function(n){return this.throwIfDisposed(),Di(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.where=function(n,t){return this.throwIfDisposed(),is(n,this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rt().prototype.zerosLike=function(){return this.throwIfDisposed(),ae(this)};/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Zr extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Zr.prototype)}}class cr extends Error{constructor(t){super(t),Object.setPrototypeOf(this,cr.prototype)}}class V extends Error{constructor(t){super(t),Object.setPrototypeOf(this,V.prototype)}}class Kt extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Kt.prototype)}}class c0 extends Error{constructor(t){super(t),Object.setPrototypeOf(this,c0.prototype)}}/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class s2{constructor(t){this.maxEntries=t||100,this.cache=new Map}get(t){let e;return this.cache.has(t)&&(e=this.cache.get(t),this.cache.delete(t),this.cache.set(t,e)),e}put(t,e){if(this.cache.has(t))this.cache.delete(t);else if(this.cache.size>=this.maxEntries){const s=this.cache.keys().next().value;this.cache.delete(s)}this.cache.set(t,e)}getMaxEntries(){return this.maxEntries}setMaxEntries(t){if(t<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${t}.`);if(this.maxEntries>t)for(let e=0;e<this.maxEntries-t;e++){const s=this.cache.keys().next().value;this.cache.delete(s)}this.maxEntries=t}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Ri(n,t){if(Array.isArray(n)){let e=[];for(let s=0;s<t;s++)e=e.concat(n);return e}else{const e=new Array(t);return e.fill(n),e}}function Qr(n,t){if(!n)throw new c0(t)}function mk(n,t){let e=0;for(const s of n)s===t&&e++;return e}function gs(n){return n.length===1?n[0]:n}function Se(n){return Array.isArray(n)?n:[n]}function _o(n){const e=n.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return e[0]!=="_"?e:"private"+e}function ui(n){return n.length<=1||n.indexOf("_")===-1?n:n.replace(/[_]+(\w|$)/g,(t,e)=>e.toUpperCase())}let nr={};function d0(n){if(n==null)return null;const t={};return t.className=n.getClassName(),t.config=n.getConfig(),t}function hx(n){if(!(n==null||typeof n!="object"))if(Array.isArray(n))n.forEach(t=>hx(t));else{const t=Object.keys(n);for(const e of t){const s=n[e];s!=null&&typeof s=="object"&&(!Array.isArray(s)&&s.type==="ndarray"&&typeof s.value=="number"?n[e]=s.value:hx(s))}}}function Wp(n,t={},e={},s="object",r=!1){if(typeof n=="string"){const o=n;let a;if(o in e)a=e[o];else if(o in nr)a=nr[o];else if(a=t[o],a==null)throw new V(`Unknown ${s}: ${n}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}else{const o=n;if(o.className==null||o.config==null)throw new V(`${s}: Improper config format: ${JSON.stringify(o)}.
'className' and 'config' must set.`);const a=o.className;let i,u;if(a in e?[i,u]=e[a]:a in nr?[i,u]=nr.className:a in t&&([i,u]=t[a]),i==null)throw new V(`Unknown ${s}: ${a}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(u!=null){const c={};for(const p of Object.keys(nr))c[p]=nr[p];for(const p of Object.keys(e))c[p]=e[p];const l=o.config;l.customObjects=c;const d=Object.assign({},nr);for(const p of Object.keys(e))nr[p]=e[p];hx(o.config);const h=u(i,o.config,e,r);return nr=Object.assign({},d),h}else{const c=Object.assign({},nr);for(const d of Object.keys(e))nr[d]=e[d];const l=new i(o.config);return nr=Object.assign({},c),l}}}function Dj(n,t){return n<t?-1:n>t?1:0}function yf(n,t){return-1*Dj(n,t)}function ka(n){if(n==null)return n;const t=[];for(const e of n)t.indexOf(e)===-1&&t.push(e);return t}function Rj(n){if(n==null)throw new V(`Invalid value in obj: ${JSON.stringify(n)}`);for(const t in n)if(n.hasOwnProperty(t))return!1;return!0}function ou(n,t,e){if(e!=null&&n.indexOf(e)<0)throw new V(`${e} is not a valid ${t}.  Valid values are ${n} or null/undefined.`)}function h0(n,t,e=0,s=1/0){return Qr(e>=0),Qr(s>=e),Array.isArray(n)&&n.length>=e&&n.length<=s&&n.every(r=>typeof r===t)}function _n(n,t){Array.isArray(n)?(T(n.length>0,()=>`${t} is unexpectedly an empty array.`),n.forEach((e,s)=>_n(e,`element ${s+1} of ${t}`))):T(Number.isInteger(n)&&n>0,()=>`Expected ${t} to be a positive integer, but got ${r2(n)}.`)}function r2(n){return n===null?"null":Array.isArray(n)?"["+n.map(t=>r2(t)).join(",")+"]":typeof n=="string"?`"${n}"`:`${n}`}function Fj(n,t,e){let s=e!=null?e():Un(),r;return(...a)=>{const i=e!=null?e():Un();return i-s<t||(s=i,r=n(...a)),r}}function o2(n){return n==="relu"?"relu":n==="linear"?"linear":n==="elu"?"elu":null}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let Oj=0;function a2(){return Oj++}const bf={};function gy(n=""){return n in bf||(bf[n]=0),bf[n]+=1,n+bf[n].toString()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Pj=["channelsFirst","channelsLast"],Lj=["nearest","bilinear"],Mj=["valid","same","causal"],Bj=["max","avg"],zj=["sum","mul","concat","ave"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const vu=new Map;function an(n){ou(Pj,"DataFormat",n)}function Vj(n){ou(Lj,"InterpolationFormat",n)}function Qs(n){ou(Mj,"PaddingMode",n)}function i2(n){ou(Bj,"PoolMode",n)}const kd=[],gk="/";function xi(n,t){kd.push(n);try{const e=t();return kd.pop(),e}catch(e){throw kd.pop(),e}}function Wj(){return kd.length===0?"":kd.join(gk)+gk}function u2(n){if(!c2(n))throw new Error("Not a valid tensor name: '"+n+"'");return Wj()+n}function l2(n){if(!c2(n))throw new Error("Not a valid tensor name: '"+n+"'");vu.has(n)||vu.set(n,0);const t=vu.get(n);if(vu.set(n,vu.get(n)+1),t>0){const e=`${n}_${t}`;return vu.set(e,1),e}else return n}const Uj=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function c2(n){return!!n.match(Uj)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Gj(n){return n===parseInt(n.toString(),10)}function $a(n,t,e){t==null&&(t=0),e==null&&(e=n.length);let s=1;for(let r=t;r<e;++r)s*=n[r];return s}function sl(n){if(n.length===0)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let e=0;e<n.length;e++){const s=n[e];s<t&&(t=s)}return t}function Aa(n){if(n.length===0)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let e=0;e<n.length;e++){const s=n[e];s>t&&(t=s)}return t}function Mr(n,t){if(t<n)throw new V(`end (${t}) < begin (${n}) is forbidden.`);const e=[];for(let s=n;s<t;++s)e.push(s);return e}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let db;function xn(){return db==null&&(db=PB().epsilon()),db}function Br(){return"channelsLast"}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ao(n,t){return It(n,t)}function Up(n,t=-1){const e=n.shape.slice();return t<0&&(t=e.length+t+1),e.splice(t,0,1),K(n,e)}function Hj(n,t){return Q(()=>{if(n.shape.length!==2)throw new V(`repeat() expects a rank-2 tensor, but received a rank-${n.shape.length} tensor.`);const e=Up(n,1);return px(e,[1,t,1])})}function jj(n){const t=[$a(n.shape)];return K(n,t)}function qj(n){if(n.rank<=1)throw new V(`batchFlatten requires a minimum rank of 2. Got rank: ${n.rank}.`);const t=[n.shape[0],$a(n.shape,1)];return K(n,t)}function wi(n,t,e){return Q(()=>{switch(n.rank){case 1:return S1(n,t,e);case 2:return wC(n,[t,0],[e,n.shape[1]]);case 3:return N1(n,[t,0,0],[e,n.shape[1],n.shape[2]]);case 4:return pm(n,[t,0,0,0],[e,n.shape[1],n.shape[2],n.shape[3]]);case 5:return Pe(n,[t,0,0,0,0],[e,n.shape[1],n.shape[2],n.shape[3],n.shape[4]]);case 6:return Pe(n,[t,0,0,0,0,0],[e,n.shape[1],n.shape[2],n.shape[3],n.shape[4],n.shape[5]]);default:throw new V(`sliceAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}})}function hb(n,t,e){return Q(()=>{switch(n.rank){case 1:return S1(n,t,e);case 2:return wC(n,[0,t],[n.shape[0],e]);case 3:return N1(n,[0,0,t],[n.shape[0],n.shape[1],e]);case 4:return pm(n,[0,0,0,t],[n.shape[0],n.shape[1],n.shape[2],e]);default:throw new V(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function xf(n,t,e,s){return Q(()=>{switch(n.rank){case 1:return S1(n,t,e);case 2:switch(s){case 1:return wi(n,t,e);case 2:return hb(n,t,e);default:throw new V(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return wi(n,t,e);case 2:return N1(n,[0,t,0],[n.shape[0],e,n.shape[2]]);case 3:return hb(n,t,e);default:throw new V(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return wi(n,t,e);case 2:return pm(n,[0,t,0,0],[n.shape[0],e,n.shape[2],n.shape[3]]);case 3:return pm(n,[0,0,t,0],[n.shape[0],n.shape[1],e,n.shape[3]]);case 4:return hb(n,t,e);default:throw new V(`The axis is not within the rank of the tensor ${s}`)}default:throw new V(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function p0(n,t=-1){let e;return t<0&&(e=n[0].rank,e!==0?t=e:t=0),t===n[0].rank&&(t=-1),vs(n,t)}function yk(n,t){switch(n.rank){case 1:return oV([n,t]);case 2:return iV([n,t],0);case 3:return lV([n,t],0);case 4:return dV([n,t],0);default:throw new V(`concatAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}}function px(n,t){if(Array.isArray(t)||(t=[t]),n.rank!==t.length)throw new V(`The length of input n (${t.length}) does not match the number of dimensions in input x (${n.rank})`);return Tr(n,t)}function yy(n,t=0,e=1,s,r){return v4(n,t,e,s,r)}function io(n,t,e,s){if(n.rank<2||t.rank<2)throw new Kt(`dot requires both inputs to be rank >= 2 but got x shape = ${n.shape} and y shape = ${t.shape}`);if(t.rank>=3){const r=n.shape.slice(-1)[0],o=t.shape.slice(-2)[0];if(r!==o)throw new Kt(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${n.shape} and  y shape = ${t.shape}`)}if(n.rank===2&&t.rank===2)return sk({a:n,b:t,transposeA:!1,transposeB:!1,bias:s?fx(n.rank,s,Br()):null,activation:e});{const r=n.shape.slice(),o=r.pop();n=K(n,[-1,o]);const a=t.shape.slice(),i=a.pop(),u=a.pop(),c=[...a,i],l=Array.from({length:t.rank},(f,m)=>m===0?t.rank-2:m<=t.rank-2?m-1:m);t=K(oe(t,l),[u,-1]);const d=[...r,...c];return K(sk({a:n,b:t,transposeA:!1,transposeB:!1,bias:s?fx(n.rank,s,Br()):null,activation:e}),d)}}function d2(n,t,e){return Q(()=>(Array.isArray(t)?t=Ds(t,"int32"):t=It(t,"int32"),g1(n,t,e)))}function Gp(n){return W(n,n)}function fx(n,t,e){const s=t.shape;if(t.rank!==1&&t.rank!==n)throw new V(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${n}`);if(n===5){if(e==="channelsFirst")return s.length===1?K(t,[1,s[0],1,1,1]):K(t,[1,s[3],s[0],s[1],s[2]]);if(e==="channelsLast")return s.length===1?K(t,[1,1,1,1,s[0]]):K(t,[1].concat(s))}else if(n===4){if(e==="channelsFirst")return s.length===1?K(t,[1,s[0],1,1]):K(t,[1,s[2],s[0],s[1]]);if(e==="channelsLast")return s.length===1?K(t,[1,1,1,s[0]]):K(t,[1].concat(s))}else if(n===3){if(e==="channelsFirst")return s.length===1?K(t,[1,s[0],1]):K(t,[1,s[1],s[0]]);if(e==="channelsLast")return s.length===1?K(t,[1,1,s[0]]):K(t,[1].concat(s))}else if(n<3)return t;throw new V(`Unsupported input rank by biasAdd: ${t.rank}`)}function Gr(n,t,e){return Q(()=>(e==null&&(e=Br()),an(e),ht(n,fx(n.rank,t,e))))}function Kj(n,t=1){if(t!==1)throw new Kt(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Qg(n)}function Xj(n){return Q(()=>Ft(n,ht(es(n),1)))}function h2(n,t,e,s){return Q(()=>gU(n,t,e,s))}function Yj(n){return Q(()=>{const t=ht(.5,W(.2,n));return Ys(t,0,1)})}function Hp(n,t,e=!1){return e?n():t()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Jj=["fanIn","fanOut","fanAvg"],Zj=["normal","uniform","truncatedNormal"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Qj(n){ou(Jj,"FanMode",n)}function tq(n){ou(Zj,"Distribution",n)}class gr extends zc{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class p2 extends gr{apply(t,e){return Cn(t,e)}}p2.className="Zeros";ut(p2);class f0 extends gr{apply(t,e){return Ga(t,e)}}f0.className="Ones";ut(f0);class f2 extends gr{constructor(t){if(super(),typeof t!="object")throw new V(`Expected argument of type ConstantConfig but got ${t}`);if(t.value===void 0)throw new V(`config must have value set but got ${t}`);this.value=t.value}apply(t,e){return Q(()=>W(xe(this.value),Ga(t,e)))}getConfig(){return{value:this.value}}}f2.className="Constant";ut(f2);class m2 extends gr{constructor(t){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=t.minval||this.DEFAULT_MINVAL,this.maxval=t.maxval||this.DEFAULT_MAXVAL,this.seed=t.seed}apply(t,e){return Mp(t,this.minval,this.maxval,e,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}m2.className="RandomUniform";ut(m2);class g2 extends gr{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if(e=e||"float32",e!=="float32"&&e!=="int32")throw new Kt(`randomNormal does not support dType ${e}.`);return yy(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}g2.className="RandomNormal";ut(g2);class y2 extends gr{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if(e=e||"float32",e!=="float32"&&e!=="int32")throw new Kt(`truncatedNormal does not support dType ${e}.`);return kC(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}y2.className="TruncatedNormal";ut(y2);let b2=class extends gr{constructor(t){super(),this.gain=t.gain!=null?t.gain:1}apply(t,e){return Q(()=>{if(t.length!==2||t[0]!==t[1])throw new V("Identity matrix initializer can only be used for 2D square matrices.");return W(this.gain,aC(t[0]))})}getConfig(){return{gain:this.gain}}};b2.className="Identity";ut(b2);function eq(n,t="channelsLast"){let e,s;if(an(t),n.length===2)e=n[0],s=n[1];else if([3,4,5].indexOf(n.length)!==-1){if(t==="channelsFirst"){const r=$a(n,2);e=n[1]*r,s=n[0]*r}else if(t==="channelsLast"){const r=$a(n,0,n.length-2);e=n[n.length-2]*r,s=n[n.length-1]*r}}else{const r=$a(n);e=Math.sqrt(r),s=Math.sqrt(r)}return[e,s]}class Ps extends gr{constructor(t){if(super(),t.scale<0)throw new V(`scale must be a positive float. Got: ${t.scale}`);this.scale=t.scale==null?1:t.scale,this.mode=t.mode==null?"fanIn":t.mode,Qj(this.mode),this.distribution=t.distribution==null?"normal":t.distribution,tq(this.distribution),this.seed=t.seed}apply(t,e){const s=eq(t),r=s[0],o=s[1];let a=this.scale;if(this.mode==="fanIn"?a/=Math.max(1,r):this.mode==="fanOut"?a/=Math.max(1,o):a/=Math.max(1,(r+o)/2),this.distribution==="normal"){const i=Math.sqrt(a);if(e=e||"float32",e!=="float32"&&e!=="int32")throw new Kt(`${this.getClassName()} does not support dType ${e}.`);return kC(t,0,i,e,this.seed)}else{const i=Math.sqrt(3*a);return Mp(t,-i,i,e,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Ps.className="VarianceScaling";ut(Ps);class m0 extends Ps{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return Ps.className}}m0.className="GlorotUniform";ut(m0);class g0 extends Ps{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return Ps.className}}g0.className="GlorotNormal";ut(g0);class y0 extends Ps{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return Ps.className}}y0.className="HeNormal";ut(y0);class b0 extends Ps{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return Ps.className}}b0.className="HeUniform";ut(b0);class x0 extends Ps{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return Ps.className}}x0.className="LeCunNormal";ut(x0);class w0 extends Ps{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return Ps.className}}w0.className="LeCunUniform";ut(w0);class x2 extends gr{constructor(t){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=t.gain==null?this.DEFAULT_GAIN:t.gain,this.seed=t.seed}apply(t,e){return Q(()=>{if(t.length<2)throw new Kt("Shape must be at least 2D.");if(e!=="int32"&&e!=="float32"&&e!==void 0)throw new TypeError(`Unsupported data type ${e}.`);e=e;const s=j(t.slice(0,-1)),r=t[t.length-1],o=s*r;o>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${o}) elements: Slowness may result.`);const a=[Math.max(r,s),Math.min(r,s)],i=yy(a,0,1,e,this.seed),u=hG.qr(i,!1);let c=u[0];const d=u[1].flatten().stridedSlice([0],[Math.min(r,s)*Math.min(r,s)],[Math.min(r,s)+1]);return c=W(c,d.sign()),s<r&&(c=c.transpose()),W(xe(this.gain),c.reshape(t))})}getConfig(){return{gain:this.gain,seed:this.seed}}}x2.className="Orthogonal";ut(x2);const bk={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function xk(n,t={}){return Wp(n,lr.getMap().classNameMap,t,"initializer")}function Ye(n){return d0(n)}function je(n){if(typeof n=="string"){const t=n in bk?bk[n]:n;if(t==="GlorotNormal")return new g0;if(t==="GlorotUniform")return new m0;if(t==="HeNormal")return new y0;if(t==="HeUniform")return new b0;if(t==="LeCunNormal")return new x0;if(t==="LeCunUniform")return new w0;{const e={};return e.className=t,e.config={},xk(e)}}else return n instanceof gr?n:xk(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function mx(n){return Array.isArray(n)&&Array.isArray(n[0])}function fm(n){return n.length===0?[]:Array.isArray(n[0])?n:[n]}function Bt(n){let t;if(Array.isArray(n)){if(n.length!==1)throw new V(`Expected Tensor length to be 1; got ${n.length}`);t=n[0]}else t=n;return t}function pe(n){if(Array.isArray(n)&&Array.isArray(n[0])){if(n.length===1)return n=n,n[0];throw new V(`Expected exactly 1 Shape; got ${n.length}`)}else return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function mm(n){let t=0;for(const e of n)e.shape.length===0?t+=1:t+=e.shape.reduce((s,r)=>s*r);return t}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const wk="Variable";class nq{constructor(t,e="float32",s=wk,r=!0,o=null){this.dtype=e??"float32",this.shape=t.shape,this.id=a2(),s=s??wk,this.originalName=u2(s),this.name=l2(this.originalName),this.trainable_=r,this.constraint=o,this.val=hU(t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),sq(this.val,t),this.val.id!==t.id&&(this.val.assign(t),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}}function sq(n,t){if(n.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(n.shape)+" vs. "+JSON.stringify(t.shape))}function gx(n){return n.map(t=>t.read())}function v0(n){n.forEach(t=>{t[0].write(t[1])})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class wn{constructor(t){this.dtype=t.dtype,this.shape=t.shape,t.shape!=null?this.ndim=t.shape.length:this.ndim=t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}}class yo{constructor(t,e,s,r,o,a,i){this.dtype=t,this.shape=e,this.sourceLayer=s,this.inputs=r,this.callArgs=o,this.outputTensorIndex=i,this.id=a2(),a!=null&&(this.originalName=u2(a),this.name=l2(this.originalName)),this.rank=e.length}}let rq=0,by=class{constructor(t,e){this.callArgs=e,this.id=rq++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(const s of t.inboundLayers)s!=null&&s.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){const t=[];for(const e of this.inboundLayers)e!=null?t.push(e.name):t.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},oq=0;class Qt extends zc{constructor(t={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=oq++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let e=t.name;if(!e){const s=this.getClassName();e=_o(s)+"_"+gy(s)}if(this.name=e,this.trainable_=t.trainable==null?!0:t.trainable,t.inputShape!=null||t.batchInputShape!=null){let s;if(t.batchInputShape!=null)s=t.batchInputShape;else if(t.inputShape!=null){let o=null;t.batchSize!=null&&(o=t.batchSize),s=[o].concat(t.inputShape)}this.batchInputShape=s;let r=t.dtype;r==null&&(r=t.inputDType),r==null&&(r="float32"),this.dtype=r}t.weights!=null?this.initialWeights=t.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(t,e){return t.name+"_ib-"+e.toString()}getNodeAtIndex(t,e){if(this.inboundNodes.length===0)throw new cr(`The layer has never been called and thus has no defined ${e}.`);if(this.inboundNodes.length<=t)throw new V(`Asked to get ${e} at node ${t}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[t]}getInputAt(t){return gs(this.getNodeAtIndex(t,"input").inputTensors)}getOutputAt(t){return gs(this.getNodeAtIndex(t,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Zr(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new Zr(`Layer ${this.name} is not connected, no input to return.`);return gs(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new Zr(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Zr(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return gs(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(t=>t())}get updates(){return this._updates}get built(){return this._built}set built(t){this._built=t}get trainable(){return this.trainable_}set trainable(t){this._trainableWeights.forEach(e=>e.trainable=t),this.trainable_=t}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(t=>t.trainable):[]}set trainableWeights(t){this._trainableWeights=t}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(t=>!t.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(t){this._nonTrainableWeights=t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(t){const e=Se(t);if(this.inputSpec==null||this.inputSpec.length===0)return;const s=Se(this.inputSpec);if(e.length!==s.length)throw new V(`Layer ${this.name} expects ${s.length} inputs, but it received ${e.length} input tensors. Input received: ${t}`);for(let r=0;r<e.length;r++){const o=e[r],a=s[r];if(a==null)continue;const i=o.rank;if(a.ndim!=null&&i!==a.ndim)throw new V(`Input ${r} is incompatible with layer ${this.name}: expected ndim=${a.ndim}, found ndim=${i}`);if(a.maxNDim!=null&&i>a.maxNDim)throw new V(`Input ${r} is incompatible with layer ${this.name}: expected max_ndim=${a.maxNDim}, found ndim=${i}`);if(a.minNDim!=null&&i<a.minNDim)throw new V(`Input ${r} is incompatible with layer ${this.name}: expected min_ndim=${a.minNDim}, found ndim=${i}.`);if(a.dtype!=null&&o.dtype!==a.dtype)throw new V(`Input ${r} is incompatible with layer ${this.name} : expected dtype=${a.dtype}, found dtype=${o.dtype}.`);if(a.axes){const u=o.shape;for(const c in a.axes){const l=Number(c),d=a.axes[c],h=l>=0?u[l]:u[u.length+l];if(d!=null&&[d,null].indexOf(h)===-1)throw new V(`Input ${r} is incompatible with layer ${this.name}: expected axis ${l} of input shape to have value ${d} but got shape ${u}.`)}}if(a.shape!=null)for(let u=0;u<a.shape.length;++u){const c=a.shape[u],l=o.shape[u];if(c!=null&&l!=null&&c!==l)throw new V(`Input ${r} is incompatible with layer ${this.name}: expected shape=${a.shape}, found shape=${o.shape}.`)}}}call(t,e){return t}invokeCallHook(t,e){this._callHook!=null&&this._callHook(t,e)}setCallHook(t){this._callHook=t}clearCallHook(){this._callHook=null}apply(t,e){e=e||{},this.assertNotDisposed();const s=Se(t),r=uq(t),o=lq(t);if(r===o)throw new V("Arguments to apply() must be all SymbolicTensors or all Tensors");return xi(this.name,()=>{if(!this.built){this.assertInputCompatibility(t);const a=[];for(const i of Se(t))a.push(i.shape);this.build(gs(a)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&o&&(this._refCount=1)}if(this.assertInputCompatibility(t),o){let a=this.call(t,e);this.supportsMasking&&this.setMaskMetadata(t,a);const i=Se(a),u=[];for(let c of i)s.indexOf(c)!==-1&&(c=c.clone()),u.push(c);if(a=gs(u),this.activityRegularizer!=null)throw new Kt("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}else{const a=aq(t),i=this.computeOutputShape(a);let u;const c=iq(t);if(this.warnOnIncompatibleInputShape(Array.isArray(t)?a[0]:a),i!=null&&i.length>0&&Array.isArray(i[0])?u=i.map((l,d)=>new yo(c,l,this,Se(t),e,this.name,d)):u=new yo(c,i,this,Se(t),e,this.name),this.addInboundNode(t,u,null,null,a,i,e),this._refCount++,this.activityRegularizer!=null)throw new Kt("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return u}})}warnOnIncompatibleInputShape(t){if(this.batchInputShape!=null)if(t.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(t)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let e=!1;this.batchInputShape.forEach((s,r)=>{s!=null&&t[r]!=null&&t[r]!==s&&(e=!0)}),e&&console.warn(`The shape of the input tensor (${JSON.stringify(t)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new Zr(`The layer ${this.name} has never been called and thus has no defined output shape.`);const t=[];for(const e of this.inboundNodes){const s=JSON.stringify(e.outputShapes);t.indexOf(s)===-1&&t.push(s)}if(t.length===1){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&e.length===1?e[0]:e}else throw new Zr(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new cr(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return mm(this.weights)}build(t){this.built=!0}getWeights(t=!1){return gx(t?this.trainableWeights:this.weights)}setWeights(t){Q(()=>{const e=this.weights;if(e.length!==t.length)throw new V(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${t.length}, but the layer was expecting ${e.length} weights. Provided weights: ${t}...`);if(e.length===0)return;const s=[],r=gx(e);for(let o=0;o<r.length;++o){const a=r[o],i=e[o],u=t[o];if(!we(a.shape,u.shape))throw new V(`Layer weight shape ${a.shape} not compatible with provided weight shape ${u.shape}`);s.push([i,u])}v0(s)})}addWeight(t,e,s,r,o,a,i,u){if(this._addedWeightNames.indexOf(t)!==-1)throw new V(`Duplicate weight name ${t} for layer ${this.name}`);this._addedWeightNames.push(t),s==null&&(s="float32"),this.fastWeightInitDuringBuild&&(r=u!=null?u():je("zeros"));const c=r.apply(e,s),l=new nq(c,s,t,a,i);return c.dispose(),o!=null&&this.addLoss(()=>o.apply(l.read())),a==null&&(a=!0),a?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(t){this.fastWeightInitDuringBuild=t}addLoss(t){t==null||Array.isArray(t)&&t.length===0||(t=Se(t),this._losses!==void 0&&this._losses!==null&&this.losses.push(...t))}computeOutputShape(t){return t}computeMask(t,e){if(!this.supportsMasking){if(e!=null)if(Array.isArray(e))e.forEach(s=>{if(s!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return e}setMaskMetadata(t,e,s){if(!this.supportsMasking)return;const r=this.computeMask(t,s),o=Se(e),a=Se(r);if(o.length!==a.length)throw new Error(`${this.name} outputs ${o.length} tensors but ${o.length} masks for those tensors`);for(let i=0;i<o.length;i++)o[i].kerasMask=a[i]}addInboundNode(t,e,s,r,o,a,i=null){const u=Se(t);e=Se(e),s=Se(s),r=Se(r),o=fm(o),a=fm(a);const c=[],l=[],d=[];for(const h of u)c.push(h.sourceLayer),l.push(h.nodeIndex),d.push(h.tensorIndex);new by({outboundLayer:this,inboundLayers:c,nodeIndices:l,tensorIndices:d,inputTensors:u,outputTensors:e,inputMasks:s,outputMasks:r,inputShapes:o,outputShapes:a},i);for(let h=0;h<e.length;h++)e[h].sourceLayer=this,e[h].nodeIndex=this.inboundNodes.length-1,e[h].tensorIndex=h}getConfig(){const t={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(t.batchInputShape=this.batchInputShape),this.dtype!=null&&(t.dtype=this.dtype),t}disposeWeights(){return this.weights.forEach(t=>t.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let t=0;return--this._refCount===0&&(t=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:t}}}function aq(n){n=Se(n);const t=[];for(const e of n)t.push(e.shape);return gs(t)}function iq(n){return"float32"}function w2(n,t,e){if((t==null||e!=null&&e>0)&&(t=n.sourceLayer,e=n.nodeIndex),t.inboundNodes.length===0)return[n];{const s=t.inboundNodes[e];if(s.inboundLayers.length===0)return s.inputTensors;{const r=[];for(let o=0;o<s.inboundLayers.length;o++){const a=s.inputTensors[o],i=s.inboundLayers[o],u=s.nodeIndices[o],c=w2(a,i,u);for(const l of c)r.indexOf(l)===-1&&r.push(l)}return r}}}function uq(n){let t=!0;for(const e of Se(n))if(!(e instanceof yo)){t=!1;break}return t}function lq(n){let t=!0;for(const e of Se(n))if(e instanceof yo){t=!1;break}return t}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class jp extends Qt{constructor(t){if(super({dtype:t.dtype,name:t.name!=null?t.name:gy("input").toString()}),t.batchSize==null&&(t.batchSize=null),t.sparse==null&&(t.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=t.sparse,t.inputShape!=null&&t.batchInputShape!=null)throw new V("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let e=t.batchInputShape;if(e==null){if(t.inputShape==null)throw new V("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");e=[t.batchSize].concat(t.inputShape)}else if(t.batchSize!=null)throw new V("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const s=t.dtype||"float32";this.batchInputShape=e,this.dtype=s,this.inputSpec=[{shape:e}];const r=new yo(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new by({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[e],outputShapes:[e]})}apply(t,e){throw new V(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}jp.className="InputLayer";ut(jp);function cq(n){if(n.batchShape==null&&n.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(n.batchShape!=null&&n.shape!=null)throw new V("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=n.batchShape;n.shape!=null&&t==null&&(t=[null].concat(n.shape));let e=n.dtype;return e==null&&(e="float32"),new jp({batchInputShape:t,name:n.name,dtype:e,sparse:n.sparse}).inboundNodes[0].outputTensors[0]}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function dq(n,t){if(n.dtype==null||n.dtype===t.dtype)return t;try{return It(t,n.dtype)}catch{throw new V(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${n.name}' (${n.dtype}).`)}}class ma{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof ma)for(const e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(t==null)return;for(const e of t)this.add(e.key,e.value)}}add(t,e,s){if(this.id2Value[t.id]==null)this.id2Value[t.id]=dq(t,e),this.name2Id[t.name]=t.id,s!=null&&(this.id2Mask[t.id]=s);else throw new V(`Duplicate key: name=${t.name}, id=${t.id}`);return this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return this.id2Value[t.id]!=null}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof yo){if(this.id2Value[t.id]==null)throw new V(`Nonexistent key: ${t.name}`);return this.id2Value[t.id]}else{const e=this.name2Id[t];if(e==null)throw new V(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Value[e]}}getMask(t){if(t instanceof yo){if(this.id2Value[t.id]==null)throw new V(`Nonexistent key: ${t.name}`);return this.id2Mask[t.id]}else{const e=this.name2Id[t];if(e==null)throw new V(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Mask[e]}}disposeMasks(){this.id2Mask!=null&&te(this.id2Mask)}}const gm=new s2,ym=new s2;function hq(n){gm!=null&&gm.setMaxEntries(n),ym!=null&&ym.setMaxEntries(n)}function md(n,t,e,s){const r=e==null?!1:e.training,o=Array.isArray(n),a=o?n:[n],i=a.map(f=>f.name),u=[],c=t.names();for(const f of i)c.indexOf(f)!==-1?u.push(t.getValue(f)):u.push(null);const l=i.join(",")+"|"+t.names().sort().join(",");let d=gm.get(l),h;if(d==null){const f=pq(a,t);d=f.sorted,h=f.recipientCounts,gm.put(l,d),ym.put(l,h)}h={},r||Object.assign(h,ym.get(l));const p=new ma(t);for(let f=0;f<d.length;++f){const m=d[f],g=m.sourceLayer;if(g instanceof jp)continue;const y=[],b=[],x=[];let w=!1;for(const C of m.inputs){const N=p.getValue(C),$=p.getMask(C);y.push(N),b.push($),$!=null&&(w=!0),r||(h[C.name]--,h[C.name]===0&&!t.hasKey(C)&&i.indexOf(C.name)===-1&&!N.isDisposed&&C.sourceLayer.stateful!==!0&&x.push(N))}w&&(e=e||{},e.mask=b[0]);const v=Se(g.apply(y,e));let k=null;g.supportsMasking&&(k=g.computeMask(y,b));const S=mq(m),_=Array.isArray(S)?S:[S];for(let C=0;C<_.length;++C){p.hasKey(_[C])||p.add(_[C],v[C],Array.isArray(k)?k[0]:k);const N=i.indexOf(_[C].name);N!==-1&&(u[N]=v[C])}r||te(x)}return p.disposeMasks(),o?u:u[0]}function pq(n,t){T(n!=null&&n.length>0,()=>"Expected at least one fetch, got none");let e=[],s={};if(n.length===1){const r=vk(n[0],t);e=r.sorted,s=r.recipientMap}else{const r=new Set;for(const o of n){const{sorted:a,recipientMap:i}=vk(o,t);for(const u of a)r.has(u.name)||(e.push(u),r.add(u.name));for(const u in i)s[u]==null&&(s[u]=new Set),i[u].forEach(c=>s[u].add(c))}}return{sorted:e,recipientCounts:fq(s)}}function fq(n){const t={};for(const e in n)t[e]=n[e].size;return t}function vk(n,t){const e=new Set,s=[],r={};for(const i of t.names())e.add(i);const o=[],a=[];for(o.push(n);o.length>0;){const i=o[o.length-1];if(e.has(i.name)){o.pop();continue}const u=a[a.length-1]===o.length-1;if(i.inputs.length===0||u)o.pop(),s.push(i),e.add(i.name),u&&a.pop();else{a.push(o.length-1);for(const c of i.inputs)r[c.name]==null&&(r[c.name]=new Set),r[c.name].add(i.name),!e.has(c.name)&&o.push(c)}}return{sorted:s,recipientMap:r}}function mq(n){let t;if(n.sourceLayer.inboundNodes.length===1)t=n.sourceLayer.output;else{let e=null;for(let s=0;s<n.sourceLayer.inboundNodes.length;++s)for(const r of n.sourceLayer.inboundNodes[s].outputTensors)if(r.id===n.id){e=s;break}t=n.sourceLayer.getOutputAt(e)}return t}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gq=et();gq.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,hq);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function I0(n,t){return Q(()=>Kn(Rt(W(n,n),t,!0)))}class qp extends zc{getConfig(){return{}}}class v2 extends qp{constructor(t){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=t.maxValue!=null?t.maxValue:this.defaultMaxValue,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return Q(()=>{const e=I0(t,this.axis),s=Ys(e,0,this.maxValue);return W(t,Ft(s,ht(xn(),e)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}v2.className="MaxNorm";ut(v2);class I2 extends qp{constructor(t){super(),this.defaultAxis=0,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return Q(()=>Ft(t,ht(xn(),I0(t,this.axis))))}getConfig(){return{axis:this.axis}}}I2.className="UnitNorm";ut(I2);class k2 extends qp{apply(t){return eu(t)}}k2.className="NonNeg";ut(k2);class $2 extends qp{constructor(t){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=t.minValue!=null?t.minValue:this.defaultMinValue,this.maxValue=t.maxValue!=null?t.maxValue:this.defaultMaxValue,this.rate=t.rate!=null?t.rate:this.defaultRate,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return Q(()=>{const e=I0(t,this.axis),s=ht(W(this.rate,Ys(e,this.minValue,this.maxValue)),W(1-this.rate,e));return W(t,Ft(s,ht(xn(),e)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}$2.className="MinMaxNorm";ut($2);const Ik={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function vn(n){return d0(n)}function kk(n,t={}){return Wp(n,lr.getMap().classNameMap,t,"constraint")}function In(n){if(n==null)return null;if(typeof n=="string"){const e={className:n in Ik?Ik[n]:n,config:{}};return kk(e)}else return n instanceof qp?n:kk(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function si(n){if(n==null)return;const t=[],e=[],s=[];for(const r in n){const o=n[r];if(typeof o!="number"){const a=o;t.push(a.data()),e.push(r),s.push(a)}}if(t.length>0){const r=await Promise.all(t);for(let o=0;o<r.length;++o)n[e[o]]=r[o][0];te(s)}}function S2(n){if(n!=null)for(const t in n){const e=n[t];typeof e!="number"&&e.dispose()}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var $k;(function(n){n[n.SILENT=0]="SILENT",n[n.VERBOSE=1]="VERBOSE"})($k||($k={}));const yq=125;class Wd{constructor(){this.validationData=null}setParams(t){this.params=t}async onEpochBegin(t,e){}async onEpochEnd(t,e){}async onBatchBegin(t,e){}async onBatchEnd(t,e){}async onTrainBegin(t){}async onTrainEnd(t){}setModel(t){}}class bq{constructor(t,e=10){t==null&&(t=[]),this.callbacks=t,this.queueLength=e}append(t){this.callbacks.push(t)}setParams(t){for(const e of this.callbacks)e.setParams(t)}setModel(t){for(const e of this.callbacks)e.setModel(t)}async onEpochBegin(t,e){e==null&&(e={});for(const s of this.callbacks)await s.onEpochBegin(t,e)}async onEpochEnd(t,e){e==null&&(e={});for(const s of this.callbacks)await s.onEpochEnd(t,e)}async onBatchBegin(t,e){e==null&&(e={});for(const s of this.callbacks)await s.onBatchBegin(t,e)}async onBatchEnd(t,e){e==null&&(e={});for(const s of this.callbacks)await s.onBatchEnd(t,e)}async onTrainBegin(t){t==null&&(t={});for(const e of this.callbacks)await e.onTrainBegin(t)}async onTrainEnd(t){t==null&&(t={});for(const e of this.callbacks)await e.onTrainEnd(t)}}class xq extends Wd{constructor(){super()}async onEpochBegin(t){this.seen=0,this.totals={}}async onBatchEnd(t,e){e==null&&(e={});const s=e.size==null?0:e.size;this.seen+=s;for(const r in e){const o=e[r];if(typeof o=="number")this.totals.hasOwnProperty(r)||(this.totals[r]=0),this.totals[r]=this.totals[r]+o*s;else{let a;r in this.totals?a=this.totals[r]:this.totals[r]=0;const i=Q(()=>ht(this.totals[r],W(o,s)));this.totals[r]=i,a!=null&&a.dispose()}}}async onEpochEnd(t,e){if(e!=null)for(const s of this.params.metrics)this.totals[s]!=null&&(typeof this.totals[s]=="number"?e[s]=this.totals[s]/this.seen:Q(()=>{const r=W(Ft(1,this.seen),this.totals[s]);e[s]=r,this.totals[s].dispose(),oo(e[s])}))}}class wq extends Wd{async onTrainBegin(t){this.epoch=[],this.history={}}async onEpochEnd(t,e){e==null&&(e={}),this.epoch.push(t);for(const s in e)this.history[s]==null&&(this.history[s]=[]),this.history[s].push(e[s])}async syncData(){const t=[],e=[],s=[];for(const o in this.history){const a=this.history[o];for(let i=0;i<a.length;++i)if(typeof a[i]!="number"){const u=a[i];t.push(u.data()),e.push(o),s.push(i)}}const r=await Promise.all(t);for(let o=0;o<r.length;++o)this.history[e[o]][s[o]].dispose(),this.history[e[o]][s[o]]=r[o][0]}}class vq extends Wd{constructor(t,e){if(super(),this.currentEpoch=0,this.nowFunc=t.nowFunc,this.nextFrameFunc=t.nextFrameFunc||WC,this.yieldEvery=e||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=yq),this.yieldEvery==="never"&&t.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");Kb(this.yieldEvery)&&(this.maybeWait=Fj(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=t.onTrainBegin,this.trainEnd=t.onTrainEnd,this.epochBegin=t.onEpochBegin,this.epochEnd=t.onEpochEnd,this.batchBegin=t.onBatchBegin,this.batchEnd=t.onBatchEnd,this.yield=t.onYield}async maybeWait(t,e,s){const r=[];this.yield!=null&&(await si(s),r.push(this.yield(t,e,s))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(t,e){this.currentEpoch=t,this.epochBegin!=null&&(await si(e),await this.epochBegin(t,e))}async onEpochEnd(t,e){const s=[];this.epochEnd!=null&&(await si(e),s.push(this.epochEnd(t,e))),this.yieldEvery==="epoch"&&s.push(this.nextFrameFunc()),await Promise.all(s)}async onBatchBegin(t,e){this.batchBegin!=null&&(await si(e),await this.batchBegin(t,e))}async onBatchEnd(t,e){const s=[];this.batchEnd!=null&&(await si(e),s.push(this.batchEnd(t,e))),this.yieldEvery==="batch"?s.push(this.nextFrameFunc()):Kb(this.yieldEvery)&&s.push(this.maybeWait(this.currentEpoch,t,e)),await Promise.all(s)}async onTrainBegin(t){this.trainBegin!=null&&(await si(t),await this.trainBegin(t))}async onTrainEnd(t){this.trainEnd!=null&&(await si(t),await this.trainEnd(t))}}function N2(n,t){return n==null&&(n={}),n instanceof Wd?[n]:Array.isArray(n)&&n[0]instanceof Wd?n:Se(n).map(s=>new vq(s,t))}class ar{constructor(){}static registerCallbackConstructor(t,e){T(t>=0&&Number.isInteger(t),()=>`Verbosity level is expected to be an integer >= 0, but got ${t}`),ar.checkForDuplicate(e),ar.constructors[t]==null&&(ar.constructors[t]=[]),ar.constructors[t].push(e)}static checkForDuplicate(t){for(const e in ar.constructors)ar.constructors[+e].forEach(r=>{if(r===t)throw new V("Duplicate callback constructor.")})}static clear(){ar.constructors={}}static createCallbacks(t){const e=[];for(const s in ar.constructors){const r=+s;t>=r&&e.push(...ar.constructors[r])}return e.map(s=>new s)}}ar.constructors={};function C2(n,t,e,s,r,o,a,i,u){const c=new wq,l=[new xq,...ar.createCallbacks(t)];n!=null&&l.push(...n),l.push(c);const d=new bq(l);return d.setParams({epochs:e,initialEpoch:s,samples:r,steps:o,batchSize:a,verbose:t,doValidation:i,metrics:u}),{callbackList:d,history:c}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Bo(n,t={},e=!1){return Wp(n,lr.getMap().classNameMap,t,"layer",e)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function bm(n,t){return Q(()=>{n.dtype!=="float32"&&(n=It(n,"float32"));const e=Rt(Gp(n),t,!0),s=Zg(e.shape,xn()),r=Kn(Ua(e,s));return Ft(n,r)})}function xy(n,t){return Q(()=>pn(Gp(Mt(t,n)),-1))}function k0(n,t){return Q(()=>pn(es(Mt(t,n)),-1))}function $0(n,t){return Q(()=>{const e=Mt(n,t),s=Ys(es(n),xn(),Number.MAX_VALUE),r=es(Ft(e,s));return W(100,pn(r,-1))})}function Iq(n,t){return Q(()=>{const e=Ys(t,xn(),Number.MAX_VALUE),s=go(ht(1,e)),r=Ys(n,xn(),Number.MAX_VALUE),o=go(ht(1,r));return pn(Gp(Mt(s,o)),-1)})}function kq(n,t){return Q(()=>{const e=Ua(0,Mt(1,W(n,t)));return pn(Gp(e),-1)})}function $q(n,t){return Q(()=>{const e=Ua(0,Mt(1,W(n,t)));return pn(e,-1)})}function Sq(n,t){return Q(()=>{const e=Rt(W(n,t),-1),s=Ar(W(Mt(1,n),t),-1);return Ua(0,ht(1,Mt(s,e)))})}function Nq(n,t){return Q(()=>{const e=Math.log(2),s=Mt(t,n),r=Mt(ht(s,Lp(W(-2,s))),e);return pn(r,-1)})}function Ud(n,t,e=!1){return Q(()=>{if(e)t=C1(t);else{const s=Rt(t,t.shape.length-1,!0);t=Ft(t,s)}return t=Ys(t,xn(),1-xn()),en(Rt(W(It(n,"float32"),go(t)),t.shape.length-1))})}function xm(n,t,e=!1){return Q(()=>{const s=It(ey(jj(n)),"int32");t=Ys(t,xn(),1-xn());const r=t.shape,o=K(dC(s,r[r.length-1]),r);return Ud(o,t,e)})}function Cq(n,t){if(!we(n.shape,t.shape))throw new V(`logits and labels must have the same shape, but got shapes ${JSON.stringify(n.shape)} and ${JSON.stringify(t.shape)}`);return Q(()=>{const e=eu(t),s=en(es(t));return ht(Mt(e,W(t,n)),iC(mo(s)))})}function wy(n,t){return Q(()=>{let e;return e=Ys(t,xn(),1-xn()),e=go(Ft(e,Mt(1,e))),pn(Cq(n,e),-1)})}function _q(n,t){return Q(()=>{const e=Ys(n,xn(),1),s=Ys(t,xn(),1);return Rt(W(n,go(Ft(e,s))),-1)})}function Tq(n,t){return Q(()=>{const e=go(ht(xn(),t));return pn(Mt(t,W(n,e)),-1)})}function _2(n,t){return Q(()=>{const e=bm(n,-1),s=bm(t,-1),r=W(e,s);return en(Rt(r,-1))})}const wm={meanSquaredError:xy,meanAbsoluteError:k0,meanAbsolutePercentageError:$0,meanSquaredLogarithmicError:Iq,squaredHinge:kq,hinge:$q,categoricalHinge:Sq,logcosh:Nq,categoricalCrossentropy:Ud,sparseCategoricalCrossentropy:xm,binaryCrossentropy:wy,kullbackLeiblerDivergence:_q,poisson:Tq,cosineProximity:_2};function pb(n){if(typeof n=="string"){if(n in wm)return wm[n];let t=`Unknown loss ${n}`;throw n.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${n}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new V(t)}else return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function T2(n,t){return Q(()=>{const e=W(.5,mr(t)),s=ao(Zs(t,e),n.dtype);return pn(fo(n,s),-1)})}function E2(n,t){return Q(()=>ao(fo(Pd(n,-1),Pd(t,-1)),"float32"))}function Eq(n,t){return Q(()=>It(Rt(Ho(fo(n,1),fo(t,1))),"float32"))}function Aq(n,t){return Q(()=>It(Rt(Ho(fo(n,0),fo(t,1))),"float32"))}function Dq(n,t){return Q(()=>{const e=Eq(n,t),s=Aq(n,t),r=ht(e,s);return It(is(Zs(r,0),Ft(e,r),0),"float32")})}function Rq(n,t){return wy(n,t)}function Fq(n,t){return n.rank===t.rank&&(n=Bp(n,[n.rank-1])),t=Pd(t,-1),t.dtype!==n.dtype&&(t=It(t,n.dtype)),It(fo(n,t),"float32")}const Oq=xy,Pq=xy,Lq=k0,Mq=k0,Bq=$0,zq=$0,A2=Ud,Vq=_2,D2=xm,vm={binaryAccuracy:T2,categoricalAccuracy:E2,precision:Dq,categoricalCrossentropy:A2,sparseCategoricalCrossentropy:D2,mse:Oq,MSE:Pq,mae:Lq,MAE:Mq,mape:Bq,MAPE:zq,cosine:Vq};function Wq(n){if(typeof n=="string"&&n in vm)return vm[n];if(typeof n!="string"&&n!=null)return n;throw new V(`Unknown metric ${n}`)}function wf(n){if(Qr(n!==null,`Unknown LossOrMetricFn ${n}`),typeof n=="string")return n;{let t;for(const e of Object.keys(wm))if(wm[e]===n){t=e;break}if(t!==void 0)return t;for(const e of Object.keys(vm))if(vm[e]===n){t=e;break}return t!==void 0?t:n.name}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Uq(n){const t={Adagrad:()=>wu.adagrad(.01),Adadelta:()=>wu.adadelta(1,.95,xn()),Adam:()=>wu.adam(.001,.9,.999,xn()),Adamax:()=>wu.adamax(.002,.9,.999,xn(),0),RMSProp:()=>wu.rmsprop(.001,.9,0,xn()),SGD:()=>wu.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,n in t)return t[n]();throw new V(`Unknown Optimizer ${n}`)}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Sk=1*1024*1024;function Nk(n,t,e=!1){if(n==null||typeof n!="object"||Object.getPrototypeOf(n)!==Object.prototype||!yx(n))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(e){const s=JSON.stringify(n);s.length>Sk&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${s.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${Sk}.`)}}function yx(n){if(n===null)return!0;if(typeof n=="object")if(Object.getPrototypeOf(n)===Object.prototype){const t=Object.keys(n);for(const e of t)if(typeof e!="string"||!yx(n[e]))return!1;return!0}else if(Array.isArray(n)){for(const t of n)if(!yx(t))return!1;return!0}else return!1;else{const t=typeof n;return t==="string"||t==="number"||t==="boolean"}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Gq(n,t,e,s=console.log){const r=jq(n),o=["Layer (type)","Input Shape","Output shape","Param #"];r?(t=t||90,e=e||[.32,.61,.89,1]):(t=t||115,e=e||[.24,.48,.7,.8,1]),e[e.length-1]<=1&&(e=e.map(l=>Math.floor(t*l)));let a;if(!r){o.push("Receives inputs"),a=[];for(const l in n.nodesByDepth)a.push(...n.nodesByDepth[l])}s("_".repeat(t)),Im(o,e,s),s("=".repeat(t));const i=n.layers;for(let l=0;l<i.length;++l)r?qq(i[l],e,s):Kq(i[l],e,a,s),s((l===i.length-1?"=":"_").repeat(t));n.checkTrainableWeightsConsistency();const u=Hq(n),c=mm(n.nonTrainableWeights);s(`Total params: ${u+c}`),s(`Trainable params: ${u}`),s(`Non-trainable params: ${c}`),s("_".repeat(t))}function Hq(n){let t;return n.collectedTrainableWeights!=null?t=mm(n.collectedTrainableWeights):t=mm(n.trainableWeights),t}function jq(n){let t=!0;const e=[],s=[];for(const r in n.nodesByDepth)e.push(n.nodesByDepth[r]);for(const r of e){if(r.length>1||r.length===1&&r[0].inboundLayers.length>1){t=!1;break}s.push(...r)}if(t)for(const r of n.layers){let o=!1;for(const a of r.inboundNodes)if(s.indexOf(a)!==-1)if(o){t=!1;break}else o=!0;if(!t)break}return t}function Im(n,t,e=console.log){let s="";for(let r=0;r<n.length;++r)r>0&&(s=s.slice(0,s.length-1)+" "),s+=n[r],s=s.slice(0,t[r]),s+=" ".repeat(t[r]-s.length);e(s)}function qq(n,t,e){let s,r;try{r=n.inboundNodes.map(u=>JSON.stringify(u.inputShapes)).join(",")}catch{r="multiple"}try{s=JSON.stringify(n.outputShape)}catch{s="multiple"}const o=n.name,a=n.getClassName(),i=[`${o} (${a})`,r,s,n.countParams().toString()];Im(i,t,e)}function Kq(n,t,e,s){let r,o;try{o=n.inboundNodes.map(d=>JSON.stringify(d.inputShapes)).join(",")}catch{o="multiple"}try{r=JSON.stringify(n.outputShape)}catch{r="multiple"}const a=[];for(const d of n.inboundNodes)if(!(e!=null&&e.length>0&&e.indexOf(d)===-1))for(let h=0;h<d.inboundLayers.length;++h){const p=d.inboundLayers[h].name,f=d.nodeIndices[h],m=d.tensorIndices[h];a.push(`${p}[${f}][${m}]`)}const i=n.name,u=n.getClassName(),c=a.length===0?"":a[0],l=[`${i} (${u})`,o,r,n.countParams().toString(),c];Im(l,t,s);for(let d=1;d<a.length;++d)Im(["","","","",a[d]],t,s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function R2(n,t,e){return(n==="inboundNodes"||n==="outputLayers"||n==="inputLayers")&&t===0&&typeof e=="string"}function bx(n,t){if(n===null)return null;if(typeof n=="string")return ui(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){const e=[],s=n.length;for(let r=0;r<s;++r){const o=n[r];R2(t,r,o)?e.push(o):e.push(bx(o,t))}return e}else{const e={};for(const s of Object.keys(n)){const r=n[s];if(s==="name"&&typeof r=="string")e[s]=r;else{const o=ui(s);e[o]=bx(r,o)}}return e}}function xx(n,t){if(n==null)return null;if(typeof n=="string")return _o(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){const e=[],s=n.length;for(let r=0;r<s;++r){const o=n[r];R2(t,r,o)?e.push(o):e.push(xx(o,t))}return e}else{const e={};for(const s of Object.keys(n)){const r=n[s],o=_o(s);(s==="name"||s==="className")&&typeof r=="string"?e[o]=r:e[o]=xx(r,s)}return e}}/** @license See the LICENSE file. */const F2="4.22.0";/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Xq=n=>{const t=Object.keys(n);if(t.length===0)return!1;const e=t[0].split("/");return!isNaN(parseInt(e[e.length-1],10))};class Ir extends Qt{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,this.name==null){const b=this.getClassName().toLowerCase();this.name=gy(b)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(t.inputs)?this.inputs=t.inputs.slice():this.inputs=[t.inputs],Array.isArray(t.outputs)?this.outputs=t.outputs.slice():this.outputs=[t.outputs],ka(this.inputs).length!==this.inputs.length)throw new V(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(b=>b.name)}`);ka(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(b=>b.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const b of this.outputs){const x=b.sourceLayer,w=b.nodeIndex,v=b.tensorIndex;this.outputLayers.push(x),this.outputLayersNodeIndices.push(w),this.outputLayersTensorIndices.push(v)}for(const b of this.inputs){const x=b.sourceLayer,w=b.nodeIndex,v=b.tensorIndex;Qr(w===0,"input layer has >1 nodes"),Qr(v===0,"input layer has >1 tensors"),this.inputLayers.push(x),this.inputLayersNodeIndices.push(w),this.inputLayersTensorIndices.push(v)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let b=0;b<this.inputLayers.length;b++){const x=this.inputLayers[b];if(!(x instanceof jp))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${t.inputs}. Input ${b} (0-based) originates from layer type ${x.getClassName()}.`);this.inputNames.push(x.name),this.feedInputShapes.push(x.batchInputShape),this.feedInputNames.push(x.name)}for(const b of this.outputLayers)this.outputNames.push(b.name);this.internalInputShapes=this.inputs.map(b=>b.shape),this.internalOutputShapes=this.outputs.map(b=>b.shape);const e={},s={},r={},o={},a={},i=[],u=(b,x,w,v,k,S)=>{(v==null||k==null||S==null)&&(v=b.sourceLayer,k=b.nodeIndex,S=b.tensorIndex);const _=v.inboundNodes[k];if(w.indexOf(_)!==-1)throw new cr(`The tensor ${b.name} at layer "${v.name}" is part of a cycle.`);if(x.indexOf(_)!==-1)return;this.containerNodes.add(Ir.nodeKey(v,k)),v.id in a||(a[v.id]=Object.keys(a).length),w.indexOf(_)===-1&&w.push(_);const C=_.inboundLayers.length;for(let N=0;N<C;N++){const $=_.inputTensors[N],A=_.inboundLayers[N],D=_.nodeIndices[N],R=_.tensorIndices[N];u($,x,w,A,D,R)}for(x.push(_);w.indexOf(_)>=0;)w.splice(w.indexOf(_),1);i.push(_)},c=[],l=[];for(const b of this.outputs)u(b,c,l);const d=i.slice().reverse();for(const b of d){s[b.id]=b,b.id in e||(e[b.id]=0);let x=e[b.id];const w=r[b.outboundLayer.id]==null?0:r[b.outboundLayer.id];x=Math.max(x,w),r[b.outboundLayer.id]=x,o[b.outboundLayer.id]=b.outboundLayer,e[b.id]=x;for(let v=0;v<b.inboundLayers.length;v++){const k=b.inboundLayers[v],S=b.nodeIndices[v],_=k.inboundNodes[S],C=e[_.id]==null?0:e[_.id];e[_.id]=Math.max(x+1,C),s[_.id]=_}}const h={};for(const b in e){const x=e[b];x in h||(h[x]=[]),h[x].push(s[b])}const p={};for(const b in r){const x=r[b];x in p||(p[x]=[]),p[x].push(o[b])}let f=Object.keys(p).map(b=>parseInt(b,10)).sort(yf);this.layers=[];for(const b of f){const x=p[b];x.sort((w,v)=>{const k=a[w.id],S=a[v.id];return k<S?-1:k>S?1:0});for(const w of x)w instanceof Ir&&this.internalContainerRefs.push(w),this.layers.push(w)}this.layersByDepth=p,f=Object.keys(h).map(b=>parseInt(b,10)).sort(yf);const m=this.inputs.slice(),g=[];for(const b of f)for(const x of h[b]){const w=x.outboundLayer;if(w!=null){for(const v of x.inputTensors)if(m.indexOf(v)===-1)throw new cr(`Graph disconnected: cannot obtain value for tensor ${v} at layer "${w.name}". The following previous layers were accessed without issue: ${g}`);for(const v of x.outputTensors)m.push(v);g.push(w.name)}}this.nodesByDepth=h;const y=this.layers.map(b=>b.name);for(const b of y){const x=y.filter(w=>w===b).length;if(x!==1)throw new cr(`The name "${b}" is used ${x} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(y))}this.outboundNodes=[],this.inboundNodes=[],new by({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(b=>null),outputMasks:this.outputs.map(b=>null),inputShapes:this.inputs.map(b=>b.shape),outputShapes:this.outputs.map(b=>b.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const t={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(const e of this.layers)t.numDisposedVariables+=e.dispose().numDisposedVariables;for(const e of this.internalContainerRefs)t.numDisposedVariables+=e.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach(e=>{e._trainableWeights.forEach(s=>s.trainable=t)}),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new V("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(const e of this.layers)t=t.concat(e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.layers)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const s of this.layers)e.push(...s.trainableWeights);return e.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t,e=!0){const s={};let r=0;const o=Xq(t);o&&this.parseWeights(t);for(const i of this.layers)for(const[u,c]of i.weights.entries()){const l=o?`${c.name.split("/").slice(0,-1).join("/")+"/"}${u}`:c.originalName;if(s[l]!=null)throw new V(`Duplicate weight name: ${l}`);s[l]=c,r++}const a=[];for(const i in t){let u=i;if(s[i]==null){const c=i.split("/");u=c.slice(0,-2).concat([c[c.length-1]]).join("/")}if(s[u]!=null)a.push([s[u],t[i]]);else if(e)throw new V(`Provided weight data has no target variable: ${i}`);delete s[u]}if(e){const i=[];for(const u in s)i.push(u);if(i.length>0)throw new V(`${i.length} of ${r} weights are not set: ${i}`)}v0(a)}parseWeights(t){for(const e in Object.keys(t)){const s=e.split("/"),r=["vars","layer_checkpoint_dependencies"],o=s.map(a=>a.startsWith("_")?a.slice(1):a).filter(a=>!r.includes(a)).join("/");o!==e&&(t[o]=t[e],delete t[e])}}updatedConfig(){const t=this.getConfig(),e={};return e.className=this.getClassName(),e.config=t,e.kerasVersion=`tfjs-layers ${F2}`,e.backend="TensorFlow.js",e}toJSON(t,e=!0){const s=xx(this.updatedConfig());return e?JSON.stringify(s):s}call(t,e){return Q(()=>{t=Se(t);const s=new ma;for(let r=0;r<this.inputs.length;++r)s.add(this.inputs[r],t[r]);return md(this.outputs,s,e)})}computeMask(t,e){return Q(()=>{t=Se(t);let s;return e==null?s=Ri(null,t.length):s=Se(e),this.runInternalGraph(t,s)[1]})}computeOutputShape(t){const e=fm(t);if(e.length!==this.inputLayers.length)throw new V(`Invalid inputShape argument ${t}: model has ${this.inputLayers.length} tensor inputs.`);const s={};for(let i=0;i<e.length;i++){const u=this.inputLayers[i],c=e[i],l=u.name+"_0_0";s[l]=c}const r=Object.keys(this.nodesByDepth).map(i=>parseInt(i,10)).sort(yf);if(r.length>1)for(const i of r){const u=this.nodesByDepth[i];for(const c of u){const l=c.outboundLayer;if(this.inputLayers.map(m=>m.id).indexOf(l.id)!==-1)continue;const d=[];for(let m=0;m<c.inboundLayers.length;m++){const g=c.inboundLayers[m],y=c.nodeIndices[m],b=c.tensorIndices[m],x=`${g.name}_${y}_${b}`,w=s[x];d.push(w)}const h=l.computeOutputShape(gs(d)),p=fm(h),f=l.inboundNodes.indexOf(c);for(let m=0;m<p.length;m++){const g=`${l.name}_${f}_${m}`;s[g]=p[m]}}}const o=[],a=[];for(let i=0;i<this.outputLayers.length;i++){const u=this.outputLayers[i],c=this.outputLayersNodeIndices[i],l=this.outputLayersTensorIndices[i],d=`${u.name}_${c}_${l}`;a.push(d)}for(let i=0;i<a.length;i++){const u=a[i];Qr(u in s),o.push(s[u])}return gs(o)}runInternalGraph(t,e){e==null&&(e=Ri(null,t.length));const s={};for(let u=0;u<this.inputs.length;++u){const c=this.inputs[u],l=t[u],d=e[u];s[c.id]=[l,d]}const r=Object.keys(this.nodesByDepth).map(u=>parseInt(u,10)).sort(yf);for(const u of r){const c=this.nodesByDepth[u];for(const l of c){const d=l.outboundLayer,h=l.inputTensors,p=l.outputTensors,f=new Array;for(const m of h)m.id in s&&f.push(s[m.id]);if(f.length===h.length){let m={},g,y,b,x;if(l.callArgs!=null&&(m=l.callArgs),f.length===1){const[w,v]=f[0];m.mask==null&&(m.mask=v),b=Se(d.call(w,m)),x=Se(d.computeMask(w,v)),g=[w],y=[v]}else g=f.map(w=>w[0]),y=f.map(w=>w[1]),m.mask==null&&(m.mask=y),b=Se(d.call(g,m)),x=Se(d.computeMask(g,y));if(d.activityRegularizer)throw new Kt("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let w=0;w<p.length;++w){const v=p[w],k=b[w],S=x[w];s[v.id]=[k,S]}}}}const o=[],a=[],i=[];for(const u of this.outputs){Qr(u.id in s,`Could not compute output ${u.name} : ${u.id}`);const[c,l]=s[u.id];i.push(c.shape),o.push(c),a.push(l)}return[o,a,i]}buildNodeConversionMap(t){const e={};let s;for(const r of this.layers){s=r instanceof Ir?1:0;for(let o=0;o<r.inboundNodes.length;o++){const a=Ir.nodeKey(r,o);this.containerNodes.has(a)&&(e[a]=s,s+=1)}}return e}getLayer(t,e){if(e!=null)return this.findLayer(e);if(t==null)throw new V("Provide either a layer name or layer index");if(typeof t=="number")return this.findLayer(t);for(const s of this.layers)if(s.name===t)return s;throw new V(`No such layer: ${t}`)}findLayer(t){if(this.layers.length<=t)throw new V(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}calculateLosses(){return Q(()=>{const t=[];for(const e of this.layers)for(let s=0;s<e.inboundNodes.length;++s){const r=Ir.nodeKey(e,s);this.containerNodes.has(r)&&t.push(...e.calculateLosses())}return t})}getConfig(){const t={name:this.name},e=this.buildNodeConversionMap(this.layers),s=[];for(const a of this.layers){const i=a.getClassName(),u=a.getConfig(),c=[];for(let d=0;d<a.inboundNodes.length;d++){const h=a.inboundNodes[d],p=Ir.nodeKey(a,d);let f={};if(this.containerNodes.has(p)){if(h.callArgs)try{JSON.stringify(h.callArgs),f=h.callArgs}catch{console.warn(`Layer ${a.name} was passed non-serializable keyword arguments: ${h.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),f={}}if(h.inboundLayers.length>0){const m=[];for(let g=0;g<h.inboundLayers.length;g++){const y=h.inboundLayers[g],b=h.nodeIndices[g],x=h.tensorIndices[g],w=Ir.nodeKey(y,b);let v=e[w];v==null&&(v=0),m.push([y.name,v,x,f])}c.push(m)}}}const l={};l.name=a.name,l.className=i,l.config=u,l.inboundNodes=c,s.push(l)}t.layers=s;const r=[];for(let a=0;a<this.inputLayers.length;a++){const i=this.inputLayers[a],u=this.inputLayersNodeIndices[a],c=Ir.nodeKey(i,u);if(!this.containerNodes.has(c))continue;let l=e[c];l==null&&(l=0);const d=this.inputLayersTensorIndices[a];r.push([i.name,l,d])}t.inputLayers=r;const o=[];for(let a=0;a<this.outputLayers.length;a++){const i=this.outputLayers[a],u=this.outputLayersNodeIndices[a],c=Ir.nodeKey(i,u);if(!this.containerNodes.has(c))continue;let l=e[c];l==null&&(l=0);const d=this.outputLayersTensorIndices[a];o.push([i.name,l,d])}return t.outputLayers=o,t}static fromConfig(t,e,s={},r=!1){const o={},a={};function i(g,y){g.name in a?a[g.name].push(y):a[g.name]=[y]}function u(g,y){const b=[];let x;for(const w of y){const v=w[0],k=w[1],S=w[2];if(x=w[3]==null?{}:w[3],!(v in o)){i(g,y);return}const _=o[v];if(_.inboundNodes.length<=k){i(g,y);return}const C=_.inboundNodes[k];b.push(C.outputTensors[S])}b.length>0&&g.apply(gs(b),x)}function c(g){const y=g.name,b=Bo(g,e.customObjects!=null?e.customObjects:{});b.setFastWeightInitDuringBuild(r),o[y]=b,g.inboundNodes.forEach(w=>{if(!(w instanceof Array))throw new V(`Corrupted configuration, expected array for nodeData: ${w}`);i(b,w)})}const l=e.name,d=e.layers;for(const g of d)c(g);for(;!Rj(a);)for(const g of d){const y=o[g.name];if(y.name in a){const b=a[y.name];delete a[y.name];for(const x of b)u(y,x)}}const h=[],p=[],f=e.inputLayers;for(const g of f){const y=g[0],b=g[1],x=g[2];Qr(y in o);const v=o[y].inboundNodes[b].outputTensors;h.push(v[x])}const m=e.outputLayers;for(const g of m){const y=g[0],b=g[1],x=g[2];Qr(y in o);const v=o[y].inboundNodes[b].outputTensors;p.push(v[x])}return new t({inputs:h,outputs:p,name:l})}get stateful(){if(this._stateful)throw new V("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const t of this.layers)if(t.stateful)return!0;return!1}resetStates(){Q(()=>{this.layers.forEach(t=>{t.stateful&&t.resetStates()})})}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Yq(n,t,e){const s=t.length;if(n==null||Array.isArray(n)&&n.length===0)return t.map(r=>null);if(s===1)return Array.isArray(n)&&n.length===1?n:typeof n=="object"&&t[0]in n?[n[t[0]]]:[n];if(Array.isArray(n)){if(n.length!==s)throw new Error(`Provided ${e} is an array of ${n.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return n}else if(typeof n=="object"&&Object.keys(n).length>0&&typeof n[Object.keys(n)[0]]=="object"){const r=[];return t.forEach(o=>{o in n?r.push(n[o]):r.push(null)}),r}else throw new Error(`The model has multiple (${s}) outputs, so ${e} must be either an array with ${s} elements or an object with ${t} keys. Provided ${e} not understood: ${JSON.stringify(n)}`)}function O2(n,t){return Yq(n,t,"classWeight")}async function P2(n,t,e,s){if(e!=null){const r=Q(()=>{if(n.shape.length===1)return bi(n);if(n.shape.length===2){if(n.shape[1]>1)return Pd(n,1);if(n.shape[1]===1)return K(n,[n.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${n.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${n.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),o=Array.from(await r.data());te(r);const a=[];return o.forEach(i=>{if(e[i]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${i} exists in the data but not in classWeight`);a.push(e[i])}),Ds(a,"float32")}else return null}function Jq(n,t){return W(n,t)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Zq=32;function L2(n,t){let e,s;const r=t;e=r.xs,s=r.ys,T(e!=null&&s!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);const o=Ck("input",n.inputNames,e),a=Ck("output",n.outputNames,s),i=o[0].shape[0];T(o.length===n.inputs.length,()=>`LayersModel has ${n.inputs.length} inputs, but the dataset provides ${o.length} inputs.  (Expected input keys: ${JSON.stringify(n.inputNames)})`),T(a.length===n.outputs.length,()=>`LayersModel has ${n.outputs.length} outputs, but the dataset provides ${a.length} outputs.  (Expected output keys: ${JSON.stringify(n.outputNames)})`);for(let u=0;u<o.length;u++)T(o[u].shape[0]===i,()=>`Batch size mismatch: input ${n.inputNames[u]} has ${o[u].shape[0]}; expected  ${i} based on input ${n.inputNames[0]}.`);for(let u=0;u<a.length;u++)T(a[u].shape[0]===i,()=>`Batch size mismatch: output ${n.outputNames[u]} has ${a[u].shape[0]}; expected  ${i} based on input ${n.inputNames[0]}.`);return{xs:o,ys:a}}function Ck(n,t,e){if(e instanceof yn)return[e];if(Array.isArray(e))return T(e.length===t.length,()=>`Received an array of ${e.length} Tensors, but expected ${t.length} to match the ${n} keys ${t}.`),e;{const s=[];for(const r of t){if(e[r]==null)throw new V(`The feature data generated by the dataset lacks the required ${n} key '${r}'.`);s.push(e[r])}return s}}function Qq(n){if(n.length===3)throw new Kt("Validation with sample weights is not implemented yet.");return{xs:n[0],ys:n[1]}}async function tK(n,t,e){const s=e.batchesPerEpoch!=null;if(T(n.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),T(e!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),T(e.epochs!=null&&e.epochs>0&&Number.isInteger(e.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${e.epochs}`),T(!s||e.batchesPerEpoch>0&&Number.isInteger(e.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${e.batchesPerEpoch}`),T(e.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),n.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");n.isTraining=!0;try{const r=e.validationData!=null;let o,a;if(r)if(_k(e.validationData))T(e.validationBatches==null||e.validationBatches>0&&Number.isInteger(e.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${e.validationBatches}`);else{const g=Qq(e.validationData);o=g.xs,a=g.ys}const i=n.makeTrainFunction(),u=n.getDedupedMetricsNames();let c;r?c=u.slice().concat(u.map(g=>"val_"+g)):c=u.slice();const l=N2(e.callbacks,e.yieldEvery),d=e.verbose==null?1:e.verbose,{callbackList:h,history:p}=C2(l,d,e.epochs,null,null,eK(t,e),null,r,c);h.setModel(n),n.history=p,await h.onTrainBegin(),n.stopTraining_=!1;let f=e.initialEpoch==null?0:e.initialEpoch,m=await t.iterator();for(;f<e.epochs;){const g={};await h.onEpochBegin(f);let y=0,b=0;for(s||(m=await t.iterator());!s||y<e.batchesPerEpoch;){const x=await m.next();if(s&&x.done){console.warn(`You provided \`batchesPerEpoch\` as ${e.batchesPerEpoch}, but your dataset iterator ran out of data after ${y} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${e.batchesPerEpoch*e.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(x.value!=null){const{xs:w,ys:v}=L2(n,x.value),k={};k.batch=b,k.size=w[0].shape[0],await h.onBatchBegin(b,k);const S=[];if(e.classWeight!=null){const N=O2(e.classWeight,n.outputNames);for(let $=0;$<N.length;++$)S.push(await P2(v[$],null,N[$]))}const _=w.concat(v).concat(S),C=i(_);te(_);for(let N=0;N<u.length;++N){const $=u[N],A=C[N];k[$]=A,oo(A)}await h.onBatchEnd(b,k),S2(k),b++,y++}if(s?y>=e.batchesPerEpoch:x.done){if(r){let w;_k(e.validationData)?w=Se(await n.evaluateDataset(e.validationData,{batches:e.validationBatches})):w=Se(n.evaluate(o,a,{batchSize:e.validationBatchSize==null?Zq:e.validationBatchSize,verbose:0}));for(let v=0;v<n.metricsNames.length;++v)g[`val_${n.metricsNames[v]}`]=w[v]}break}if(n.stopTraining_)break}if(await h.onEpochEnd(f,g),f++,n.stopTraining_)break}return await h.onTrainEnd(),await n.history.syncData(),n.history}finally{n.isTraining=!1}}function eK(n,t){let e=null;return t.batchesPerEpoch!=null?e=t.batchesPerEpoch:Number.isFinite(n.size)&&(e=n.size),e}function _k(n){return typeof n.iterator=="function"}function nK(n){return typeof n.next=="function"}async function sK(n,t,e){e=e||{};const s=e.batches!=null,r=n.testFunction;let o=[];if(e.verbose>0)throw new Kt("Verbose mode is not implemented yet.");T(!s||e.batches>0&&Number.isInteger(e.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(e.batches)}`);const a=nK(t)?t:await t.iterator();let i=0,u=0;for(;!s||u<e.batches;){const c=await a.next();if(o=Q(()=>{if(c.value){const{xs:l,ys:d}=L2(n,c.value),h=l.concat(d),p=Q(()=>r(h));if(te(h),u===0)for(let m=0;m<p.length;++m)o.push(xe(0));const f=h[0].shape[0];for(let m=0;m<p.length;++m){const g=p[m],y=o[m];o[m]=Q(()=>ht(o[m],W(f,g))),u>0&&te(y)}te(p),i+=f,++u}return o}),c.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${e.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let c=0;c<o.length;++c){const l=o[c];o[c]=Ft(o[c],i),te(l)}return gs(o)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function fb(n){T(n>0&&Number.isInteger(n),()=>`batchSize is required to be a positive integer, but got ${n}`)}function ad(n,t,e){return n==null?[null]:Array.isArray(n)?n.map(s=>wi(s,t,e-t)):wi(n,t,e-t)}function wx(n,t){return Q(()=>n==null?null:Array.isArray(n)?n.map(e=>wx(e,t)):d2(n,t.dtype==="int32"?t:It(t,"int32")))}function mb(n,t){const e=[];let s=0,r=null;for(;s<n;)r=s+t,r>=n&&(r=n),e.push([s,r]),s=r;return e}function M2(n){const t=[];n instanceof yn&&(n=[n]);for(let e=0;e<n.length;++e){const s=n[e];if(s.rank===1)t.push(Up(s,1));else{if(s.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(s)}}return t}function wr(n,t){if(n==null)return;const e=[];if(t instanceof yn)e.push(t.id);else if(Array.isArray(t))t.forEach(r=>e.push(r.id));else if(t!=null)for(const r in t){const o=t[r];e.push(o.id)}const s=[];if(n instanceof yn)e.indexOf(n.id)===-1&&s.push(n);else if(Array.isArray(n))n.forEach(r=>{e.indexOf(r.id)===-1&&s.push(r)});else if(n!=null)for(const r in n){const o=n[r];e.indexOf(o.id)===-1&&s.push(o)}s.forEach(r=>{r.isDisposed||r.dispose()})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function rK(n){return n instanceof yn}function vx(n){return Array.isArray(n)}function Tk(n){return!rK(n)&&!vx(n)}function Ek(n,t,e,s=!0,r=""){if(t==null||t.length===0){if(n!=null){let a=!1;if(vx(n)&&n.length>0)a=!0;else if(Tk(n)){for(const i in n)if(n.hasOwnProperty(i)){a=!0;break}}else a=!0;if(a)throw new V(`Error when checking model ${r} expected no data, but got ${n}`)}return[]}if(n==null)return t.map(a=>null);let o;if(Tk(n)){n=n,o=[];for(const a of t){if(n[a]==null)throw new V(`No data provided for "${a}". Need data for each key in: ${t}`);o.push(n[a])}}else if(vx(n)){if(n=n,n.length!==t.length)throw new V(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${n}`);o=n}else{if(n=n,t.length>1)throw new V(`The model ${r} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${n.shape}`);o=[n]}if(o=M2(o),e!=null)for(let a=0;a<t.length;++a){if(e[a]==null)continue;const i=o[a];if(i.shape.length!==e[a].length)throw new V(`Error when checking ${r}: expected ${t[a]} to have ${e[a].length} dimension(s). but got array with shape ${i.shape}`);for(let u=0;u<e[a].length;++u){if(u===0&&!s)continue;const c=i.shape[u],l=e[a][u];if(l!=null&&l>=0&&c!==l)throw new V(`${r} expected a batch of elements where each example has shape [${e[a].slice(1,e[a].length)}] (i.e.,tensor shape [*,${e[a].slice(1,e[a].length)}]) but the ${r} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return o}function oK(n,t,e){const s=ka(n.map(o=>o.shape[0]));s.sort();const r=ka(t.map(o=>o.shape[0]));if(r.sort(),s.length>1)throw new V(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(n.map(o=>o.shape))}`);if(r.length>1)throw new V(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(o=>o.shape))}`);if(s.length>0&&r.length>0&&!we(s,r))throw new V(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${r[0]} target sample(s).`)}function aK(n,t,e){const s=[xy,wy,Ud];for(let r=0;r<n.length;++r){const o=n[r],a=t[r],i=e[r];if(a!=null){if(a===Ud&&o.shape[o.shape.length-1]===1)throw new V(`You are passing a target array of shape ${o.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(s.indexOf(a)!==-1){const u=o.shape.slice(1),c=i.slice(1);for(let l=0;l<u.length;++l){const d=u[l],h=c[l];if(h!=null&&d!==h)throw new V(`A target Tensor with shape ${o.shape} was passed for an output of shape ${i}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function Ak(n,t,e,s=!0,r=""){let o;if(Array.isArray(n)){if(n.length!==t.length)throw new V(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${n.length} Tensors(s).`);o=n}else{if(t.length>1)throw new V(`The model expects ${t.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(n.shape)}.`);o=[n]}if(e!=null)for(let a=0;a<t.length;++a){if(e[a]==null)continue;const i=o[a];if(i.shape.length!==e[a].length)throw new V(`Error when checking ${r}: expected ${t[a]} to have ${e[a].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let u=0;u<e[a].length;++u){if(u===0&&!s)continue;const c=i.shape[u],l=e[a][u];if(l!=null&&l!==c)throw new V(`Error when checking ${r}: expected ${t[a]} to have shape ${JSON.stringify(e[a])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}function iK(n,t){if(n==null||Array.isArray(n)&&n.length===0)return t.map(s=>[]);let e;if(typeof n=="string"||typeof n=="function")e=[n];else if(Array.isArray(n)||typeof n=="object")e=n;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${n}`);if(Array.isArray(e))return t.map(s=>e);{const s=[];for(const r of t){let o=e.hasOwnProperty(r)?e[r]:[];Array.isArray(o)||(o=[o]),s.push(o)}return s}}const uK="layers-model";class Ou extends Ir{constructor(t){super(t),this.isTraining=!1}summary(t,e,s=console.log){if(!this.built)throw new V("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");Gq(this,t,e,s)}compile(t){if(t.loss==null&&(t.loss=[]),this.loss=t.loss,typeof t.optimizer=="string")this.optimizer_=Uq(t.optimizer),this.isOptimizerOwned=!0;else{if(!(t.optimizer instanceof Ha))throw new V("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=t.optimizer,this.isOptimizerOwned=!1}let e=[];if(!Array.isArray(t.loss)&&typeof t.loss!="string"&&typeof t.loss!="function"){t.loss=t.loss;for(const a in t.loss)if(this.outputNames.indexOf(a)===-1)throw new V(`Unknown entry in loss dictionary: "${a}". Only expected the following keys: ${this.outputNames}`);for(const a of this.outputNames)t.loss[a]==null&&console.warn(`Output "${a}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${a} during training`),e.push(pb(t.loss[a]))}else if(Array.isArray(t.loss)){if(t.loss.length!==this.outputs.length)throw new V(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${t.loss}.`);e=t.loss.map(i=>pb(i))}else{const a=pb(t.loss);this.outputs.forEach(i=>{e.push(a)})}this.lossFunctions=e,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let a=0;a<this.outputs.length;++a){const i=this.internalOutputShapes[a],u=this.outputNames[a];this.feedOutputNames.push(u),this.feedOutputShapes.push(i),this.feedLossFns.push(this.lossFunctions[a])}const s=[];this.metrics=t.metrics,this.metricsNames=["loss"],this.metricsTensors=[],xi("loss",()=>{for(let a=0;a<this.outputs.length;++a){if(s.indexOf(a)!==-1)continue;const i=this.lossFunctions[a];this.outputs.length>1&&(this.metricsTensors.push([i,a]),this.metricsNames.push(this.outputNames[a]+"_loss"))}});const r=iK(t.metrics,this.outputNames),o=(a,i,u)=>{this.outputNames.length>1&&(i=this.outputNames[a]+"_"+i),this.metricsNames.push(i),this.metricsTensors.push([u,a])};xi("metric",()=>{for(let a=0;a<this.outputs.length;++a){if(s.indexOf(a)!==-1)continue;const i=r[a];(c=>{const l="";let d,h,p;for(const f of c){if(typeof f=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(f)!==-1){const g=this.internalOutputShapes[a];g[g.length-1]===1||this.lossFunctions[a]===wy?["accuracy","acc"].indexOf(f)!==-1?h=T2:["crossentropy","ce"].indexOf(f)!==-1&&(h=Rq):this.lossFunctions[a]===xm?["accuracy","acc"].indexOf(f)!==-1?h=Fq:["crossentropy","ce"].indexOf(f)!==-1&&(h=D2):["accuracy","acc"].indexOf(f)!==-1?h=E2:["crossentropy","ce"].indexOf(f)!==-1&&(h=A2);let y;["accuracy","acc"].indexOf(f)!==-1?y="acc":["crossentropy","ce"].indexOf(f)!==-1&&(y="ce"),p=h,d=l+y}else p=Wq(f),d=l+wf(f);let m;xi(d,()=>{m=p}),o(a,d,m)}})(i)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(t,e,s={}){const r=s.batchSize==null?32:s.batchSize;fb(r);const a=this.standardizeUserDataXY(t,e,!0,r);try{const i=a[0].concat(a[1]);this.makeTestFunction();const u=this.testFunction,c=this.testLoop(u,i,r,s.verbose,s.steps);return gs(c)}finally{wr(a[0],t),wr(a[1],e)}}async evaluateDataset(t,e){return this.makeTestFunction(),sK(this,t,e)}checkNumSamples(t,e,s,r="steps"){let o;if(s!=null){if(o=null,e!=null)throw new V(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${e}`)}else if(t!=null)Array.isArray(t)?o=t[0].shape[0]:o=t.shape[0];else throw new V(`Either the input data should have a defined shape, or ${r} shoud be specified.`);return o}execute(t,e){if(Array.isArray(e)&&e.length===0)throw new V("`outputs` is an empty Array, which is not allowed.");const s=Array.isArray(e),r=s?e:[e],o=this.retrieveSymbolicTensors(r),a=new ma;if(t instanceof yn&&(t=[t]),Array.isArray(t)){if(t.length!==this.inputs.length)throw new V(`The number of inputs provided (${t.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let u=0;u<this.inputs.length;++u)a.add(this.inputs[u],t[u])}else for(const u of this.inputs){const c=t[u.name];if(c==null)throw new V(`No value is provided for the model's input ${u.name}`);a.add(u,c)}const i=md(o,a);return s?i:i[0]}retrieveSymbolicTensors(t){const e=Ri(null,t.length);let s=t.length;for(const r of this.layers){const o=Array.isArray(r.output)?r.output:[r.output],a=o.map(i=>i.name);for(let i=0;i<t.length;++i){const u=a.indexOf(t[i]);if(u!==-1&&(e[i]=o[u],s--),s===0)break}if(s===0)break}if(s>0){const r=[];throw e.forEach((o,a)=>{o==null&&r.push(t[a])}),new V(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(r)}`)}return e}predictLoop(t,e=32,s=!1){return Q(()=>{const r=this.checkNumSamples(t);if(s)throw new Kt("Verbose predictLoop() is not implemented yet.");const o=mb(r,e),a=this.outputs.map(i=>[]);for(let i=0;i<o.length;++i)Q(()=>{const c=o[i][0],l=o[i][1],d=ad(t,c,l),h=[];if(Array.isArray(d))for(let f=0;f<d.length;++f)h.push({key:this.inputs[f],value:d[f]});else h.push({key:this.inputs[0],value:d});const p=new ma(h);return md(this.outputs,p)}).forEach((c,l)=>a[l].push(c));return gs(a.map(i=>vs(i,0)))})}predict(t,e={}){const s=M2(t);Ak(s,this.inputNames,this.feedInputShapes,!1);try{const r=e.batchSize==null?32:e.batchSize;return fb(r),this.predictLoop(s,r)}finally{wr(s,t)}}predictOnBatch(t){Ak(t,this.inputNames,this.feedInputShapes,!0);const e=(Array.isArray(t)?t[0]:t).shape[0];return this.predictLoop(t,e)}standardizeUserDataXY(t,e,s=!0,r){if(this.optimizer_==null)throw new cr("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const o=[];for(let a=0;a<this.feedOutputShapes.length;++a){const i=this.feedOutputShapes[a];this.feedLossFns[a]===xm?o.push(i.slice(0,i.length-1).concat([1])):o.push(i)}if(t=Ek(t,this.feedInputNames,this.feedInputShapes,!1,"input"),e=Ek(e,this.feedOutputNames,o,!1,"target"),oK(t,e),aK(e,this.feedLossFns,this.feedOutputShapes),this.stateful&&r!=null&&r>0&&t[0].shape[0]%r!==0)throw new V(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${t[0].shape[0]} sample(s).`);return[t,e]}async standardizeUserData(t,e,s,r,o=!0,a){const[i,u]=this.standardizeUserDataXY(t,e,o,a);if(s!=null)throw new Error("sample weight is not supported yet.");let c=null;if(r!=null){const l=O2(r,this.outputNames);c=[];for(let d=0;d<l.length;++d)c.push(await P2(u[d],null,l[d]))}return[i,u,c]}testLoop(t,e,s,r=0,o){return Q(()=>{const a=this.checkNumSamples(e,s,o,"steps"),i=[];if(r>0)throw new Kt("Verbose mode is not implemented yet.");if(o!=null)throw new Kt("steps mode in testLoop() is not implemented yet");{const u=mb(a,s),c=Ds(Mr(0,a));for(let l=0;l<u.length;++l){const d=u[l][0],h=u[l][1],p=wi(c,d,h-d),f=wx(e,p),m=t(f);if(l===0)for(let g=0;g<m.length;++g)i.push(xe(0));for(let g=0;g<m.length;++g){const y=m[g];i[g]=ht(i[g],W(h-d,y))}}for(let l=0;l<i.length;++l)i[l]=Ft(i[l],a)}return i})}getDedupedMetricsNames(){const t=this.metricsNames,e=[];for(let s=0;s<t.length;++s){const r=t[s];let o=r;if(mk(t,r)>1){const a=mk(t.slice(0,s),r);o+=`_${a}`}e.push(o)}return e}makeTrainFunction(){return t=>{const e=[],s=t.slice(0,this.inputs.length),r=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),o=t.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),a=[],i=()=>{const d=[];for(let m=0;m<this.inputs.length;++m)d.push({key:this.inputs[m],value:s[m]});const h=new ma(d),p=md(this.outputs,h,{training:!0});let f;for(let m=0;m<this.lossFunctions.length;++m){const g=this.lossFunctions[m];let y=g(r[m],p[m]);o[m]!=null&&(y=Jq(y,o[m]));const b=pn(y);e.push(b),m===0?f=y:f=ht(f,y)}for(let m=0;m<this.metricsTensors.length;++m){let g;if(this.outputs.length>1&&m<this.outputs.length)g=e[m];else{const y=this.metricsTensors[m][0],b=this.metricsTensors[m][1];g=pn(y(r[b],p[b]))}oo(g),a.push(g)}return f=pn(f),this.calculateLosses().forEach(m=>{f=ht(f,m)}),f},u=this.collectedTrainableWeights.map(d=>d.read());return[this.optimizer_.minimize(i,!0,u)].concat(a)}}makeTestFunction(){this.testFunction=t=>Q(()=>{const e=[];let s;const r=t.slice(0,this.inputs.length),o=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let c=0;c<this.inputs.length;++c)a.push({key:this.inputs[c],value:r[c]});const i=new ma(a),u=md(this.outputs,i);for(let c=0;c<this.lossFunctions.length;++c){const l=this.lossFunctions[c],d=pn(l(o[c],u[c]));c===0?s=d:s=ht(s,d),e.push(s)}for(let c=0;c<this.metricsTensors.length;++c){const l=this.metricsTensors[c][0],d=this.metricsTensors[c][1],h=pn(l(o[d],u[d]));e.push(h)}return e})}async fit(t,e,s={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;let r,o,a,i,u,c,l,d,h;try{const p=s.batchSize==null?32:s.batchSize;fb(p);const m=await this.standardizeUserData(t,e,s.sampleWeight,s.classWeight,!1,p);r=m[0],o=m[1],h=m[2];let g=!1,y;if(s.validationData!=null&&s.validationData.length>0){if(g=!0,s.validationData.length===2)u=s.validationData[0],c=s.validationData[1];else throw s.validationData.length===3?new Kt("validationData including sample weights is not supported yet."):new V(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${s.validationData} is invalid.`);const N=await this.standardizeUserData(u,c,null,null,!0,p);l=N[0],d=N[1],y=l.concat(d)}else if(s.validationSplit!=null&&s.validationSplit>0&&s.validationSplit<1){g=!0;const C=Math.floor(r[0].shape[0]*(1-s.validationSplit)),N=r[0].shape[0];l=ad(r,C,N),a=r,r=ad(r,0,C),d=ad(o,C,N),i=o,o=ad(o,0,C),y=l.concat(d)}else s.validationSteps!=null&&(g=!0);const b=r.concat(o).concat(h);this.checkTrainableWeightsConsistency();const x=this.makeTrainFunction(),w=this.getDedupedMetricsNames();let v,k;g?(this.makeTestFunction(),v=this.testFunction,k=w.slice().concat(w.map(C=>"val_"+C))):(v=null,y=[],k=w.slice());const S=N2(s.callbacks,s.yieldEvery);return await this.fitLoop(x,b,w,p,s.epochs,s.verbose,S,v,y,s.shuffle,k,s.initialEpoch,null,null)}finally{this.isTraining=!1,wr(r,t),wr(o,e),wr(a,t),wr(i,e),wr(l,u),wr(d,c),h!=null&&te(h)}}async fitLoop(t,e,s,r,o,a,i,u,c,l,d,h,p,f){r==null&&(r=32),o==null&&(o=1),l==null&&(l=!0),h==null&&(h=0);let m=!1;if(u!=null&&c!=null&&(m=!0),f!=null&&(m=!0,p==null))throw new V("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const g=this.checkNumSamples(e,r,p,"steps_per_epoch");let y;g!=null&&(y=Mr(0,g)),a==null&&(a=1);const{callbackList:b,history:x}=C2(i,a,o,h,g,p,r,m,d);b.setModel(this),this.history=x,await b.onTrainBegin(),this.stopTraining_=!1;for(let w=h;w<o;++w){await b.onEpochBegin(w);const v={};if(p!=null)throw new Kt("stepsPerEpoch mode is not implemented yet.");{if(l==="batch")throw new Kt("batch shuffling is not implemneted yet");l&&HM(y);const k=Ds(y),S=mb(g,r);for(let _=0;_<S.length;++_){const C={};if(await b.onBatchBegin(_,C),Q(()=>{const N=S[_][0],$=S[_][1],A=wi(k,N,$-N);C.batch=_,C.size=$-N;const D=wx(e,A),R=t(D);for(let F=0;F<s.length;++F){const z=s[F],H=R[F];C[z]=H,oo(H)}if(_===S.length-1&&m){const F=this.testLoop(u,c,r);for(let z=0;z<s.length;++z){const H=s[z],P=F[z];oo(P),v["val_"+H]=P}}}),await b.onBatchEnd(_,C),S2(C),this.stopTraining_)break}k.dispose()}if(await b.onEpochEnd(w,v),this.stopTraining_)break}return await b.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(t,e){return tK(this,t,e)}async trainOnBatch(t,e){const s=await this.standardizeUserData(t,e),r=s[0],o=s[1],i=this.makeTrainFunction()(r.concat(o)),u=[];for(const c of i){const l=await c.data();u.push(l[0])}return te(i),wr(s[0],t),wr(s[1],e),gs(u)}getNamedWeights(t){const e=[],s=t!=null&&t.trainableOnly,r=s?this.trainableWeights:this.weights,o=this.getWeights(s);for(let a=0;a<r.length;++a)s&&!r[a].trainable||e.push({name:r[a].originalName,tensor:o[a]});return e}set stopTraining(t){this.stopTraining_=t}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(t){this.optimizer_!==t&&(this.optimizer_=t,this.isOptimizerOwned=!1)}dispose(){const t=super.dispose();if(t.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){const e=zI().numTensors;this.optimizer_.dispose(),t.numDisposedVariables+=e-zI().numTensors}return t}getLossIdentifiers(){let t;if(typeof this.loss=="string")t=_o(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if(typeof e!="string")throw new Error("Serialization of non-string loss is not supported.");t=this.loss.map(e=>_o(e))}else{const e=Object.keys(this.loss);t={};const s=this.loss;for(const r of e)if(typeof s[r]=="string")t[r]=_o(s[r]);else throw new Error("Serialization of non-string loss is not supported.")}return t}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[_o(wf(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(t=>_o(wf(t)));{const t={};for(const e in this.metrics)t[e]=_o(wf(this.metrics[e]));return t}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(t){if(t.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(t.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(t.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");const e=bx(t.optimizer_config),s=Bo(e);let r;if(typeof t.loss=="string")r=ui(t.loss);else if(Array.isArray(t.loss))r=t.loss.map(a=>ui(a));else if(t.loss!=null){r={};for(const a in t.loss)r[a]=ui(t.loss[a])}let o;if(Array.isArray(t.metrics))o=t.metrics.map(a=>ui(a));else if(t.metrics!=null){o={};for(const a in t.metrics)o[a]=ui(t.metrics[a])}this.compile({loss:r,metrics:o,optimizer:s})}async save(t,e){if(typeof t=="string"){const c=VB(t);if(c.length===0)throw new V(`Cannot find any save handlers for URL '${t}'`);if(c.length>1)throw new V(`Found more than one (${c.length}) save handlers for URL '${t}'`);t=c[0]}if(t.save==null)throw new V("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const s=await GI(this.getNamedWeights(e)),i={modelTopology:this.toJSON(null,!1),format:uK,generatedBy:`TensorFlow.js tfjs-layers v${F2}`,convertedBy:null};if((e==null?!1:e.includeOptimizer)&&this.optimizer!=null){i.trainingConfig=this.getTrainingConfig();const c="optimizer",{data:l,specs:d}=await GI(await this.optimizer.getWeights(),c);s.specs.push(...d),s.data=zB([s.data,l])}return this.userDefinedMetadata!=null&&(Nk(this.userDefinedMetadata,this.name,!0),i.userDefinedMetadata=this.userDefinedMetadata),i.weightData=s.data,i.weightSpecs=s.specs,t.save(i)}setUserDefinedMetadata(t){Nk(t,this.name),this.userDefinedMetadata=t}getUserDefinedMetadata(){return this.userDefinedMetadata}}Ou.className="Model";ut(Ou);class B2 extends Ou{}B2.className="Functional";ut(B2);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Gd extends Ou{constructor(t){if(super({inputs:[],outputs:[]}),t=t||{},this.trainable=!0,this.built=!1,this.name=t.name!=null?t.name:gy("sequential_"),t.layers!=null)for(const e of t.layers)this.add(e)}checkShape(t){if(t.inboundNodes[0].outputTensors[0].shape.some(s=>s<0))throw new V(`Negative dimension size caused by adding layer ${t.name} with input shape [${t.inboundNodes[0].inputTensors[0].shape}]`)}add(t){const e=t instanceof Gd||t instanceof Ou;let s;if(e){if(s=t,s.outputs.length!==1)throw new V("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(s.inputs.length!==1)throw new V("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(t.inboundNodes.length===0){if(t.batchInputShape==null)throw new V("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const r=cq({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(r)}if(e)this.outputs=s.outputs,this.inputs=s.inputs;else{if(t.inboundNodes.length!==1)throw new V(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${t.name} which has ${t.inboundNodes.length} pre-existing inbound connections.`);if(t.inboundNodes[0].outputTensors.length!==1)throw new V("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=w2(this.outputs[0])}this.inboundNodes=[],new by({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Ri(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(r=>r.shape),outputShapes:this.outputs[0].shape})}else{const r=t.apply(this.outputs[0]);if(Array.isArray(r))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[r],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const t=this.layers.length-1;this.layers[t].outboundNodes=[],this.outputs=[this.layers[t].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(t,e){return this.model==null&&this.build(),this.model.call(t,e)}build(t){if(pe(t),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Ou({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(t,e,s=console.log){this.built||this.build(),super.summary(t,e,s)}setWeights(t){this.model==null&&this.build(),this.model.setWeights(t)}evaluate(t,e,s={}){if(!this.built)throw new cr("The model needs to be compiled before being used.");return this.model.evaluate(t,e,s)}async evaluateDataset(t,e){if(!this.built)throw new cr("The model needs to be compiled before being used.");return this.model.evaluateDataset(t,e)}predict(t,e={}){return this.model==null&&this.build(),this.model.predict(t,e)}predictOnBatch(t){return this.model==null&&this.build(),this.model.predictOnBatch(t)}compile(t){this.build(),this.model.compile(t),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(t){this.model.optimizer=t}async fit(t,e,s={}){if(!this.built)throw new cr("The model needs to be compiled before being used.");return this.model.fit(t,e,s)}async fitDataset(t,e){if(!this.built)throw new cr("The model needs to be compiled before being used.");return this.model.fitDataset(t,e)}async trainOnBatch(t,e){return this.model.trainOnBatch(t,e)}static fromConfig(t,e,s={},r=!1){let o,a={};if(e instanceof Array){if(e[0].className==null||e[0].className==="Merge")throw new V("Legacy serialization format not supported yet.");o=e}else T(e.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),o=e.layers,delete e.layers,a=e;const i=new t(a);if(!(i instanceof Gd))throw new Kt(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(const u of o){const l=Bo(u,void 0,r);r&&l.setFastWeightInitDuringBuild(!0),i.add(l)}return i}set stopTraining(t){if(this.model==null)throw new V("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=t}get stopTraining(){if(this.model==null)throw new V("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const t=[];for(const e of this.layers){const s={};s.className=e.getClassName(),s.config=e.getConfig(),t.push(s)}return{name:this.name,layers:t}}}Gd.className="Sequential";ut(Gd);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let Yn=class extends zc{getConfig(){return{}}},z2=class extends Yn{apply(t,e=1){return Kj(t,e)}};z2.className="elu";ut(z2);let V2=class extends Yn{apply(t){return gC(t)}};V2.className="selu";ut(V2);let W2=class extends Yn{apply(t){return eu(t)}};W2.className="relu";ut(W2);let U2=class extends Yn{apply(t){return Q(()=>Bd(6,eu(t)))}};U2.className="relu6";ut(U2);class G2 extends Yn{apply(t){return t}}G2.className="linear";ut(G2);let H2=class extends Yn{apply(t){return Pc(t)}};H2.className="sigmoid";ut(H2);class j2 extends Yn{apply(t){return Yj(t)}}j2.className="hardSigmoid";ut(j2);let q2=class extends Yn{apply(t){return Lp(t)}};q2.className="softplus";ut(q2);class K2 extends Yn{apply(t){return Xj(t)}}K2.className="softsign";ut(K2);let X2=class extends Yn{apply(t){return Yg(t)}};X2.className="tanh";ut(X2);let S0=class extends Yn{apply(t,e=-1){return C1(t,e)}};S0.className="softmax";ut(S0);class Y2 extends Yn{apply(t,e=-1){return uC(t,e)}}Y2.className="logSoftmax";ut(Y2);class J2 extends Yn{apply(t){return Q(()=>Q(()=>{const e=Math.sqrt(2),s=W(.5,ht(1,sC(Ft(t,e))));return W(t,s)}))}}J2.className="gelu";ut(J2);class Z2 extends Yn{apply(t){return Q(()=>W(.5,W(t,ht(1,Yg(W(Kn(Ft(2,Math.PI)),ht(t,W(.044715,Ei(t,3)))))))))}}Z2.className="gelu_new";ut(Z2);class Q2 extends Yn{apply(t){return Q(()=>W(t,Yg(Lp(t))))}}Q2.className="mish";ut(Q2);class t_ extends Yn{apply(t,e=1){return Q(()=>W(Pc(W(t,e)),t))}}t_.className="swish";ut(t_);function Da(n){return n.getClassName()}function gb(n,t={}){return Wp(n,lr.getMap().classNameMap,t,"activation")}function Ra(n){if(n==null){const t={};return t.className="linear",t.config={},gb(t)}if(typeof n=="string"){const t={};return t.className=n,t.config={},gb(t)}else return n instanceof Yn?n:gb(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function lK(n){if(n!=null&&typeof n!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${n}`)}class e_ extends zc{}class n_ extends e_{constructor(t){super(),lK(t),this.l1=t==null||t.l1==null?.01:t.l1,this.l2=t==null||t.l2==null?.01:t.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(t){return Q(()=>{let e=Cn([1]);return this.hasL1&&(e=ht(e,Rt(W(this.l1,es(t))))),this.hasL2&&(e=ht(e,Rt(W(this.l2,Gp(t))))),K(e,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(t,e){return new t({l1:e.l1,l2:e.l2})}}n_.className="L1L2";ut(n_);const Dk={l1l2:"L1L2"};function De(n){return d0(n)}function Rk(n,t={}){return Wp(n,lr.getMap().classNameMap,t,"regularizer")}function qe(n){if(n==null)return null;if(typeof n=="string"){const e={className:n in Dk?Dk[n]:n,config:{}};return Rk(e)}else return n instanceof e_?n:Rk(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class s_ extends Qt{constructor(t){super(t??{}),this.supportsMasking=!0,t!=null&&(this.maxValue=t.maxValue)}call(t,e){t=Bt(t);let s=eu(t);return this.maxValue!=null&&(s=Ys(s,0,this.maxValue)),s}computeOutputShape(t){return t}getConfig(){const t={maxValue:this.maxValue},e=super.getConfig();return Object.assign(t,e),t}}s_.className="ReLU";ut(s_);class r_ extends Qt{constructor(t){super(t??{}),this.DEFAULT_ALPHA=.3,t==null&&(t={}),this.alpha=t.alpha==null?this.DEFAULT_ALPHA:t.alpha}call(t,e){const s=Bt(t);return b1(s,this.alpha)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}r_.className="LeakyReLU";ut(r_);class o_ extends Qt{constructor(t){if(super(t??{}),this.DEFAULT_ALPHA_INITIALIZER="zeros",t==null&&(t={}),this.supportsMasking=!0,this.alphaInitializer=je(t.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=qe(t.alphaRegularizer),this.alphaConstraint=In(t.alphaConstraint),t.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(t.sharedAxes))this.sharedAxes=t.sharedAxes;else if(typeof t.sharedAxes=="number")this.sharedAxes=[t.sharedAxes];else throw new V(`Expected sharedAxes to be a number or an array of numbers, but got ${t.sharedAxes}`)}build(t){t=pe(t);const e=t.slice(1);if(this.sharedAxes!=null)for(const r of this.sharedAxes)e[r-1]=1;this.alpha=this.addWeight("alpha",e,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const s={};if(this.sharedAxes!=null)for(let r=1;r<t.length;++r)s[r]=t[r];this.inputSpec=[new wn({ndim:t.length,axes:s})],this.built=!0}call(t,e){return t=Bt(t),$1(t,this.alpha.read())}getConfig(){const t={alphaInitializer:Ye(this.alphaInitializer),alphaRegularizer:De(this.alphaRegularizer),alphaConstraint:vn(this.alphaConstraint),sharedAxes:this.sharedAxes},e=super.getConfig();return Object.assign(t,e),t}}o_.className="PReLU";ut(o_);let a_=class extends Qt{constructor(t){if(super(t??{}),this.DEFAULT_ALPHA=1,t==null&&(t={}),t.alpha!=null&&t.alpha!==this.DEFAULT_ALPHA)throw new Kt(`Non-default alpha value (${t.alpha}) is not supported by the ELU layer yet.`);this.alpha=t.alpha==null?this.DEFAULT_ALPHA:t.alpha}call(t,e){const s=Bt(t);return Qg(s)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}};a_.className="ELU";ut(a_);class i_ extends Qt{constructor(t){super(t??{}),this.DEFAULT_THETA=1,t==null&&(t={}),this.theta=t.theta==null?this.DEFAULT_THETA:t.theta}call(t,e){const s=Bt(t);return W(s,It(Zs(s,this.theta),"float32"))}computeOutputShape(t){return t}getConfig(){const t={theta:this.theta},e=super.getConfig();return Object.assign(t,e),t}}i_.className="ThresholdedReLU";ut(i_);let u_=class extends Qt{constructor(t){super(t??{}),this.DEFAULT_AXIS=1,t==null&&(t={}),this.softmax=new S0().apply,this.axis=t.axis==null?this.DEFAULT_AXIS:t.axis}call(t,e){return Q(()=>{let s=Bt(t);const r=e.mask;if(r!=null){const o=W(Mt(Ga(s.shape),It(r,s.dtype)),xe(-1e9));s=ht(s,o)}return this.axis instanceof Array?this.axis.length>1?mo(Mt(s,lC(s,this.axis,!0))):this.softmax(s,this.axis[0]):this.softmax(s,this.axis)})}computeOutputShape(t){return t}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}};u_.className="Softmax";ut(u_);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Pu(n,t,e){if(typeof n=="number")return Ri(n,t);if(n.length!==t)throw new V(`The ${e} argument must be an integer or tuple of ${t} integers. Received: ${n.length} elements.`);for(let s=0;s<t;++s){const r=n[s];if(!Gj(r))throw new V(`The ${e} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(n)} including a non-integer number ${r}`)}return n}function Dr(n,t,e,s,r=1){if(n==null)return n;const o=t+(t-1)*(r-1);let a;return e==="same"?a=n:a=n-o+1,Math.floor((a+s-1)/s)}function to(n,t,e,s){if(n==null)return null;if(s==="valid")n=n*t+Aa([e-t,0]);else if(s==="same")n=n*t;else throw new V(`Unsupport padding mode: ${s}.`);return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function N0(n,t){return Q(()=>(an(t),t==="channelsFirst"?oe(n,[0,2,3,1]):n))}function l_(n,t){return Q(()=>(an(t),t==="channelsFirst"?oe(n,[0,2,3,4,1]):n))}function cK(n,t,e,s=1,r="valid",o,a=1){return Q(()=>{if(o==null&&(o=Br()),an(o),n.shape.length!==3)throw new V(`The input of a conv1dWithBias operation should be 3, but is ${n.shape.length} instead.`);if(t.shape.length!==3)throw new V(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(e!=null&&e.shape.length!==1)throw new V(`The bias for a conv1dWithBias operation should be 1, but is ${e.shape.length} instead`);if(o==="channelsFirst"&&(n=oe(n,[0,2,1])),r==="causal")throw new Kt("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let i=ZN(n,t,s,r==="same"?"same":"valid","NWC",a);return e!=null&&(i=Gr(i,e)),i})}function Fk(n,t,e,s=[1,1],r="valid",o,a,i=null){return Q(()=>{if(o==null&&(o=Br()),an(o),n.rank!==3&&n.rank!==4)throw new V(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${n.rank}.`);if(t.rank!==3&&t.rank!==4)throw new V(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${n.rank}.`);let u=N0(n,o);if(r==="causal")throw new Kt("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=xU({x:u,filter:t,strides:s,pad:r==="same"?"same":"valid",dilations:a,dataFormat:"NHWC",bias:e,activation:i}),o==="channelsFirst"&&(u=oe(u,[0,3,1,2])),u})}function dK(n,t,e,s=[1,1,1],r="valid",o,a){return Q(()=>{if(o==null&&(o=Br()),an(o),n.rank!==4&&n.rank!==5)throw new V(`conv3dWithBias expects input to be of rank 4 or 5, but received ${n.rank}.`);if(t.rank!==4&&t.rank!==5)throw new V(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${n.rank}.`);let i=l_(n,o);if(r==="causal")throw new Kt("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return i=yV(i,t,s,r==="same"?"same":"valid","NDHWC",a),e!=null&&(i=Gr(i,e)),o==="channelsFirst"&&(i=oe(i,[0,4,1,2,3])),i})}class vy extends Qt{constructor(t,e){if(super(e),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",vy.verifyArgs(e),this.rank=t,_n(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new Kt(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Pu(e.kernelSize,t,"kernelSize"),this.strides=Pu(e.strides==null?1:e.strides,t,"strides"),this.padding=e.padding==null?"valid":e.padding,Qs(this.padding),this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,an(this.dataFormat),this.activation=Ra(e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.biasInitializer=je(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=In(e.biasConstraint),this.biasRegularizer=qe(e.biasRegularizer),this.activityRegularizer=qe(e.activityRegularizer),this.dilationRate=Pu(e.dilationRate==null?1:e.dilationRate,t,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new V(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new V(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new V(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(t){if(Qr("kernelSize"in t,"required key 'kernelSize' not in config"),typeof t.kernelSize!="number"&&!h0(t.kernelSize,"number",1,3))throw new V(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(t.kernelSize)}.`)}getConfig(){const t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Da(this.activation),useBias:this.useBias,biasInitializer:Ye(this.biasInitializer),biasRegularizer:De(this.biasRegularizer),activityRegularizer:De(this.activityRegularizer),biasConstraint:vn(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}class Vc extends vy{constructor(t,e){super(t,e),this.kernel=null,Vc.verifyArgs(e),this.filters=e.filters,_n(this.filters,"filters"),this.kernelInitializer=je(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=In(e.kernelConstraint),this.kernelRegularizer=qe(e.kernelRegularizer)}build(t){t=pe(t);const e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null)throw new V(`The channel dimension of the input should be defined. Found ${t[e]}`);const s=t[e],r=this.kernelSize.concat([s,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[e]:s}}],this.built=!0}call(t,e){return Q(()=>{t=Bt(t);let s;const r=this.bias==null?null:this.bias.read(),o=o2(this.activation.getClassName());if(o!=null&&this.rank===2)s=Fk(t,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate,o);else{if(this.rank===1)s=cK(t,this.kernel.read(),r,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)s=Fk(t,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)s=dK(t,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new Kt("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(s=this.activation.apply(s))}return s})}computeOutputShape(t){t=pe(t);const e=[],s=this.dataFormat==="channelsLast"?t.slice(1,t.length-1):t.slice(2);for(let o=0;o<s.length;++o){const a=Dr(s[o],this.kernelSize[o],this.padding,this.strides[o],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[o]);e.push(a)}let r=[t[0]];return this.dataFormat==="channelsLast"?(r=r.concat(e),r.push(this.filters)):(r.push(this.filters),r=r.concat(e)),r}getConfig(){const t={filters:this.filters,kernelInitializer:Ye(this.kernelInitializer),kernelRegularizer:De(this.kernelRegularizer),kernelConstraint:vn(this.kernelConstraint)},e=super.getConfig();return Object.assign(t,e),t}static verifyArgs(t){if(!("filters"in t)||typeof t.filters!="number"||t.filters<1)throw new V(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(t.filters)}`)}}let C0=class c_ extends Vc{constructor(t){super(2,t),c_.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!h0(t.kernelSize,"number",1,2))throw new V(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(t.kernelSize)}.`)}};C0.className="Conv2D";ut(C0);let _0=class d_ extends Vc{constructor(t){super(3,t),d_.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!(Array.isArray(t.kernelSize)&&(t.kernelSize.length===1||t.kernelSize.length===3)))throw new V(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(t.kernelSize)}.`)}};_0.className="Conv3D";ut(_0);class h_ extends C0{constructor(t){if(super(t),this.inputSpec=[new wn({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new V(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(t=pe(t),t.length!==4)throw new V("Input should have rank 4; Received input shape: "+JSON.stringify(t));const e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null)throw new V("The channel dimension of the inputs should be defined. Found `None`.");const s=t[e],r=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new wn({ndim:4,axes:{[e]:s}})],this.built=!0}call(t,e){return Q(()=>{let s=Bt(t);if(s.shape.length!==4)throw new V(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const r=s.shape,o=r[0];let a,i;this.dataFormat==="channelsFirst"?(a=2,i=3):(a=1,i=2);const u=r[a],c=r[i],l=this.kernelSize[0],d=this.kernelSize[1],h=this.strides[0],p=this.strides[1],f=to(u,h,l,this.padding),m=to(c,p,d,this.padding),g=[o,f,m,this.filters];this.dataFormat!=="channelsLast"&&(s=oe(s,[0,2,3,1]));let y=QN(s,this.kernel.read(),g,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(y=oe(y,[0,3,1,2])),this.bias!=null&&(y=Gr(y,this.bias.read(),this.dataFormat)),this.activation!=null&&(y=this.activation.apply(y)),y})}computeOutputShape(t){t=pe(t);const e=t.slice();let s,r,o;this.dataFormat==="channelsFirst"?(s=1,r=2,o=3):(s=3,r=1,o=2);const a=this.kernelSize[0],i=this.kernelSize[1],u=this.strides[0],c=this.strides[1];return e[s]=this.filters,e[r]=to(e[r],u,a,this.padding),e[o]=to(e[o],c,i,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}h_.className="Conv2DTranspose";ut(h_);class p_ extends _0{constructor(t){if(super(t),this.inputSpec=[new wn({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new V(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(t=pe(t),t.length!==5)throw new V("Input should have rank 5; Received input shape: "+JSON.stringify(t));const e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null)throw new V("The channel dimension of the inputs should be defined. Found `None`.");const s=t[e],r=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new wn({ndim:5,axes:{[e]:s}})],this.built=!0}call(t,e){return Q(()=>{let s=Bt(t);if(s.shape.length!==5)throw new V(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const r=s.shape,o=r[0];let a,i,u;this.dataFormat==="channelsFirst"?(u=2,a=3,i=4):(u=1,a=2,i=3);const c=r[u],l=r[a],d=r[i],h=this.kernelSize[0],p=this.kernelSize[1],f=this.kernelSize[2],m=this.strides[0],g=this.strides[1],y=this.strides[2],b=to(c,m,h,this.padding),x=to(l,g,p,this.padding),w=to(d,y,f,this.padding),v=[o,b,x,w,this.filters];this.dataFormat!=="channelsLast"&&(s=oe(s,[0,2,3,4,1]));let k=wV(s,this.kernel.read(),v,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(k=oe(k,[0,4,1,2,3])),this.bias!==null&&(k=Gr(k,this.bias.read(),this.dataFormat)),this.activation!==null&&(k=this.activation.apply(k)),k})}computeOutputShape(t){t=pe(t);const e=t.slice();let s,r,o,a;this.dataFormat==="channelsFirst"?(s=1,r=2,o=3,a=4):(s=4,r=1,o=2,a=3);const i=this.kernelSize[0],u=this.kernelSize[1],c=this.kernelSize[2],l=this.strides[0],d=this.strides[1],h=this.strides[2];return e[s]=this.filters,e[r]=to(e[r],l,i,this.padding),e[o]=to(e[o],d,u,this.padding),e[a]=to(e[a],h,c,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}p_.className="Conv3DTranspose";ut(p_);class f_ extends Vc{constructor(t,e){if(super(t,e),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,e.filters==null)throw new V("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(e.kernelInitializer!=null||e.kernelRegularizer!=null||e.kernelConstraint!=null)throw new V("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(e.padding!=null&&e.padding!=="same"&&e.padding!=="valid")throw new V(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(e.padding)}`);this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=je(e.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=qe(e.depthwiseRegularizer),this.depthwiseConstraint=In(e.depthwiseConstraint),this.pointwiseInitializer=je(e.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=qe(e.pointwiseRegularizer),this.pointwiseConstraint=In(e.pointwiseConstraint)}build(t){if(t=pe(t),t.length<this.rank+2)throw new V(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(t)}`);const e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null||t[e]<0)throw new V(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(t[e])}`);const s=t[e],r=this.kernelSize.concat([s,this.depthMultiplier]),o=[];for(let i=0;i<this.rank;++i)o.push(1);o.push(s*this.depthMultiplier,this.filters);const a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",o,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new wn({ndim:this.rank+2,axes:{[e]:s}})],this.built=!0}call(t,e){return Q(()=>{t=Bt(t);let s;if(this.rank===1)throw new Kt("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(t=oe(t,[0,2,3,1])),s=yC(t,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(s=Gr(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),this.dataFormat==="channelsFirst"&&(s=oe(s,[0,3,1,2])),s})}getConfig(){const t=super.getConfig();return delete t.rank,delete t.kernelInitializer,delete t.kernelRegularizer,delete t.kernelConstraint,t.depthwiseInitializer=Ye(this.depthwiseInitializer),t.pointwiseInitializer=Ye(this.pointwiseInitializer),t.depthwiseRegularizer=De(this.depthwiseRegularizer),t.pointwiseRegularizer=De(this.pointwiseRegularizer),t.depthwiseConstraint=vn(this.depthwiseConstraint),t.pointwiseConstraint=vn(this.pointwiseConstraint),t}}f_.className="SeparableConv";class m_ extends f_{constructor(t){super(2,t)}}m_.className="SeparableConv2D";ut(m_);class Iy extends Vc{constructor(t){super(1,t),Iy.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){const t=super.getConfig();return delete t.rank,delete t.dataFormat,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!h0(t.kernelSize,"number",1,1))throw new V(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(t.kernelSize)}.`)}}Iy.className="Conv1D";ut(Iy);class g_ extends Qt{constructor(t){super(t),typeof t.cropping=="number"?this.cropping=[[t.cropping,t.cropping],[t.cropping,t.cropping]]:typeof t.cropping[0]=="number"?this.cropping=[[t.cropping[0],t.cropping[0]],[t.cropping[1],t.cropping[1]]]:this.cropping=t.cropping,this.dataFormat=t.dataFormat===void 0?"channelsLast":t.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(t){return this.dataFormat==="channelsFirst"?[t[0],t[1],t[2]-this.cropping[0][0]-this.cropping[0][1],t[3]-this.cropping[1][0]-this.cropping[1][1]]:[t[0],t[1]-this.cropping[0][0]-this.cropping[0][1],t[2]-this.cropping[1][0]-this.cropping[1][1],t[3]]}call(t,e){return Q(()=>{if(t=Bt(t),this.dataFormat==="channelsLast"){const s=xf(t,this.cropping[0][0],t.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return xf(s,this.cropping[1][0],t.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{const s=xf(t,this.cropping[0][0],t.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return xf(s,this.cropping[1][0],t.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const t={cropping:this.cropping,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}g_.className="Cropping2D";ut(g_);class y_ extends Qt{constructor(t){super(t),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=t.size==null?this.DEFAULT_SIZE:t.size,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,an(this.dataFormat),this.interpolation=t.interpolation==null?"nearest":t.interpolation,Vj(this.interpolation)}computeOutputShape(t){if(this.dataFormat==="channelsFirst"){const e=t[2]==null?null:this.size[0]*t[2],s=t[3]==null?null:this.size[1]*t[3];return[t[0],t[1],e,s]}else{const e=t[1]==null?null:this.size[0]*t[1],s=t[2]==null?null:this.size[1]*t[2];return[t[0],e,s,t[3]]}}call(t,e){return Q(()=>{let s=Bt(t);const r=s.shape;if(this.dataFormat==="channelsFirst"){s=oe(s,[0,2,3,1]);const o=this.size[0]*r[2],a=this.size[1]*r[3],i=this.interpolation==="nearest"?Po.resizeNearestNeighbor(s,[o,a]):Po.resizeBilinear(s,[o,a]);return oe(i,[0,3,1,2])}else{const o=this.size[0]*r[1],a=this.size[1]*r[2];return this.interpolation==="nearest"?Po.resizeNearestNeighbor(s,[o,a]):Po.resizeBilinear(s,[o,a])}})}getConfig(){const t={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},e=super.getConfig();return Object.assign(t,e),t}}y_.className="UpSampling2D";ut(y_);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function hK(n,t,e=[1,1],s="valid",r,o){return Q(()=>{r==null&&(r=Br()),an(r);let a=N0(n,r);if(n.rank!==4)throw new V(`Input for depthwiseConv2d is required to be 4-D, but is instead ${n.rank}-D`);if(t.rank!==4)throw new V(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return a=f1(a,t,e,s==="same"?"same":"valid","NHWC",o),r==="channelsFirst"&&(a=oe(a,[0,3,1,2])),a})}class b_ extends vy{constructor(t){super(2,t),this.depthwiseKernel=null,this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=je(t.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=In(t.depthwiseConstraint),this.depthwiseRegularizer=qe(t.depthwiseRegularizer)}build(t){if(t=pe(t),t.length<4)throw new V(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(t)}.`);const e=this.dataFormat==="channelsFirst"?1:3;if(t[e]==null||t[e]<0)throw new V(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${t[e]}).`);const s=t[e],r=[this.kernelSize[0],this.kernelSize[1],s,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[s*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return Q(()=>{t=Bt(t);let s=hK(t,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(s=Gr(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),s})}computeOutputShape(t){t=pe(t);const e=this.dataFormat==="channelsFirst"?t[2]:t[1],s=this.dataFormat==="channelsFirst"?t[3]:t[2],r=this.dataFormat==="channelsFirst"?t[1]*this.depthMultiplier:t[3]*this.depthMultiplier,o=Dr(e,this.kernelSize[0],this.padding,this.strides[0]),a=Dr(s,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[t[0],r,o,a]:[t[0],o,a,r]}getConfig(){const t=super.getConfig();return t.depthMultiplier=this.depthMultiplier,t.depthwiseInitializer=Ye(this.depthwiseInitializer),t.depthwiseRegularizer=De(this.depthwiseRegularizer),t.depthwiseConstraint=vn(this.depthwiseRegularizer),t}}b_.className="DepthwiseConv2D";ut(b_);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function x_(n,t,e,s){if(Array.isArray(n)){if(t!=null||e!=null)throw new V("When inputs is an array, neither initialState or constants should be provided");s!=null&&(e=n.slice(n.length-s,n.length),n=n.slice(0,n.length-s)),n.length>1&&(t=n.slice(1,n.length)),n=n[0]}function r(o){return o==null||Array.isArray(o)?o:[o]}return t=r(t),e=r(e),{inputs:n,initialState:t,constants:e}}function w_(n,t,e,s=!1,r,o,a=!1,i=!1){return Q(()=>{const u=t.shape.length;if(u<3)throw new V(`Input should be at least 3D, but is ${u}D.`);const c=[1,0].concat(Mr(2,u));t=oe(t,c),a&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),r!=null&&(r=It(It(r,"bool"),"float32"),r.rank===u-1&&(r=ms(r,-1)),r=oe(r,c)),s&&(t=Ai(t,0),r!=null&&(r=Ai(r,0)));const l=[];let d,h=e;const p=t.shape[0],f=Di(t);let m;r!=null&&(m=Di(r));for(let y=0;y<p;++y){const b=f[y],x=Q(()=>n(b,h));if(r==null)d=x[0],h=x[1];else{const w=Q(()=>{const v=m[y],k=Mt(mr(v),v),S=ht(W(x[0],v),W(h[0],k)),_=h.map((C,N)=>ht(W(x[1][N],v),W(C,k)));return{output:S,newStates:_}});d=w.output,h=w.newStates}i&&l.push(d)}let g;return i&&(g=jo(l,1)),[d,g,h]})}class ja extends Qt{constructor(t){super(t);let e;if(t.cell==null)throw new V("cell property is missing for the constructor of RNN.");if(Array.isArray(t.cell)?e=new A0({cells:t.cell}):e=t.cell,e.stateSize==null)throw new V("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=e,this.returnSequences=t.returnSequences==null?!1:t.returnSequences,this.returnState=t.returnState==null?!1:t.returnState,this.goBackwards=t.goBackwards==null?!1:t.goBackwards,this._stateful=t.stateful==null?!1:t.stateful,this.unroll=t.unroll==null?!1:t.unroll,this.supportsMasking=!0,this.inputSpec=[new wn({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return Mr(0,t).map(e=>null)}else return this.states_}setStates(t){this.states_=t}computeOutputShape(t){mx(t)&&(t=t[0]),t=t;let e=this.cell.stateSize;Array.isArray(e)||(e=[e]);const s=e[0];let r;if(this.returnSequences?r=[t[0],t[1],s]:r=[t[0],s],this.returnState){const o=[];for(const a of e)o.push([t[0],a]);return[r].concat(o)}else return r}computeMask(t,e){return Q(()=>{Array.isArray(e)&&(e=e[0]);const s=this.returnSequences?e:null;if(this.returnState){const r=this.states.map(o=>null);return[s].concat(r)}else return s})}get states(){if(this.states_==null){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,e=[];for(let s=0;s<t;++s)e.push(null);return e}else return this.states_}set states(t){this.states_=t}build(t){if(this.numConstants!=null)throw new Kt("Constants support is not implemented in RNN yet.");mx(t)&&(t=t[0]),t=t;const e=this.stateful?t[0]:null,s=t.slice(2);this.inputSpec[0]=new wn({shape:[e,null,...s]});const r=[t[0]].concat(t.slice(2));this.cell.build(r);let o;if(Array.isArray(this.cell.stateSize)?o=this.cell.stateSize:o=[this.cell.stateSize],this.stateSpec!=null){if(!we(this.stateSpec.map(a=>a.shape[a.shape.length-1]),o))throw new V(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=o.map(a=>new wn({shape:[null,a]}));this.stateful&&this.resetStates()}resetStates(t,e=!1){Q(()=>{if(!this.stateful)throw new Zr("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape[0];if(s==null)throw new V("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(r=>Cn([s,r])):this.states_=[Cn([s,this.cell.stateSize])];else if(t==null)te(this.states_),this.keptStates!=null&&(te(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(r=>Cn([s,r])):this.states_[0]=Cn([s,this.cell.stateSize]);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new V(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);e===!0?this.keptStates.push(this.states_.slice()):te(this.states_);for(let r=0;r<this.states_.length;++r){const o=t[r],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[r]:this.cell.stateSize,i=[s,a];if(!we(o.shape,i))throw new V(`State ${r} is incompatible with layer ${this.name}: expected shape=${i}, received shape=${o.shape}`);this.states_[r]=o}}this.states_=this.states_.map(r=>oo(r.clone()))})}apply(t,e){let s=e==null?null:e.initialState,r=e==null?null:e.constants;e==null&&(e={});const o=x_(t,s,r,this.numConstants);t=o.inputs,s=o.initialState,r=o.constants;let a=[],i=[];if(s!=null){e.initialState=s,a=a.concat(s),this.stateSpec=[];for(const c of s)this.stateSpec.push(new wn({shape:c.shape}));i=i.concat(this.stateSpec)}if(r!=null&&(e.constants=r,a=a.concat(r),this.numConstants=r.length),a[0]instanceof yo){const c=[t].concat(a),l=this.inputSpec.concat(i),d=this.inputSpec;this.inputSpec=l;const h=super.apply(c,e);return this.inputSpec=d,h}else return super.apply(t,e)}call(t,e){return Q(()=>{const s=e==null?null:e.mask,r=e==null?null:e.training;let o=e==null?null:e.initialState;t=Bt(t),o==null&&(this.stateful?o=this.states_:o=this.getInitialState(t));const a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(o.length!==a)throw new V(`RNN Layer has ${a} state(s) but was passed ${o.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:r},c=w_((f,m)=>{const g=this.cell.call([f].concat(m),i);return[g[0],g.slice(1)]},t,o,this.goBackwards,s,null,this.unroll,this.returnSequences),l=c[0],d=c[1],h=c[2];this.stateful&&this.resetStates(h,r);const p=this.returnSequences?d:l;return this.returnState?[p].concat(h):p})}getInitialState(t){return Q(()=>{let e=Cn(t.shape);return e=Rt(e,[1,2]),e=Up(e),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(s=>s>1?px(e,[1,s]):e):this.cell.stateSize>1?[px(e,[1,this.cell.stateSize])]:[e]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(t)}getConfig(){const t=super.getConfig(),e={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(e.numConstants=this.numConstants);const s=this.cell.getConfig();return this.getClassName()===ja.className&&(e.cell={className:this.cell.getClassName(),config:s}),Object.assign(Object.assign(Object.assign({},s),t),e)}static fromConfig(t,e,s={}){const r=e.cell,o=Bo(r,s);return new t(Object.assign(e,{cell:o}))}}ja.className="RNN";ut(ja);class ky extends Qt{}class T0 extends ky{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,_n(this.units,"units"),this.activation=Ra(t.activation==null?this.DEFAULT_ACTIVATION:t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=je(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=je(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=je(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=qe(t.kernelRegularizer),this.recurrentRegularizer=qe(t.recurrentRegularizer),this.biasRegularizer=qe(t.biasRegularizer),this.kernelConstraint=In(t.kernelConstraint),this.recurrentConstraint=In(t.recurrentConstraint),this.biasConstraint=In(t.biasConstraint),this.dropout=sl([1,Aa([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=sl([1,Aa([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=pe(t),this.kernel=this.addWeight("kernel",[t[t.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return Q(()=>{if(t=t,t.length!==2)throw new V(`SimpleRNNCell expects 2 input Tensors, got ${t.length}.`);let s=t[1];t=t[0];const r=e.training==null?!1:e.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Fa({ones:()=>mr(t),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Fa({ones:()=>mr(s),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));let o;const a=this.dropoutMask,i=this.recurrentDropoutMask;a!=null?o=io(W(t,a),this.kernel.read()):o=io(t,this.kernel.read()),this.bias!=null&&(o=Gr(o,this.bias.read())),i!=null&&(s=W(s,i));let u=ht(o,io(s,this.recurrentKernel.read()));return this.activation!=null&&(u=this.activation.apply(u)),[u,u]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Da(this.activation),useBias:this.useBias,kernelInitializer:Ye(this.kernelInitializer),recurrentInitializer:Ye(this.recurrentInitializer),biasInitializer:Ye(this.biasInitializer),kernelRegularizer:De(this.kernelRegularizer),recurrentRegularizer:De(this.recurrentRegularizer),biasRegularizer:De(this.biasRegularizer),activityRegularizer:De(this.activityRegularizer),kernelConstraint:vn(this.kernelConstraint),recurrentConstraint:vn(this.recurrentConstraint),biasConstraint:vn(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},t),e)}}T0.className="SimpleRNNCell";ut(T0);class v_ extends ja{constructor(t){t.cell=new T0(t),super(t)}call(t,e){return Q(()=>{this.cell.dropoutMask!=null&&(te(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(te(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=e==null?null:e.mask,r=e==null?null:e.training,o=e==null?null:e.initialState;return super.call(t,{mask:s,training:r,initialState:o})})}static fromConfig(t,e){return new t(e)}}v_.className="SimpleRNN";ut(v_);class E0 extends ky{constructor(t){if(super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.resetAfter)throw new V("GRUCell does not support reset_after parameter set to true.");this.units=t.units,_n(this.units,"units"),this.activation=Ra(t.activation===void 0?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=Ra(t.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=je(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=je(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=je(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=qe(t.kernelRegularizer),this.recurrentRegularizer=qe(t.recurrentRegularizer),this.biasRegularizer=qe(t.biasRegularizer),this.kernelConstraint=In(t.kernelConstraint),this.recurrentConstraint=In(t.recurrentConstraint),this.biasConstraint=In(t.biasConstraint),this.dropout=sl([1,Aa([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=sl([1,Aa([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=pe(t);const e=t[t.length-1];this.kernel=this.addWeight("kernel",[e,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return Q(()=>{if(t=t,t.length!==2)throw new V(`GRUCell expects 2 input Tensors (inputs, h, c), got ${t.length}.`);const s=e.training==null?!1:e.training;let r=t[1];t=t[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Fa({ones:()=>mr(t),rate:this.dropout,training:s,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Fa({ones:()=>mr(r),rate:this.recurrentDropout,training:s,count:3,dropoutFunc:this.dropoutFunc}));const o=this.dropoutMask,a=this.recurrentDropoutMask;let i,u,c;0<this.dropout&&this.dropout<1&&(t=W(t,o[0]));let l=io(t,this.kernel.read());this.useBias&&(l=Gr(l,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=W(r,a[0]));const d=this.recurrentKernel.read(),[h,p]=Ks(d,[2*this.units,this.units],d.rank-1),f=io(r,h),[m,g,y]=Ks(l,3,l.rank-1),[b,x]=Ks(f,2,f.rank-1);i=this.recurrentActivation.apply(ht(m,b)),u=this.recurrentActivation.apply(ht(g,x));const w=io(W(u,r),p);c=this.activation.apply(ht(y,w));const v=ht(W(i,r),W(ht(1,en(i)),c));return[v,v]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Da(this.activation),recurrentActivation:Da(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ye(this.kernelInitializer),recurrentInitializer:Ye(this.recurrentInitializer),biasInitializer:Ye(this.biasInitializer),kernelRegularizer:De(this.kernelRegularizer),recurrentRegularizer:De(this.recurrentRegularizer),biasRegularizer:De(this.biasRegularizer),activityRegularizer:De(this.activityRegularizer),kernelConstraint:vn(this.kernelConstraint),recurrentConstraint:vn(this.recurrentConstraint),biasConstraint:vn(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},t),e)}}E0.className="GRUCell";ut(E0);class I_ extends ja{constructor(t){t.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new E0(t),super(t)}call(t,e){return Q(()=>{this.cell.dropoutMask!=null&&(te(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(te(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=e==null?null:e.mask,r=e==null?null:e.training,o=e==null?null:e.initialState;return super.call(t,{mask:s,training:r,initialState:o})})}static fromConfig(t,e){return e.implmentation===0&&(e.implementation=1),new t(e)}}I_.className="GRU";ut(I_);class $y extends ky{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,_n(this.units,"units"),this.activation=Ra(t.activation===void 0?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=Ra(t.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=je(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=je(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=je(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=t.unitForgetBias,this.kernelRegularizer=qe(t.kernelRegularizer),this.recurrentRegularizer=qe(t.recurrentRegularizer),this.biasRegularizer=qe(t.biasRegularizer),this.kernelConstraint=In(t.kernelConstraint),this.recurrentConstraint=In(t.recurrentConstraint),this.biasConstraint=In(t.biasConstraint),this.dropout=sl([1,Aa([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=sl([1,Aa([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){var e;t=pe(t);const s=t[t.length-1];this.kernel=this.addWeight("kernel",[s,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let r;if(this.useBias){if(this.unitForgetBias){const o=this.biasInitializer,a=this.units;r=new(e=class extends gr{apply(u,c){const l=o.apply([a]),d=new f0().apply([a]),h=o.apply([a*2]);return yk(yk(l,d),h)}},e.className="CustomInit",e)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(t,e){return Q(()=>{const s=e.training==null?!1:e.training;if(t=t,t.length!==3)throw new V(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);let r=t[1];const o=t[2];t=t[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Fa({ones:()=>mr(t),rate:this.dropout,training:s,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Fa({ones:()=>mr(r),rate:this.recurrentDropout,training:s,count:4,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,i=this.recurrentDropoutMask;let u,c,l,d;0<this.dropout&&this.dropout<1&&(t=W(t,a[0]));let h=io(t,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=W(r,i[0])),h=ht(h,io(r,this.recurrentKernel.read())),this.useBias&&(h=Gr(h,this.bias.read()));const[p,f,m,g]=Ks(h,4,h.rank-1);u=this.recurrentActivation.apply(p),c=this.recurrentActivation.apply(f),l=ht(W(c,o),W(u,this.activation.apply(m))),d=this.recurrentActivation.apply(g);const y=W(d,this.activation.apply(l));return[y,y,l]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Da(this.activation),recurrentActivation:Da(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ye(this.kernelInitializer),recurrentInitializer:Ye(this.recurrentInitializer),biasInitializer:Ye(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:De(this.kernelRegularizer),recurrentRegularizer:De(this.recurrentRegularizer),biasRegularizer:De(this.biasRegularizer),activityRegularizer:De(this.activityRegularizer),kernelConstraint:vn(this.kernelConstraint),recurrentConstraint:vn(this.recurrentConstraint),biasConstraint:vn(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},t),e)}}$y.className="LSTMCell";ut($y);class k_ extends ja{constructor(t){t.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new $y(t),super(t)}call(t,e){return Q(()=>{this.cell.dropoutMask!=null&&(te(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(te(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=e==null?null:e.mask,r=e==null?null:e.training,o=e==null?null:e.initialState;return super.call(t,{mask:s,training:r,initialState:o})})}static fromConfig(t,e){return e.implmentation===0&&(e.implementation=1),new t(e)}}k_.className="LSTM";ut(k_);class A0 extends ky{constructor(t){super(t),this.cells=t.cells}get stateSize(){const t=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?t.push(...e.stateSize):t.push(e.stateSize);return t}call(t,e){return Q(()=>{t=t;let s=t.slice(1);const r=[];for(const i of this.cells.slice().reverse())Array.isArray(i.stateSize)?r.push(s.splice(0,i.stateSize.length)):r.push(s.splice(0,1));r.reverse();const o=[];let a;for(let i=0;i<this.cells.length;++i){const u=this.cells[i];s=r[i],i===0?a=[t[0]].concat(s):a=[a[0]].concat(s),a=u.call(a,e),o.push(a.slice(1))}s=[];for(const i of o.slice().reverse())s.push(...i);return[a[0]].concat(s)})}build(t){mx(t)&&(t=t[0]),t=t;let e;this.cells.forEach((s,r)=>{xi(`RNNCell_${r}`,()=>{s.build(t),Array.isArray(s.stateSize)?e=s.stateSize[0]:e=s.stateSize,t=[t[0],e]})}),this.built=!0}getConfig(){const t=super.getConfig(),e=o=>({className:o.getClassName(),config:o.getConfig()}),r={cells:this.cells.map(e)};return Object.assign(Object.assign({},t),r)}static fromConfig(t,e,s={}){const r=[];for(const o of e.cells)r.push(Bo(o,s));return new t({cells:r})}get trainableWeights(){if(!this.trainable)return[];const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.cells)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const s of this.cells)e.push(...s.trainableWeights);return e.concat(t)}return t}getWeights(){const t=[];for(const e of this.cells)t.push(...e.weights);return gx(t)}setWeights(t){const e=[];for(const s of this.cells){const r=s.weights.length,o=t.splice(r);for(let a=0;a<s.weights.length;++a)e.push([s.weights[a],o[a]])}v0(e)}}A0.className="StackedRNNCells";ut(A0);function Fa(n){const{ones:t,rate:e,training:s=!1,count:r=1,dropoutFunc:o}=n,a=()=>o!=null?o(t(),e):h2(t(),e),i=()=>Hp(a,t,s);return!r||r<=1?oo(i().clone()):Array(r).fill(void 0).map(i).map(c=>oo(c.clone()))}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var pK=function(n,t){var e={};for(var s in n)Object.prototype.hasOwnProperty.call(n,s)&&t.indexOf(s)<0&&(e[s]=n[s]);if(n!=null&&typeof Object.getOwnPropertySymbols=="function")for(var r=0,s=Object.getOwnPropertySymbols(n);r<s.length;r++)t.indexOf(s[r])<0&&Object.prototype.propertyIsEnumerable.call(n,s[r])&&(e[s[r]]=n[s[r]]);return e};class $_ extends ja{constructor(t){if(t.unroll)throw new Kt("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(t.cell))throw new Kt("It is not possible at the moment to stack convolutional cells.");super(t),this.inputSpec=[new wn({ndim:5})]}call(t,e){return Q(()=>{if(this.cell.dropoutMask!=null&&(te(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(te(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),e&&e.constants)throw new V("ConvRNN2D cell does not support constants");const s=e==null?null:e.mask,r=e==null?null:e.training,o=e==null?null:e.initialState;return super.call(t,{mask:s,training:r,initialState:o})})}computeOutputShape(t){let e=this.computeSingleOutputShape(t);return this.returnSequences||(e=[e[0],...e.slice(2)]),this.returnState&&(e=[e,...Array(2).fill([t[0],...e.slice(-3)])]),e}getInitialState(t){return Q(()=>{const{stateSize:e}=this.cell,s=t.shape,r=this.computeSingleOutputShape(s),o=[r[0],...r.slice(2)],a=Cn(o);return Array.isArray(e)?Array(e.length).fill(a):[a]})}resetStates(t,e=!1){Q(()=>{if(!this.stateful)throw new Zr("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape,r=this.computeSingleOutputShape(s),o=[r[0],...r.slice(2)];if(s[0]==null)throw new V("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Cn(o)):this.states_=[Cn(o)];else if(t==null)te(this.states_),this.keptStates!=null&&(te(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Cn(o)):this.states_[0]=Cn(o);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new V(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);e?this.keptStates.push(this.states_.slice()):te(this.states_);for(let i=0;i<this.states_.length;++i){const u=t[i],c=o;if(!we(u.shape,c))throw new V(`State ${i} is incompatible with layer ${this.name}: expected shape=${c}, received shape=${u.shape}`);this.states_[i]=u}}this.states_=this.states_.map(i=>oo(i.clone()))})}computeSingleOutputShape(t){const{dataFormat:e,filters:s,kernelSize:r,padding:o,strides:a,dilationRate:i}=this.cell,u=e==="channelsFirst",c=t[u?3:2],l=t[u?4:3],d=Dr(c,r[0],o,a[0],i[0]),h=Dr(l,r[1],o,a[1],i[1]);return[...t.slice(0,2),...u?[s,d,h]:[d,h,s]]}}$_.className="ConvRNN2D";class D0 extends $y{constructor(t){const{filters:e,kernelSize:s,strides:r,padding:o,dataFormat:a,dilationRate:i}=t;super(Object.assign(Object.assign({},t),{units:e})),this.filters=e,_n(this.filters,"filters"),this.kernelSize=Pu(s,2,"kernelSize"),this.kernelSize.forEach(u=>_n(u,"kernelSize")),this.strides=Pu(r||1,2,"strides"),this.strides.forEach(u=>_n(u,"strides")),this.padding=o||"valid",Qs(this.padding),this.dataFormat=a||"channelsLast",an(this.dataFormat),this.dilationRate=Pu(i||1,2,"dilationRate"),this.dilationRate.forEach(u=>_n(u,"dilationRate"))}build(t){var e;t=pe(t);const s=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[s]==null)throw new V(`The channel dimension of the input should be defined. Found ${t[s]}`);const r=t[s],o=4,a=this.kernelSize.concat([r,this.filters*o]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const i=this.kernelSize.concat([this.filters,this.filters*o]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",i,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let u;if(this.unitForgetBias){const c=this.biasInitializer,l=this.filters;u=new(e=class extends gr{apply(h,p){const f=c.apply([l]),m=Ga([l]),g=c.apply([l*2]);return p0([f,m,g])}},e.className="CustomInit",e)}else u=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*o],null,u,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(t,e){return Q(()=>{if(t.length!==3)throw new V(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);const s=e.training||!1,r=t[0],o=t[1],a=t[2],i=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Fa({ones:()=>mr(r),rate:this.dropout,training:s,count:i,dropoutFunc:this.dropoutFunc}));const u=this.dropoutMask,c=(Z,tt,at)=>!tt||!tt[at]?Z:W(tt[at],Z);let l=c(r,u,0),d=c(r,u,1),h=c(r,u,2),p=c(r,u,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Fa({ones:()=>mr(o),rate:this.recurrentDropout,training:s,count:i,dropoutFunc:this.dropoutFunc}));const f=this.recurrentDropoutMask;let m=c(o,f,0),g=c(o,f,1),y=c(o,f,2),b=c(o,f,3);const x=3,[w,v,k,S]=Ks(this.kernel.read(),i,x),[_,C,N,$]=this.useBias?Ks(this.bias.read(),i):[null,null,null,null];l=this.inputConv(l,w,_,this.padding),d=this.inputConv(d,v,C,this.padding),h=this.inputConv(h,k,N,this.padding),p=this.inputConv(p,S,$,this.padding);const[A,D,R,F]=Ks(this.recurrentKernel.read(),i,x);m=this.recurrentConv(m,A),g=this.recurrentConv(g,D),y=this.recurrentConv(y,R),b=this.recurrentConv(b,F);const z=this.recurrentActivation.apply(ht(l,m)),H=this.recurrentActivation.apply(ht(d,g)),P=ht(W(H,a),W(z,this.activation.apply(ht(h,y)))),U=W(this.recurrentActivation.apply(ht(p,b)),this.activation.apply(P));return[U,U,P]})}getConfig(){const t=super.getConfig(),{units:e}=t,s=pK(t,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},s),r)}inputConv(t,e,s,r){const o=Ti(t,e,this.strides,r||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return s?Gr(o,s,this.dataFormat):o}recurrentConv(t,e){return Ti(t,e,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}}D0.className="ConvLSTM2DCell";ut(D0);class S_ extends $_{constructor(t){const e=new D0(t);super(Object.assign(Object.assign({},t),{cell:e}))}static fromConfig(t,e){return new t(e)}}S_.className="ConvLSTM2D";ut(S_);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class R0 extends Qt{constructor(t){super(t),this.rate=Math.max(Math.min(t.rate,1),0),this.noiseShape=t.noiseShape,this.seed=t.seed,this.supportsMasking=!0}getNoiseShape(t){if(this.noiseShape==null)return this.noiseShape;const e=t.shape,s=[];for(let r=0;r<this.noiseShape.length;++r)s.push(this.noiseShape[r]==null?e[r]:this.noiseShape[r]);return s}call(t,e){return Q(()=>{this.invokeCallHook(t,e);const s=Bt(t);if(0<this.rate&&this.rate<1){const r=e.training==null?!1:e.training,o=this.getNoiseShape(s);return Hp(()=>h2(s,this.rate,o,this.seed),()=>s,r)}return t})}getConfig(){const t={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},e=super.getConfig();return Object.assign(t,e),t}dispose(){return super.dispose()}}R0.className="Dropout";ut(R0);class N_ extends R0{constructor(t){super(t),this.inputSpec=[{ndim:3}]}getNoiseShape(t){const e=t.shape;return[e[0],1,e[2]]}}N_.className="SpatialDropout1D";ut(N_);class C_ extends Qt{constructor(t){if(super(t),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.batchInputShape==null&&t.inputShape==null&&t.inputDim!=null){let e=null;t.batchSize!=null&&(e=t.batchSize),this.batchInputShape=[e,t.inputDim]}this.units=t.units,_n(this.units,"units"),this.activation=Ra(t.activation),t.useBias!=null&&(this.useBias=t.useBias),this.kernelInitializer=je(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=je(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=In(t.kernelConstraint),this.biasConstraint=In(t.biasConstraint),this.kernelRegularizer=qe(t.kernelRegularizer),this.biasRegularizer=qe(t.biasRegularizer),this.activityRegularizer=qe(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(t){t=pe(t);const e=t[t.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[e,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:e}}],this.built=!0}computeOutputShape(t){t=pe(t);const e=t.slice();return e[e.length-1]=this.units,e}call(t,e){return Q(()=>{this.invokeCallHook(t,e);const s=Bt(t),r=o2(this.activation.getClassName());let o;return r!=null?o=io(s,this.kernel.read(),r,this.bias?this.bias.read():null):(o=io(s,this.kernel.read()),this.bias!=null&&(o=Gr(o,this.bias.read())),this.activation!=null&&(o=this.activation.apply(o))),o})}getConfig(){const t={units:this.units,activation:Da(this.activation),useBias:this.useBias,kernelInitializer:Ye(this.kernelInitializer),biasInitializer:Ye(this.biasInitializer),kernelRegularizer:De(this.kernelRegularizer),biasRegularizer:De(this.biasRegularizer),activityRegularizer:De(this.activityRegularizer),kernelConstraint:vn(this.kernelConstraint),biasConstraint:vn(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}C_.className="Dense";ut(C_);class __ extends Qt{constructor(t){t=t||{},super(t),this.inputSpec=[{minNDim:3}],this.dataFormat=t.dataFormat}computeOutputShape(t){t=pe(t);for(const e of t.slice(1))if(e==null)throw new V(`The shape of the input to "Flatten" is not fully defined (got ${t.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[t[0],$a(t,1)]}call(t,e){return Q(()=>{this.invokeCallHook(t,e);let s=Bt(t);if(this.dataFormat==="channelsFirst"&&s.rank>1){const r=[0];for(let o=2;o<s.rank;++o)r.push(o);r.push(1),s=oe(s,r)}return qj(s)})}getConfig(){const t={};this.dataFormat!=null&&(t.dataFormat=this.dataFormat);const e=super.getConfig();return Object.assign(t,e),t}}__.className="Flatten";ut(__);class T_ extends Qt{constructor(t){super(t),this.supportsMasking=!0,this.activation=Ra(t.activation)}call(t,e){return Q(()=>{this.invokeCallHook(t,e);const s=Bt(t);return this.activation.apply(s)})}getConfig(){const t={activation:Da(this.activation)},e=super.getConfig();return Object.assign(t,e),t}}T_.className="Activation";ut(T_);class E_ extends Qt{constructor(t){super(t),this.n=t.n,this.inputSpec=[{ndim:2}]}computeOutputShape(t){return[t[0],this.n,t[1]]}call(t,e){return Q(()=>(t=Bt(t),Hj(t,this.n)))}getConfig(){const t={n:this.n},e=super.getConfig();return Object.assign(t,e),t}}E_.className="RepeatVector";ut(E_);let A_=class extends Qt{constructor(t){super(t),this.targetShape=t.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(t){return t<0||t==null}fixUnknownDimension(t,e){const s="Total size of new array must be unchanged.",r=e.slice();let o=1,a=null;for(let u=0;u<r.length;++u){const c=r[u];if(this.isUnknown(c))if(a===null)a=u;else throw new V("Can only specifiy one unknown dimension.");else o*=c}const i=$a(t);if(a!==null){if(o===0||i%o!==0)throw new V(s);r[a]=i/o}else if(i!==o)throw new V(s);return r}computeOutputShape(t){let e=!1;for(let s=0;s<t.length;++s)if(this.isUnknown(t[s])){e=!0;break}return e?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(t,e){return Q(()=>{this.invokeCallHook(t,e);const s=Bt(t),r=s.shape,o=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return K(s,o)})}getConfig(){const t={targetShape:this.targetShape},e=super.getConfig();return Object.assign(t,e),t}};A_.className="Reshape";ut(A_);class D_ extends Qt{constructor(t){if(super(t),t.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(t.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${t.dims} instead.`);const e=Mr(1,t.dims.length+1);if(!we(t.dims.slice().sort(),e))throw new Error("Invalid permutation `dims`: "+JSON.stringify(t.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=t.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new wn({ndim:this.dims.length+1})]}computeOutputShape(t){t=pe(t);const e=t.slice();return this.dims.forEach((s,r)=>{e[r+1]=t[s]}),e}call(t,e){return oe(Bt(t),this.dimsIncludingBatch)}getConfig(){const t={dims:this.dims},e=super.getConfig();return Object.assign(t,e),t}}D_.className="Permute";ut(D_);class R_ extends Qt{constructor(t){super(t??{}),this.supportsMasking=!0,t!=null?this.maskValue=t.maskValue==null?0:t.maskValue:this.maskValue=0}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={maskValue:this.maskValue};return Object.assign(e,t),e}computeMask(t,e){const s=Bt(t);return ix(dm(s,this.maskValue),-1)}call(t,e){return Q(()=>{this.invokeCallHook(t,e);const s=Bt(t),a=ix(dm(s,this.maskValue),-1,!0);return W(s,It(a,s.dtype))})}}R_.className="Masking";ut(R_);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class F_ extends Qt{constructor(t){if(super(t),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",t.batchInputShape==null&&t.inputShape==null){let e=null;t.batchSize!=null&&(e=t.batchSize),t.inputLength==null?this.batchInputShape=[e,null]:this.batchInputShape=[e].concat(Se(t.inputLength))}this.inputDim=t.inputDim,_n(this.inputDim,"inputDim"),this.outputDim=t.outputDim,_n(this.outputDim,"outputDim"),this.embeddingsInitializer=je(t.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=qe(t.embeddingsRegularizer),this.activityRegularizer=qe(t.activityRegularizer),this.embeddingsConstraint=In(t.embeddingsConstraint),this.maskZero=t.maskZero,this.supportsMasking=t.maskZero,this.inputLength=t.inputLength}build(t){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(t){}computeMask(t,e){return Q(()=>this.maskZero?(t=Bt(t),dm(t,ae(t))):null)}computeOutputShape(t){if(t=pe(t),this.inputLength==null)return[...t,this.outputDim];const e=Se(this.inputLength);if(e.length!==t.length-1)throw new V(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);{let s=0;for(let r=0;r<e.length;++r){const o=e[r],a=t[r+1];if(o!=null&&a!=null&&o!==a)throw new V(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);o==null&&(e[s]=a),s++}}return[t[0],...e,this.outputDim]}call(t,e){return Q(()=>{this.invokeCallHook(t,e);let s=Bt(t);s.dtype!=="int32"&&(s=ao(s,"int32"));const r=d2(this.embeddings.read(),K(s,[s.size]));return K(r,pe(this.computeOutputShape(s.shape)))})}getConfig(){const t={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Ye(this.embeddingsInitializer),embeddingsRegularizer:De(this.embeddingsRegularizer),activityRegularizer:De(this.activityRegularizer),embeddingsConstraint:vn(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},e=super.getConfig();return Object.assign(t,e),t}}F_.className="Embedding";ut(F_);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class au extends Qt{constructor(t){super(t||{}),this.supportsMasking=!0}mergeFunction(t){throw new Kt}computeElementwiseOpOutputShape(t,e){if(t==null||e==null)return null;if(t.length<e.length)return this.computeElementwiseOpOutputShape(e,t);if(e.length===0)return t;const s=t.slice(0,t.length-e.length);for(let r=0;r<e.length;++r){const o=t[t.length-e.length+r],a=e[r];if(o==null||a==null||o<0||a<0)s.push(null);else if(o===1)s.push(a);else if(a===1)s.push(o);else{if(o!==a)throw new V("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(e));s.push(o)}}return s}build(t){if(Array.isArray(t)&&!Array.isArray(t[0])&&(t=[pe(t)]),t=t,t.length<2)throw new V(`A merge layer should be called on an Array of at least 2 inputs. Got ${t.length} input(s).`);let e=[];for(const o of t)o!=null&&o[0]!==null&&e.push(o[0]);if(e=ka(e),e.length>1)throw new V(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(t)}.`);let s=t[0]==null?null:t[0].slice(1);for(let o=1;o<t.length;++o){const a=t[o]==null?null:t[o].slice(1);s=this.computeElementwiseOpOutputShape(s,a)}const r=t.map(o=>o.length);t.indexOf(null)===-1&&ka(r).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(t,e){return Q(()=>{if(t=t,this.reshapeRequired){const s=[],r=t.map(o=>o.rank);if(r.indexOf(null)===-1){const o=Aa(r);for(let a of t){const i=a.rank;for(let u=0;u<o-i;++u)a=Up(a,1);s.push(a)}return this.mergeFunction(s)}else{let o=!1;for(const u of t){const c=u.rank;if(c==null){const l=u.shape,d=l[0],h=l.slice(1).concat([d]);let p=K(u,[d].concat($a(l.slice(1))));p=oe(p,[1,0]),p=K(p,h),s.push(p),o=!0}else if(c>1){const l=Mr(1,c).concat([0]);s.push(oe(u,l)),o=!0}else s.push(u)}let a=this.mergeFunction(s);const i=a.rank;if(o){if(i==null){const u=a.shape,c=u.length,l=u[c-1],d=[l].concat(u.slice(0,u.length-1));a=K(oe(K(a,[-1,l]),[1,0]),d)}else if(i>1){const u=[i-1].concat(Mr(0,i-1));a=oe(a,u)}}return a}}else return this.mergeFunction(t)})}computeOutputShape(t){t=t;let e;t[0]==null?e=null:e=t[0].slice(1);for(let r=1;r<t.length;++r){const o=t[r]==null?null:t[r].slice(1);e=this.computeElementwiseOpOutputShape(e,o)}let s=[];for(const r of t)r!=null&&r[0]!==null&&s.push(r[0]);return s=ka(s),s.length===1?e=s.concat(e):e=[null].concat(e),e}computeMask(t,e){return Q(()=>{if(e==null)return null;if(!Array.isArray(e))throw new V("`mask` should be an Array");if(!Array.isArray(t))throw new V("`inputs` should be an Array");if(e.length!==t.length)throw new V(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${t.length} vs ${e.length})`);if(e.every(r=>r==null))return null;e=e.map(r=>r==null?r:ms(r,0));let s=e[0];for(let r=1;r<e.length-1;++r)s=Ho(s,e[r]);return s})}}let O_=class extends au{constructor(t){super(t)}mergeFunction(t){return Q(()=>{let e=t[0].clone();for(let s=1;s<t.length;++s)e=ht(e,t[s]);return e})}};O_.className="Add";ut(O_);let P_=class extends au{constructor(t){super(t)}mergeFunction(t){return Q(()=>{let e=t[0].clone();for(let s=1;s<t.length;++s)e=W(e,t[s]);return e})}};P_.className="Multiply";ut(P_);class L_ extends au{constructor(t){super(t)}mergeFunction(t){return Q(()=>{let e=t[0].clone();for(let s=1;s<t.length;++s)e=ht(e,t[s]);return W(1/t.length,e)})}}L_.className="Average";ut(L_);let M_=class extends au{constructor(t){super(t)}mergeFunction(t){return Q(()=>{let e=t[0];for(let s=1;s<t.length;++s)e=Ua(e,t[s]);return e})}};M_.className="Maximum";ut(M_);let B_=class extends au{constructor(t){super(t)}mergeFunction(t){return Q(()=>{let e=t[0];for(let s=1;s<t.length;++s)e=Bd(e,t[s]);return e})}};B_.className="Minimum";ut(B_);class z_ extends au{constructor(t){super(t),this.DEFAULT_AXIS=-1,t==null&&(t={}),this.axis=t.axis==null?this.DEFAULT_AXIS:t.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){if(!(Array.isArray(t)&&Array.isArray(t[0]))||t.length===1)throw new V("A `Concatenate` layer should be called on a list of at least 2 inputs");t=t;let e=!0;for(const r of t)if(r!=null){e=!1;break}if(e)return;const s=[];for(let r=0;r<t.length;++r){const o=t[r].slice();o.splice(this.axis,1);let a=!1;for(const i of s)if(we(i,o)){a=!0;break}a||s.push(o)}if(s.length>1)throw new V("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(t))}mergeFunction(t){return Q(()=>p0(t,this.axis))}computeOutputShape(t){if(!(Array.isArray(t)&&Array.isArray(t[0])))throw new V("A `Concatenate` layer should be called on a list of inputs.");const e=t,s=e[0].slice(),r=this.axis<0?s.length+this.axis:this.axis;for(const o of e.slice(1)){if(s[r]==null||o[r]==null){s[r]=null;break}s[r]+=o[r]}return s}computeMask(t,e){if(e==null)return null;if(!Array.isArray(e))throw new V("`mask` should be an array for Concatenate");if(!Array.isArray(t))throw new V("`inputs` should be an array for Concatenate");if(e.length!==t.length)throw new V(`Mismatch in the length of mask (${e.length}) and the legnth of inputs (${t.length})`);return Q(()=>{let s=!0;if(e.forEach(a=>{if(a!=null){s=!1;return}}),s)return null;const r=[];for(let a=0;a<t.length;++a)e[a]==null?r.push(It(mr(t[a]),"bool")):e[a].rank<t[a].rank?r.push(ms(e[a],-1)):r.push(e[a]);const o=vs(r,this.axis);return JN(o,-1,!1)})}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}z_.className="Concatenate";ut(z_);function id(n,t){for(;n<0;)n+=t;return n}function fK(n,t,e){if(n.shape.length>3||t.shape.length>3)throw new Kt("batchDot is not implemented for tensors of 4D or higher rank yet");if(T(n.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${n.shape.length}`),T(n.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`),typeof e=="number"&&(e=[e,e]),n.dtype==="complex64"||t.dtype==="complex64")throw new Kt("batchDot is not implemented for complex64-type Tensors yet.");const s=n.shape.length,r=t.shape.length;e==null&&(e=[s-1,r-2]);const o=e;return Q(()=>{let a;if(s>r){a=s-r;const u=[];for(let c=0;c<a;++c)u.push(1);t=K(t,t.shape.concat(u))}else if(r>s){a=r-s;const u=[];for(let c=0;c<a;++c)u.push(1);n=K(n,n.shape.concat(u))}else a=0;let i;if(n.shape.length===2&&t.shape.length===2)o[0]===o[1]?i=Rt(W(n,t),o[0]):i=Rt(W(oe(n,[1,0]),t),o[1]);else{const u=o[0]!==n.shape.length-1,c=o[1]===t.shape.length-1;i=ge(n,t,u,c)}if(a>0){let u;s>r?u=s+r-3:u=s-1;const c=[];for(let l=u;l<u+a;++l)c.push(l);i=Bp(i,c)}return i.shape.length===1&&(i=ms(i,1)),i})}class V_ extends au{constructor(t){super(t),this.axes=t.axes,this.normalize=t.normalize==null?!1:t.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){T(Array.isArray(t)&&t.length===2&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const e=t[0],s=t[1];if(e.length>3||s.length>3)throw new Kt("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(e,s);if(e[r[0]]!==s[r[1]])throw new V(`Dimension incompatibility: ${e[r[0]]} !== ${s[r[1]]}`)}mergeFunction(t){if(t.length!==2)throw new V(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${t.length} input(s).`);let e=t[0],s=t[1],r;return Array.isArray(this.axes)?r=this.axes.map((o,a)=>id(o,t[a].shape.length)):r=[id(this.axes,e.shape.length),id(this.axes,s.shape.length)],this.normalize&&(e=bm(e,r[0]),s=bm(s,r[1])),fK(e,s,r)}interpretAxes(t,e){let s;return Array.isArray(this.axes)?s=this.axes:s=[id(this.axes,t.length),id(this.axes,e.length)],s}computeOutputShape(t){T(Array.isArray(t)&&t.length===2&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const e=t[0].slice(),s=t[1].slice();if(e.length>3||s.length>3)throw new Kt("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(e,s);e.splice(r[0],1),s.splice(r[1],1),s.splice(0,1);const o=e.concat(s);return o.length===1&&o.push(1),o}computeMask(t,e){return null}getConfig(){const t={axes:this.axes,normalize:this.normalize},e=super.getConfig();return Object.assign(t,e),t}}V_.className="Dot";ut(V_);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class W_ extends Qt{constructor(t){super(t),this.supportsMasking=!0,this.stddev=t.stddev}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={stddev:this.stddev};return Object.assign(e,t),e}call(t,e){return Q(()=>{this.invokeCallHook(t,e);const s=Bt(t);return Hp(()=>ht(yy(s.shape,0,this.stddev),s),()=>s,e.training||!1)})}}W_.className="GaussianNoise";ut(W_);class U_ extends Qt{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return Q(()=>{this.invokeCallHook(t,e);const s=Bt(t);return this.rate>0&&this.rate<1?Hp(()=>{const o=Math.sqrt(this.rate/(1-this.rate));return W(s,yy(s.shape,1,o))},()=>s,e.training||!1):s})}}U_.className="GaussianDropout";ut(U_);class G_ extends Qt{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate,this.noiseShape=t.noiseShape}_getNoiseShape(t){return this.noiseShape||Bt(t).shape}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return Q(()=>{if(this.rate<1&&this.rate>0){const s=this._getNoiseShape(t);return Hp(()=>{const o=Bt(t),i=-1.6732632423543772*1.0507009873554805;let u=tu(Mp(s),this.rate);u=ao(u,"float32");const c=((1-this.rate)*(1+this.rate*i**2))**-.5,l=-c*i*this.rate,d=ht(W(o,u),W(ht(u,-1),i));return ht(W(d,c),l)},()=>Bt(t),e.training||!1)}return t})}}G_.className="AlphaDropout";ut(G_);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Hd(n,t,e,s,r,o=.001){let a;if(n.rank===2)a=qz(n,t,e,s,r,o);else if(n.rank===3)a=Xz(n,t,e,s,r,o);else if(n.rank===4)a=Jz(n,t,e,s,r,o);else throw new Kt(`batchNormalization is not implemented for array of rank ${n.rank} yet`);return a}function mK(n,t,e,s,r=.001){return Q(()=>{const o=v1(n,s),a=o.mean,i=o.variance;return[Hd(n,a,i,e,t,r),a,i]})}function gK(n,t,e,s,r=.001){return Q(()=>{const o=v1(n,s),a=o.mean,i=o.variance,u=[];for(const f of Mr(0,n.rank))s.indexOf(f)!==-1?u.push(1):u.push(n.shape[f]);const c=K(a,u),l=K(i,u),d=t==null?null:K(t,u),h=e==null?null:K(e,u);return[Hd(n,c,l,h,d,r),a,i]})}function yK(n,t,e,s,r=.001){return we(s.slice().sort(),Mr(0,n.rank-1))?mK(n,t,e,s,r):gK(n,t,e,s,r)}class H_ extends Qt{constructor(t){t==null&&(t={}),super(t),this.supportsMasking=!0,this.axis=t.axis==null?-1:t.axis,this.momentum=t.momentum==null?.99:t.momentum,this.epsilon=t.epsilon==null?.001:t.epsilon,this.center=t.center==null?!0:t.center,this.scale=t.scale==null?!0:t.scale,this.betaInitializer=je(t.betaInitializer||"zeros"),this.gammaInitializer=je(t.gammaInitializer||"ones"),this.movingMeanInitializer=je(t.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=je(t.movingVarianceInitializer||"ones"),this.betaConstraint=In(t.betaConstraint),this.gammaConstraint=In(t.gammaConstraint),this.betaRegularizer=qe(t.betaRegularizer),this.gammaRegularizer=qe(t.gammaRegularizer)}build(t){t=pe(t);const e=this.axis>=0?this.axis:this.axis+t.length,s=t[e];if(s==null)throw new V(`Axis ${e} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(t)}.`);this.inputSpec=[new wn({ndim:t.length,axes:{[e]:s}})];const r=[s];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(t,e){return Q(()=>{const s=e.training==null?!1:e.training,r=Bt(t),o=r.shape,a=o.length,i=Mr(0,a),u=this.axis>=0?this.axis:this.axis+a;i.splice(u,1);const c=Ri(1,a);c[u]=o[u];const l=i.slice();l.sort();const d=!we(l,Mr(0,a).slice(0,a-1)),h=()=>{if(d){const b=K(this.movingMean.read(),c),x=K(this.movingVariance.read(),c),w=this.center?K(this.beta.read(),c):null,v=this.scale?K(this.gamma.read(),c):null;return Hd(r,b,x,w,v,this.epsilon)}else return Hd(r,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!s)return h();const[p,f,m]=yK(r,this.gamma.read(),this.beta.read(),i,this.epsilon),g=(b,x,w)=>{Q(()=>{const v=1-w,k=b.read(),S=W(Mt(k,x),v);b.write(Mt(k,S))})};return(()=>{g(this.movingMean,f,this.momentum),g(this.movingVariance,m,this.momentum)})(),p})}getConfig(){const t={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ye(this.betaInitializer),gammaInitializer:Ye(this.gammaInitializer),movingMeanInitializer:Ye(this.movingMeanInitializer),movingVarianceInitializer:Ye(this.movingVarianceInitializer),betaRegularizer:De(this.betaRegularizer),gammaRegularizer:De(this.gammaRegularizer),betaConstraint:vn(this.betaConstraint),gammaConstraint:vn(this.gammaConstraint)},e=super.getConfig();return Object.assign(t,e),t}}H_.className="BatchNormalization";ut(H_);class j_ extends Qt{constructor(t){if(t==null&&(t={}),super(t),this.axis=t.axis==null?-1:t.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=t.epsilon==null?.001:t.epsilon,this.center=t.center==null?!0:t.center,this.scale=t.scale==null?!0:t.scale,this.betaInitializer=je(t.betaInitializer||"zeros"),this.gammaInitializer=je(t.gammaInitializer||"ones"),this.betaRegularizer=qe(t.betaRegularizer),this.gammaRegularizer=qe(t.gammaRegularizer),this.supportsMasking=!0}build(t){t=pe(t);const e=t.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let o=0;o<this.axis.length;++o)this.axis[o]<0&&(this.axis[o]+=e);for(const o of this.axis)if(o<0||o>=e)throw new Error(`Invalid axis: ${o}`);if(this.axis.length!==ka(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const s=this.axis.map(o=>t[o]),r=!0;this.scale?this.gamma=this.addWeight("gamma",s,"float32",this.gammaInitializer,this.gammaRegularizer,r):this.gamma=null,this.center?this.beta=this.addWeight("beta",s,"float32",this.betaInitializer,this.betaRegularizer,r):this.beta=null,this.built=!0}call(t,e){const s=Bt(t),r=s.shape,o=r.length;return Q(()=>{let{mean:i,variance:u}=v1(s,this.axis,!0);const c=Ri(1,o);for(const m of this.axis)c[m]=r[m];const l=m=>m!=null&&m.shape.length!==o?K(m,c):m;let d=this.scale?l(this.gamma.read()):null,h=this.center?l(this.beta.read()):null;const p=[],f=[];for(let m=0;m<o;++m)this.axis.indexOf(m)!==-1?(p.push(r[m]),f.push(1)):(p.push(1),f.push(r[m]));return i=Tr(i,p),u=Tr(u,p),d!=null&&(d=Tr(d,f)),h!=null&&(h=Tr(h,f)),Hd(s,i,u,h,d,this.epsilon)})}getConfig(){const t={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ye(this.betaInitializer),gammaInitializer:Ye(this.gammaInitializer),betaRegularizer:De(this.betaRegularizer),gammaRegularizer:De(this.gammaRegularizer)},e=super.getConfig();return Object.assign(t,e),t}}j_.className="LayerNormalization";ut(j_);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function bK(n,t,e){return Q(()=>{if(n.rank!==4)throw new V(`temporalPadding expects input tensor to be 4-D, but received a ${n.rank}-D tensor.`);if(t==null&&(t=[[1,1],[1,1]]),t.length!==2||t[0].length!==2||t[1].length!==2)throw new V("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(e==null&&(e=Br()),e!=="channelsLast"&&e!=="channelsFirst")throw new V(`Unknown data format: ${e}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let s;return e==="channelsFirst"?s=[[0,0],[0,0],t[0],t[1]]:s=[[0,0],t[0],t[1],[0,0]],I1(n,s)})}class q_ extends Qt{constructor(t){if(t==null&&(t={}),super(t),this.dataFormat=t.dataFormat==null?Br():t.dataFormat,t.padding==null)this.padding=[[1,1],[1,1]];else if(typeof t.padding=="number")this.padding=[[t.padding,t.padding],[t.padding,t.padding]];else{if(t.padding=t.padding,t.padding.length!==2)throw new V(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${t.padding.length} array.`);let e,s;if(typeof t.padding[0]=="number")e=[t.padding[0],t.padding[0]],s=[t.padding[1],t.padding[1]];else{if(t.padding=t.padding,t.padding[0].length!==2)throw new V(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${t.padding[0].length} array.`);if(e=t.padding[0],t.padding[1].length!==2)throw new V(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${t.padding[1].length} array.`);s=t.padding[1]}this.padding=[e,s]}this.inputSpec=[new wn({ndim:4})]}computeOutputShape(t){t=pe(t);let e,s;return this.dataFormat==="channelsFirst"?(t[2]!=null&&t[2]>=0?e=t[2]+this.padding[0][0]+this.padding[0][1]:e=null,t[3]!=null&&t[3]>=0?s=t[3]+this.padding[1][0]+this.padding[1][1]:s=null,[t[0],t[1],e,s]):(t[1]!=null&&t[1]>=0?e=t[1]+this.padding[0][0]+this.padding[0][1]:e=null,t[2]!=null&&t[2]>=0?s=t[2]+this.padding[1][0]+this.padding[1][1]:s=null,[t[0],e,s,t[3]])}call(t,e){return Q(()=>bK(Bt(t),this.padding,this.dataFormat))}getConfig(){const t={padding:this.padding,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}q_.className="ZeroPadding2D";ut(q_);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Sy(n,t,e,s,r,o){return Q(()=>{an(r),i2(o),Qs(s),e==null&&(e=[1,1]),s==null&&(s="valid"),r==null&&(r=Br()),o==null&&(o="max"),n=N0(n,r);let a;const i=s==="same"?"same":"valid";return o==="max"?a=w1(n,t,e,i):a=c1(n,t,e,i),r==="channelsFirst"&&(a=oe(a,[0,3,1,2])),a})}function K_(n,t,e,s,r,o){return Q(()=>{an(r),i2(o),Qs(s),e==null&&(e=[1,1,1]),s==null&&(s="valid"),r==null&&(r=Br()),o==null&&(o="max"),n=l_(n,r);let a;const i=s==="same"?"same":"valid";return o==="max"?a=OW(n,t,e,i):a=Lz(n,t,e,i),r==="channelsFirst"&&(a=oe(a,[0,4,1,2,3])),a})}class X_ extends Qt{constructor(t){if(t.poolSize==null&&(t.poolSize=2),super(t),typeof t.poolSize=="number")this.poolSize=[t.poolSize];else if(Array.isArray(t.poolSize)&&t.poolSize.length===1&&typeof t.poolSize[0]=="number")this.poolSize=t.poolSize;else throw new V(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.poolSize)}`);if(_n(this.poolSize,"poolSize"),t.strides==null)this.strides=this.poolSize;else if(typeof t.strides=="number")this.strides=[t.strides];else if(Array.isArray(t.strides)&&t.strides.length===1&&typeof t.strides[0]=="number")this.strides=t.strides;else throw new V(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.strides)}`);_n(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,Qs(this.padding),this.inputSpec=[new wn({ndim:3})]}computeOutputShape(t){t=pe(t);const e=Dr(t[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],e,t[2]]}call(t,e){return Q(()=>{this.invokeCallHook(t,e),t=Up(Bt(t),2);const s=this.poolingFunction(Bt(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Bp(s,[2])})}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides},e=super.getConfig();return Object.assign(t,e),t}}class Y_ extends X_{constructor(t){super(t)}poolingFunction(t,e,s,r,o){return an(o),Qs(r),Sy(t,e,s,r,o,"max")}}Y_.className="MaxPooling1D";ut(Y_);class J_ extends X_{constructor(t){super(t)}poolingFunction(t,e,s,r,o){return an(o),Qs(r),Sy(t,e,s,r,o,"avg")}}J_.className="AveragePooling1D";ut(J_);class Z_ extends Qt{constructor(t){if(t.poolSize==null&&(t.poolSize=[2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize],t.strides==null)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(t.strides.length!==2)throw new V(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides];_n(this.poolSize,"poolSize"),_n(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,an(this.dataFormat),Qs(this.padding),this.inputSpec=[new wn({ndim:4})]}computeOutputShape(t){t=pe(t);let e=this.dataFormat==="channelsFirst"?t[2]:t[1],s=this.dataFormat==="channelsFirst"?t[3]:t[2];return e=Dr(e,this.poolSize[0],this.padding,this.strides[0]),s=Dr(s,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[t[0],t[1],e,s]:[t[0],e,s,t[3]]}call(t,e){return Q(()=>(this.invokeCallHook(t,e),this.poolingFunction(Bt(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class Q_ extends Z_{constructor(t){super(t)}poolingFunction(t,e,s,r,o){return an(o),Qs(r),Sy(t,e,s,r,o,"max")}}Q_.className="MaxPooling2D";ut(Q_);class tT extends Z_{constructor(t){super(t)}poolingFunction(t,e,s,r,o){return an(o),Qs(r),Sy(t,e,s,r,o,"avg")}}tT.className="AveragePooling2D";ut(tT);class eT extends Qt{constructor(t){if(t.poolSize==null&&(t.poolSize=[2,2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize,t.poolSize],t.strides==null)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(t.strides.length!==3)throw new V(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides,t.strides];_n(this.poolSize,"poolSize"),_n(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,an(this.dataFormat),Qs(this.padding),this.inputSpec=[new wn({ndim:5})]}computeOutputShape(t){t=pe(t);let e=this.dataFormat==="channelsFirst"?t[2]:t[1],s=this.dataFormat==="channelsFirst"?t[3]:t[2],r=this.dataFormat==="channelsFirst"?t[4]:t[3];return e=Dr(e,this.poolSize[0],this.padding,this.strides[0]),s=Dr(s,this.poolSize[1],this.padding,this.strides[1]),r=Dr(r,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[t[0],t[1],e,s,r]:[t[0],e,s,r,t[4]]}call(t,e){return Q(()=>(this.invokeCallHook(t,e),this.poolingFunction(Bt(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class nT extends eT{constructor(t){super(t)}poolingFunction(t,e,s,r,o){return an(o),Qs(r),K_(t,e,s,r,o,"max")}}nT.className="MaxPooling3D";ut(nT);class sT extends eT{constructor(t){super(t)}poolingFunction(t,e,s,r,o){return an(o),Qs(r),K_(t,e,s,r,o,"avg")}}sT.className="AveragePooling3D";ut(sT);class rT extends Qt{constructor(t){super(t),this.inputSpec=[new wn({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,e){throw new Kt}}class oT extends rT{constructor(t){super(t||{})}call(t,e){return Q(()=>{const s=Bt(t);return pn(s,1)})}}oT.className="GlobalAveragePooling1D";ut(oT);class aT extends rT{constructor(t){super(t||{})}call(t,e){return Q(()=>{const s=Bt(t);return Ar(s,1)})}}aT.className="GlobalMaxPooling1D";ut(aT);class iT extends Qt{constructor(t){super(t),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,an(this.dataFormat),this.inputSpec=[new wn({ndim:4})]}computeOutputShape(t){return t=t,this.dataFormat==="channelsLast"?[t[0],t[3]]:[t[0],t[1]]}call(t,e){throw new Kt}getConfig(){const t={dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class uT extends iT{call(t,e){return Q(()=>{const s=Bt(t);return this.dataFormat==="channelsLast"?pn(s,[1,2]):pn(s,[2,3])})}}uT.className="GlobalAveragePooling2D";ut(uT);class lT extends iT{call(t,e){return Q(()=>{const s=Bt(t);return this.dataFormat==="channelsLast"?Ar(s,[1,2]):Ar(s,[2,3])})}}lT.className="GlobalMaxPooling2D";ut(lT);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class cT extends Qt{constructor(t){super(t),this.layer=t.layer}build(t){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(t){this.layer!=null&&(this.layer.trainable=t)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(t){this.layer.setWeights(t)}getConfig(){const t={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},e=super.getConfig();return Object.assign(t,e),t}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(t)}static fromConfig(t,e,s={}){const r=e.layer,o=Bo(r,s);delete e.layer;const a={layer:o};return Object.assign(a,e),new t(a)}}class dT extends cT{constructor(t){super(t),this.supportsMasking=!0}build(t){if(t=pe(t),t.length<3)throw new V(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(t)}`);this.inputSpec=[{shape:t}];const e=[t[0]].concat(t.slice(2));this.layer.built||(this.layer.build(e),this.layer.built=!0),super.build(t)}computeOutputShape(t){t=pe(t);const e=[t[0]].concat(t.slice(2)),s=this.layer.computeOutputShape(e),r=t[1];return[s[0],r].concat(s.slice(1))}call(t,e){return Q(()=>(t=Bt(t),w_((a,i)=>[Bt(this.layer.call(a,e)),[]],t,[],!1,null,null,!1,!0)[1]))}}dT.className="TimeDistributed";ut(dT);function xK(n){ou(zj,"BidirectionalMergeMode",n)}const wK="concat";class hT extends cT{constructor(t){super(t);const e=t.layer.getConfig(),s={};s.className=t.layer.getClassName(),s.config=e,this.forwardLayer=Bo(s),e.goBackwards=e.goBackwards!==!0;const r={};if(r.className=t.layer.getClassName(),r.config=e,this.backwardLayer=Bo(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=t.mergeMode===void 0?wK:t.mergeMode,xK(this.mergeMode),t.weights)throw new Kt("weights support is not implemented for Bidirectional layer yet.");this._stateful=t.layer.stateful,this.returnSequences=t.layer.returnSequences,this.returnState=t.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=t.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(t){this._trainable=t,this.forwardLayer!=null&&(this.forwardLayer.trainable=t),this.backwardLayer!=null&&(this.backwardLayer.trainable=t)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(t){const e=t.length,s=Math.floor(e/2);this.forwardLayer.setWeights(t.slice(0,s)),this.backwardLayer.setWeights(t.slice(s))}computeOutputShape(t){let e=this.forwardLayer.computeOutputShape(t);Array.isArray(e)&&Array.isArray(e[0])||(e=[e]),e=e;let s,r,o;return this.returnState&&(o=e.slice(1)),s=e[0],s=s,this.mergeMode==="concat"?(s[s.length-1]*=2,r=[s]):this.mergeMode==null?r=[s,s.slice()]:r=[s],this.returnState?this.mergeMode==null?r.concat(o).concat(o.slice()):[s].concat(o).concat(o.slice()):gs(r)}apply(t,e){let s=e==null?null:e.initialState,r=e==null?null:e.constants;e==null&&(e={});const o=x_(t,s,r,this.numConstants);if(t=o.inputs,s=o.initialState,r=o.constants,Array.isArray(t)&&(s=t.slice(1),t=t[0]),(s==null||s.length===0)&&r==null)return super.apply(t,e);const a=[],i=[];if(s!=null){const c=s.length;if(c%2>0)throw new V("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");e.initialState=s,a.push(...s);const l=s.map(d=>new wn({shape:d.shape}));this.forwardLayer.stateSpec=l.slice(0,c/2),this.backwardLayer.stateSpec=l.slice(c/2),i.push(...l)}if(r!=null)throw new Kt("Support for constants in Bidirectional layers is not implemented yet.");const u=a[0]instanceof yo;for(const c of a)if(c instanceof yo!==u)throw new V("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(u){const c=[t].concat(a),l=this.inputSpec.concat(i),d=this.inputSpec;this.inputSpec=l;const h=super.apply(c,e);return this.inputSpec=d,h}else return super.apply(t,e)}call(t,e){return Q(()=>{const s=e.initialState;let r,o;if(s==null)r=this.forwardLayer.call(t,e),o=this.backwardLayer.call(t,e);else{const u=s.slice(0,s.length/2),c=s.slice(s.length/2);r=this.forwardLayer.call(t,Object.assign(e,{initialState:u})),o=this.backwardLayer.call(t,Object.assign(e,{initialState:c}))}let a;this.returnState&&(Array.isArray(r)&&(a=r.slice(1).concat(o.slice(1))),r=r[0],o=o[0]),this.returnSequences&&(o=Ai(o,1));let i;return this.mergeMode==="concat"?i=p0([r,o]):this.mergeMode==="sum"?i=ht(r,o):this.mergeMode==="ave"?i=W(.5,ht(r,o)):this.mergeMode==="mul"?i=W(r,o):this.mergeMode==null&&(i=[r,o]),this.returnState?this.mergeMode==null?i.concat(a):[i].concat(a):i})}resetStates(t){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(t){xi(this.forwardLayer.name,()=>{this.forwardLayer.build(t)}),xi(this.backwardLayer.name,()=>{this.backwardLayer.build(t)}),this.built=!0}computeMask(t,e){Array.isArray(e)&&(e=e[0]);let s;if(this.returnSequences?this.mergeMode==null?s=[e,e]:s=e:this.mergeMode==null?s=[null,null]:s=null,this.returnState){const o=this.forwardLayer.states.map(a=>null);return Array.isArray(s)?s.concat(o).concat(o):[s].concat(o).concat(o)}else return s}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(t),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(t)}getConfig(){const t={mergeMode:this.mergeMode},e=super.getConfig();return Object.assign(t,e),t}static fromConfig(t,e){const s=Bo(e.layer);if(delete e.layer,e.numConstants!=null)throw new Kt("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=e;return r.layer=s,new t(r)}}hT.className="Bidirectional";ut(hT);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class pT extends Qt{constructor(t){super(t),this.scale=t.scale,t.offset?this.offset=t.offset:this.offset=0}getConfig(){const t={scale:this.scale,offset:this.offset},e=super.getConfig();return Object.assign(t,e),t}call(t,e){return Q(()=>(t=Bt(t),t.dtype!=="float32"&&(t=ao(t,"float32")),ht(W(t,this.scale),this.offset)))}}pT.className="Rescaling";ut(pT);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const{resizeBilinear:vK,cropAndResize:IK}=Po;class fT extends Qt{constructor(t){super(t),this.height=t.height,this.width=t.width}centerCrop(t,e,s,r,o,a,i,u){return Q(()=>{let c,l=!1;const d=e/a,h=s/i,p=(r+e)/a,f=(o+s)/i,m=[d,h,p,f],g=[];t.rank===3?(l=!0,c=jo([t])):c=t;for(let v=0;v<c.shape[0];v++)g.push(m);const y=a1(g,[g.length,4]),b=zd(0,g.length,1,"int32"),w=IK(c,y,b,[r,o],"nearest");return ao(l?Bt(Di(w)):w,u)})}upsize(t,e,s,r){return Q(()=>{const o=vK(t,[e,s]);return ao(o,r)})}call(t,e){return Q(()=>{const s=Bt(t),r=s.dtype,o=s.shape,a=o[o.length-3],i=o[o.length-2];let u=0;a!==this.height&&(u=Math.floor((a-this.height)/2));let c=0;return i!==this.width&&(c=Math.floor((i-this.width)/2),c===0&&(c=1)),u>=0&&c>=0?this.centerCrop(s,u,c,this.height,this.width,a,i,r):this.upsize(t,this.height,this.width,r)})}getConfig(){const t={height:this.height,width:this.width},e=super.getConfig();return Object.assign(t,e),t}computeOutputShape(t){t=pe(t);const e=t.length-3,s=t.length-2;return t[e]=this.height,t[s]=this.width,t}}fT.className="CenterCrop";ut(fT);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function kK(n,t,e,s){let r=Bt(n);if(r.dtype!=="int32"&&(r=ao(r,"int32")),t==="int")return r;const o=r.shape;if(r.rank===0&&(r=ms(r,-1)),t==="oneHot"&&r.shape[r.shape.length-1]!==1&&(r=ms(r,-1)),r.rank>2)throw new V(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${o} which would result in output rank ${r.rank}.`);const a=["multiHot","oneHot"].includes(t),i=r;let u;if(typeof s<"u"&&t==="count"?u=KI(i,s,e,a):u=KI(i,[],e,a),t!=="tfIdf")return u;if(s)return W(u,s);throw new V("When outputMode is 'tfIdf', weights must be provided.")}/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class mT extends Qt{constructor(t){super(t),this.numTokens=t.numTokens,t.outputMode?this.outputMode=t.outputMode:this.outputMode="multiHot"}getConfig(){const t={numTokens:this.numTokens,outputMode:this.outputMode},e=super.getConfig();return Object.assign(t,e),t}computeOutputShape(t){return t=pe(t),t==null?[this.numTokens]:this.outputMode==="oneHot"&&t[t.length-1]!==1?(t.push(this.numTokens),t):(t[t.length-1]=this.numTokens,t)}call(t,e){return Q(()=>{t=Bt(t),t.dtype!=="int32"&&(t=ao(t,"int32"));let s;if(typeof e.countWeights<"u"){if(this.outputMode!=="count")throw new V(`countWeights is not used when outputMode !== count.
              Received countWeights=${e.countWeights}`);s=Bt(e.countWeights)}const r=Ar(t),o=lm(t),a=Zs(this.numTokens,r).bufferSync().get(0),i=tu(o,0).bufferSync().get(0);if(!(a&&i))throw new V(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return kK(t,this.outputMode,this.numTokens,s)})}}mT.className="CategoryEncoding";ut(mT);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const $K=["bilinear","nearest"],Ok=new Set($K);class gT extends Qt{constructor(t){if(super(t),this.height=t.height,this.width=t.width,t.interpolation)if(Ok.has(t.interpolation))this.interpolation=t.interpolation;else throw new V(`Invalid interpolation parameter: ${t.interpolation} is not implemented`);else this.interpolation="bilinear";this.cropToAspectRatio=!!t.cropToAspectRatio}computeOutputShape(t){t=pe(t);const e=t[2];return[this.height,this.width,e]}getConfig(){const t={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},e=super.getConfig();return Object.assign(t,e),t}call(t,e){return Q(()=>{const s=[this.height,this.width];if(this.interpolation==="bilinear")return Po.resizeBilinear(t,s,!this.cropToAspectRatio);if(this.interpolation==="nearest")return Po.resizeNearestNeighbor(t,s,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...Ok]} are supported`)})}}gT.className="Resizing";ut(gT);/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class yT{constructor(t){this.seed=t}next(){if(this.seed!==void 0)return this.seed++}}yT.className="RandomSeed";/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class bT extends Qt{constructor(t){super(t),this.randomGenerator=new yT(t.seed)}getConfig(){const t={seed:this.randomGenerator.seed},e=super.getConfig();return Object.assign(t,e),t}}bT.className="BaseRandomLayer";/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const SK=["bilinear","nearest"],Pk=new Set(SK);class xT extends bT{constructor(t){super(t);const{factor:e,interpolation:s="bilinear"}=t;if(this.factor=e,Array.isArray(this.factor)&&this.factor.length===2)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else if(!Array.isArray(this.factor)&&this.factor>0)this.widthLower=-this.factor,this.widthUpper=this.factor;else throw new V(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);if(this.widthLower<-1||this.widthUpper<-1)throw new V(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new V(`factor cannot have upper bound less than lower bound.
        Got upper bound: ${this.widthUpper}.
        Got lower bound: ${this.widthLower}
      `);if(s)if(Pk.has(s))this.interpolation=s;else throw new V(`Invalid interpolation parameter: ${s} is not implemented`)}getConfig(){const t={factor:this.factor,interpolation:this.interpolation},e=super.getConfig();return Object.assign(t,e),t}computeOutputShape(t){t=pe(t);const e=t[2];return[this.imgHeight,-1,e]}call(t,e){return Q(()=>{const s=Bt(t);this.imgHeight=s.shape[s.shape.length-3];const r=s.shape[s.shape.length-2];this.widthFactor=Mp([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let o=this.widthFactor.dataSync()[0]*r;o=Math.round(o);const a=[this.imgHeight,o];switch(this.interpolation){case"bilinear":return Po.resizeBilinear(t,a);case"nearest":return Po.resizeNearestNeighbor(t,a);default:throw new Error(`Interpolation is ${this.interpolation}
          but only ${[...Pk]} are supported`)}})}}xT.className="RandomWidth";ut(xT);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NK=et();NK.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,n=>{n&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var Lk;(function(n){n[n.DT_INVALID=0]="DT_INVALID",n[n.DT_FLOAT=1]="DT_FLOAT",n[n.DT_DOUBLE=2]="DT_DOUBLE",n[n.DT_INT32=3]="DT_INT32",n[n.DT_UINT8=4]="DT_UINT8",n[n.DT_INT16=5]="DT_INT16",n[n.DT_INT8=6]="DT_INT8",n[n.DT_STRING=7]="DT_STRING",n[n.DT_COMPLEX64=8]="DT_COMPLEX64",n[n.DT_INT64=9]="DT_INT64",n[n.DT_BOOL=10]="DT_BOOL",n[n.DT_QINT8=11]="DT_QINT8",n[n.DT_QUINT8=12]="DT_QUINT8",n[n.DT_QINT32=13]="DT_QINT32",n[n.DT_BFLOAT16=14]="DT_BFLOAT16",n[n.DT_QINT16=15]="DT_QINT16",n[n.DT_QUINT16=16]="DT_QUINT16",n[n.DT_UINT16=17]="DT_UINT16",n[n.DT_COMPLEX128=18]="DT_COMPLEX128",n[n.DT_HALF=19]="DT_HALF",n[n.DT_RESOURCE=20]="DT_RESOURCE",n[n.DT_VARIANT=21]="DT_VARIANT",n[n.DT_UINT32=22]="DT_UINT32",n[n.DT_UINT64=23]="DT_UINT64",n[n.DT_FLOAT_REF=101]="DT_FLOAT_REF",n[n.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",n[n.DT_INT32_REF=103]="DT_INT32_REF",n[n.DT_UINT8_REF=104]="DT_UINT8_REF",n[n.DT_INT16_REF=105]="DT_INT16_REF",n[n.DT_INT8_REF=106]="DT_INT8_REF",n[n.DT_STRING_REF=107]="DT_STRING_REF",n[n.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",n[n.DT_INT64_REF=109]="DT_INT64_REF",n[n.DT_BOOL_REF=110]="DT_BOOL_REF",n[n.DT_QINT8_REF=111]="DT_QINT8_REF",n[n.DT_QUINT8_REF=112]="DT_QUINT8_REF",n[n.DT_QINT32_REF=113]="DT_QINT32_REF",n[n.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",n[n.DT_QINT16_REF=115]="DT_QINT16_REF",n[n.DT_QUINT16_REF=116]="DT_QUINT16_REF",n[n.DT_UINT16_REF=117]="DT_UINT16_REF",n[n.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",n[n.DT_HALF_REF=119]="DT_HALF_REF",n[n.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",n[n.DT_VARIANT_REF=121]="DT_VARIANT_REF",n[n.DT_UINT32_REF=122]="DT_UINT32_REF",n[n.DT_UINT64_REF=123]="DT_UINT64_REF"})(Lk||(Lk={}));var Mk;(function(n){(function(t){t[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"})(n.CheckpointFormatVersion||(n.CheckpointFormatVersion={}))})(Mk||(Mk={}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var Bk;(function(n){n[n.FAIL=0]="FAIL",n[n.SHORTEST=1]="SHORTEST",n[n.LONGEST=2]="LONGEST"})(Bk||(Bk={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tt(n,t){Array.isArray(n)||(n=[n]),n.forEach(e=>{e!=null&&T(e.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the CPU backend.`)})}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CK=SC;class Ny extends $g{nextDataId(){return Ny.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new Dw(this,kr())}write(t,e,s){this.firstUse&&(this.firstUse=!1,et().get("IS_NODE")&&Gs(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));const r={id:this.nextDataId()};return this.data.set(r,{values:t,dtype:s,refCount:1}),r}makeTensorInfo(t,e,s){let r;if(e==="string"&&s!=null&&s.length>0&&Vh(s[0])){const o=s.map(a=>Ia(a));r=this.write(o,t,e)}else r=this.write(s,t,e);return{dataId:r,shape:t,dtype:e}}refCount(t){return this.data.has(t)?this.data.get(t).refCount:0}incRef(t){const e=this.data.get(t);e.refCount++}decRef(t){if(this.data.has(t)){const e=this.data.get(t);e.refCount--}}move(t,e,s,r,o){this.data.set(t,{values:e,dtype:r,refCount:o})}numDataIds(){return this.data.numDataIds()}async read(t){return this.readSync(t)}readSync(t){const{dtype:e,complexTensorInfos:s}=this.data.get(t);if(e==="complex64"){const r=this.readSync(s.real.dataId),o=this.readSync(s.imag.dataId);return qo(r,o)}return JM(this.data.get(t).values,e)}bufferSync(t){const e=this.readSync(t.dataId);if(t.dtype==="string")try{const s=e.map(r=>Ea(r));return Zt(t.shape,t.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Zt(t.shape,t.dtype,e)}makeOutput(t,e,s){return kr().makeTensorFromTensorInfo(this.makeTensorInfo(e,s,t),this)}disposeData(t,e=!1){if(this.data.has(t)){if(this.data.get(t).refCount--,!e&&this.data.get(t).refCount>0)return!1;const{complexTensorInfos:s}=this.data.get(t);s!=null&&(this.disposeData(s.real.dataId,!0),this.disposeData(s.imag.dataId,!0)),this.data.delete(t)}return!0}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}async time(t){const e=Un();return t(),{kernelMs:Un()-e}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(t){Tt([t],"where");const e=this.readSync(t.dataId);return CK(t.shape,e)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}Ny.nextDataId=0;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wT(n){const t=new Float32Array(n.length);for(let e=0;e<n.length;++e)t[e]=Math.abs(n[e]);return t}const _K=n=>{const{x:t}=n.inputs,e=n.backend;Tt(t,"abs");let s=new Float32Array(j(t.shape));const r=e.data.get(t.dataId).values;return s=wT(r),e.makeOutput(s,t.shape,t.dtype)},TK={kernelName:Wh,backendName:"cpu",kernelFunc:_K};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function un(n){return(t,e,s,r,o)=>{const a=Ut(t,e),i=a.length,u=St(a),c=j(a),l=jn(o,c),d=t.length,h=e.length,p=St(t),f=St(e),m=el(t,a),g=el(e,a);if(m.length+g.length===0)for(let y=0;y<l.length;++y)l[y]=n(s[y%s.length],r[y%r.length]);else for(let y=0;y<l.length;++y){const b=yl(y,i,u),x=b.slice(-d);m.forEach(S=>x[S]=0);const w=ro(x,d,p),v=b.slice(-h);g.forEach(S=>v[S]=0);const k=ro(v,h,f);l[y]=n(s[w],r[k])}return[l,a]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function As(n){const{inputs:t,backend:e}=n,{real:s,imag:r}=t,o=e.data.get(s.dataId).values,a=e.data.get(r.dataId).values,i=e.makeTensorInfo(s.shape,"complex64"),u=e.data.get(i.dataId);return u.complexTensorInfos={real:e.makeTensorInfo(s.shape,"float32",o),imag:e.makeTensorInfo(r.shape,"float32",a)},i}const EK={kernelName:Bw,backendName:"cpu",kernelFunc:As};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function km(n,t,e="float32"){if(e==="complex64"){const r=km(n,t,"float32"),o=km(n,t,"float32");return As({inputs:{real:r,imag:o},backend:n})}const s=qn(j(t),e);return n.makeTensorInfo(t,e,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bo(n){const{inputs:t,backend:e}=n,{x:s}=t;return e.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const AK={kernelName:jl,backendName:"cpu",kernelFunc:bo};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fi(n){const{inputs:t,backend:e}=n,{input:s}=t,r=e.data.get(s.dataId).complexTensorInfos.real,o=e.data.get(r.dataId).values;return e.makeTensorInfo(r.shape,r.dtype,o)}const DK={kernelName:Xw,backendName:"cpu",kernelFunc:Fi};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vT(n,t,e,s){if(s==="int32"){const r=Int32Array.from(n);return[t,"int32",r]}if(s==="bool"){const r=Qi([0],e),[o,a]=un((i,u)=>i!==u?1:0)(t,[],n,r,"bool");return[a,"bool",o]}throw new Error(`Error in Cast: failed to cast ${e} to ${s}`)}function Oa(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{dtype:o}=s;if(o==="complex64"){if(r.dtype==="complex64")return bo({inputs:{x:r},backend:e});const l=km(e,r.shape,r.dtype),d=Oa({inputs:{x:r},backend:e,attrs:{dtype:"float32"}}),h=As({inputs:{real:d,imag:l},backend:e});return e.disposeIntermediateTensorInfo(l),e.disposeIntermediateTensorInfo(d),h}if(r.dtype==="complex64"){const l=Fi({inputs:{input:r},backend:e}),d=Oa({inputs:{x:l},backend:e,attrs:{dtype:o}});return e.disposeIntermediateTensorInfo(l),d}if(!xN(r.dtype,o)){const l=bo({inputs:{x:r},backend:e});return{dataId:l.dataId,shape:l.shape,dtype:o}}const a=e.data.get(r.dataId).values,[i,u,c]=vT(a,r.shape,r.dtype,o);return e.makeTensorInfo(i,u,c)}const RK={kernelName:Cl,backendName:"cpu",kernelFunc:Oa};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sn(n,t,e,s){return e==null?({inputs:r,backend:o})=>{const{a,b:i}=r,u=o;Tt([a,i],n);const c=u.data.get(a.dataId).values,l=u.data.get(i.dataId).values,d=a.dtype==="string"?Ko(c):c,h=a.dtype==="string"?Ko(l):l,p=s||a.dtype,[f,m]=t(a.shape,i.shape,d,h,p);return u.makeTensorInfo(m,p,f)}:({inputs:r,backend:o})=>{const{a,b:i}=r,u=o;if(a.dtype==="complex64"||i.dtype==="complex64"){const c=Oa({inputs:{x:a},backend:u,attrs:{dtype:"complex64"}}),l=u.data.get(c.dataId),d=l.complexTensorInfos.real,h=l.complexTensorInfos.imag,p=u.data.get(d.dataId).values,f=u.data.get(h.dataId).values,m=Oa({inputs:{x:i},backend:u,attrs:{dtype:"complex64"}}),g=u.data.get(m.dataId),y=g.complexTensorInfos.real,b=g.complexTensorInfos.imag,x=u.data.get(y.dataId).values,w=u.data.get(b.dataId).values,[v,k,S]=e(a.shape,i.shape,p,f,x,w),_=u.makeTensorInfo(S,"float32",v),C=u.makeTensorInfo(S,"float32",k),N=As({inputs:{real:_,imag:C},backend:u});return u.disposeIntermediateTensorInfo(c),u.disposeIntermediateTensorInfo(m),u.disposeIntermediateTensorInfo(_),u.disposeIntermediateTensorInfo(C),N}else{const c=u.data.get(a.dataId).values,l=u.data.get(i.dataId).values,d=s||a.dtype,[h,p]=t(a.shape,i.shape,c,l,d);return u.makeTensorInfo(p,d,h)}}}function F0(n){return(t,e,s,r,o,a)=>{const i=Ut(t,e),u=j(i),c=i.length,l=St(i),d=jn("float32",u),h=jn("float32",u),p=el(t,i),f=el(e,i),m=qo(s,r),g=qo(o,a),y=t.length,b=St(t),x=e.length,w=St(e);if(p.length+f.length===0)for(let v=0;v<d.length;v++){const k=v%m.length,S=v%g.length,_=n(m[k*2],m[k*2+1],g[S*2],g[S*2+1]);d[v]=_.real,h[v]=_.imag}else for(let v=0;v<d.length;v++){const k=yl(v,c,l),S=k.slice(-y);p.forEach(A=>S[A]=0);const _=ro(S,y,b),C=k.slice(-x);f.forEach(A=>C[A]=0);const N=ro(C,x,w),$=n(m[_*2],m[_*2+1],g[N*2],g[N*2+1]);d[v]=$.real,h[v]=$.imag}return[d,h,i]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IT=un((n,t)=>n+t),FK=F0((n,t,e,s)=>({real:n+e,imag:t+s})),rl=Sn(Xi,IT,FK),OK={kernelName:Xi,backendName:"cpu",kernelFunc:rl};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O0(n,t,e,s,r){const o=j(s),a=qn(r,e);for(let i=0;i<n.length;i++){const u=n[i];if(u<0)throw new Error("Input x must be non-negative!");u>=r||(o>0?a[u]+=t[i]:a[u]+=1)}return a}function kT(n,t,e,s=!1){const r=n.shape[0],o=n.shape[1],a=Zt([r,e],t.dtype);for(let i=0;i<r;i++)for(let u=0;u<o;u++){const c=n.get(i,u);if(c<0)throw new Error("Input x must be non-negative!");c>=e||(s?a.set(1,i,c):t.size>0?a.set(a.get(i,c)+t.get(i,u),i,c):a.set(a.get(i,c)+1,i,c))}return a}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $T=un((n,t)=>n&t),PK=Sn(_g,$T),LK={kernelName:_g,backendName:"cpu",kernelFunc:PK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ko(n){return(t,e,s)=>{const r=tn(e,t.length);for(let o=0;o<t.length;++o)r[o]=n(t[o],s);return r}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ce(n,t,e){const s=ko(t);return qa(n,s,e)}function qa(n,t,e){return({inputs:s,attrs:r,backend:o})=>{const{x:a}=s;Tt(a,n);const i=o,u=i.data.get(a.dataId).values;let c;if(a.dtype==="string"){if(!Array.isArray(u))throw new Error("String tensor's value was not an instance of Array");c=Ko(u)}else c=u;const l=e||a.dtype,d=t(c,l,r);return i.makeTensorInfo(a.shape,l,d)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ST=ko(n=>Math.ceil(n)),MK=qa(_l,ST),BK={kernelName:_l,backendName:"cpu",kernelFunc:MK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P0(n,t,e,s){const r=tn(e,j(t));if(s&&e!=="string"){let o=0;n.forEach(a=>{const i=j(a.shape);r.set(a.vals,o),o+=i})}else{let o=0;n.forEach(a=>{const i=e==="string"?Ko(a.vals):a.vals;let u=0;for(let c=0;c<a.shape[0];++c){const l=c*t[1]+o;for(let d=0;d<a.shape[1];++d)r[l+d]=i[u++]}o+=a.shape[1]})}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NT=un((n,t)=>n===t?1:0),CT=Sn(rp,NT,null,"bool"),zK={kernelName:rp,backendName:"cpu",kernelFunc:CT};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _T=ko(n=>Math.exp(n)),TT=qa(zl,_T,"float32"),VK={kernelName:zl,backendName:"cpu",kernelFunc:TT};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ET=ko(n=>Math.expm1(n)),WK=qa(Vl,ET),UK={kernelName:Vl,backendName:"cpu",kernelFunc:WK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AT=ko(n=>Math.floor(n)),GK=qa(Wl,AT),HK={kernelName:Wl,backendName:"cpu",kernelFunc:GK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DT=un((n,t)=>Math.floor(n/t)),jK=Sn(Ul,DT,null,"int32"),qK={kernelName:Ul,backendName:"cpu",kernelFunc:jK};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RT(n,t,e,s,r,o,a,i,u){const c=Zt([s,o],e);for(let l=0;l<s;l++){const d=[];let h=0;for(let p=0;p<r;p++){const f=n[l*r+p];h+=f*a[p],d.push(f)}if(h<0||h>=u/o)throw new Error(`Invalid indices: ${d} does not index into ${i}`);for(let p=0;p<o;p++)c.values[l*o+p]=t.get(...t.indexToLoc(h*o+p))}return c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FT(n,t,e){const s=Zt(e,n.dtype);for(let r=0;r<s.size;++r){const a=s.indexToLoc(r).slice(),i=a[0],u=a[2],c=t.locToIndex([i,u]);a[2]=t.values[c];const l=n.locToIndex(a);0<=l&&l<n.values.length&&(s.values[r]=n.values[l])}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OT=un((n,t)=>n>t?1:0),KK=Sn(up,OT,null,"bool"),XK={kernelName:up,backendName:"cpu",kernelFunc:KK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PT=un((n,t)=>n>=t?1:0),YK=Sn(Hl,PT,null,"bool"),JK={kernelName:Hl,backendName:"cpu",kernelFunc:YK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LT=un((n,t)=>n<t?1:0),ZK=Sn(lp,LT,null,"bool"),QK={kernelName:lp,backendName:"cpu",kernelFunc:ZK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MT=un((n,t)=>n<=t?1:0),t6=Sn(cp,MT,null,"bool"),e6={kernelName:cp,backendName:"cpu",kernelFunc:t6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BT(n,t,e){const s=(t-n)/(e-1),r=qn(e,"float32");r[0]=n;for(let o=1;o<r.length;o++)r[o]=r[o-1]+s;return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zT=ko(n=>Math.log(n)),n6=qa(Jl,zT),s6={kernelName:Jl,backendName:"cpu",kernelFunc:n6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VT(n,t,e,s){const r=jn(s,j(e));for(let o=0;o<r.length;++o){const a=o*t;let i=n[a];for(let u=0;u<t;++u){const c=n[a+u];(Number.isNaN(c)||c>i)&&(i=c)}r[o]=i}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WT=un((n,t)=>Math.max(n,t)),r6=Sn(ec,WT),o6={kernelName:ec,backendName:"cpu",kernelFunc:r6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UT=un((n,t)=>Math.min(n,t)),a6=Sn(oc,UT),i6={kernelName:oc,backendName:"cpu",kernelFunc:a6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L0=un((n,t)=>n*t),u6=F0((n,t,e,s)=>({real:n*e-t*s,imag:n*s+t*e})),Cy=Sn(uc,L0,u6),l6={kernelName:uc,backendName:"cpu",kernelFunc:Cy};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GT(n,t,e){const s=Va(-1,e);return L0([],t,s,n,e)}function c6(n){const{inputs:t,backend:e}=n,{x:s}=t;Tt(s,"neg");const r=e.data.get(s.dataId).values,[o,a]=GT(r,s.shape,s.dtype);return e.makeTensorInfo(a,s.dtype,o)}const d6={kernelName:gp,backendName:"cpu",kernelFunc:c6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HT=un((n,t)=>n!==t?1:0),h6=Sn(yp,HT,null,"bool"),p6={kernelName:yp,backendName:"cpu",kernelFunc:h6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M0(n,t,e,s,r){const o=t.length,a=j(t),i=St(t),u=St(r),c=jn(e,j(r));for(let l=0;l<a;++l){const d=yl(l,o,i),h=new Array(d.length);for(let f=0;f<h.length;f++)h[f]=d[s[f]];const p=ro(h,o,u);c[p]=n[l]}return c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $s(n){const{inputs:t,attrs:e,backend:s}=n,{x:r}=t,{perm:o}=e;Tt(r,"transpose");const a=r.shape.length,i=new Array(a);for(let d=0;d<i.length;d++)i[d]=r.shape[o[d]];const u=s.data.get(r.dataId).values,c=M0(u,r.shape,r.dtype,o,i);return{dataId:s.write(c,i,r.dtype),shape:i,dtype:r.dtype}}const f6={kernelName:wa,backendName:"cpu",kernelFunc:$s};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jT(n,t,e,s){const[r,o]=Ge(n,s),a=Os(t,"int32"),i=qn(j(r),a),u=j(o);for(let c=0;c<i.length;++c){const l=c*u;let d=1;for(let h=0;h<u;++h)d*=e[l+h];i[c]=d}return{outVals:i,outShape:r,outDtype:a}}function m6(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,keepDims:a}=s;Tt(r,"prod");const i=r.shape.length,u=Gt(o,r.shape),c=Ve(u,i);let l=u,d=r;const h=[];c!=null&&(d=$s({inputs:{x:r},backend:e,attrs:{perm:c}}),h.push(d),l=Fe(l.length,i));const p=e.data.get(d.dataId).values,{outVals:f,outShape:m,outDtype:g}=jT(d.shape,d.dtype,p,l);let y=m;return a&&(y=Re(m,u)),h.forEach(b=>e.disposeIntermediateTensorInfo(b)),e.makeTensorInfo(y,g,f)}const g6={kernelName:pc,backendName:"cpu",kernelFunc:m6};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y6(n,t,e){n.forEach((s,r)=>{if(s<0||s>=e){const o=yl(r,t.length,St(t)).join(",");throw new Error(`indices[${o}] = ${s} is not in [0, ${e})`)}})}function b6(n,t){for(let e=0;e<n.length;++e){const s=n[e],r=e===n.length-1?t:n[e+1].length;if(s.length===0)throw new Error("Ragged splits may not be empty");if(s[0]<0)throw new Error("Ragged splits must be non-negative");if(s[s.length-1]>r)throw new Error("Ragged splits must not point past values");for(let o=1;o<s.length;++o)if(s[o-1]>s[o])throw new Error("Ragged splits must be sorted in ascending order")}}function x6(n,t,e,s){const r=[];let o=0;const a=t.length-1+e.length,i=new Array(a).fill(null).map(()=>[0]);b6(e,s);let u=1;for(let c=0;c<t.length-1;++c){u*=t[c];const l=t[c+1];for(let d=1;d<u+1;++d)i[c].push(d*l)}for(let c=0;c<n.length;++c){let l=n[c],d=n[c]+1;for(let h=0;h<e.length;++h){const p=e[h],f=h+t.length-1;if(f>=0){const m=i[f],g=m[m.length-1]-p[l];for(let y=l;y<d;++y)i[f].push(p[y+1]+g)}l=p[l],d=p[d]}d!==l&&(r.push([l,d]),o+=d-l)}return{outSplits:i,valueSlices:r,numValues:o}}function w6(n){const t=[];for(let e=0;e<n.length;++e){const s=n[e].length,r=tn("int32",s);t.push(r),n[e].forEach((o,a)=>r[a]=o)}return t}function zk(n,t){const e=n.slice(0,t);for(;e.length<t;)e.push(1);for(let s=t;s<n.length;s++)e[t-1]*=n[s];return e}function v6(n,t,e,s,r,o){const a=zk(t,2)[1],i=zk(o,2)[1];let u=0;for(const c of e)for(let l=c[0];l<c[1];++l){for(let d=0;d<s;++d)r[u*i+d]=n[l*a+d];++u}}function I6(n,t,e,s,r){const o=t.slice();o[0]=r;const a=tn(e,j(o)),i=n.length,u=i===0?0:i/t[0];return v6(n,t,s,u,a,o),[a,o]}function qT(n,t,e,s,r,o,a,i){if(n.length===0)throw new Error("paramsNestedSplits must be non empty");if(t[0].length===0)throw new Error("Split tensors must not be scalars");const u=t[0][0]-1;if(y6(o,a,u),s.length===0)throw new Error("params.rank must be nonzero");const c=s[0],{outSplits:l,valueSlices:d,numValues:h}=x6(o,a,n,c),p=w6(l),f=I6(e,s,r,d,h);return[p,f[0],f[1]]}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vk=2147483647;function KT(n,t,e,s,r,o,a){if(t.length>1)throw new Error("starts must be a scalar or vector");if(r.length>1)throw new Error("limits must be a scalar or vector");if(a.length>1)throw new Error("deltas must be a scalar or vector");const i=t.length===0,u=r.length===0,c=a.length===0,l=[];i||l.push(t[0]),u||l.push(r[0]),c||l.push(a[0]);for(let g=1;g<l.length;++g)if(l[g]!==l[g-1])throw new Error("starts, limits, and deltas must have the same shape");const d=l.length===0?1:l[0],h=tn("int32",d+1);h[0]=0;for(let g=0;g<d;++g){const y=i?n[0]:n[g],b=u?s[0]:s[g],x=c?o[0]:o[g];if(x===0)throw new Error("Requires delta != 0");let w;if(x>0&&b<y||x<0&&b>y)w=0;else if(w=Math.ceil(Math.abs((b-y)/x)),w>Vk)throw new Error(`Requires ((limit - start) / delta) <= ${Vk}`);h[g+1]=h[g]+w}const p=h[d],f=tn(e,p);let m=0;for(let g=0;g<d;++g){const y=h[g+1]-h[g];let b=i?n[0]:n[g];const x=c?o[0]:o[g];for(let w=0;w<y;++w)f[m++]=b,b+=x}return[h,f]}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var sr=Nr;class $m{constructor(t,e,s,r,o,a,i,u,c,l){this.shape=t,this.shapeShape=e,this.values=s,this.valuesShape=r,this.valuesDType=o,this.defaultValue=a,this.defaultValueShape=i,this.rowPartitionValues=u,this.rowPartitionValuesShapes=c,this.rowPartitionTypes=GC(l),this.raggedRank=HC(this.rowPartitionTypes)}getRowPartitionTypeByDimension(t){return this.rowPartitionTypes[0]===sr.FIRST_DIM_SIZE?this.rowPartitionTypes[t+1]:this.rowPartitionTypes[t]}getRowPartitionTensor(t){return this.rowPartitionTypes[0]===sr.FIRST_DIM_SIZE?this.rowPartitionValues[t+1]:this.rowPartitionValues[t]}getMaxWidth(t){const e=this.getRowPartitionTensor(t-1);switch(this.getRowPartitionTypeByDimension(t-1)){case sr.VALUE_ROWIDS:return $m.getMaxWidthValueRowID(e);case sr.ROW_SPLITS:return $m.getMaxWidthRowSplit(e);default:throw new Error(`Cannot handle partition type ${sr[this.getRowPartitionTypeByDimension(t-1)]}`)}}static getMaxWidthRowSplit(t){const e=t.length;if(e===0||e===1)return 0;let s=0;for(let r=0;r<e-1;++r){const o=t[r+1]-t[r];o>s&&(s=o)}return s}static getMaxWidthValueRowID(t){const e=t.length;if(e===0)return 0;let s=0,r=t[0],o=0;for(let a=1;a<e;++a){const i=t[a];i!==r&&(r=i,o=Math.max(a-s,o),s=a)}return Math.max(e-s,o)}tensorShapeFromTensor(t,e,s=!0){if(e.length===0){if(t[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return Uk(t,s)}calculateOutputSize(t){const e=this.valuesShape,s=this.defaultValueShape;jC(s,e);const r=this.tensorShapeFromTensor(this.shape,this.shapeShape),a=UC(this.raggedRank,r,e);a[0]<0&&(a[0]=t);for(let i=1;i<=this.raggedRank;++i)a[i]<0&&(a[i]=this.getMaxWidth(i));return a}calculateFirstParentOutputIndex(t,e,s){const r=Math.min(t,s),o=[];let a=0;for(let i=0;i<r;++i,a+=e)o.push(a);for(let i=r;i<t;++i)o.push(-1);return T(o.length===t,()=>"Final length of result must be equal to firstDimension."),o}calculateOutputIndexRowSplit(t,e,s,r){const o=t.length,a=[];for(let i=0;i<o-1;++i){const u=t[i+1]-t[i];let c=Math.min(r,u),l=e[i];l===-1&&(c=0);for(let d=0;d<c;++d)a.push(l),l+=s;for(let d=0;d<u-c;++d)a.push(-1)}if(o>0&&a.length!==t[o-1])throw new Error("Invalid row split size.");return a}calculateOutputIndexValueRowID(t,e,s,r){const o=t.length,a=[];if(o===0)return[];let i=0,u=t[0];if(u>=e.length)throw new Error(`Got currentValueRowId=${u}, which is not less than ${e.length}`);let c=e[u];a.push(c);for(let l=1;l<o;++l){const d=t[l];if(d===u)c>=0&&(++i,i<r?c+=s:c=-1);else{if(i=0,u=d,d>=e.length)throw new Error(`Got nextValueRowId=${d} which is not less than ${e.length}`);c=e[d]}a.push(c)}if(a.length!==t.length)throw new Error("Invalid row ids.");return a}calculateOutputIndex(t,e,s,r){const o=this.getRowPartitionTensor(t),a=this.getRowPartitionTypeByDimension(t);switch(a){case sr.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(o,e,s,r);case sr.ROW_SPLITS:if(o.length-1>e.length)throw new Error(`Row partition size is greater than output size: ${o.length-1} > ${e.length}`);return this.calculateOutputIndexRowSplit(o,e,s,r);default:throw new Error(`Unsupported partition type: ${sr[a]}`)}}getFirstDimensionSize(){const t=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");const e=this.rowPartitionTypes[0];switch(e){case sr.FIRST_DIM_SIZE:return t[0];case sr.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case sr.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${sr[e]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),s=this.calculateOutputSize(e),r=new Array(this.raggedRank+1);r[r.length-1]=1;for(let u=r.length-2;u>=0;--u)r[u]=r[u+1]*s[u+1];const o=Uk(s,!1),a=tn(this.valuesDType,j(o));if(r[0]*s[0]>0){let u=this.calculateFirstParentOutputIndex(e,r[0],s[0]);for(let c=1;c<=this.raggedRank;++c)u=this.calculateOutputIndex(c-1,u,r[c],s[c]);this.setOutput(this.raggedRank,u,a,o)}return[o,a]}setOutput(t,e,s,r){if(s.length===0)return;const o=this.values,a=s;let i=r.slice();i=i.slice(t+1);const u=j(i),c=e.length;let l=this.defaultValue;if(l.length!==u&&l.length!==1){const f=this.defaultValueShape;Q(()=>{const m=K(l,f);l=Id(m,i).dataSync()})}let d=0,h=0,p=0;for(let f=0;f<=c;++f){let m=f<c?e[f]:-1;if(m===p){++p;continue}if(h<p){const g=o.subarray(d*u),y=a.subarray(h*u),b=(p-h)*u;Wk(y,g,b)}if(f>=c){const g=s.length;m=Math.floor(g/u)}if(m>p)if(this.defaultValue.length===1)a.subarray(p*u,m*u).fill(this.defaultValue[0]),p=m;else for(;m>p;){const g=a.slice(p*u);Wk(g,l,u),++p}m<0?(d=f+1,h=p):(d=f,h=p,p=h+1)}}}function Wk(n,t,e){for(let s=0;s<e;s++)n[s]=t[s]}function Uk(n,t){const e=[];for(let s of n){if(s<0){if(!t)throw new Error(`Dimension ${s} must be >= 0`);if(s<-1)throw new Error(`Dimension ${s} must be >= -1`);s=-1}e.push(s)}return e}function XT(n,t,e,s,r,o,a,i,u,c){return new $m(n,t,e,s,r,o,a,i,u,c).compute()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B0(n,t,e,s){const r=n===t,o=n<t&&e<0,a=t<n&&e>1;if(r||o||a)return qn(0,s);const i=Math.abs(Math.ceil((t-n)/e)),u=qn(i,s);t<n&&e===1&&(e=-1),u[0]=n;for(let c=1;c<u.length;c++)u[c]=u[c-1]+e;return u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YT=ko(n=>1/Math.sqrt(n)),k6=qa(vc,YT),$6={kernelName:vc,backendName:"cpu",kernelFunc:k6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function di(n,t,e,s,r,o,a,i,u,c){const l=[s/r,r],d=n.values,h=t.values;if(s===0)return Zt(e,t.dtype);const p=u instanceof Pn?u:Zt(l,t.dtype);typeof u=="string"||typeof u=="number"?p.values.fill(u):typeof u=="boolean"&&p.values.fill(+u);for(let f=0;f<o;f++){const m=[];let g=0;for(let y=0;y<a;y++){const b=d[f*a+y];m.push(b),g+=b*i[y]}if(g<0||g>=s/r)throw new Error(`Invalid indices: ${m} does not index into ${e}`);for(let y=0;y<r;y++)c?p.values[g*r+y]+=h[f*r+y]:p.values[g*r+y]=t.rank===0?h[0]:h[f*r+y]}return p}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S6=ko(n=>1/(1+Math.exp(-n))),JT=Ce(Nc,n=>1/(1+Math.exp(-n))),N6={kernelName:Nc,backendName:"cpu",kernelFunc:JT};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sm(n,t,e,s,r){const o=ry(s,t,e),a=j(e),i=St(s);if(o){const d=oy(t,i);return r==="string"?n.slice(d,d+a):n.subarray(d,d+a)}const u=r==="string"?Ko(n):n,c=Zt(s,r,u),l=Zt(e,r);for(let d=0;d<l.size;++d){const h=l.indexToLoc(d),p=h.map((f,m)=>f+t[m]);l.set(c.get(...p),...h)}return r==="string"?l0(l.values):l.values}function Oi(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{begin:o,size:a}=s;Tt(r,"slice");const[i,u]=Vp(r,o,a);M1(r,i,u);const c=e.data.get(r.dataId).values,l=Sm(c,i,u,r.shape,r.dtype);return e.makeTensorInfo(u,r.dtype,l)}const C6={kernelName:Cp,backendName:"cpu",kernelFunc:Oi};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZT(n,t,e,s,r,o,a){const i=t[0],u=o[0],c=new Array(u),l=new Array(i),d=t[1];if(u===0){if(i!==0)throw new Error(Z1(i));const g=tn(e,0),y=tn(r,0);return[g,[0,d],y,c,l]}let h=!0,p=0;const f=new Array(u).fill(0);for(let g=0;g<i;++g){const y=n[g*d];if(y<0)throw new Error(Q1(g,y));if(y>=u)throw new Error(t0(g,y,u));++f[y],h=h&&y>=p,p=y}let m=!0;for(let g=0;g<u;++g){const y=f[g]===0;c[g]=y,m=m&&!y,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(m&&h){const g=n,y=s;for(let b=0;b<i;++b)l[b]=b;return[g,[i,d],y,c,l]}else{const g=f[u-1],y=tn(e,g*d),b=tn(r,g),x=new Array(u).fill(0);for(let w=0;w<i;++w){const v=n[w*d],k=x[v],S=(v===0?0:f[v-1])+k;x[v]++;for(let _=0;_<d;++_)y[S*d+_]=n[w*d+_];b[S]=s[w],l[w]=S}for(let w=0;w<u;++w)if(x[w]===0){const k=w===0?0:f[w-1];y[k*d+0]=w;for(let S=1;S<d;++S)y[k*d+S]=0;b[k]=a}return[y,[g,d],b,c,l]}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QT(n,t,e,s,r){const o=j(s),a=t[0],i=r.length,u=[];let c=1,l=-1;for(let g=0;g<i;++g){const y=r[g];if(y===-1){if(l!==-1)throw new Error(e0(l,g));l=g,u.push(1)}else{if(y<0)throw new Error(n0(g,y));c*=y,u.push(y)}}if(l!==-1){if(c<=0)throw new Error(s0());const g=Math.trunc(o/c);if(c*g!==o)throw new Error(r0(s,u));u[l]=g}if(j(u)!==o)throw new Error(o0(s,u));const h=s.length,p=[];if(h>0){p[h-1]=1;for(let g=h-2;g>=0;--g)p[g]=p[g+1]*s[g+1]}const f=[];if(i>0){f[i-1]=1;for(let g=i-2;g>=0;--g)f[g]=f[g+1]*u[g+1]}const m=tn(e,a*i);for(let g=0;g<a;++g){let y=0;for(let b=0;b<h;++b)y+=n[g*h+b]*p[b];for(let b=0;b<i;++b)m[g*i+b]=Math.trunc(y/f[b]),y%=f[b]}return[m,[a,i],u]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z0(n,t,e,s,r,o=!1,a=0){const i=s.length,u=[t[0],n.length/t[0]],c=u[1],d=i>0?r[i-1]+1:0;if(d<0)throw new Error(Vd());const h=t.slice();h[0]=d;const p=h.reduce((x,w)=>x*w,1),f=tn(e,p);if(i===0)return d>0&&f.fill(a),[f,h];if(d<=0)throw new Error(Vd());let m=0,g=1,y=0,b=r[m];for(;;){let x=0;if(g<i){if(x=r[g],b===x){++g;continue}if(b>=x)throw new Error(a0())}if(b<0||b>=d)throw new Error(i0(b,d));b>y&&f.fill(a,y*c,b*c);for(let w=m;w<g;++w){const v=s[w];if(v<0||v>=u[0])throw new Error(u0(w,s[w],u[0]));for(let k=0;k<c;k++)f[b*c+k]+=n[v*c+k]}if(o)for(let w=0;w<c;w++)f[b*c+w]/=g-m;if(m=g,++g,y=b+1,b=x,g>i)break}return y<d&&f.fill(a,y*c,d*c),[f,h]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _6=ko(n=>Math.sqrt(n)),T6=Ce(_c,n=>Math.sqrt(n)),E6={kernelName:_c,backendName:"cpu",kernelFunc:T6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tE=un((n,t)=>{const e=n-t;return e*e}),A6=Sn(Ac,tE),D6={kernelName:Ac,backendName:"cpu",kernelFunc:A6};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eE=ko((n,t)=>{const{pattern:e,replaceGlobal:s,rewrite:r}=t;return n.replace(new RegExp(e,s?"g":""),r)}),R6=qa(Qw,eE),F6={kernelName:Qw,backendName:"cpu",kernelFunc:R6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nE(n,t,e,s){const r=Zt(n,t.dtype);for(let o=0;o<r.size;o++){const a=r.indexToLoc(o),i=new Array(a.length);for(let u=0;u<i.length;u++)i[u]=a[u]*e[u]+s[u];r.set(t.get(...i),...a)}return r}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class O6{constructor(t,e,s,r,o,a){this.separator=Ia(t),this.nGramWidths=e,this.leftPad=Ia(s),this.rightPad=Ia(r),this.padWidth=o,this.preserveShort=a}getPadWidth(t){return Math.min(this.padWidth<0?t-1:this.padWidth,t-1)}getNumNGrams(t,e){const s=this.getPadWidth(e);return Math.max(0,t+2*s-e+1)}createNGrams(t,e,s,r,o,a){for(let i=0;i<o;++i){const u=this.getPadWidth(a),c=Math.max(0,u-i),l=Math.max(0,u-(o-(i+1))),d=a-(c+l),h=e+(c>0?0:i-u);let p=0;p+=c*this.leftPad.length;for(let b=0;b<d;++b)p+=t[h+b].length;p+=l*this.rightPad.length;const f=c+l+d-1;p+=f*this.separator.length,s[r+i]=new Uint8Array(p);const m=s[r+i];let g=0;const y=b=>b.forEach(x=>m[g++]=x);for(let b=0;b<c;++b)y(this.leftPad),y(this.separator);for(let b=0;b<d-1;++b)y(t[h+b]),y(this.separator);if(d>0){y(t[h+d-1]);for(let b=0;b<l;++b)y(this.separator),y(this.rightPad)}else{for(let b=0;b<l-1;++b)y(this.rightPad),y(this.separator);y(this.rightPad)}}}compute(t,e){const s=t.length,r=e.length;if(r>0){let u=e[0];if(u!==0)throw new Error(`First split value must be 0, got ${u}`);for(let c=1;c<r;++c){let l=e[c]>=u;if(l=l&&e[c]<=s,!l)throw new Error(`Invalid split value ${e[c]}, must be in [${u}, ${s}]`);u=e[c]}if(u!==s)throw new Error(`Last split value must be data size. Expected ${s}, got ${u}`)}const o=r-1,a=tn("int32",r);if(s===0||r===0){const u=new Array(s);for(let c=0;c<=o;++c)a[c]=0;return[u,a]}a[0]=0;for(let u=1;u<=o;++u){const c=e[u]-e[u-1];let l=0;this.nGramWidths.forEach(d=>{l+=this.getNumNGrams(c,d)}),this.preserveShort&&c>0&&l===0&&(l=1),a[u]=a[u-1]+l}const i=new Array(a[o]);for(let u=0;u<o;++u){const c=e[u];let l=a[u];if(this.nGramWidths.forEach(d=>{const h=e[u+1]-e[u],p=this.getNumNGrams(h,d);this.createNGrams(t,c,i,l,p,d),l+=p}),this.preserveShort&&l===a[u]){const d=e[u+1]-e[u];if(d===0)continue;const h=d+2*this.padWidth;this.createNGrams(t,c,i,l,1,h)}}return[i,a]}}function V0(n,t,e,s,r,o,a,i){return new O6(e,s,r,o,a,i).compute(n,t)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P6(n,t,e,s){if(!n.length)return;if(t.length===0){for(let o=0;o<n.length;++o)s.push(n.subarray(o,o+1));return}if(t.length===1){const o=t[0];let a=n.indexOf(o);for(;a!==-1;){const i=n.subarray(0,a);(!e||i.length!==0)&&s.push(i),n=n.subarray(a+1),a=n.indexOf(o)}(!e||n.length!==0)&&s.push(n);return}let r=0;for(let o=0;o<n.length+1;o++)if(o===n.length||t.indexOf(n[o])!==-1){const a=n.subarray(r,o);(!e||a.length!==0)&&s.push(a),r=o+1}}function W0(n,t,e){const s=n.length,r=[];let o=0,a=0;const i=new Array(s);for(let h=0;h<s;++h){const p=r.length;P6(n[h],t,e,r);const f=r.length-p;i[h]=f,o+=f,a=Math.max(a,f)}const u=tn("int32",o*2),c=new Array(o),l=[s,a];let d=0;for(let h=0;h<s;++h)for(let p=0;p<i[h];++p)u[d*2]=h,u[d*2+1]=p,c[d]=r[d],++d;return[u,c,l]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U0(n,t){const e=tn("int32",n.length);for(let s=0;s<n.length;++s)e[s]=yB(n[s]).modulo(t).getLowBitsUnsigned();return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sE=un((n,t)=>n-t),L6=F0((n,t,e,s)=>({real:n-e,imag:t-s})),G0=Sn(Dc,sE,L6),M6={kernelName:Dc,backendName:"cpu",kernelFunc:G0};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rE(n,t){const e=new Array(n.rank);for(let r=0;r<e.length;r++)e[r]=n.shape[r]*t[r];const s=Zt(e,n.dtype);for(let r=0;r<s.values.length;++r){const o=s.indexToLoc(r),a=new Array(n.rank);for(let u=0;u<a.length;u++)a[u]=o[u]%n.shape[u];const i=n.locToIndex(a);s.values[r]=n.values[i]}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gd=(n,t)=>{const e=t.value-n.value;return e===0?n.index-t.index:e};function oE(n,t,e=0,s=n.length-1){for(;s>e;){if(s-e>600){const i=s-e+1,u=t-e+1,c=Math.log(i),l=.5*Math.exp(2*c/3),d=.5*Math.sqrt(c*l*(i-l)/i)*Math.sign(u-i/2),h=Math.max(e,Math.floor(t-u*l/i+d)),p=Math.min(s,Math.floor(t+(i-u)*l/i+d));oE(n,t,h,p)}const r=n[t];let o=e,a=s;for(Nu(n,e,t),gd(n[s],r)>0&&Nu(n,e,s);o<a;){for(Nu(n,o,a),o++,a--;gd(n[o],r)<0;)o=o+1;for(;gd(n[a],r)>0;)a=a-1}gd(n[e],r)===0?Nu(n,e,a):(a=a+1,Nu(n,a,s)),a<=t&&(e=a+1),t<=a&&(s=a-1)}}function aE(n,t,e,s,r){const o=t[t.length-1],[a,i]=[n.length/o,o],u=jn(e,a*s),c=jn("int32",a*s);for(let d=0;d<a;d++){const h=d*i,p=n.subarray(h,h+i);let f=new Array(p.length);p.forEach((b,x)=>f[x]={value:b,index:x}),s<f.length&&(oE(f,s),f=f.slice(0,s)),r&&f.sort(gd);const m=d*s,g=u.subarray(m,m+s),y=c.subarray(m,m+s);for(let b=0;b<s;b++)g[b]=f[b].value,y[b]=f[b].index}const l=t.slice();return l[l.length-1]=s,[Zt(l,e,u),Zt(l,"int32",c)]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H0(n,t,e,s){const r=Gt(t,e)[0],o=[1,e[0],1];for(let f=0;f<r;f++)o[0]*=e[f];o[1]=e[r];for(let f=r+1;f<e.length;f++)o[2]*=e[f];const a=new Map,i=new Int32Array(e[r]),u=new Pn(o,s,n),c=[],l=o[0]===1&&o[2]===1;for(let f=0;f<e[r];f++){let m;if(l)m=n[f].toString();else{const y=[];for(let b=0;b<o[0];b++)for(let x=0;x<o[2];x++)y.push(u.get(b,f,x));m=y.join(",")}const g=a.get(m);if(g!=null)i[f]=g;else{const y=a.size;a.set(m,y),i[f]=y,c.push(f)}}const d=o.slice();d[1]=a.size;const h=new Pn(d,s);c.forEach((f,m)=>{for(let g=0;g<o[0];g++)for(let y=0;y<o[2];y++)h.set(u.get(g,f,y),g,m,y)});const p=e.slice();return p[r]=d[1],{outputValues:h.values,outputShape:p,indices:i}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B6=Object.freeze(Object.defineProperty({__proto__:null,addImpl:IT,bincountImpl:O0,bincountReduceImpl:kT,bitwiseAndImpl:$T,castImpl:vT,ceilImpl:ST,concatImpl:P0,equalImpl:NT,expImpl:_T,expm1Impl:ET,floorDivImpl:DT,floorImpl:AT,gatherNdImpl:RT,gatherV2Impl:FT,greaterEqualImpl:PT,greaterImpl:OT,lessEqualImpl:MT,lessImpl:LT,linSpaceImpl:BT,logImpl:zT,maxImpl:VT,maximumImpl:WT,minimumImpl:UT,multiplyImpl:L0,negImpl:GT,notEqualImpl:HT,prodImpl:jT,raggedGatherImpl:qT,raggedRangeImpl:KT,raggedTensorToTensorImpl:XT,rangeImpl:B0,rsqrtImpl:YT,scatterImpl:di,sigmoidImpl:S6,simpleAbsImpl:wT,sliceImpl:Sm,sparseFillEmptyRowsImpl:ZT,sparseReshapeImpl:QT,sparseSegmentReductionImpl:z0,sqrtImpl:_6,squaredDifferenceImpl:tE,staticRegexReplaceImpl:eE,stridedSliceImpl:nE,stringNGramsImpl:V0,stringSplitImpl:W0,stringToHashBucketFastImpl:U0,subImpl:sE,tileImpl:rE,topKImpl:aE,transposeImpl:M0,uniqueImpl:H0},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */i1("cpu",()=>new Ny,1);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iE=Ce(Ml,n=>n>=0?n:Math.exp(n)-1),z6={kernelName:Ml,backendName:"cpu",kernelFunc:iE};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uE(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{alpha:o}=s;Tt([r],"leakyRelu");const a=j(r.shape),i=e.data.get(r.dataId).values,u=jn("float32",a);for(let c=0;c<i.length;c++)u[c]=i[c]<0?o*i[c]:i[c];return e.makeTensorInfo(r.shape,"float32",u)}const V6={kernelName:Yl,backendName:"cpu",kernelFunc:uE};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W6=un((n,t)=>n<0?t*n:n);function lE(n){const{inputs:t,backend:e}=n,{x:s,alpha:r}=t;Tt([s,r],"prelu");const o=e.data.get(s.dataId).values,a=e.data.get(r.dataId).values,[i,u]=W6(s.shape,r.shape,o,a,"float32");return e.makeTensorInfo(u,"float32",i)}const U6={kernelName:hc,backendName:"cpu",kernelFunc:lE};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cE=Ce(mc,n=>Math.max(0,n)),G6={kernelName:mc,backendName:"cpu",kernelFunc:cE};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dE=Ce(bc,n=>Math.min(Math.max(0,n),6)),H6={kernelName:bc,backendName:"cpu",kernelFunc:dE};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nm(n,t,e,s,r){if(e==="linear")return bo({inputs:{x:t},backend:n});if(e==="relu")return cE({inputs:{x:t},backend:n});if(e==="elu")return iE({inputs:{x:t},backend:n});if(e==="relu6")return dE({inputs:{x:t},backend:n});if(e==="prelu")return lE({inputs:{x:t,alpha:s},backend:n});if(e==="leakyrelu")return uE({inputs:{x:t},backend:n,attrs:{alpha:r}});if(e==="sigmoid")return JT({inputs:{x:t},backend:n});throw new Error(`Activation ${e} has not been implemented for the CPU backend.`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Be(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{shape:o}=s,a=j(r.shape),i=Fw(o,a),u=j(i);T(a===u,()=>`The new shape (${i}) has ${u} elements and the old shape (${r.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`),e.incRef(r.dataId);const c=e.data.get(r.dataId);if(c.complexTensorInfos!=null){const l=c.complexTensorInfos.real,d=c.complexTensorInfos.imag;l.shape=i,d.shape=i}return{dataId:r.dataId,shape:i,dtype:r.dtype}}const j6={kernelName:kp,backendName:"cpu",kernelFunc:Be};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hE(n){const{inputs:t,backend:e,attrs:s}=n,{a:r,b:o}=t,{transposeA:a,transposeB:i}=s;Tt([r,o],"matMul");const u=r.shape.length,c=o.shape.length,l=a?r.shape[u-2]:r.shape[u-1],d=i?o.shape[c-1]:o.shape[c-2],h=a?r.shape[u-1]:r.shape[u-2],p=i?o.shape[c-2]:o.shape[c-1],f=r.shape.slice(0,-2),m=o.shape.slice(0,-2),g=j(f),y=j(m),x=Ut(r.shape.slice(0,-2),o.shape.slice(0,-2)).concat([h,p]);T(l===d,()=>`Error in matMul: inner shapes (${l}) and (${d}) of Tensors with shapes ${r.shape} and ${o.shape} and transposeA=${a} and transposeB=${i} must match.`);const w=a?[g,l,h]:[g,h,l],v=i?[y,p,d]:[y,d,p],k=Be({inputs:{x:r},backend:e,attrs:{shape:w}}),S=Be({inputs:{x:o},backend:e,attrs:{shape:v}}),_=a?k.shape[1]:k.shape[2],C=a?k.shape[2]:k.shape[1],N=i?S.shape[1]:S.shape[2],$=Math.max(g,y),A=e.data.get(k.dataId).values,D=e.data.get(S.dataId).values,R=St(k.shape),F=St(S.shape),[z,H,P]=a?[R[0],1,R[1]]:[R[0],R[1],1],[U,Z,tt]=i?[1,F[1],F[0]]:[F[1],1,F[0]],at=C*N,ot=Zt([$,C,N],k.dtype),lt=ot.values,ct=e.blockSize;for(let bt=0;bt<$;bt++){const Nt=bt%g,xt=bt%y;for(let Ct=0;Ct<C;Ct+=ct){const zt=Math.min(Ct+ct,C);for(let Wt=0;Wt<N;Wt+=ct){const Jt=Math.min(Wt+ct,N);for(let ue=0;ue<_;ue+=ct){const se=Math.min(ue+ct,_);for(let ee=Ct;ee<zt;ee++)for(let Vt=Wt;Vt<Jt;Vt++){let ve=0;for(let me=ue;me<se;me++){const zn=A[Nt*z+ee*H+me*P],Ee=D[me*U+Vt*Z+xt*tt];ve+=zn*Ee}lt[bt*at+(ee*N+Vt)]+=ve}}}}}return e.disposeIntermediateTensorInfo(k),e.disposeIntermediateTensorInfo(S),e.makeTensorInfo(x,ot.dtype,ot.values)}const q6={kernelName:Nl,backendName:"cpu",kernelFunc:hE};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K6(n){const{inputs:t,backend:e,attrs:s}=n,{a:r,b:o,bias:a,preluActivationWeights:i}=t,{transposeA:u,transposeB:c,activation:l,leakyreluAlpha:d}=s;let h,p,f;const m=[];h=hE({inputs:{a:r,b:o},attrs:{transposeA:u,transposeB:c},backend:e}),a&&(p=rl({inputs:{a:h,b:a},backend:e}),m.push(h),h=p),l&&(f=Nm(e,h,l,i,d),m.push(h),h=f);for(const y of m)e.disposeIntermediateTensorInfo(y);return h}const X6={kernelName:Zu,backendName:"cpu",kernelFunc:K6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y6=Ce(bl,n=>Math.acos(n)),J6={kernelName:bl,backendName:"cpu",kernelFunc:Y6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z6=Ce(xl,n=>Math.acosh(n)),Q6={kernelName:xl,backendName:"cpu",kernelFunc:Z6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t5(n){const{inputs:t,backend:e}=n,s=t;Tt(t,"addN");const r=s.map(i=>e.data.get(i.dataId).values),o=Zt(s[0].shape,s[0].dtype),a=o.values;for(let i=0;i<s.length;i++){const u=r[i];for(let c=0;c<a.length;c++)a[c]+=u[c]}return e.makeTensorInfo(o.shape,o.dtype,o.values)}const e5={kernelName:Uh,backendName:"cpu",kernelFunc:t5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n5(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,keepDims:a}=s;Tt(r,"all");const i=Gt(o,r.shape);let u=i;const c=Ve(u,r.shape.length);let l=r;c!=null&&(l=$s({inputs:{x:r},backend:e,attrs:{perm:c}}),u=Fe(u.length,r.shape.length)),ze("all",u,l.shape.length);const[d,h]=Ge(l.shape,u),p=j(h),f=qn(j(d),l.dtype),m=e.data.get(l.dataId).values;for(let y=0;y<f.length;++y){const b=y*p;let x=m[b];for(let w=0;w<p;++w){const v=m[b+w];x=x&&v}f[y]=x}c!=null&&e.disposeIntermediateTensorInfo(l);const g=e.makeTensorInfo(d,l.dtype,f);if(a){const y=Re(d,i),b=Be({inputs:{x:g},backend:e,attrs:{shape:y}});return e.disposeIntermediateTensorInfo(g),b}return g}const s5={kernelName:Gh,backendName:"cpu",kernelFunc:n5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r5(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,keepDims:a}=s;Tt(r,"any");const i=Gt(o,r.shape);let u=i;const c=Ve(u,r.shape.length);let l=r;c!=null&&(l=$s({inputs:{x:r},backend:e,attrs:{perm:c}}),u=Fe(u.length,r.shape.length)),ze("any",u,l.shape.length);const[d,h]=Ge(l.shape,u),p=j(h),f=qn(j(d),l.dtype),m=e.data.get(l.dataId).values;for(let y=0;y<f.length;++y){const b=y*p;let x=m[b];for(let w=0;w<p;++w){const v=m[b+w];x=x||v}f[y]=x}c!=null&&e.disposeIntermediateTensorInfo(l);const g=e.makeTensorInfo(d,l.dtype,f);if(a){const y=Re(d,i),b=Be({inputs:{x:g},backend:e,attrs:{shape:y}});return e.disposeIntermediateTensorInfo(g),b}return g}const o5={kernelName:Hh,backendName:"cpu",kernelFunc:r5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a5(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o}=s;Tt(r,"argMax");let a=Gt(o,r.shape);const i=Ve(a,r.shape.length);let u=r;const c=[];i!=null&&(u=$s({inputs:{x:r},backend:e,attrs:{perm:i}}),c.push(u),a=Fe(a.length,u.shape.length)),a=[a[0]],ze("argMax",a,u.shape.length);const[l,d]=Ge(u.shape,a),h=j(l),p=qn(h,"int32"),f=j(d),m=e.data.get(u.dataId).values;for(let g=0;g<p.length;++g){const y=g*f;let b=m[y],x=0;for(let w=0;w<f;++w){const v=m[y+w];v>b&&(b=v,x=w)}p[g]=x}return c.forEach(g=>e.disposeIntermediateTensorInfo(g)),e.makeTensorInfo(l,"int32",p)}const i5={kernelName:jh,backendName:"cpu",kernelFunc:a5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u5(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o}=s;Tt(r,"argMin");let a=Gt(o,r.shape);const i=Ve(a,r.shape.length);let u=r;const c=[];i!=null&&(u=$s({inputs:{x:r},backend:e,attrs:{perm:i}}),c.push(u),a=Fe(a.length,u.shape.length)),a=[a[0]],ze("argMin",a,u.shape.length);const[l,d]=Ge(u.shape,a),h=j(l),p=qn(h,"int32"),f=j(d),m=e.data.get(u.dataId).values;for(let g=0;g<p.length;++g){const y=g*f;let b=m[y],x=0;for(let w=0;w<f;++w){const v=m[y+w];v<b&&(b=v,x=w)}p[g]=x}return c.forEach(g=>e.disposeIntermediateTensorInfo(g)),e.makeTensorInfo(l,"int32",p)}const l5={kernelName:qh,backendName:"cpu",kernelFunc:u5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c5=Ce(wl,n=>Math.asin(n)),d5={kernelName:wl,backendName:"cpu",kernelFunc:c5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h5=Ce(vl,n=>Math.asinh(n)),p5={kernelName:vl,backendName:"cpu",kernelFunc:h5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const f5=Ce(Il,n=>Math.atan(n)),m5={kernelName:Il,backendName:"cpu",kernelFunc:f5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g5=un((n,t)=>Math.atan2(n,t)),y5=Sn($l,g5),b5={kernelName:$l,backendName:"cpu",kernelFunc:y5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x5=Ce(kl,n=>Math.atanh(n)),w5={kernelName:kl,backendName:"cpu",kernelFunc:x5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j0(n,t,e,s,r,o){const a=r.strideHeight,i=r.strideWidth,u=r.dilationHeight,c=r.dilationWidth,l=r.effectiveFilterHeight,d=r.effectiveFilterWidth,h=r.padInfo.top,p=r.padInfo.left,f=o==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=Zt(r.outShape,e),g=m.values,y=r.outShape[1]*r.outShape[2]*r.outShape[3],b=r.outShape[2]*r.outShape[3],x=r.outShape[3];for(let w=0;w<r.batchSize;++w){const v=w*y,k=w*s[0];for(let S=0;S<r.inChannels;++S)for(let _=0;_<r.outHeight;++_){const C=_*a-h,N=Math.max(0,C),$=Math.min(r.inHeight,l+C),A=v+_*b;for(let D=0;D<r.outWidth;++D){const R=D*i-p,F=Math.max(0,R),z=Math.min(r.inWidth,d+R);let H=f,P=0,U=0;for(let tt=N;tt<$;tt+=u){const at=k+tt*s[1];for(let ot=F;ot<z;ot+=c){const lt=at+ot*s[2],ct=n[lt+S];o==="max"&&ct>H?H=ct:o==="avg"&&(P+=ct,U++)}if(isNaN(H))break}const Z=A+D*x+S;g[Z]=o==="avg"?P/U:H}}}return m}function pE(n,t,e,s,r=!1,o=!1){const a=Zt(s.outShape,"int32"),i=s.strideHeight,u=s.strideWidth,c=s.dilationHeight,l=s.dilationWidth,d=s.effectiveFilterHeight,h=s.effectiveFilterWidth,p=s.padInfo.top,f=s.padInfo.left,m=Zt(t,e,n);for(let g=0;g<s.batchSize;++g)for(let y=0;y<s.inChannels;++y)for(let b=0;b<s.outHeight;++b){const x=b*i-p;let w=x;for(;w<0;)w+=c;const v=Math.min(s.inHeight,d+x);for(let k=0;k<s.outWidth;++k){const S=k*u-f;let _=S;for(;_<0;)_+=l;const C=Math.min(s.inWidth,h+S);let N=Number.NEGATIVE_INFINITY,$=-1;for(let A=w;A<v;A+=c){const D=A-x;for(let R=_;R<C;R+=l){const F=R-S,z=m.get(g,A,R,y);z>N&&(N=z,r?$=o?((g*s.inHeight+A)*s.inWidth+R)*s.inChannels+y:(A*s.inWidth+R)*s.inChannels+y:$=D*h+F)}}a.set($,g,b,k,y)}}return a}function fE(n,t,e,s,r,o){const a=r.strideDepth,i=r.strideHeight,u=r.strideWidth,c=r.dilationDepth,l=r.dilationHeight,d=r.dilationWidth,h=r.effectiveFilterDepth,p=r.effectiveFilterHeight,f=r.effectiveFilterWidth,m=r.padInfo.front,g=r.padInfo.top,y=r.padInfo.left,b=o==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=Zt(r.outShape,e),w=x.values,v=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],k=r.outShape[2]*r.outShape[3]*r.outShape[4],S=r.outShape[3]*r.outShape[4],_=r.outShape[4];for(let C=0;C<r.batchSize;++C){const N=C*v,$=C*s[0];for(let A=0;A<r.inChannels;++A)for(let D=0;D<r.outDepth;++D){const R=D*a-m;let F=R;for(;F<0;)F+=c;const z=Math.min(r.inDepth,h+R),H=N+D*k;for(let P=0;P<r.outHeight;++P){const U=P*i-g;let Z=U;for(;Z<0;)Z+=l;const tt=Math.min(r.inHeight,p+U),at=H+P*S;for(let ot=0;ot<r.outWidth;++ot){const lt=ot*u-y;let ct=lt;for(;ct<0;)ct+=d;const bt=Math.min(r.inWidth,f+lt),Nt=at+ot*_;let xt=b,Ct=0,zt=0;for(let Jt=F;Jt<z;Jt+=c){const ue=$+Jt*s[1];for(let se=Z;se<tt;se+=l){const ee=ue+se*s[2];for(let Vt=ct;Vt<bt;Vt+=d){const ve=ee+Vt*s[3],me=n[ve+A];if(o==="max"&&me>xt?xt=me:o==="avg"&&(Ct+=me,zt++),isNaN(xt))break}if(isNaN(xt))break}if(isNaN(xt))break}const Wt=Nt+A;w[Wt]=o==="avg"?Ct/Math.max(zt,1):xt}}}}return x}function v5(n,t){const e=Zt(t.outShape,"int32"),s=t.strideDepth,r=t.strideHeight,o=t.strideWidth,a=t.dilationDepth,i=t.dilationHeight,u=t.dilationWidth,c=t.effectiveFilterDepth,l=t.effectiveFilterHeight,d=t.effectiveFilterWidth,h=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){const b=y*s-h;let x=b;for(;x<0;)x+=a;const w=Math.min(t.inDepth,c+b);for(let v=0;v<t.outHeight;++v){const k=v*r-p;let S=k;for(;S<0;)S+=i;const _=Math.min(t.inHeight,l+k);for(let C=0;C<t.outWidth;++C){const N=C*o-f;let $=N;for(;$<0;)$+=u;const A=Math.min(t.inWidth,d+N);let D=Number.NEGATIVE_INFINITY,R=-1;for(let F=x;F<w;F+=a){const z=F-b;for(let H=S;H<_;H+=i){const P=H-k;for(let U=$;U<A;U+=u){const Z=U-N,tt=n.get(m,F,H,U,g);tt>=D&&(D=tt,R=z*l*d+P*l+Z)}}}e.set(R,m,y,v,C,g)}}}return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I5(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t;Tt(r,"avgPool");const{filterSize:o,strides:a,pad:i,dimRoundingMode:u}=s,c=1;T(Mn(a,c),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`);const l=Xn(r.shape,o,a,c,i,u);let d;if(l.filterWidth===1&&l.filterHeight===1&&we(l.inShape,l.outShape))d=bo({inputs:{x:r},backend:e});else{const h=e.data.get(r.dataId).values,p=St(r.shape),f=j0(h,r.shape,r.dtype,p,l,"avg");d=e.makeTensorInfo(l.outShape,r.dtype,f.values)}return d}const k5={kernelName:Sl,backendName:"cpu",kernelFunc:I5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $5(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{filterSize:o,strides:a,pad:i,dimRoundingMode:u,dataFormat:c}=s;Tt(r,"avgPool3d");const l=Js(r.shape,o,a,1,i,u,c),d=e.data.get(r.dataId).values,h=fE(d,r.shape,r.dtype,St(r.shape),l,"avg");return e.makeTensorInfo(h.shape,"float32",h.values)}const S5={kernelName:Kh,backendName:"cpu",kernelFunc:$5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N5(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,input:o}=t,{filterSize:a,strides:i,pad:u,dimRoundingMode:c}=s;Tt([r,o],"avgPool3DGrad");const l=Js(o.shape,a,i,1,u,c),d=l.strideDepth,h=l.strideHeight,p=l.strideWidth,f=l.filterDepth,m=l.filterHeight,g=l.filterWidth,y=l.dilationDepth,b=l.dilationHeight,x=l.dilationWidth,w=l.effectiveFilterDepth,v=l.effectiveFilterHeight,k=l.effectiveFilterWidth,S=w-1-l.padInfo.front,_=k-1-l.padInfo.left,C=v-1-l.padInfo.top,N=Zt(o.shape,"float32"),$=1/(f*m*g),A=e.bufferSync(r);for(let D=0;D<l.batchSize;++D)for(let R=0;R<l.inChannels;++R)for(let F=0;F<l.inDepth;++F)for(let z=0;z<l.inHeight;++z)for(let H=0;H<l.inWidth;++H){const P=F-S,U=z-C,Z=H-_;let tt=0;for(let at=0;at<w;at+=y){const ot=(P+at)/d;if(!(ot<0||ot>=l.outDepth||Math.floor(ot)!==ot))for(let lt=0;lt<v;lt+=b){const ct=(U+lt)/h;if(!(ct<0||ct>=l.outHeight||Math.floor(ct)!==ct))for(let bt=0;bt<k;bt+=x){const Nt=(Z+bt)/p;if(Nt<0||Nt>=l.outWidth||Math.floor(Nt)!==Nt)continue;const xt=A.get(D,ot,ct,Nt,R);tt+=xt}}}N.set(tt*$,D,F,z,H,R)}return e.makeTensorInfo(N.shape,N.dtype,N.values)}const C5={kernelName:Cg,backendName:"cpu",kernelFunc:N5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _5(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,input:o}=t,a=o;Tt([r,o],"avgPoolGrad");const{filterSize:i,strides:u,pad:c}=s,l=Xn(a.shape,i,u,1,c),d=l.strideHeight,h=l.strideWidth,p=l.filterHeight,f=l.filterWidth,m=l.dilationHeight,g=l.dilationWidth,y=l.effectiveFilterHeight,b=l.effectiveFilterWidth,x=b-1-l.padInfo.left,w=y-1-l.padInfo.top,v=Zt(a.shape,"float32"),k=1/(p*f),S=e.data.get(r.dataId).values,_=Zt(r.shape,"float32",S);for(let C=0;C<l.batchSize;++C)for(let N=0;N<l.inChannels;++N)for(let $=0;$<l.inHeight;++$)for(let A=0;A<l.inWidth;++A){const D=$-w,R=A-x;let F=0;for(let z=0;z<y;z+=m){const H=(D+z)/d;if(!(H<0||H>=l.outHeight||Math.floor(H)!==H))for(let P=0;P<b;P+=g){const U=(R+P)/h;if(U<0||U>=l.outWidth||Math.floor(U)!==U)continue;const Z=_.get(C,H,U,N);F+=Z}}v.set(F*k,C,$,A,N)}return e.makeTensorInfo(v.shape,v.dtype,v.values)}const T5={kernelName:Ng,backendName:"cpu",kernelFunc:_5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E5(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,scale:o,offset:a,mean:i,variance:u}=t;T(i.shape.length===u.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),T(a==null||i.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),T(o==null||i.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),Tt([r,i,u,o,a],"batchNorm");let{varianceEpsilon:c}=s;c==null&&(c=.001);const l=e.data.get(r.dataId).values,d=e.data.get(i.dataId).values,h=e.data.get(u.dataId).values,p=o?e.data.get(o.dataId).values:new Float32Array([1]),f=a?e.data.get(a.dataId).values:new Float32Array([0]),m=new Float32Array(l.length),g=f.length,y=p.length,b=h.length,x=d.length;let w=0,v=0,k=0,S=0;for(let _=0;_<l.length;++_)m[_]=f[w++]+(l[_]-d[v++])*p[k++]/Math.sqrt(h[S++]+c),w>=g&&(w=0),v>=x&&(v=0),k>=y&&(k=0),S>=b&&(S=0);return e.makeTensorInfo(r.shape,r.dtype,m)}const A5={kernelName:Gl,backendName:"cpu",kernelFunc:E5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D5(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{blockShape:o,crops:a}=s;Tt([r],"batchToSpaceND");const i=o.reduce((y,b)=>y*b),u=nu(r.shape,o,i),c=su(u.length,o.length),l=ru(r.shape,o,i),d=cy(a,o.length),h=dy(l,a,o.length),p=Be({inputs:{x:r},backend:e,attrs:{shape:u}}),f=$s({inputs:{x:p},backend:e,attrs:{perm:c}}),m=Be({inputs:{x:f},backend:e,attrs:{shape:l}}),g=Oi({inputs:{x:m},backend:e,attrs:{begin:d,size:h}});return e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(m),g}const R5={kernelName:Xh,backendName:"cpu",kernelFunc:D5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F5(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,weights:o}=t,{size:a}=s,i=e.data.get(r.dataId).values,u=e.data.get(o.dataId).values,c=O0(i,u,o.dtype,o.shape,a);return e.makeTensorInfo([a],o.dtype,c)}const O5={kernelName:Yh,backendName:"cpu",kernelFunc:F5};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P5(n){const{inputs:t,backend:e}=n,{s0:s,s1:r}=t,o=e.data.get(s.dataId).values,a=e.data.get(r.dataId).values,i=Ut(Array.from(o),Array.from(a));return e.makeTensorInfo([i.length],"int32",Int32Array.from(i))}const L5={kernelName:Mw,backendName:"cpu",kernelFunc:P5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M5=Ce(Yi,(n,t)=>{const e=t;return n>e.clipValueMax?e.clipValueMax:n<e.clipValueMin?e.clipValueMin:n}),B5={kernelName:Yi,backendName:"cpu",kernelFunc:M5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z5=n=>{const{x:t}=n.inputs,e=n.backend,s=new Float32Array(j(t.shape)),r=e.data.get(t.dataId),o=r.complexTensorInfos.real,a=r.complexTensorInfos.imag,i=e.data.get(o.dataId).values,u=e.data.get(a.dataId).values;for(let c=0;c<i.length;c++){const l=i[c],d=u[c];s[c]=Math.hypot(l,d)}return e.makeOutput(s,t.shape,"float32")},V5={kernelName:Tg,backendName:"cpu",kernelFunc:z5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ol(n){const{inputs:t,backend:e}=n,{input:s}=t,r=e.data.get(s.dataId).complexTensorInfos.imag,o=e.data.get(r.dataId).values;return e.makeTensorInfo(r.shape,r.dtype,o)}const W5={kernelName:qw,backendName:"cpu",kernelFunc:ol};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function al(n){const{inputs:t,backend:e,attrs:s}=n,{axis:r}=s,o=Gt(r,t[0].shape)[0],a=t.map(m=>m.shape);iy(a,o);let i=Xs(t.map(m=>m.shape),o);if(j(i)===0)return e.makeTensorInfo(i,t[0].dtype,[]);const u=t.filter(m=>j(m.shape)>0);if(u.length===1)return bo({inputs:{x:u[0]},backend:e});if(u[0].dtype==="complex64"){const m=u.map(w=>Fi({inputs:{input:w},backend:e})),g=u.map(w=>ol({inputs:{input:w},backend:e})),y=al({inputs:m,backend:e,attrs:{axis:o}}),b=al({inputs:g,backend:e,attrs:{axis:o}}),x=As({inputs:{real:y,imag:b},backend:e});return m.forEach(w=>e.disposeIntermediateTensorInfo(w)),g.forEach(w=>e.disposeIntermediateTensorInfo(w)),e.disposeIntermediateTensorInfo(y),e.disposeIntermediateTensorInfo(b),x}const c=u.map(m=>{const y=[-1,j(m.shape.slice(o))];return Be({inputs:{x:m},backend:e,attrs:{shape:y}})}),l=c.map(m=>({vals:e.data.get(m.dataId).values,shape:m.shape}));i=Xs(c.map(m=>m.shape),1);const d=c[0].shape[0]===1,h=P0(l,i,t[0].dtype,d),p=Xs(u.map(m=>m.shape),o),f=e.makeTensorInfo(p,t[0].dtype,h);return c.forEach(m=>e.disposeIntermediateTensorInfo(m)),f}const U5={kernelName:Jh,backendName:"cpu",kernelFunc:al};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mE(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:o}=t,{strides:a,pad:i,dataFormat:u,dilations:c,dimRoundingMode:l}=s;Tt([r,o],"conv2d");const d=Ur(u),h=Ze(r.shape,o.shape,a,c,i,l,!1,d),p=h.filterHeight,f=h.filterWidth,m=h.dilationHeight,g=h.dilationWidth,y=h.padInfo.left,b=h.padInfo.top,x=h.dataFormat==="channelsLast",w=new Pn(h.outShape,r.dtype),v=St(r.shape),k=St(o.shape),S=v[0],_=x?v[1]:v[2],C=x?v[2]:1,N=x?1:v[1],$=w.strides[0],A=x?w.strides[1]:w.strides[2],D=x?w.strides[2]:1,R=x?1:w.strides[1],F=e.data.get(r.dataId).values,z=e.data.get(o.dataId).values,H=w.values;for(let P=0;P<h.batchSize;++P){const U=P*S,Z=P*$;for(let tt=0;tt<h.outHeight;++tt){const at=Z+tt*A,ot=tt*h.strideHeight-b;for(let lt=0;lt<p;++lt){const ct=ot+lt*m;if(ct<0||ct>=h.inHeight)continue;const bt=lt*k[0],Nt=U+ct*_;for(let xt=0;xt<h.outWidth;++xt){const Ct=at+xt*D,zt=xt*h.strideWidth-y;for(let Wt=0;Wt<f;++Wt){const Jt=zt+Wt*g;if(Jt<0||Jt>=h.inWidth)continue;const ue=bt+Wt*k[1],se=Nt+Jt*C;let ee=ue;for(let Vt=0;Vt<h.inChannels;++Vt){const ve=F[se+Vt*N];for(let me=0;me<h.outChannels;++me)H[Ct+me*R]+=ve*z[ee+me];ee+=h.outChannels}}}}}}return e.makeTensorInfo(w.shape,w.dtype,H)}const G5={kernelName:Tl,backendName:"cpu",kernelFunc:mE};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H5(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,dy:o}=t,{strides:a,pad:i,dataFormat:u,dimRoundingMode:c,filterShape:l}=s;Tt([r,o],"conv2dBackpropFilter");const d=Ur(u),h=Ze(r.shape,l,a,1,i,c,!1,d),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=h,y=h.dataFormat==="channelsLast",b=new Pn(h.filterShape,"float32"),x=h.padInfo.left,w=h.padInfo.top,v=e.data.get(r.dataId).values,k=e.data.get(o.dataId).values,S=new Pn(r.shape,r.dtype,v),_=new Pn(o.shape,o.dtype,k);for(let C=0;C<m;++C){const N=Math.max(0,Math.ceil((w-C)/p)),$=Math.min(h.outHeight,(h.inHeight+w-C)/p);for(let A=0;A<g;++A){const D=Math.max(0,Math.ceil((x-A)/f)),R=Math.min(h.outWidth,(h.inWidth+x-A)/f);for(let F=0;F<h.inChannels;++F)for(let z=0;z<h.outChannels;++z){let H=0;for(let P=0;P<h.batchSize;++P)for(let U=N;U<$;++U){const Z=C+U*p-w;for(let tt=D;tt<R;++tt){const at=A+tt*f-x;y?H+=S.get(P,Z,at,F)*_.get(P,U,tt,z):H+=S.get(P,F,Z,at)*_.get(P,z,U,tt)}}b.set(H,C,A,F,z)}}}return e.makeTensorInfo(b.shape,b.dtype,b.values)}const j5={kernelName:zw,backendName:"cpu",kernelFunc:H5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q5(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,filter:o}=t,{inputShape:a,strides:i,pad:u,dataFormat:c,dimRoundingMode:l}=s;Tt([r,o],"conv2dBackpropInput");const d=St(o.shape),h=St(r.shape);let p=Ur(c);const f=Ze(a,o.shape,i,1,u,l,!1,p),m=new Pn(f.inShape,"float32"),g=m.values,y=e.data.get(r.dataId).values,b=e.data.get(o.dataId).values,[x,w,v]=d,{batchSize:k,filterHeight:S,filterWidth:_,inChannels:C,inHeight:N,inWidth:$,outChannels:A,outHeight:D,outWidth:R,strideHeight:F,strideWidth:z}=f;p=f.dataFormat;const H=S-1-f.padInfo.top,P=_-1-f.padInfo.left,U=p==="channelsLast",Z=m.strides[0],tt=U?m.strides[1]:m.strides[2],at=U?m.strides[2]:1,ot=U?1:m.strides[1],lt=h[0],ct=U?h[1]:h[2],bt=U?h[2]:1,Nt=U?1:h[1];for(let xt=0;xt<k;++xt)for(let Ct=0;Ct<C;++Ct)for(let zt=0;zt<N;++zt){const Wt=zt-H,Jt=Math.max(0,Math.ceil(Wt/F)),ue=Math.min(D,(S+Wt)/F);for(let se=0;se<$;++se){const ee=se-P,Vt=Math.max(0,Math.ceil(ee/z)),ve=Math.min(R,(_+ee)/z);let me=0;for(let Ee=Jt;Ee<ue;++Ee){const Qn=Ee*F-Wt;for(let mn=Vt;mn<ve;++mn){const Ns=mn*z-ee,Vn=lt*xt+ct*Ee+bt*mn,ts=x*(S-1-Qn)+w*(_-1-Ns)+v*Ct;for(let ds=0;ds<A;++ds){const ln=y[Vn+Nt*ds],cn=b[ts+ds];me+=ln*cn}}}const zn=Z*xt+tt*zt+at*se+ot*Ct;g[zn]=me}}return e.makeTensorInfo(m.shape,m.dtype,m.values)}const K5={kernelName:El,backendName:"cpu",kernelFunc:q5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X5(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:o}=t,{strides:a,pad:i,dilations:u}=s;Tt([r,o],"conv3d");const c=Wr(r.shape,o.shape,a,u,i),{filterDepth:l,filterHeight:d,filterWidth:h,dilationDepth:p,dilationHeight:f,dilationWidth:m,padInfo:g}=c,y=g.front,b=g.left,x=g.top,w=new Pn(c.outShape,r.dtype),v=e.data.get(r.dataId).values,k=e.data.get(o.dataId).values,S=w.values,_=St(r.shape),C=St(o.shape);for(let N=0;N<c.batchSize;++N){const $=N*_[0],A=N*w.strides[0];for(let D=0;D<c.outDepth;++D){const R=A+D*w.strides[1],F=D*c.strideDepth-y;for(let z=0;z<l;++z){const H=F+z*p;if(H<0||H>=c.inDepth)continue;const P=z*C[0],U=$+H*_[1];for(let Z=0;Z<c.outHeight;++Z){const tt=R+Z*w.strides[2],at=Z*c.strideHeight-x;for(let ot=0;ot<d;++ot){const lt=at+ot*f;if(lt<0||lt>=c.inHeight)continue;const ct=P+ot*C[1],bt=U+lt*_[2];for(let Nt=0;Nt<c.outWidth;++Nt){const xt=tt+Nt*c.outChannels,Ct=Nt*c.strideWidth-b;for(let zt=0;zt<h;++zt){const Wt=Ct+zt*m;if(Wt<0||Wt>=c.inWidth)continue;const Jt=ct+zt*C[2],ue=bt+Wt*c.inChannels;let se=Jt;for(let ee=0;ee<c.inChannels;++ee){const Vt=v[ue+ee];for(let ve=0;ve<c.outChannels;++ve)S[xt+ve]+=Vt*k[se+ve];se+=c.outChannels}}}}}}}}return e.makeTensorInfo(w.shape,w.dtype,w.values)}const Y5={kernelName:Al,backendName:"cpu",kernelFunc:X5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J5(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,dy:o}=t,{strides:a,pad:i,filterShape:u}=s;Tt([r,o],"conv3dBackpropFilterV2");const c=St(r.shape),l=St(o.shape),d=Wr(r.shape,u,a,1,i),h=d.strideDepth,p=d.strideHeight,f=d.strideWidth,m=d.filterDepth,g=d.filterHeight,y=d.filterWidth,b=new Pn(d.filterShape,"float32"),x=b.values,[w,v,k,S]=b.strides,_=e.data.get(o.dataId).values,[C,N,$,A]=l,D=e.data.get(r.dataId).values,[R,F,z,H]=c,P=d.padInfo.front,U=d.padInfo.left,Z=d.padInfo.top;for(let tt=0;tt<m;++tt){const at=Math.max(0,Math.ceil((P-tt)/h)),ot=Math.min(d.outDepth,(d.inDepth+P-tt)/h),lt=tt*w;for(let ct=0;ct<g;++ct){const bt=Math.max(0,Math.ceil((Z-ct)/p)),Nt=Math.min(d.outHeight,(d.inHeight+Z-ct)/p),xt=ct*v+lt;for(let Ct=0;Ct<y;++Ct){const zt=Math.max(0,Math.ceil((U-Ct)/f)),Wt=Math.min(d.outWidth,(d.inWidth+U-Ct)/f),Jt=Ct*k+xt;for(let ue=0;ue<d.inChannels;++ue){const se=ue*S+Jt;for(let ee=0;ee<d.outChannels;++ee){let Vt=0;for(let ve=0;ve<d.batchSize;++ve){const me=ve*R,zn=ve*C;for(let Ee=at;Ee<ot;++Ee){const mn=(tt+Ee*h-P)*F+me,Ns=Ee*N+zn;for(let Vn=bt;Vn<Nt;++Vn){const ds=(ct+Vn*p-Z)*z+mn,ln=Vn*$+Ns;for(let cn=zt;cn<Wt;++cn){const $o=(Ct+cn*f-U)*H+ds,Bs=cn*A+ln;Vt+=D[$o+ue]*_[Bs+ee]}}}}x[se+ee]=Vt}}}}}return e.makeTensorInfo(b.shape,b.dtype,b.values)}const Z5={kernelName:Zh,backendName:"cpu",kernelFunc:J5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q5(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,filter:o}=t,{pad:a,strides:i,inputShape:u}=s;Tt([r],"conv3dBackpropInputV2");const c=St(r.shape),l=St(o.shape),d=Wr(u,o.shape,i,1,a),h=new Pn(d.inShape,"float32"),p=h.values,[f,m,g,y]=h.strides,b=e.data.get(r.dataId).values,[x,w,v,k]=c,S=e.data.get(o.dataId).values,[_,C,N,$]=l,{batchSize:A,filterDepth:D,filterHeight:R,filterWidth:F,inChannels:z,inDepth:H,inHeight:P,inWidth:U,outChannels:Z,outDepth:tt,outHeight:at,outWidth:ot,strideDepth:lt,strideHeight:ct,strideWidth:bt}=d,Nt=D-1-d.padInfo.front,xt=R-1-d.padInfo.top,Ct=F-1-d.padInfo.left;for(let zt=0;zt<A;++zt)for(let Wt=0;Wt<z;++Wt)for(let Jt=0;Jt<H;++Jt){const ue=Jt-Nt,se=Math.max(0,Math.ceil(ue/lt)),ee=Math.min(tt,(D+ue)/lt);for(let Vt=0;Vt<P;++Vt){const ve=Vt-xt,me=Math.max(0,Math.ceil(ve/ct)),zn=Math.min(at,(R+ve)/ct);for(let Ee=0;Ee<U;++Ee){const Qn=Ee-Ct,mn=Math.max(0,Math.ceil(Qn/bt)),Ns=Math.min(ot,(F+Qn)/bt);let Vn=0;for(let ts=se;ts<ee;++ts){const ds=ts*lt-ue;for(let ln=me;ln<zn;++ln){const cn=ln*ct-ve;for(let tr=mn;tr<Ns;++tr){const $o=tr*bt-Qn,Bs=x*zt+w*ts+v*ln+k*tr,ti=_*(D-1-ds)+C*(R-1-cn)+N*(F-1-$o)+$*Wt;for(let er=0;er<Z;++er){const jr=b[Bs+er],dn=S[ti+er];Vn+=jr*dn}}}}p[f*zt+m*Jt+g*Vt+y*Ee+Wt]=Vn}}}return e.makeTensorInfo(h.shape,h.dtype,h.values)}const tX={kernelName:Qh,backendName:"cpu",kernelFunc:Q5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eX=Ce(Dl,n=>Math.cos(n)),nX={kernelName:Dl,backendName:"cpu",kernelFunc:eX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sX=Ce(Rl,n=>Math.cosh(n)),rX={kernelName:Rl,backendName:"cpu",kernelFunc:sX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oX(n){const{inputs:t,backend:e,attrs:s}=n,{image:r,boxes:o,boxInd:a}=t,{cropSize:i,method:u,extrapolationValue:c}=s,[l,d,h,p]=r.shape,f=o.shape[0],[m,g]=i,y=Zt([f,m,g,p],"float32"),b=e.data.get(o.dataId).values,x=e.data.get(a.dataId).values,w=e.data.get(r.dataId).values,v=St(r.shape),k=St(y.shape);for(let S=0;S<f;S++){const _=S*4,C=b[_],N=b[_+1],$=b[_+2],A=b[_+3],D=x[S];if(D>=l)continue;const R=m>1?($-C)*(d-1)/(m-1):0,F=g>1?(A-N)*(h-1)/(g-1):0;for(let z=0;z<m;z++){const H=m>1?C*(d-1)+z*R:.5*(C+$)*(d-1);if(H<0||H>d-1){for(let P=0;P<g;P++)for(let U=0;U<p;U++){const Z=U+P*k[2]+z*k[1]+S*k[0];y.values[Z]=c}continue}if(u==="bilinear"){const P=Math.floor(H),U=Math.ceil(H),Z=H-P;for(let tt=0;tt<g;tt++){const at=g>1?N*(h-1)+tt*F:.5*(N+A)*(h-1);if(at<0||at>h-1){for(let bt=0;bt<p;bt++){const Nt=bt+tt*k[2]+z*k[1]+S*k[0];y.values[Nt]=c}continue}const ot=Math.floor(at),lt=Math.ceil(at),ct=at-ot;for(let bt=0;bt<p;bt++){let Nt=bt+ot*v[2]+P*v[1]+D*v[0];const xt=w[Nt];Nt=bt+lt*v[2]+P*v[1]+D*v[0];const Ct=w[Nt];Nt=bt+ot*v[2]+U*v[1]+D*v[0];const zt=w[Nt];Nt=bt+lt*v[2]+U*v[1]+D*v[0];const Wt=w[Nt],Jt=xt+(Ct-xt)*ct,ue=zt+(Wt-zt)*ct;Nt=bt+tt*k[2]+z*k[1]+S*k[0],y.values[Nt]=Jt+(ue-Jt)*Z}}}else for(let P=0;P<g;++P){const U=g>1?N*(h-1)+P*F:.5*(N+A)*(h-1);if(U<0||U>h-1){for(let at=0;at<p;at++){const ot=at+P*k[2]+z*k[1]+S*k[0];y.values[ot]=c}continue}const Z=Math.round(U),tt=Math.round(H);for(let at=0;at<p;at++){const ot=at+Z*v[2]+tt*v[1]+D*v[0],lt=at+P*k[2]+z*k[1]+S*k[0];y.values[lt]=w[ot]}}}}return e.makeTensorInfo(y.shape,y.dtype,y.values)}const aX={kernelName:ep,backendName:"cpu",kernelFunc:oX};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iX(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,exclusive:a,reverse:i}=s;Tt(r,"cumprod");const u=Ve([o],r.shape.length);let c=r;u!=null&&(c=$s({inputs:{x:r},backend:e,attrs:{perm:u}}));const l=Fe(1,r.shape.length)[0];if(l!==c.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${l}`);const d=Os(c.dtype,"int32"),h=Ow(j(c.shape),d),p=e.data.get(c.dataId).values,f=c.shape[c.shape.length-1],m=i?(y,b)=>y+f-b-1:(y,b)=>y+b;for(let y=0;y<p.length;y+=f)for(let b=0;b<f;b++){const x=m(y,b);if(b===0)h[x]=a?1:p[x];else{const w=m(y,b-1);h[x]=a?p[w]*h[w]:p[x]*h[w]}}const g=e.makeTensorInfo(c.shape,d,h);if(u!=null){const y=vo(u),b=$s({inputs:{x:g},backend:e,attrs:{perm:y}});return e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(c),b}return g}const uX={kernelName:tp,backendName:"cpu",kernelFunc:iX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lX(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,exclusive:a,reverse:i}=s;Tt(r,"cumsum");const u=Ve([o],r.shape.length);let c=r;u!=null&&(c=$s({inputs:{x:r},backend:e,attrs:{perm:u}}));const l=Fe(1,r.shape.length)[0];if(l!==c.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${l}`);const d=Os(c.dtype,"int32"),h=qn(j(c.shape),d),p=e.data.get(c.dataId).values,f=c.shape[c.shape.length-1],m=i?(y,b)=>y+f-b-1:(y,b)=>y+b;for(let y=0;y<p.length;y+=f)for(let b=0;b<f;b++){const x=m(y,b);if(b===0)h[x]=a?0:p[x];else{const w=m(y,b-1);h[x]=a?p[w]+h[w]:p[x]+h[w]}}const g=e.makeTensorInfo(c.shape,d,h);if(u!=null){const y=vo(u),b=$s({inputs:{x:g},backend:e,attrs:{perm:y}});return e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(c),b}return g}const cX={kernelName:Fl,backendName:"cpu",kernelFunc:lX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dX(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,weights:o}=t,{size:a,binaryOutput:i}=s;if(r.shape.length===1){const u=e.data.get(r.dataId).values,c=e.data.get(o.dataId).values,l=O0(u,c,o.dtype,o.shape,a);return e.makeTensorInfo([a],o.dtype,l)}else if(r.shape.length===2){const u=e.bufferSync(r),c=e.bufferSync(o),l=kT(u,c,a,i);return e.makeTensorInfo(l.shape,o.dtype,l.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}const hX={kernelName:Eg,backendName:"cpu",kernelFunc:dX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pX(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{blockSize:o,dataFormat:a}=s;T(a==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${a}`);const i=r.shape[0],u=r.shape[1],c=r.shape[2],l=r.shape[3],d=u*o,h=c*o,p=l/(o*o),f=e.data.get(r.dataId).values,m=new Float32Array(i*d*h*p);let g=0;for(let y=0;y<i;++y)for(let b=0;b<d;++b){const x=Math.floor(b/o),w=b%o;for(let v=0;v<h;++v){const k=Math.floor(v/o),S=v%o,_=(w*o+S)*p;for(let C=0;C<p;++C){const $=C+_+l*(k+c*(x+u*y));m[g++]=f[$]}}}return e.makeTensorInfo([i,d,h,p],r.dtype,m)}const fX={kernelName:np,backendName:"cpu",kernelFunc:pX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gE(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:o}=t,{strides:a,pad:i,dilations:u,dimRoundingMode:c}=s;Tt([r,o],"depthwiseConv2DNative");const l=St(r.shape),d=St(o.shape);let h=u;h==null&&(h=[1,1]),T(Mn(a,h),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${h}'`);const p=Ze(r.shape,o.shape,a,h,i,c,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=p,x=b.left,w=b.top,v=p.outChannels/p.inChannels,k=new Pn(p.outShape,r.dtype),S=e.data.get(r.dataId).values,_=e.data.get(o.dataId).values,C=k.values;for(let N=0;N<p.batchSize;++N){const $=N*l[0],A=N*k.strides[0];for(let D=0;D<p.outHeight;++D){const R=A+D*k.strides[1],F=D*p.strideHeight-w;for(let z=0;z<f;++z){const H=F+z*g;if(H<0||H>=p.inHeight)continue;const P=z*d[0],U=$+H*l[1];for(let Z=0;Z<p.outWidth;++Z){const tt=R+Z*k.strides[2],at=Z*p.strideWidth-x;for(let ot=0;ot<m;++ot){const lt=at+ot*y;if(lt<0||lt>=p.inWidth)continue;const ct=P+ot*d[1],bt=U+lt*p.inChannels;let Nt=tt,xt=ct;for(let Ct=0;Ct<p.inChannels;++Ct){const zt=S[bt+Ct];for(let Wt=0;Wt<v;++Wt)C[Nt+Wt]+=zt*_[xt+Wt];Nt+=v,xt+=v}}}}}}return e.makeTensorInfo(k.shape,k.dtype,k.values)}const mX={kernelName:Ol,backendName:"cpu",kernelFunc:gE};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gX(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,dy:o}=t,{strides:a,dilations:i,pad:u,dimRoundingMode:c,filterShape:l}=s;Tt([r,o],"depthwiseConv2dNativeBackpropFilter");const d=Ze(r.shape,l,a,i,u,c,!0),{strideHeight:h,strideWidth:p,filterHeight:f,filterWidth:m}=d,g=new Pn(d.filterShape,"float32"),y=d.padInfo.left,b=d.padInfo.top,x=d.outChannels/d.inChannels,w=e.data.get(r.dataId).values,v=new Pn(r.shape,r.dtype,w),k=e.data.get(o.dataId).values,S=new Pn(o.shape,o.dtype,k);for(let _=0;_<f;++_){const C=Math.max(0,Math.ceil((b-_)/h)),N=Math.min(d.outHeight,(d.inHeight+b-_)/h);for(let $=0;$<m;++$){const A=Math.max(0,Math.ceil((y-$)/p)),D=Math.min(d.outWidth,(d.inWidth+y-$)/p);for(let R=0;R<d.outChannels;++R){const F=Math.trunc(R/x),z=R%x;let H=0;for(let P=0;P<d.batchSize;++P)for(let U=C;U<N;++U){const Z=_+U*h-b;for(let tt=A;tt<D;++tt){const at=$+tt*p-y;H+=v.get(P,Z,at,F)*S.get(P,U,tt,R)}}g.set(H,_,$,F,z)}}}return e.makeTensorInfo(g.shape,g.dtype,g.values)}const yX={kernelName:Vw,backendName:"cpu",kernelFunc:gX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bX(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,filter:o}=t,{strides:a,dilations:i,pad:u,dimRoundingMode:c,inputShape:l}=s;Tt([r,o],"depthwiseConv2DNativeBackpropInput");const d=St(r.shape),h=St(o.shape),p=Ze(l,o.shape,a,i,u,c,!0),f=new Pn(p.inShape,"float32"),m=f.values,[g,y,b]=f.strides,x=e.data.get(r.dataId).values,[w,v,k]=d,S=e.data.get(o.dataId).values,[_,C,N]=h,{batchSize:$,filterHeight:A,filterWidth:D,inChannels:R,inHeight:F,inWidth:z,outChannels:H,outHeight:P,outWidth:U,strideHeight:Z,strideWidth:tt}=p,at=A-1-p.padInfo.top,ot=D-1-p.padInfo.left,lt=H/R;for(let ct=0;ct<$;++ct)for(let bt=0;bt<R;++bt)for(let Nt=0;Nt<F;++Nt){const xt=Nt-at,Ct=Math.max(0,Math.ceil(xt/Z)),zt=Math.min(P,(A+xt)/Z);for(let Wt=0;Wt<z;++Wt){const Jt=Wt-ot,ue=Math.max(0,Math.ceil(Jt/tt)),se=Math.min(U,(D+Jt)/tt);let ee=0;for(let Vt=Ct;Vt<zt;++Vt){const ve=Vt*Z-xt;for(let me=ue;me<se;++me){const zn=me*tt-Jt,Ee=w*ct+v*Vt+k*me,Qn=_*(A-1-ve)+C*(D-1-zn)+N*bt;for(let mn=0;mn<lt;++mn){const Ns=bt*lt+mn,Vn=x[Ee+Ns],ts=S[Qn+mn];ee+=Vn*ts}}}m[g*ct+y*Nt+b*Wt+bt]=ee}}return e.makeTensorInfo(f.shape,f.dtype,f.values)}const xX={kernelName:Ww,backendName:"cpu",kernelFunc:bX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wX(n){const{inputs:t,backend:e}=n,{x:s}=t,r=j(s.shape),o=e.data.get(s.dataId).values,a=Zt([r,r],s.dtype),i=a.values;for(let c=0;c<o.length;c++)i[c*r+c]=o[c];const u=[...s.shape,...s.shape];return e.makeTensorInfo(u,a.dtype,a.values)}const vX={kernelName:Uw,backendName:"cpu",kernelFunc:wX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IX={kernelName:Pl,backendName:"cpu",kernelFunc:({inputs:n,backend:t,attrs:e})=>{const{x:s,filter:r}=n,{strides:o,pad:a,dilations:i}=e,u=t,c=u.data.get(s.dataId).values,l=s.shape.length,d=u.data.get(r.dataId).values,h=r.shape.length,{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:w,strideWidth:v,filterHeight:k,filterWidth:S,dilationHeight:_,dilationWidth:C,outShape:N}=Wa(s.shape,r.shape,o,a,"NHWC",i),$=j(N),A=N.length,D=tn(s.dtype,$);for(let F=0;F<p;++F)for(let z=0;z<y;++z){const H=z*w-x.top;for(let P=0;P<b;++P){const U=P*v-x.left;for(let Z=0;Z<g;++Z){let tt=Number.MIN_SAFE_INTEGER;for(let ot=0;ot<k;++ot){const lt=H+ot*_;if(lt>=0&&lt<f)for(let ct=0;ct<S;++ct){const bt=U+ct*C;if(bt>=0&&bt<m){const Nt=ro([F,lt,bt,Z],l,St(s.shape)),xt=ro([ot,ct,Z],h,St(r.shape)),Ct=c[Nt]+d[xt];Ct>tt&&(tt=Ct)}}}const at=ro([F,z,P,Z],A,St(N));D[at]=tt}}}return{dataId:u.write(Qi(D,s.dtype),N,s.dtype),shape:N,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kX={kernelName:Od,backendName:"cpu",kernelFunc:({inputs:n,backend:t,attrs:e})=>{const{x:s,filter:r,dy:o}=n,{strides:a,pad:i,dilations:u}=e,c=t,l=Er(s.shape,c.data.get(s.dataId).values),d=Er(r.shape,c.data.get(r.dataId).values),{batchSize:h,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:w,filterHeight:v,filterWidth:k,dilationHeight:S,dilationWidth:_,outShape:C}=Wa(s.shape,r.shape,a,i,"NHWC",u);T(o.rank===C.length,()=>`Error in ${Od}, dy must have the same rank as output ${C.length}, but got ${o.rank}`);const N=Er(C,c.data.get(o.dataId).values),$=vN(r.shape,r.dtype);for(let D=0;D<h;++D)for(let R=0;R<g;++R){const F=R*x-b.top;for(let z=0;z<y;++z){const H=z*w-b.left;for(let P=0;P<m;++P){let U=Number.MIN_SAFE_INTEGER,Z=0,tt=0;for(let at=0;at<v;++at){const ot=F+at*S;if(ot>=0&&ot<p)for(let lt=0;lt<k;++lt){const ct=H+lt*_;if(ct>=0&&ct<f){const bt=l[D][ot][ct][P]+d[at][lt][P];bt>U&&(U=bt,Z=at,tt=lt)}}}$[Z][tt][P]+=N[D][R][z][P]}}}return{dataId:c.write(Qi($,s.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $X={kernelName:Fd,backendName:"cpu",kernelFunc:({inputs:n,backend:t,attrs:e})=>{const{x:s,filter:r,dy:o}=n,{strides:a,pad:i,dilations:u}=e,c=t,l=Er(s.shape,c.data.get(s.dataId).values),d=Er(r.shape,c.data.get(r.dataId).values),{batchSize:h,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:w,filterHeight:v,filterWidth:k,dilationHeight:S,dilationWidth:_,outShape:C}=Wa(s.shape,r.shape,a,i,"NHWC",u);T(o.rank===C.length,()=>`Error in ${Fd}, dy must have the same rank as output ${C.length}, but got ${o.rank}`);const N=Er(C,c.data.get(o.dataId).values),$=vN(s.shape,s.dtype);for(let D=0;D<h;++D)for(let R=0;R<g;++R){const F=R*x-b.top;for(let z=0;z<y;++z){const H=z*w-b.left;for(let P=0;P<m;++P){let U=Number.MIN_SAFE_INTEGER,Z=F<0?0:F,tt=H<0?0:H;for(let at=0;at<v;++at){const ot=F+at*S;if(ot>=0&&ot<p)for(let lt=0;lt<k;++lt){const ct=H+lt*_;if(ct>=0&&ct<f){const bt=l[D][ot][ct][P]+d[at][lt][P];bt>U&&(U=bt,Z=ot,tt=ct)}}}$[D][Z][tt][P]+=N[D][R][z][P]}}}return{dataId:c.write(Qi($,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SX(n){const{inputs:t,backend:e,attrs:s}=n,{image:r}=t,{canvas:o,options:a}=s,{contextOptions:i,imageOptions:u}=a||{},c=(u==null?void 0:u.alpha)||1,l=(i==null?void 0:i.contextType)||"2d";if(l!=="2d")throw new Error(`Context type ${i.contextType} is not supported by the CPU backend.`);const d=o.getContext(l,(i==null?void 0:i.contextAttributes)||{});if(d==null)throw new Error(`Could not get the context with ${l} type.`);const[h,p]=r.shape.slice(0,2),f=r.shape.length===2?1:r.shape[2],m=e.data.get(r.dataId).values,g=r.dtype==="float32"?255:1,y=new Uint8ClampedArray(p*h*4);for(let x=0;x<h*p;++x){const w=[0,0,0,255*c];for(let k=0;k<f;k++){const S=m[x*f+k];if(r.dtype==="float32"){if(S<0||S>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${S}.`)}else if(r.dtype==="int32"&&(S<0||S>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${S}.`);f===1?(w[0]=S*g,w[1]=S*g,w[2]=S*g):w[k]=S*g}const v=x*4;y[v+0]=Math.round(w[0]),y[v+1]=Math.round(w[1]),y[v+2]=Math.round(w[2]),y[v+3]=Math.round(w[3])}o.width=p,o.height=h;const b=new ImageData(y,p,h);return d.putImageData(b,0,0),r}const NX={kernelName:oB,backendName:"cpu",kernelFunc:SX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kp(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,keepDims:a}=s;Tt(r,"sum");let i;r.dtype==="bool"?i=Oa({inputs:{x:r},backend:e,attrs:{dtype:"int32"}}):i=bo({inputs:{x:r},backend:e});const u=i.shape.length,c=Gt(o,i.shape),l=Ve(c,u);let d=c,h=i;l!=null&&(h=$s({inputs:{x:i},backend:e,attrs:{perm:l}}),d=Fe(d.length,u)),ze("sum",d,h.shape.length);const[p,f]=Ge(h.shape,d),m=Os(h.dtype,"int32");let g=km(e,p,m);const y=j(f),b=e.data.get(g.dataId).values,x=e.data.get(h.dataId).values;for(let w=0;w<b.length;++w){const v=w*y;let k=0;for(let S=0;S<y;++S)k+=x[v+S];b[w]=k}if(a){const w=Re(g.shape,c),v=g;g=Be({inputs:{x:g},backend:e,attrs:{shape:w}}),e.disposeIntermediateTensorInfo(v)}return e.disposeIntermediateTensorInfo(i),l!=null&&e.disposeIntermediateTensorInfo(h),g}const CX={kernelName:Tc,backendName:"cpu",kernelFunc:Kp};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _X(n){const{inputs:t,backend:e,attrs:s}=n,{equation:r}=s,o=t,{allDims:a,summedDims:i,idDims:u}=q1(r,o.length);X1(a.length,u,o);const{path:c,steps:l}=Y1(i,u),d=l.length;let h=null,p=a.length;const f=[];for(let m=0;m<d;++m){for(const g of l[m]){const{permutationIndices:y,expandDims:b}=K1(p,u[g]);let x;J1(y)?x=o[g]:(x=$s({inputs:{x:o[g]},backend:e,attrs:{perm:y}}),f.push(x));const w=x.shape.slice();for(let v=0;v<b.length;++v)w.splice(b[v],0,1);we(x.shape,w)||(x=Be({inputs:{x},backend:e,attrs:{shape:w}}),f.push(x)),h===null?h=x:(h=Cy({inputs:{a:x,b:h},backend:e}),f.push(h))}m<d-1&&(c[m]>=0&&(h=Kp({inputs:{x:h},backend:e,attrs:{axis:c[m]-(a.length-p),keepDims:!1}}),f.push(h)),p--)}for(const m of f)m!==h&&e.disposeIntermediateTensorInfo(m);return h}const TX={kernelName:Gw,backendName:"cpu",kernelFunc:_X};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EX(n){const{inputs:t,backend:e}=n,{dy:s,y:r}=t;Tt([s,r],"eluGrad");const o=new Float32Array(j(r.shape)),a=e.data.get(r.dataId).values,i=e.data.get(s.dataId).values;for(let u=0;u<a.length;++u){const c=a[u];c>=0?o[u]=i[u]:o[u]=i[u]*(c+1)}return e.makeTensorInfo(r.shape,"float32",o)}const AX={kernelName:sp,backendName:"cpu",kernelFunc:EX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DX=z1,RX=V1,FX=W1,OX=U1,PX=G1,LX=H1,MX=Ce(Bl,n=>{const t=Math.sign(n),e=Math.abs(n),s=1/(1+DX*e);return t*(1-((((LX*s+PX)*s+OX)*s+FX)*s+RX)*s*Math.exp(-e*e))}),BX={kernelName:Bl,backendName:"cpu",kernelFunc:MX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cm(n){const{inputs:t,backend:e,attrs:s}=n,{input:r}=t,{dim:o}=s,a=r.shape.length,i=r.shape.slice();let u=o;return o<0&&(T(-(a+1)<=o,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),u=a+o+1),i.splice(u,0,1),Be({inputs:{x:r},backend:e,attrs:{shape:i}})}const zX={kernelName:op,backendName:"cpu",kernelFunc:Cm};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VX=un((n,t)=>n/t),q0=Sn(Ll,VX),Ix={kernelName:Ll,backendName:"cpu",kernelFunc:q0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yE(n,t,e){const s=n.shape,r=s[0],o=s[1],a=e.data.get(n.dataId),i=a.complexTensorInfos.real,u=a.complexTensorInfos.imag,c=[r,o],l=j(c),d=jn("float32",l),h=jn("float32",l);for(let g=0;g<r;g++){const y=Oi({inputs:{x:i},backend:e,attrs:{begin:[g,0],size:[1,o]}}),b=Oi({inputs:{x:u},backend:e,attrs:{begin:[g,0],size:[1,o]}}),x=As({inputs:{real:y,imag:b},backend:e}),{real:w,imag:v}=WX(x,t,e),k=qo(w,v);for(let S=0;S<o;S++){const _=j1(k,S);d[g*o+S]=_.real,h[g*o+S]=_.imag}e.disposeIntermediateTensorInfo(y),e.disposeIntermediateTensorInfo(b),e.disposeIntermediateTensorInfo(x)}const p=e.makeTensorInfo(c,"float32",d),f=e.makeTensorInfo(c,"float32",h),m=As({inputs:{real:p,imag:f},backend:e});return e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(f),m}function WX(n,t,e){const s=j(n.shape),r=e.data.get(n.dataId),o=e.data.get(r.complexTensorInfos.real.dataId).values,a=e.data.get(r.complexTensorInfos.imag.dataId).values;if(UX(s)){const i=kx(o,a,s,t,e),u=[n.shape[0],n.shape[1]];if(t){const c=e.makeTensorInfo(u,"float32",i.real),l=e.makeTensorInfo(u,"float32",i.imag),d=e.makeTensorInfo([],"float32",Va(s,"float32")),h=bo({inputs:{x:d},backend:e}),p=Ix.kernelFunc({inputs:{a:c,b:d},backend:e}),f=Ix.kernelFunc({inputs:{a:l,b:h},backend:e}),m=e.data.get(p.dataId).values,g=e.data.get(f.dataId).values;return e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(l),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(f),{real:m,imag:g}}return i}else{const i=qo(o,a),u=GX(i,s,t);return qC(u)}}function UX(n){return(n&n-1)===0}function kx(n,t,e,s,r){if(e===1)return{real:n,imag:t};const o=qo(n,t),a=e/2,i=KC(o),u=i.real,c=i.imag,l=[u.length],d=r.makeTensorInfo(l,"float32",u),h=r.makeTensorInfo(l,"float32",c),p=As({inputs:{real:d,imag:h},backend:r}),f=XC(o),m=f.real,g=f.imag,y=[m.length],b=r.makeTensorInfo(y,"float32",m),x=r.makeTensorInfo(y,"float32",g),w=As({inputs:{real:b,imag:x},backend:r}),v=kx(u,c,a,s,r),k=v.real,S=v.imag,_=[k.length],C=r.makeTensorInfo(_,"float32",k),N=r.makeTensorInfo(_,"float32",S),$=As({inputs:{real:C,imag:N},backend:r}),A=kx(m,g,a,s,r),D=A.real,R=A.imag,F=[D.length],z=r.makeTensorInfo(F,"float32",D),H=r.makeTensorInfo(F,"float32",R),P=As({inputs:{real:z,imag:H},backend:r}),U=JC(e,s),Z=[U.real.length],tt=r.makeTensorInfo(Z,"float32",U.real),at=r.makeTensorInfo(Z,"float32",U.imag),ot=As({inputs:{real:tt,imag:at},backend:r}),lt=Cy({inputs:{a:ot,b:P},backend:r}),ct=rl({inputs:{a:$,b:lt},backend:r}),bt=G0({inputs:{a:$,b:lt},backend:r}),Nt=Fi({inputs:{input:ct},backend:r}),xt=Fi({inputs:{input:bt},backend:r}),Ct=ol({inputs:{input:ct},backend:r}),zt=ol({inputs:{input:bt},backend:r}),Wt=al({inputs:[Nt,xt],backend:r,attrs:{axis:0}}),Jt=al({inputs:[Ct,zt],backend:r,attrs:{axis:0}}),ue=r.data.get(Wt.dataId).values,se=r.data.get(Jt.dataId).values;return r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(w),r.disposeIntermediateTensorInfo(C),r.disposeIntermediateTensorInfo(N),r.disposeIntermediateTensorInfo($),r.disposeIntermediateTensorInfo(z),r.disposeIntermediateTensorInfo(H),r.disposeIntermediateTensorInfo(P),r.disposeIntermediateTensorInfo(tt),r.disposeIntermediateTensorInfo(at),r.disposeIntermediateTensorInfo(ot),r.disposeIntermediateTensorInfo(lt),r.disposeIntermediateTensorInfo(ct),r.disposeIntermediateTensorInfo(bt),r.disposeIntermediateTensorInfo(Nt),r.disposeIntermediateTensorInfo(Ct),r.disposeIntermediateTensorInfo(xt),r.disposeIntermediateTensorInfo(zt),r.disposeIntermediateTensorInfo(Wt),r.disposeIntermediateTensorInfo(Jt),{real:ue,imag:se}}function GX(n,t,e){const s=new Float32Array(t*2);for(let r=0;r<t;r++){let o=0,a=0;for(let i=0;i<t;i++){const u=ZC(r*i,t,e),c=j1(n,i);o+=c.real*u.real-c.imag*u.imag,a+=c.real*u.imag+c.imag*u.real}e&&(o/=t,a/=t),YC(s,o,a,r)}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HX(n){const{inputs:t,backend:e}=n,{input:s}=t,r=j(s.shape),o=s.shape[s.shape.length-1],a=r/o,i=Be({inputs:{x:s},backend:e,attrs:{shape:[a,o]}}),u=yE(i,!1,e),c=Be({inputs:{x:u},backend:e,attrs:{shape:s.shape}});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(u),c}const jX={kernelName:Hw,backendName:"cpu",kernelFunc:HX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K0(n){const{backend:t,attrs:e}=n,{shape:s,value:r,dtype:o}=e,a=o||Ki(r),i=tn(a,j(s));return KX(i,r,a),t.makeTensorInfo(s,a,i)}const qX={kernelName:Ag,backendName:"cpu",kernelFunc:K0};function KX(n,t,e){n.fill(t)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XX={kernelName:ap,backendName:"cpu",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{image:s}=n,r=e,o=jn(s.dtype,j(s.shape)),[a,i,u,c]=s.shape,l=r.data.get(s.dataId).values;for(let h=0;h<a;h++){const p=h*u*i*c;for(let f=0;f<i;f++){const m=f*(u*c);for(let g=0;g<u;g++){const y=g*c;for(let b=0;b<c;b++){const x=Math.round(u-g-1),w=p+m+y+b;let v=l[w];if(x>=0&&x<u){const k=x*c,S=p+m+k+b;v=l[S]}o[w]=v}}}}return{dataId:r.write(o,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YX(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:o,bias:a,preluActivationWeights:i}=t,{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=s;let m=mE({inputs:{x:r,filter:o},backend:e,attrs:{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:h}});if(a){const g=m;if(l==="NCHW"&&a.shape.length===1&&a.shape[0]!==1){const y=Be({inputs:{x:a},backend:e,attrs:{shape:[a.shape[0],1,1]}});m=rl({inputs:{a:m,b:y},backend:e}),e.disposeIntermediateTensorInfo(y)}else m=rl({inputs:{a:m,b:a},backend:e});e.disposeIntermediateTensorInfo(g)}if(p){const g=m;if(l==="NCHW"&&p==="prelu"&&i.shape.length===1&&i.shape[0]!==1){const y=Be({inputs:{x:i},backend:e,attrs:{shape:[i.shape[0],1,1]}});m=Nm(e,m,p,y,f),e.disposeIntermediateTensorInfo(y)}else m=Nm(e,m,p,i,f);e.disposeIntermediateTensorInfo(g)}return m}const JX={kernelName:Qu,backendName:"cpu",kernelFunc:YX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZX(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:o,bias:a,preluActivationWeights:i}=t,{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=s;let m=gE({inputs:{x:r,filter:o},backend:e,attrs:{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:h}});if(a){const g=m;m=rl({inputs:{a:m,b:a},backend:e}),e.disposeIntermediateTensorInfo(g)}if(p){const g=m;m=Nm(e,m,p,i,f),e.disposeIntermediateTensorInfo(g)}return m}const QX={kernelName:jg,backendName:"cpu",kernelFunc:ZX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t8(n){const{inputs:t,backend:e}=n,{params:s,indices:r}=t,o=j(s.shape),a=r.shape,i=a[a.length-1],[u,c,l,d]=ny(s,r);if(c===0)return e.makeTensorInfo(u,s.dtype,[]);const h=e.data.get(r.dataId).values,p=e.bufferSync(s),f=RT(h,p,s.dtype,c,i,l,d,s.shape,o);return e.makeTensorInfo(u,s.dtype,f.values)}const e8={kernelName:Dg,backendName:"cpu",kernelFunc:t8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n8(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,indices:o}=t,{axis:a,batchDims:i}=s;Tt([r,o],"gatherV2");const u=Gt(a,r.shape)[0],c=e.data.get(o.dataId).values,l=r.shape[u];for(let w=0;w<c.length;++w){const v=c[w];T(v<=l-1&&v>=0,()=>`GatherV2: the index value ${v} is not in [0, ${l-1}]`)}let d=i;i==null&&(d=0);const h=j(o.shape),p=my(r,o,u,d),f=Be({inputs:{x:r},backend:e,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),m=Be({inputs:{x:o},backend:e,attrs:{shape:[p.batchSize,h/p.batchSize]}}),g=[p.batchSize,p.outerSize,h/p.batchSize,p.sliceSize],y=e.bufferSync(m),b=e.bufferSync(f),x=FT(b,y,g);return e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(m),e.makeTensorInfo(p.outputShape,x.dtype,x.values)}const s8={kernelName:ip,backendName:"cpu",kernelFunc:n8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r8(n){const{inputs:t,backend:e}=n,{input:s}=t,r=j(s.shape),o=s.shape[s.shape.length-1],a=r/o,i=Be({inputs:{x:s},backend:e,attrs:{shape:[a,o]}}),u=yE(i,!0,e),c=Be({inputs:{x:u},backend:e,attrs:{shape:s.shape}});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(u),c}const o8={kernelName:jw,backendName:"cpu",kernelFunc:r8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a8=Ce(ql,n=>Number.isFinite(n)?1:0,"bool"),i8={kernelName:ql,backendName:"cpu",kernelFunc:a8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u8=Ce(Kl,n=>Math.abs(n)===1/0?1:0,"bool"),l8={kernelName:Kl,backendName:"cpu",kernelFunc:u8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c8=Ce(Xl,n=>Number.isNaN(n)?1:0,"bool"),d8={kernelName:Xl,backendName:"cpu",kernelFunc:c8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h8(n){const{backend:t,attrs:e}=n,{start:s,stop:r,num:o}=e,a=BT(s,r,o);return t.makeTensorInfo([a.length],"float32",a)}const p8={kernelName:Rg,backendName:"cpu",kernelFunc:h8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const f8=Ce(Zl,n=>Math.log1p(n)),m8={kernelName:Zl,backendName:"cpu",kernelFunc:f8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g8=un((n,t)=>n&&t),y8=Sn(dp,g8,null,"bool"),b8={kernelName:dp,backendName:"cpu",kernelFunc:y8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x8=Ce(hp,n=>n?0:1,"bool"),w8={kernelName:hp,backendName:"cpu",kernelFunc:x8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v8=un((n,t)=>n||t),I8=Sn(pp,v8,null,"bool"),k8={kernelName:pp,backendName:"cpu",kernelFunc:I8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $8(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{depthRadius:o,bias:a,alpha:i,beta:u}=s;Tt(r,"LRN");const c=r.shape[3],l=c-1,d=e.data.get(r.dataId).values,h=j(r.shape),p=new Float32Array(h);function f(m){const g=m%c;let y=m-g+Math.max(0,g-o);const b=m-g+Math.min(g+o,l);let x=0;for(;y<=b;y++){const w=d[y];x+=w*w}return x}for(let m=0;m<h;m++){const g=f(m),y=d[m]*Math.pow(a+i*g,-u);p[m]=y}return e.makeTensorInfo(r.shape,r.dtype,p)}const S8={kernelName:Ql,backendName:"cpu",kernelFunc:$8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N8(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,y:o,dy:a}=t,{depthRadius:i,bias:u,alpha:c,beta:l}=s;Tt(a,"LRNGrad");const d=j(a.shape),h=a.shape[3],p=e.data.get(a.dataId).values,f=e.data.get(r.dataId).values,m=e.data.get(o.dataId).values,g=new Float32Array(d),y=d;for(let b=0;b<y;b++){const x=b%h,w=b-x+Math.max(0,x-i),v=b-x+Math.min(h,x+i+1);let k=0;for(let S=w;S<v;S++)k+=Math.pow(f[S],2);k=c*k+u;for(let S=w;S<v;S++){let _=-2*c*l*f[S]*m[b]/k;b===S&&(_+=Math.pow(k,-l)),_*=p[b],g[S]+=_}}return e.makeTensorInfo(a.shape,r.dtype,g)}const C8={kernelName:fp,backendName:"cpu",kernelFunc:N8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bE(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{reductionIndices:o,keepDims:a}=s,i=e;let u=r.shape;const c=u.length,l=Gt(o,u);let d=l;const h=Ve(d,c);let p=i.data.get(r.dataId).values;if(h!=null){const w=new Array(c);for(let v=0;v<w.length;v++)w[v]=u[h[v]];p=M0(p,u,r.dtype,h,w),d=Fe(d.length,c),u=w}Tt(r,"max"),ze("max",d,c);const[f,m]=Ge(u,d),g=j(m),y=VT(p,g,f,r.dtype),b=i.write(y,f,r.dtype);let x=f;return a&&(x=Re(f,l)),{dataId:b,shape:x,dtype:r.dtype}}const _8={kernelName:tc,backendName:"cpu",kernelFunc:bE};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T8(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t;Tt(r,"maxPool");const{filterSize:o,strides:a,pad:i,dimRoundingMode:u}=s,c=1;T(Mn(a,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`);const l=Xn(r.shape,o,a,c,i,u);let d;if(l.filterWidth===1&&l.filterHeight===1&&we(l.inShape,l.outShape))d=bo({inputs:{x:r},backend:e});else{const h=e.data.get(r.dataId).values,p=St(r.shape),f=j0(h,r.shape,r.dtype,p,l,"max");d=e.makeTensorInfo(l.outShape,r.dtype,f.values)}return d}const E8={kernelName:nc,backendName:"cpu",kernelFunc:T8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A8(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{filterSize:o,strides:a,pad:i,dimRoundingMode:u,dataFormat:c}=s;Tt(r,"maxPool3d");const l=Js(r.shape,o,a,1,i,u,c),d=e.data.get(r.dataId).values,h=fE(d,r.shape,r.dtype,St(r.shape),l,"max");return e.makeTensorInfo(h.shape,"float32",h.values)}const D8={kernelName:mp,backendName:"cpu",kernelFunc:A8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R8(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,input:o}=t,{filterSize:a,strides:i,pad:u,dimRoundingMode:c}=s;Tt([r,o],"maxPool3DGrad");const l=Js(o.shape,a,i,1,u,c),d=e.bufferSync(o),h=v5(d,l),p=l.strideDepth,f=l.strideHeight,m=l.strideWidth,g=l.dilationDepth,y=l.dilationHeight,b=l.dilationWidth,x=l.effectiveFilterDepth,w=l.effectiveFilterHeight,v=l.effectiveFilterWidth,k=x-1-l.padInfo.front,S=v-1-l.padInfo.left,_=w-1-l.padInfo.top,C=Zt(o.shape,"float32"),N=e.bufferSync(r);for(let $=0;$<l.batchSize;++$)for(let A=0;A<l.inChannels;++A)for(let D=0;D<l.inDepth;++D)for(let R=0;R<l.inHeight;++R)for(let F=0;F<l.inWidth;++F){const z=D-k,H=R-_,P=F-S;let U=0;for(let Z=0;Z<x;Z+=g){const tt=(z+Z)/p;if(!(tt<0||tt>=l.outDepth||Math.floor(tt)!==tt))for(let at=0;at<w;at+=y){const ot=(H+at)/f;if(!(ot<0||ot>=l.outHeight||Math.floor(ot)!==ot))for(let lt=0;lt<v;lt+=b){const ct=(P+lt)/m;if(ct<0||ct>=l.outWidth||Math.floor(ct)!==ct)continue;const bt=x*w*v-1-h.get($,tt,ot,ct,A),Nt=Z*w*v+at*v+lt,xt=bt===Nt?1:0;if(xt===0)continue;const Ct=N.get($,tt,ot,ct,A);U+=Ct*xt}}}C.set(U,$,D,R,F,A)}return e.makeTensorInfo(C.shape,C.dtype,C.values)}const F8={kernelName:Og,backendName:"cpu",kernelFunc:R8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O8(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,input:o,output:a}=t,i=o;Tt([o,a],"maxPoolGrad");const{filterSize:u,strides:c,pad:l,dimRoundingMode:d}=s,h=Xn(i.shape,u,c,1,l,d),p=e.data.get(i.dataId).values,f=Zt(h.outShape,i.dtype,pE(p,i.shape,i.dtype,h).values),m=h.strideHeight,g=h.strideWidth,y=h.dilationHeight,b=h.dilationWidth,x=h.effectiveFilterHeight,w=h.effectiveFilterWidth,v=w-1-h.padInfo.left,k=x-1-h.padInfo.top,S=Zt(i.shape,"float32"),_=e.data.get(r.dataId).values,C=Zt(r.shape,"float32",_);for(let N=0;N<h.batchSize;++N)for(let $=0;$<h.inChannels;++$)for(let A=0;A<h.inHeight;++A)for(let D=0;D<h.inWidth;++D){const R=A-k,F=D-v;let z=0;for(let H=0;H<x;H+=y){const P=(R+H)/m;if(!(P<0||P>=h.outHeight||Math.floor(P)!==P))for(let U=0;U<w;U+=b){const Z=(F+U)/g;if(Z<0||Z>=h.outWidth||Math.floor(Z)!==Z)continue;const tt=x*w-1-f.get(N,P,Z,$),at=H*w+U,ot=tt===at?1:0;if(ot===0)continue;const lt=C.get(N,P,Z,$);z+=lt*ot}}S.set(z,N,A,D,$)}return e.makeTensorInfo(S.shape,S.dtype,S.values)}const P8={kernelName:Fg,backendName:"cpu",kernelFunc:O8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L8(n,t,e,s,r){const o=St(t),a=j0(n,t,e,o,r,"max"),i=pE(n,t,e,r,!0,s);return[a.values,i.values]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M8={kernelName:Kw,backendName:"cpu",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{x:s}=n,{filterSize:r,strides:o,pad:a,includeBatchInIndex:i}=t,u=e;Tt(s,"MaxPoolWithArgmax");const c=u.data.get(s.dataId).values,l=Xn(s.shape,r,o,[1,1],a),[d,h]=L8(c,s.shape,s.dtype,i,l),p=u.write(d,l.outShape,s.dtype),f=u.write(h,l.outShape,s.dtype);return[{dataId:p,shape:l.outShape,dtype:s.dtype},{dataId:f,shape:l.outShape,dtype:"int32"}]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B8(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,keepDims:a}=s,i=Gt(o,r.shape),c=Ge(r.shape,i)[1],l=j(c),d=[],h=e.makeTensorInfo([],"float32",new Float32Array([l]));d.push(h);const p=Oa({inputs:{x:r},backend:e,attrs:{dtype:"float32"}});d.push(p);const f=q0({inputs:{a:p,b:h},backend:e});d.push(f);const m=Kp({inputs:{x:f},backend:e,attrs:{axis:o,keepDims:a}});return d.forEach(g=>e.disposeIntermediateTensorInfo(g)),m}const z8={kernelName:sc,backendName:"cpu",kernelFunc:B8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V8(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,keepDims:a}=s;Tt(r,"min");const i=Gt(o,r.shape);let u=i;const c=Ve(u,r.shape.length);let l=r;c!=null&&(l=$s({inputs:{x:r},backend:e,attrs:{perm:c}}),u=Fe(u.length,r.shape.length)),ze("min",u,l.shape.length);const[d,h]=Ge(l.shape,u),p=j(h),f=qn(j(d),l.dtype),m=e.data.get(l.dataId).values;for(let y=0;y<f.length;++y){const b=y*p;let x=m[b];for(let w=0;w<p;++w){const v=m[b+w];(Number.isNaN(v)||v<x)&&(x=v)}f[y]=x}c!=null&&e.disposeIntermediateTensorInfo(l);const g=e.makeTensorInfo(d,l.dtype,f);if(a){const y=Re(d,i),b=Be({inputs:{x:g},backend:e,attrs:{shape:y}});return e.disposeIntermediateTensorInfo(g),b}return g}const W8={kernelName:rc,backendName:"cpu",kernelFunc:V8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U8(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{paddings:o,mode:a}=s;Tt(r,"mirrorPad");const i=o.map((x,w)=>x[0]+r.shape[w]+x[1]),u=o.map(x=>x[0]),c=o.map((x,w)=>x[0]+r.shape[w]),l=a==="reflect"?0:1,d=e.data.get(r.dataId).values,h=r.shape.length,p=St(r.shape),f=j(i),m=i.length,g=St(i),y=jn(r.dtype,f);for(let x=0;x<f;x++){let w=yl(x,m,g);for(let k=0;k<m;k++)w[k]<u[k]?w[k]=u[k]*2-w[k]-l:w[k]>=c[k]&&(w[k]=(c[k]-1)*2-w[k]+l);w=w.map((k,S)=>k-u[S]);const v=ro(w,h,p);y[x]=d[v]}return{dataId:e.write(y,i,r.dtype),shape:i,dtype:r.dtype}}const G8={kernelName:ac,backendName:"cpu",kernelFunc:U8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H8=un((n,t)=>{const e=n%t;return n<0&&t<0||n>=0&&t>=0?e:(e+t)%t}),j8=Sn(ic,H8),q8={kernelName:ic,backendName:"cpu",kernelFunc:j8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xE(n){const{inputs:t,backend:e,attrs:s}=n,{logits:r}=t,{dim:o}=s,a=r.shape.length;let i=o;if(i===-1&&(i=a-1),i!==a-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${a} and dim was ${i}`);const u=Gt([i],r.shape),c=bE({inputs:{x:r},backend:e,attrs:{reductionIndices:u,keepDims:!1}}),l=Re(c.shape,u),d=Be({inputs:{x:c},backend:e,attrs:{shape:l}}),h=G0({inputs:{a:r,b:d},backend:e}),p=TT({inputs:{x:h},backend:e}),f=Kp({inputs:{x:p},backend:e,attrs:{axis:u,keepDims:!1}}),m=Be({inputs:{x:f},backend:e,attrs:{shape:l}}),g=q0({inputs:{a:p,b:m},backend:e});return e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(m),g}const K8={kernelName:Ec,backendName:"cpu",kernelFunc:xE};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X8(n){const{inputs:t,backend:e,attrs:s}=n,{logits:r}=t,{numSamples:o,seed:a,normalized:i}=s;Tt(r,"multinomial");const u=i?r:xE({inputs:{logits:r},backend:e,attrs:{dim:-1}}),c=u.shape[0],l=u.shape[1],d=e.data.get(u.dataId).values,h=[c,o],p=qn(j(h),"int32");for(let f=0;f<c;++f){const m=f*l,g=new Float32Array(l-1);g[0]=d[m];for(let x=1;x<g.length;++x)g[x]=g[x-1]+d[m+x];const y=Mc.alea(a.toString()),b=f*o;for(let x=0;x<o;++x){const w=y();p[b+x]=g.length;for(let v=0;v<g.length;v++)if(w<g[v]){p[b+x]=v;break}}}return i||e.disposeIntermediateTensorInfo(u),e.makeTensorInfo(h,"int32",p)}const Y8={kernelName:Pg,backendName:"cpu",kernelFunc:X8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const J8=R1;function Z8(n){const{inputs:t,backend:e,attrs:s}=n,{boxes:r,scores:o}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u}=s;Tt(r,"NonMaxSuppression");const c=e.data.get(r.dataId).values,l=e.data.get(o.dataId).values,{selectedIndices:d}=J8(c,l,a,i,u);return e.makeTensorInfo([d.length],"int32",new Int32Array(d))}const Q8={kernelName:bp,backendName:"cpu",kernelFunc:Z8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tY=F1;function eY(n){const{inputs:t,backend:e,attrs:s}=n,{boxes:r,scores:o}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u,padToMaxOutputSize:c}=s;Tt(r,"NonMaxSuppressionPadded");const l=e.data.get(r.dataId).values,d=e.data.get(o.dataId).values,{selectedIndices:h,validOutputs:p}=tY(l,d,a,i,u,c);return[e.makeTensorInfo([h.length],"int32",new Int32Array(h)),e.makeTensorInfo([],"int32",new Int32Array([p]))]}const nY={kernelName:xp,backendName:"cpu",kernelFunc:eY};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sY=O1;function rY(n){const{inputs:t,backend:e,attrs:s}=n,{boxes:r,scores:o}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u,softNmsSigma:c}=s;Tt(r,"NonMaxSuppressionWithScore");const l=e.data.get(r.dataId).values,d=e.data.get(o.dataId).values,h=a,p=i,f=u,m=c,{selectedIndices:g,selectedScores:y}=sY(l,d,h,p,f,m);return[e.makeTensorInfo([g.length],"int32",new Int32Array(g)),e.makeTensorInfo([y.length],"float32",new Float32Array(y))]}const oY={kernelName:wp,backendName:"cpu",kernelFunc:rY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aY(n){const{inputs:t,backend:e,attrs:s}=n,{indices:r}=t,{dtype:o,depth:a,onValue:i,offValue:u}=s;Tt(r,"oneHot");const c=j(r.shape),l=new Float32Array(c*a);l.fill(u);const d=e.data.get(r.dataId).values;for(let h=0;h<c;++h)d[h]>=0&&d[h]<a&&(l[h*a+d[h]]=i);return e.makeTensorInfo([...r.shape,a],o,l)}const iY={kernelName:lc,backendName:"cpu",kernelFunc:aY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _m(n){const{inputs:t,backend:e}=n,{x:s}=t;if(s.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(s.dtype==="complex64"){const r=Fi({inputs:{input:s},backend:e}),o=_m({inputs:{x:r},backend:e}),a=ol({inputs:{input:s},backend:e}),i=_m({inputs:{x:a},backend:e}),u=As({inputs:{real:o,imag:i},backend:e});return e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(i),u}else return K0({backend:e,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}const uY={kernelName:Fp,backendName:"cpu",kernelFunc:_m};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wE(n){const{inputs:t,backend:e}=n,{x:s}=t;if(s.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(s.dtype==="complex64"){const r=Fi({inputs:{input:s},backend:e}),o=wE({inputs:{x:r},backend:e}),a=ol({inputs:{input:s},backend:e}),i=_m({inputs:{x:a},backend:e}),u=As({inputs:{real:o,imag:i},backend:e});return e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(i),u}else return K0({backend:e,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}const lY={kernelName:vp,backendName:"cpu",kernelFunc:wE};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vE(n){const{inputs:t,backend:e,attrs:s}=n,{axis:r}=s;if(t.length===1)return Cm({inputs:{input:t[0]},backend:e,attrs:{dim:r}});const o=t[0].shape,a=t[0].dtype;t.forEach(l=>{Sg(o,l.shape,"All tensors passed to stack must have matching shapes"),T(a===l.dtype,()=>"All tensors passed to stack must have matching dtypes")});const i=[],u=t.map(l=>{const d=Cm({inputs:{input:l},backend:e,attrs:{dim:r}});return i.push(d),d}),c=al({inputs:u,backend:e,attrs:{axis:r}});return i.forEach(l=>e.disposeIntermediateTensorInfo(l)),c}const cY={kernelName:Ip,backendName:"cpu",kernelFunc:vE};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dY(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{paddings:o,constantValue:a}=s;Tt(r,"pad");const i=o.map((b,x)=>b[0]+r.shape[x]+b[1]),u=o.map(b=>b[0]),c=e.data.get(r.dataId).values,l=j(r.shape),d=r.shape.length,h=St(r.shape),p=j(i),f=i.length,m=St(i),g=jn(r.dtype,p);a!==0&&g.fill(a);for(let b=0;b<l;b++){const w=yl(b,d,h).map((k,S)=>k+u[S]),v=ro(w,f,m);g[v]=c[b]}return{dataId:e.write(g,i,r.dtype),shape:i,dtype:r.dtype}}const IE={kernelName:cc,backendName:"cpu",kernelFunc:dY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hY=un((n,t)=>Math.pow(n,t)),pY=Sn(dc,hY),fY={kernelName:dc,backendName:"cpu",kernelFunc:pY};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mY(n){const{inputs:t,backend:e,attrs:s}=n,{paramsNestedSplits:r,paramsDenseValues:o,indices:a}=t,{outputRaggedRank:i}=s,u=r.map(y=>e.data.get(y.dataId).values),c=r.map(y=>y.shape),l=e.data.get(o.dataId).values,d=e.data.get(a.dataId).values,[h,p,f]=qT(u,c,l,o.shape,o.dtype,d,a.shape),m=h.map(y=>e.makeTensorInfo([y.length],"int32",y)),g=e.makeTensorInfo(f,o.dtype,p);return m.concat([g])}const gY={kernelName:$N,backendName:"cpu",kernelFunc:mY};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yY(n){const{inputs:t,backend:e}=n,{starts:s,limits:r,deltas:o}=t,a=e.data.get(s.dataId).values,i=e.data.get(r.dataId).values,u=e.data.get(o.dataId).values,[c,l]=KT(a,s.shape,s.dtype,i,r.shape,u,o.shape),d=e.makeTensorInfo([c.length],"int32",c),h=e.makeTensorInfo([l.length],s.dtype,l);return[d,h]}const bY={kernelName:SN,backendName:"cpu",kernelFunc:yY};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xY(n){const{inputs:t,backend:e,attrs:s}=n,{shape:r,values:o,defaultValue:a,rowPartitionTensors:i}=t,{rowPartitionTypes:u}=s,c=e.data.get(r.dataId).values,l=e.data.get(o.dataId).values,d=e.data.get(a.dataId).values,h=i.map(g=>e.data.get(g.dataId).values),p=i.map(g=>g.shape),[f,m]=XT(c,r.shape,l,o.shape,o.dtype,d,a.shape,h,p,u);return e.makeTensorInfo(f,o.dtype,m)}const wY={kernelName:NN,backendName:"cpu",kernelFunc:xY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vY(n){const{backend:t,attrs:e}=n,{start:s,stop:r,dtype:o,step:a}=e,i=B0(s,r,a,o);return t.makeTensorInfo([i.length],o,i)}const IY={kernelName:Lg,backendName:"cpu",kernelFunc:vY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kY=Ce(fc,n=>1/n),$Y={kernelName:fc,backendName:"cpu",kernelFunc:kY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SY(n){const{inputs:t,backend:e,attrs:s}=n,{images:r}=t,{alignCorners:o,halfPixelCenters:a,size:i}=s;Tt(r,"resizeBilinear");const u=St(r.shape),[c,l]=i,[d,h,p,f]=r.shape,m=e.data.get(r.dataId).values,g=new Float32Array(j([d,c,l,f])),y=[o&&c>1?h-1:h,o&&l>1?p-1:p],b=[o&&c>1?c-1:c,o&&l>1?l-1:l];let x=0;const w=y[0]/b[0],v=y[1]/b[1];for(let k=0;k<d;k++)for(let S=0;S<c;S++){let _;a?_=w*(S+.5)-.5:_=w*S;const C=Math.max(0,Math.floor(_)),N=_-C,$=Math.min(h-1,Math.ceil(_)),A=k*u[0]+C*u[1],D=k*u[0]+$*u[1];for(let R=0;R<l;R++){let F;a?F=v*(R+.5)-.5:F=v*R;const z=Math.max(0,Math.floor(F)),H=F-z,P=Math.min(p-1,Math.ceil(F)),U=A+z*u[2],Z=D+z*u[2],tt=A+P*u[2],at=D+P*u[2];for(let ot=0;ot<f;ot++){const lt=m[U+ot],ct=m[Z+ot],bt=m[tt+ot],Nt=m[at+ot],xt=lt+(bt-lt)*H,Ct=ct+(Nt-ct)*H,zt=xt+(Ct-xt)*N;g[x++]=zt}}}return e.makeTensorInfo([d,c,l,f],"float32",g)}const NY={kernelName:yc,backendName:"cpu",kernelFunc:SY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CY(n){const{inputs:t,backend:e,attrs:s}=n,{images:r,dy:o}=t,{alignCorners:a}=s;Tt([o,r],"resizeBilinearGrad");const i=St(r.shape),[u,c,l,d]=r.shape,[,h,p]=o.shape,f=new Float32Array(u*c*l*d),m=[a&&h>1?c-1:c,a&&p>1?l-1:l],g=[a&&h>1?h-1:h,a&&p>1?p-1:p],y=m[0]/g[0],b=m[1]/g[1],x=e.data.get(o.dataId).values;let w=0;for(let v=0;v<u;v++){const k=v*i[0];for(let S=0;S<h;S++){const _=S*y,C=Math.floor(_),N=Math.min(Math.ceil(_),c-1),$=k+C*i[1],A=k+N*i[1],D=_-C,R=1-D;for(let F=0;F<p;F++){const z=F*b,H=Math.floor(z),P=Math.min(Math.ceil(z),l-1),U=z-H,Z=1-U,tt=$+H*i[2],at=$+P*i[2],ot=A+H*i[2],lt=A+P*i[2],ct=R*Z,bt=R*U,Nt=D*Z,xt=D*U;for(let Ct=0;Ct<d;Ct++){const zt=x[w++];f[tt+Ct]+=zt*ct,f[at+Ct]+=zt*bt,f[ot+Ct]+=zt*Nt,f[lt+Ct]+=zt*xt}}}}return e.makeTensorInfo([u,l,c,d],"float32",f)}const _Y={kernelName:Sp,backendName:"cpu",kernelFunc:CY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TY(n){const{inputs:t,backend:e,attrs:s}=n,{images:r}=t,{alignCorners:o,halfPixelCenters:a,size:i}=s;Tt(r,"resizeNearestNeighbor");const u=St(r.shape),[c,l]=i,[d,h,p,f]=r.shape,m=e.data.get(r.dataId).values,g=new Float32Array(d*c*l*f),y=[o&&c>1?h-1:h,o&&l>1?p-1:p],b=[o&&c>1?c-1:c,o&&l>1?l-1:l],x=y[0]/b[0],w=y[1]/b[1];let v=0;for(let k=0;k<d;k++){const S=k*u[0];for(let _=0;_<c;_++){const C=a?x*(_+.5):x*_;let N=Math.min(h-1,o?Math.round(C):Math.floor(C));a&&(N=Math.max(0,N));const $=S+N*u[1];for(let A=0;A<l;A++){const D=a?w*(A+.5):w*A;let R=Math.min(p-1,o?Math.round(D):Math.floor(D));a&&(R=Math.max(0,R));const F=$+R*u[2];for(let z=0;z<f;z++){const H=m[F+z];g[v++]=H}}}}return e.makeTensorInfo([d,c,l,f],r.dtype,g)}const EY={kernelName:gc,backendName:"cpu",kernelFunc:TY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AY(n){const{inputs:t,backend:e,attrs:s}=n,{images:r,dy:o}=t,{alignCorners:a}=s;Tt([o,r],"resizeNearestNeighborGrad");const i=St(r.shape),u=St(o.shape),[c,l,d,h]=r.shape,[,p,f]=o.shape,m=new Float32Array(c*l*d*h),g=e.data.get(o.dataId).values,y=[a&&p>1?l-1:l,a&&f>1?d-1:d],b=[a&&p>1?p-1:p,a&&f>1?f-1:f],x=y[0]/b[0],w=y[1]/b[1],v=1/x,k=1/w,S=Math.ceil(v)*2+2,_=Math.ceil(k)*2+2;for(let C=0;C<c;C++){const N=C*i[0];for(let $=0;$<l;$++){const A=N+$*i[1],D=Math.floor($*v),R=Math.floor(D-S/2);for(let F=0;F<d;F++){const z=A+F*i[2],H=Math.floor(F*k),P=Math.floor(H-_/2);for(let U=0;U<h;U++){let Z=0;for(let tt=0;tt<S;tt++){const at=tt+R;if(at<0||at>=p)continue;const ot=N+at*u[1],lt=at*x,ct=Math.min(l-1,a?Math.round(lt):Math.floor(lt));if($===ct)for(let bt=0;bt<_;bt++){const Nt=bt+P;if(Nt<0||Nt>=f)continue;const xt=ot+Nt*u[2],Ct=Nt*w,zt=Math.min(d-1,a?Math.round(Ct):Math.floor(Ct));F===zt&&(Z+=g[xt+U])}}m[z+U]=Z}}}}return e.makeTensorInfo(r.shape,r.dtype,m)}const DY={kernelName:$p,backendName:"cpu",kernelFunc:AY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RY(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{dims:o}=s;Tt(r,"reverse");const a=r.shape.length,i=Gt(o,r.shape);if(a===0)return bo({inputs:{x:r},backend:e});const u=new Pn(r.shape,r.dtype),c=e.bufferSync(r);for(let l=0;l<u.size;l++){const d=u.indexToLoc(l),h=d.slice();i.forEach(p=>h[p]=r.shape[p]-1-h[p]),u.set(c.get(...h),...d)}return e.makeTensorInfo(u.shape,u.dtype,u.values)}const FY={kernelName:xc,backendName:"cpu",kernelFunc:RY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OY={kernelName:Op,backendName:"cpu",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{image:s}=n,{radians:r,fillValue:o,center:a}=t,i=e,u=jn(s.dtype,j(s.shape)),[c,l,d,h]=s.shape,[p,f]=ly(a,l,d),m=255,g=Math.sin(r),y=Math.cos(r),b=i.data.get(s.dataId).values;for(let w=0;w<c;w++){const v=w*d*l*h;for(let k=0;k<l;k++){const S=k*(d*h);for(let _=0;_<d;_++){const C=_*h;for(let N=0;N<h;N++){const $=[c,k,_,N],A=$[2],D=$[1];let R=(A-p)*y-(D-f)*g,F=(A-p)*g+(D-f)*y;R=Math.round(R+p),F=Math.round(F+f);let z=o;if(typeof o!="number"&&(N===3?z=m:z=o[N]),R>=0&&R<d&&F>=0&&F<l){const P=F*(d*h),U=R*h,Z=v+P+U+N;z=b[Z]}const H=v+S+C+N;u[H]=z}}}}return{dataId:i.write(u,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PY=Ce(wc,n=>{const t=Math.floor(n);return n-t<.5?Math.floor(n):n-t>.5?Math.ceil(n):t%2===0?t:t+1}),LY={kernelName:wc,backendName:"cpu",kernelFunc:PY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MY(n){const{inputs:t,backend:e,attrs:s}=n,{indices:r,updates:o}=t,{shape:a}=s,{sliceRank:i,numUpdates:u,sliceSize:c,strides:l,outputSize:d}=Io(o,r,a),h=!0,p=e.bufferSync(r),f=e.bufferSync(o),m=di(p,f,a,d,c,u,i,l,0,h);return e.makeTensorInfo(a,m.dtype,m.values)}const BY={kernelName:Mg,backendName:"cpu",kernelFunc:MY};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zY(n,t){let e=0,s=n.length,r=0;for(;e<s;)r=Math.floor((e+s)/2),n[r]<t?e=r+1:s=r;return s}function VY(n,t){let e=0,s=n.length,r=0;for(;e<s;)r=Math.floor((e+s)/2),n[r]<=t?e=r+1:s=r;return s}function WY(n,t,e,s,r,o){const a=tn("int32",e*r);for(let i=0;i<e;++i){const u=n.slice(i*s,(i+1)*s),c=i*r;for(let l=0;l<r;++l)a[c+l]=o==="left"?zY(u,t[l+c]):VY(u,t[l+c])}return a}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UY(n){const{inputs:t,backend:e,attrs:s}=n,{sortedSequence:r,values:o}=t,{side:a}=s,i=e.data.get(r.dataId).values,u=e.data.get(o.dataId).values,c=WY(i,u,r.shape[0],r.shape[1],o.shape[1],a);return e.makeTensorInfo(o.shape,"int32",c)}const GY={kernelName:zg,backendName:"cpu",kernelFunc:UY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HY(n){const{inputs:t,backend:e}=n,{condition:s,t:r,e:o}=t;Tt([s,r,o],"select");const a=s.shape.length,i=e.data.get(s.dataId).values,u=e.data.get(r.dataId).values,c=e.data.get(o.dataId).values,l=Os(r.dtype,o.dtype),d=qn(j(r.shape),l);let h=0;const p=a===0||a>1||r.shape.length===1?1:j(r.shape.slice(1));for(let f=0;f<i.length;f++)for(let m=0;m<p;m++)i[f]===1?d[h++]=u[f]:d[h++]=c[f];return e.makeTensorInfo(r.shape,l,d)}const jY={kernelName:Np,backendName:"cpu",kernelFunc:HY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qY=hy,KY=py,XY=Ce(Ic,n=>n>=0?KY*n:qY*(Math.exp(n)-1)),YY={kernelName:Ic,backendName:"cpu",kernelFunc:XY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JY=Ce(Sc,n=>n<0?-1:n>0?1:0),ZY={kernelName:Sc,backendName:"cpu",kernelFunc:JY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QY=Ce(kc,n=>Math.sin(n)),t7={kernelName:kc,backendName:"cpu",kernelFunc:QY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const e7=Ce($c,n=>Math.sinh(n)),n7={kernelName:$c,backendName:"cpu",kernelFunc:e7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const s7=11920928955078125e-23,Gk=Math.log(s7)+2,r7=Ce(Cc,n=>{const t=n>-Gk,e=n<Gk,s=Math.exp(n);let r;return e?r=s:t?r=n:r=Math.log(1+s),r}),o7={kernelName:Cc,backendName:"cpu",kernelFunc:r7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a7(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{blockShape:o,paddings:a}=s;Tt([r],"spaceToBatchND");const i=j(o),u=[[0,0]];u.push(...a);for(let k=1+o.length;k<r.shape.length;++k)u.push([0,0]);const c=IE.kernelFunc({inputs:{x:r},backend:e,attrs:{paddings:u,constantValue:0}}),l=nu(c.shape,o,i,!1),d=su(l.length,o.length,!1),h=ru(c.shape,o,i,!1),m=Be({inputs:{x:c},backend:e,attrs:{shape:l}}),b=$s({inputs:{x:m},backend:e,attrs:{perm:d}}),v=Be({inputs:{x:b},backend:e,attrs:{shape:h}});return e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(b),v}const i7={kernelName:_p,backendName:"cpu",kernelFunc:a7};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u7(n){const{inputs:t,backend:e}=n,{indices:s,values:r,denseShape:o,defaultValue:a}=t;if(o.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${o.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${r.shape}`);if(a.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${a.shape}`);const i=e.data.get(s.dataId).values,u=e.data.get(r.dataId).values,c=e.data.get(o.dataId).values,l=e.data.get(a.dataId).values[0],[d,h,p,f,m]=ZT(i,s.shape,s.dtype,u,r.dtype,c,l);return[e.makeTensorInfo(h,s.dtype,d),e.makeTensorInfo([h[0]],r.dtype,p),e.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),e.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}const l7={kernelName:Yw,backendName:"cpu",kernelFunc:u7};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c7(n){const{inputs:t,backend:e}=n,{inputIndices:s,inputShape:r,newShape:o}=t;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${r.shape}`);if(o.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${o.shape}`);const a=Array.from(e.data.get(r.dataId).values),i=e.data.get(s.dataId).values,u=Array.from(e.data.get(o.dataId).values),[c,l,d]=QT(i,s.shape,s.dtype,a,u);return[e.makeTensorInfo(l,s.dtype,c),e.makeTensorInfo([d.length],o.dtype,new Int32Array(d))]}const d7={kernelName:Vg,backendName:"cpu",kernelFunc:c7};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h7(n){const{inputs:t,backend:e}=n,{data:s,indices:r,segmentIds:o}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${r.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${o.shape}`);if(r.shape[0]!==o.shape[0])throw new Error("segmentIds and indices should have same size.");const a=e.data.get(s.dataId).values,i=e.data.get(r.dataId).values,u=e.data.get(o.dataId).values,[c,l]=z0(a,s.shape,s.dtype,i,u,!0);return e.makeTensorInfo(l,s.dtype,c)}const p7={kernelName:Jw,backendName:"cpu",kernelFunc:h7};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f7(n){const{inputs:t,backend:e}=n,{data:s,indices:r,segmentIds:o}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${r.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${o.shape}`);if(r.shape[0]!==o.shape[0])throw new Error("segmentIds and indices should have same size.");const a=e.data.get(s.dataId).values,i=e.data.get(r.dataId).values,u=e.data.get(o.dataId).values,[c,l]=z0(a,s.shape,s.dtype,i,u);return e.makeTensorInfo(l,s.dtype,c)}const m7={kernelName:Zw,backendName:"cpu",kernelFunc:f7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g7(n){const{inputs:t,backend:e,attrs:s}=n,{sparseIndices:r,sparseValues:o,defaultValue:a}=t,{outputShape:i}=s,{sliceRank:u,numUpdates:c,sliceSize:l,strides:d,outputSize:h}=Io(o,r,i),p=!1,f=e.bufferSync(r);let m;switch(o.dtype){case"bool":{const g=e.bufferSync(o),y=!!e.data.get(a.dataId).values[0];m=di(f,g,i,h,l,c,u,d,y,p);break}case"float32":{const g=e.bufferSync(o),y=e.data.get(a.dataId).values[0];m=di(f,g,i,h,l,c,u,d,y,p);break}case"int32":{const g=e.bufferSync(o),y=e.data.get(a.dataId).values[0];m=di(f,g,i,h,l,c,u,d,y,p);break}case"string":{const g=e.bufferSync(o),y=Ea(e.data.get(a.dataId).values[0]);m=di(f,g,i,h,l,c,u,d,y,p);break}default:throw new Error(`Unsupported type ${o.dtype}`)}return e.makeTensorInfo(i,m.dtype,m.values)}const y7={kernelName:Wg,backendName:"cpu",kernelFunc:g7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b7(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{numOrSizeSplits:o,axis:a}=s,i=Gt(a,r.shape)[0],u=fy(r,o,i),c=new Array(r.shape.length).fill(0),l=r.shape.slice();return u.map(d=>{const h=[...l];h[i]=d;const p=Oi({inputs:{x:r},backend:e,attrs:{begin:c,size:h}});return c[i]+=d,p})}const x7={kernelName:Tp,backendName:"cpu",kernelFunc:b7};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w7={kernelName:Ug,backendName:"cpu",kernelFunc:({inputs:n,backend:t})=>{const{x:e}=n,s=t;Tt(e,"square");const r=s.data.get(e.dataId).values,o=new Float32Array(r.length);for(let i=0;i<r.length;++i){const u=r[i];o[i]=u*u}return{dataId:s.write(o,e.shape,e.dtype),shape:e.shape,dtype:e.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v7=Ce(Zi,(n,t)=>{const e=t;return isNaN(n)?NaN:n>0?1:e.alpha}),I7={kernelName:Zi,backendName:"cpu",kernelFunc:v7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k7(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{begin:o,end:a,strides:i,beginMask:u,endMask:c,ellipsisMask:l,newAxisMask:d,shrinkAxisMask:h}=s;Tt(r,"stridedSlice");const{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:w}=ay(r.shape,o,a,i,u,c,l,d,h);let v;if(m)v=Be({inputs:{x:r},backend:e,attrs:{shape:f}});else if(g||y){T(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);const k=sy(b,x,w),S=Oi({inputs:{x:r},backend:e,attrs:{begin:b,size:k}});v=Be({inputs:{x:S},backend:e,attrs:{shape:f}}),e.disposeIntermediateTensorInfo(S)}else{const k=e.bufferSync(r),S=nE(p,k,w,b);v=e.makeTensorInfo(f,S.dtype,S.values)}return v}const $7={kernelName:Ep,backendName:"cpu",kernelFunc:k7};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S7(n){const{inputs:t,backend:e,attrs:s}=n,{separator:r,nGramWidths:o,leftPad:a,rightPad:i,padWidth:u,preserveShortSequences:c}=s,{data:l,dataSplits:d}=t,h=e.data.get(l.dataId).values,p=e.data.get(d.dataId).values,[f,m]=V0(h,p,r,o,a,i,u,c);return[e.makeTensorInfo([f.length],"string",f),e.makeTensorInfo(d.shape,"int32",m)]}const N7={kernelName:t1,backendName:"cpu",kernelFunc:S7};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C7(n){const{inputs:t,backend:e,attrs:s}=n,{skipEmpty:r}=s,{input:o,delimiter:a}=t;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(o.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${o.shape}`);if(a.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);const i=e.data.get(o.dataId).values,u=e.data.get(a.dataId).values[0],[c,l,d]=W0(i,u,r),h=l.length;return[e.makeTensorInfo([h,2],"int32",c),e.makeTensorInfo([h],"string",l),e.makeTensorInfo([2],"int32",new Int32Array(d))]}const _7={kernelName:e1,backendName:"cpu",kernelFunc:C7};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T7(n){const{inputs:t,backend:e,attrs:s}=n,{numBuckets:r}=s,{input:o}=t;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const a=e.data.get(o.dataId).values,i=U0(a,r);return e.makeTensorInfo(o.shape,"int32",i)}const E7={kernelName:n1,backendName:"cpu",kernelFunc:T7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A7=Ce(Rc,n=>Math.tan(n)),D7={kernelName:Rc,backendName:"cpu",kernelFunc:A7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R7=Ce(Fc,n=>Math.tanh(n)),F7={kernelName:Fc,backendName:"cpu",kernelFunc:R7};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O7(n){const{inputs:t,backend:e}=n,{tensor:s,indices:r,updates:o}=t,{sliceRank:a,numUpdates:i,sliceSize:u,strides:c,outputSize:l}=Io(o,r,s.shape),d=!1,h=e.bufferSync(r),p=e.bufferSync(o),f=e.bufferSync(s),m=di(h,p,s.shape,l,u,i,a,c,f,d);return e.makeTensorInfo(s.shape,m.dtype,m.values)}const P7={kernelName:Bg,backendName:"cpu",kernelFunc:O7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L7(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{reps:o}=s;Tt(r,"tile");const a=rE(e.bufferSync(r),o);return e.makeTensorInfo(a.shape,a.dtype,a.values)}const M7={kernelName:Ji,backendName:"cpu",kernelFunc:L7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B7(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{k:o,sorted:a}=s;Tt(r,"topk");const i=e.data.get(r.dataId).values,[u,c]=aE(i,r.shape,r.dtype,o,a);return[e.makeTensorInfo(u.shape,u.dtype,u.values),e.makeTensorInfo(c.shape,c.dtype,c.values)]}const z7={kernelName:Ap,backendName:"cpu",kernelFunc:B7};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V7(n){const{inputs:t,attrs:e,backend:s}=n,{image:r,transforms:o}=t,{interpolation:a,fillMode:i,fillValue:u,outputShape:c}=e,[l,d,h,p]=r.shape,[f,m]=c??[d,h],g=[l,f,m,p],y=St(r.shape),b=y[0],x=y[1],w=y[2],v=St(g),k=v[0],S=v[1],_=v[2],C=jn(r.dtype,j(g));C.fill(u);const N=s.data.get(r.dataId).values,$=s.data.get(o.dataId).values;for(let D=0;D<l;++D){const R=o.shape[0]===1?$:$.subarray(D*8,D*8+8);for(let F=0;F<f;++F)for(let z=0;z<m;++z)for(let H=0;H<p;++H){let P;const U=R[6]*z+R[7]*F+1;if(U===0)continue;const Z=(R[0]*z+R[1]*F+R[2])/U,tt=(R[3]*z+R[4]*F+R[5])/U,at=Hk(Z,h,i),ot=Hk(tt,d,i);switch(a){case"nearest":P=q7(N,d,h,b,x,w,D,ot,at,H,u);break;case"bilinear":P=K7(N,d,h,b,x,w,D,ot,at,H,u);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${a}`)}const lt=D*k+F*S+z*_+H;C[lt]=P}return s.makeTensorInfo(g,r.dtype,C)}return{dataId:s.write(C,g,r.dtype),shape:r.shape,dtype:r.dtype}}const W7={kernelName:Dp,backendName:"cpu",kernelFunc:V7};function Hk(n,t,e){switch(e){case"reflect":return U7(n,t);case"wrap":return G7(n,t);case"nearest":return j7(n,t);case"constant":default:return H7(n)}}function U7(n,t){let e=n;if(e<0)if(t<=1)e=0;else{const s=2*t;e<s&&(e=s*Math.trunc(-e/s)+e),e=e<-t?e+s:-e-1}else if(e>t-1)if(t<=1)e=0;else{const s=2*t;e-=s*Math.trunc(e/s),e>=t&&(e=s-e-1)}return ki(0,e,t-1)}function G7(n,t){let e=n;if(e<0)if(t<=1)e=0;else{const s=t-1;e+=t*(Math.trunc(-e/s)+1)}else if(e>t-1)if(t<=1)e=0;else{const s=t-1;e-=t*Math.trunc(e/s)}return ki(0,e,t-1)}function H7(n,t){return n}function j7(n,t){return ki(0,n,t-1)}function yd(n,t,e,s,r,o,a,i,u,c,l){const d=a*s+i*r+u*o+c;return 0<=i&&i<t&&0<=u&&u<e?n[d]:l}function q7(n,t,e,s,r,o,a,i,u,c,l){const d=Math.round(i),h=Math.round(u);return yd(n,t,e,s,r,o,a,d,h,c,l)}function K7(n,t,e,s,r,o,a,i,u,c,l){const d=Math.floor(i),h=Math.floor(u),p=d+1,f=h+1,m=(f-u)*yd(n,t,e,s,r,o,a,d,h,c,l)+(u-h)*yd(n,t,e,s,r,o,a,d,f,c,l),g=(f-u)*yd(n,t,e,s,r,o,a,p,h,c,l)+(u-h)*yd(n,t,e,s,r,o,a,p,f,c,l);return(p-i)*m+(i-d)*g}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X7(n){const{inputs:t,attrs:e,backend:s}=n,{axis:r}=e,{x:o}=t;Tt(o,"unique");const a=s.data.get(o.dataId).values,{outputValues:i,outputShape:u,indices:c}=H0(a,r,o.shape,o.dtype);return[s.makeTensorInfo(u,o.dtype,i),s.makeTensorInfo([c.length],"int32",c)]}const Y7={kernelName:Gg,backendName:"cpu",kernelFunc:X7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J7(n){const{inputs:t,backend:e,attrs:s}=n,{value:r}=t;let{axis:o}=s;o<0&&(o+=r.shape.length);const a=r.shape.length,i=r.shape[o],u=new Array(a-1);let c=0;for(let p=0;p<a;p++)p!==o&&(u[c++]=r.shape[p]);const l=new Array(a).fill(0),d=r.shape.slice();d[o]=1;const h=new Array(i);for(let p=0;p<h.length;p++){l[o]=p;const f=Oi({inputs:{x:r},backend:e,attrs:{begin:l,size:d}});h[p]=Be({inputs:{x:f},backend:e,attrs:{shape:u}}),e.disposeIntermediateTensorInfo(f)}return h}const Z7={kernelName:Rp,backendName:"cpu",kernelFunc:J7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q7(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,segmentIds:o}=t,{numSegments:a}=s;Tt(r,"unsortedSegmentSum");const i=r.shape.length,u=o.shape.length,c=[],l=[],d=i-u;let h=o;for(let f=0;f<d;++f){const m=Cm({inputs:{input:h},backend:e,attrs:{dim:f+1}});h=m,l.push(m)}for(let f=0;f<a;++f){const m=Va(f,"int32"),g=e.makeTensorInfo([],"int32",m),y=CT({inputs:{a:g,b:h},backend:e}),b=Oa({inputs:{x:y},backend:e,attrs:{dtype:"float32"}}),x=Cy({inputs:{a:b,b:r},backend:e}),w=Kp({inputs:{x},backend:e,attrs:{axis:0,keepDims:!1}});c.push(w),l.push(g),l.push(y),l.push(b),l.push(x),l.push(w)}const p=vE({inputs:c,backend:e,attrs:{axis:0}});return l.forEach(f=>e.disposeIntermediateTensorInfo(f)),p}const t9={kernelName:Hg,backendName:"cpu",kernelFunc:Q7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const e9=[X6,TK,J6,Q6,OK,e5,s5,o5,i5,l5,d5,p5,m5,b5,w5,k5,S5,C5,T5,q6,A5,R5,O5,LK,L5,RK,BK,B5,EK,V5,U5,G5,j5,K5,Y5,Z5,tX,nX,rX,aX,uX,cX,hX,fX,mX,yX,xX,vX,IX,kX,$X,NX,TX,z6,AX,zK,BX,VK,zX,UK,jX,qX,XX,HK,qK,JX,QX,e8,s8,XK,JK,AK,o8,W5,i8,l8,d8,V6,QK,e6,p8,s6,m8,b8,w8,k8,S8,C8,_8,o6,E8,D8,F8,P8,M8,z8,W8,i6,G8,q8,Y8,l6,d6,Q8,nY,oY,p6,iY,lY,cY,IE,fY,U6,g6,gY,bY,wY,IY,DK,Ix,$Y,G6,H6,j6,NY,_Y,EY,DY,FY,OY,LY,$6,BY,GY,jY,YY,N6,ZY,t7,n7,C6,K8,o7,i7,l7,d7,p7,m7,y7,x7,E6,w7,D6,F6,I7,$7,N7,_7,E7,M6,CX,D7,F7,P7,M7,z7,W7,f6,Y7,Z7,t9,uY];for(const n of e9)s1(n);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const li={},vf={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function n9(n,t){li[n]=t}function zr(n,t){if(!(n in li)||t!=null){const s=r9(n,t);if(s!==null)li[n]=s;else return console.log("Could not get context for WebGL version",n),null}const e=li[n];return e==null||e.isContextLost()?(delete li[n],zr(n)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),li[n])}function s9(n){if(!et().getBool("IS_SAFARI")&&typeof OffscreenCanvas<"u"&&n===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function r9(n,t){if(n!==1&&n!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const e=t??s9(n);return e.addEventListener("webglcontextlost",s=>{s.preventDefault(),delete li[n]},!1),et().getBool("SOFTWARE_WEBGL_ENABLED")&&(vf.failIfMajorPerformanceCaveat=!1),n===1?e.getContext("webgl",vf)||e.getContext("experimental-webgl",vf):e.getContext("webgl2",vf)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var jd;(function(n){n[n.DENSE=0]="DENSE",n[n.SHARED_BATCH=1]="SHARED_BATCH"})(jd||(jd={}));var Hs;(function(n){n[n.RENDER=0]="RENDER",n[n.UPLOAD=1]="UPLOAD",n[n.PIXELS=2]="PIXELS",n[n.DOWNLOAD=3]="DOWNLOAD"})(Hs||(Hs={}));var Fn;(function(n){n[n.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",n[n.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",n[n.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",n[n.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",n[n.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(Fn||(Fn={}));function Xp(n,t){return[t,n]}function o9(n,t){return n*t}function If(n){const t=j(n),e=Math.ceil(t/4);return qb(e)}function Wc(n,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(n/2))]}function a9(n,t){const[e,s]=Wc(n,t);return e*s*4}function X0(n,t){const e=n;let s,r,o,a,i,u,c,l,d,h;return et().getNumber("WEBGL_VERSION")===2?(s=e.R32F,r=e.R16F,o=e.RGBA16F,a=e.RGBA32F,i=e.RED,c=4,l=1,d=e.HALF_FLOAT,h=e.FLOAT,u=e.RGBA8):(s=n.RGBA,r=n.RGBA,o=n.RGBA,a=e.RGBA,i=n.RGBA,c=4,l=4,d=t!=null?t.HALF_FLOAT_OES:null,h=n.FLOAT,u=n.RGBA),{internalFormatFloat:s,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:o,internalFormatPackedFloat:a,textureFormatFloat:i,downloadTextureFormat:u,downloadUnpackNumChannels:c,defaultNumChannels:l,textureTypeHalfFloat:d,textureTypeFloat:h}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wt(n,t){const e=t();return et().getBool("DEBUG")&&i9(n),e}function i9(n){const t=n.getError();if(t!==n.NO_ERROR)throw new Error("WebGL Error: "+d9(n,t))}const u9=596e-10,l9=65504;function c9(n){return!!(et().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||n===0||u9<Math.abs(n)&&Math.abs(n)<l9)}function d9(n,t){switch(t){case n.NO_ERROR:return"NO_ERROR";case n.INVALID_ENUM:return"INVALID_ENUM";case n.INVALID_VALUE:return"INVALID_VALUE";case n.INVALID_OPERATION:return"INVALID_OPERATION";case n.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case n.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case n.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function kf(n,t){return ta(n,()=>n.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function h9(n,t){const e=ta(n,()=>n.createShader(n.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(wt(n,()=>n.shaderSource(e,t)),wt(n,()=>n.compileShader(e)),n.getShaderParameter(e,n.COMPILE_STATUS)===!1)throw console.log(n.getShaderInfoLog(e)),new Error("Failed to compile vertex shader.");return e}function p9(n,t){const e=ta(n,()=>n.createShader(n.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(wt(n,()=>n.shaderSource(e,t)),wt(n,()=>n.compileShader(e)),et().get("ENGINE_COMPILE_ONLY"))return e;if(n.getShaderParameter(e,n.COMPILE_STATUS)===!1)throw kE(t,n.getShaderInfoLog(e)),new Error("Failed to compile fragment shader.");return e}const f9=/ERROR: [0-9]+:([0-9]+):/g;function kE(n,t){const e=f9.exec(t);if(e==null){console.log(`Couldn't parse line number in error: ${t}`),console.log(n);return}const s=+e[1],r=n.split(`
`),o=r.length.toString().length+2,a=r.map((d,h)=>Ru((h+1).toString(),o)+d);let i=0;for(let d=0;d<a.length;d++)i=Math.max(a[d].length,i);const u=a.slice(0,s-1),c=a.slice(s-1,s),l=a.slice(s);console.log(u.join(`
`)),console.log(t.split(`
`)[0]),console.log(`%c ${Ru(c[0],i)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(l.join(`
`))}function m9(n){return ta(n,()=>n.createProgram(),"Unable to create WebGLProgram.")}function g9(n,t){if(wt(n,()=>n.linkProgram(t)),!et().get("ENGINE_COMPILE_ONLY")&&n.getProgramParameter(t,n.LINK_STATUS)===!1)throw console.log(n.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function yb(n,t){if(wt(n,()=>n.validateProgram(t)),n.getProgramParameter(t,n.VALIDATE_STATUS)===!1)throw console.log(n.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function y9(n,t){const e=ta(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return wt(n,()=>n.bindBuffer(n.ARRAY_BUFFER,e)),wt(n,()=>n.bufferData(n.ARRAY_BUFFER,t,n.STATIC_DRAW)),e}function b9(n,t){const e=ta(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return wt(n,()=>n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,e)),wt(n,()=>n.bufferData(n.ELEMENT_ARRAY_BUFFER,t,n.STATIC_DRAW)),e}function x9(n){return ta(n,()=>n.createTexture(),"Unable to create WebGLTexture.")}function w9(n,t){const e=et().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(n<=0||t<=0){const s=`[${n}x${t}]`;throw new Error("Requested texture size "+s+" is invalid.")}if(n>e||t>e){const s=`[${n}x${t}]`,r=`[${e}x${e}]`;throw new Error("Requested texture size "+s+" greater than WebGL maximum on this browser / GPU "+r+".")}}function v9(n){return ta(n,()=>n.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function jk(n,t,e,s,r,o,a){const i=n.getAttribLocation(t,e);return i===-1?!1:(wt(n,()=>n.bindBuffer(n.ARRAY_BUFFER,s)),wt(n,()=>n.vertexAttribPointer(i,r,n.FLOAT,!1,o,a)),wt(n,()=>n.enableVertexAttribArray(i)),!0)}function I9(n,t,e){C9(n,e),wt(n,()=>n.activeTexture(n.TEXTURE0+e)),wt(n,()=>n.bindTexture(n.TEXTURE_2D,t))}function k9(n,t,e){return ta(n,()=>n.getUniformLocation(t,e),'uniform "'+e+'" not present in program.')}function $9(n,t,e){return n.getUniformLocation(t,e)}function S9(n,t,e,s){wt(n,()=>I9(n,t,s)),wt(n,()=>n.uniform1i(e,s))}function bb(n,t,e){wt(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,e)),wt(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,t,0))}function qk(n,t){wt(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,t)),wt(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,null,0))}function $f(n){const t=n.checkFramebufferStatus(n.FRAMEBUFFER);if(t!==n.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+N9(n,t))}function N9(n,t){switch(t){case n.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case n.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function ta(n,t,e){const s=wt(n,()=>t());if(s==null)throw new Error(e);return s}function C9(n,t){const e=n.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=t+n.TEXTURE0;if(s<n.TEXTURE0||s>e){const r=`[gl.TEXTURE0, gl.TEXTURE${e}]`;throw new Error(`textureUnit must be in ${r}.`)}}function il(n,t=2){return j(n.slice(0,n.length-t))}function ul(n){if(n.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[n.length>1?n[n.length-2]:1,n[n.length-1]]}function Sf(n){let t=[1,1,1];return n.length===0||n.length===1&&n[0]===1||(t=[il(n),...ul(n)]),t}function _9(n,t=!1){let e=et().getNumber("WEBGL_MAX_TEXTURE_SIZE"),s=et().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");s===1/0&&et().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(s=e/2),t&&(e=e*2,s=s*2,n=n.map((i,u)=>u>=n.length-2?Rw(n[u]):n[u]),n.length===1&&(n=[2,n[0]])),n.length!==2&&(n=za(n).newShape);let r=j(n),o=null;n.length<=1&&r<=e?o=[1,r]:n.length===2&&n[0]<=e&&n[1]<=e?o=n:n.length===3&&n[0]*n[1]<=e&&n[2]<=e?o=[n[0]*n[1],n[2]]:n.length===3&&n[0]<=e&&n[1]*n[2]<=e?o=[n[0],n[1]*n[2]]:n.length===4&&n[0]*n[1]*n[2]<=e&&n[3]<=e?o=[n[0]*n[1]*n[2],n[3]]:n.length===4&&n[0]<=e&&n[1]*n[2]*n[3]<=e&&(o=[n[0],n[1]*n[2]*n[3]]);const a=o!=null&&Math.max(...o)>s&&Math.min(...o)<=(t?2:1)&&Math.min(...o)>0;if(o==null||a)if(t){const i=il(n);let u=2,c=2;n.length&&([u,c]=ul(n)),r=i*(u/2)*(c/2),o=qb(r).map(l=>l*2)}else o=qb(r);return o}function Nf(n){return n%2===0}function Tm(n,t){if(n=n.slice(-2),t=t.slice(-2),we(n,t)||!n.length||!t.length||n[0]===0||n[1]===0||t[0]===0||t[1]===0)return!0;if(n.length!==t.length){const e=n[n.length-1],s=t[t.length-1];if(e===s||Nf(e)&&Nf(s)&&(n[0]===1||t[0]===1))return!0}return n[1]===t[1]&&Nf(n[0])&&Nf(t[0])}let xb,wb;function T9(n){if(xb==null){const t=zr(n);xb=t.getParameter(t.MAX_TEXTURE_SIZE)}return xb}function E9(n){if(wb==null){const t=zr(n);wb=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,wb)}function A9(n){if(n===0)return 0;let t;const e=zr(n);return dr(e,"EXT_disjoint_timer_query_webgl2")&&n===2?t=2:dr(e,"EXT_disjoint_timer_query")?t=1:t=0,t}function dr(n,t){return n.getExtension(t)!=null}function Kk(n){try{if(zr(n)!=null)return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function D9(n){if(n===0)return!1;const t=zr(n);if(n===1){if(!dr(t,"OES_texture_float"))return!1}else if(!dr(t,"EXT_color_buffer_float"))return!1;return $x(t)}function R9(n){if(n===0)return!1;const t=zr(n);if(n===1){if(!dr(t,"OES_texture_float")||!dr(t,"WEBGL_color_buffer_float"))return!1}else{if(dr(t,"EXT_color_buffer_float"))return $x(t);const s="EXT_color_buffer_half_float";if(dr(t,s)){const r=t.getExtension(s);return F9(t,r)}return!1}return $x(t)}function $x(n){const t=X0(n),e=n.createTexture();n.bindTexture(n.TEXTURE_2D,e),n.texImage2D(n.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const o=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,o),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,e,0);const a=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(e),n.deleteFramebuffer(o),a}function F9(n,t){const e=X0(n,t),s=n.createTexture();n.bindTexture(n.TEXTURE_2D,s),n.texImage2D(n.TEXTURE_2D,0,e.internalFormatHalfFloat,1,1,0,e.textureFormatFloat,e.textureTypeHalfFloat,null);const a=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,a),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,s,0);const i=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(s),n.deleteFramebuffer(a),i}function O9(n){return n!==2?!1:zr(n).fenceSync!=null}function Yp(n,t){Array.isArray(n)||(n=[n]),n.forEach(e=>{e!=null&&T(e.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Et=et();Et.registerFlag("HAS_WEBGL",()=>Et.getNumber("WEBGL_VERSION")>0);Et.registerFlag("WEBGL_VERSION",()=>Kk(2)?2:Kk(1)?1:0);Et.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);Et.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>Et.get("WEBGL_VERSION")===2);Et.registerFlag("WEBGL_CPU_FORWARD",()=>!0);Et.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);Et.registerFlag("WEBGL_PACK",()=>Et.getBool("HAS_WEBGL"));Et.registerFlag("WEBGL_PACK_NORMALIZATION",()=>Et.getBool("WEBGL_PACK"));Et.registerFlag("WEBGL_PACK_CLIP",()=>Et.getBool("WEBGL_PACK"));Et.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>Et.getBool("WEBGL_PACK"));Et.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>Et.getBool("WEBGL_PACK"));Et.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>Et.getBool("WEBGL_PACK"));Et.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>Et.getBool("WEBGL_PACK"));Et.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>Et.getBool("WEBGL_PACK"));Et.registerFlag("WEBGL_PACK_REDUCE",()=>Et.getBool("WEBGL_PACK"));Et.registerFlag("WEBGL_LAZILY_UNPACK",()=>Et.getBool("WEBGL_PACK"));Et.registerFlag("WEBGL_CONV_IM2COL",()=>Et.getBool("WEBGL_PACK"));Et.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",()=>Et.getBool("WEBGL_PACK"));Et.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>T9(Et.getNumber("WEBGL_VERSION")));Et.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>E9(Et.getNumber("WEBGL_VERSION")));Et.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const n=Et.getNumber("WEBGL_VERSION");return n===0?0:A9(n)});Et.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>Et.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!BN());Et.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>D9(Et.getNumber("WEBGL_VERSION")));Et.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>Et.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:Et.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));Et.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>R9(Et.getNumber("WEBGL_VERSION")));Et.registerFlag("WEBGL_FENCE_API_ENABLED",()=>O9(Et.getNumber("WEBGL_VERSION")));Et.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>Et.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);Et.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,n=>{if(typeof n!="number")throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${n}.`);if(n<0&&n!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${n}.`)});Et.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>BN()?1:-1,n=>{if(typeof n!="number")throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${n}.`);if(n<0&&n!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${n}.`)});Et.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);Et.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);Et.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);Et.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);Et.registerFlag("WEBGL_EXP_CONV",()=>!1);Et.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>Et.getBool("IS_TEST"));Et.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0);Et.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1);Et.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);Et.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cs(){let n,t,e,s,r,o,a,i,u,c;return et().getNumber("WEBGL_VERSION")===2?(n="#version 300 es",t="in",e="out",s="in",r="texture",o="outputColor",a="out vec4 outputColor;",i=et().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",u="",c=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(n="",t="attribute",e="varying",s="varying",r="texture2D",o="gl_FragColor",a="",i=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,u=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,c=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:n,attribute:t,varyingVs:e,varyingFs:s,texture2D:r,output:o,defineOutput:a,defineSpecialNaN:i,defineSpecialInf:u,defineRound:c}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iu(n,t,e="index"){const s=St(t);return s.map((r,o)=>{const a=`int ${n[o]} = ${e} / ${r}`,i=o===s.length-1?`int ${n[o+1]} = ${e} - ${n[o]} * ${r}`:`index -= ${n[o]} * ${r}`;return`${a}; ${i};`}).join("")}function _y(n,t,e="index"){const s=St(t);return s.map((r,o)=>{const a=`int ${n[o]} = ${e} / outShapeStrides[${o}]`,i=o===s.length-1?`int ${n[o+1]} = ${e} - ${n[o]} * outShapeStrides[${o}]`:`index -= ${n[o]} * outShapeStrides[${o}]`;return`${a}; ${i};`}).join("")}function P9(n,t){const e=n.length,s=n.map(o=>`${t}[${o}]`),r=new Array(e-1);r[e-2]=s[e-1];for(let o=e-3;o>=0;--o)r[o]=`(${r[o+1]} * ${s[o+1]})`;return r}function L9(n,t,e="index"){const s=n.map((o,a)=>a),r=P9(s,t);return r.map((o,a)=>{const i=`int ${n[a]} = ${e} / ${r[a]}`,u=a===r.length-1?`int ${n[a+1]} = ${e} - ${n[a]} * ${r[a]}`:`index -= ${n[a]} * ${r[a]}`;return`${i}; ${u};`}).join("")}function Y0(n){const t=St(n).map(e=>e.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;
  }
`}function J0(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}const $E=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{getBroadcastDims:SE}=CG;function M9(n,t,e){const s=[];if(n.forEach(p=>{const f=j(p.shapeInfo.logicalShape);if(p.shapeInfo.isUniform?s.push(`uniform float ${p.name}${f>1?`[${f}]`:""};`):(s.push(`uniform sampler2D ${p.name};`),s.push(`uniform int offset${p.name};`)),e.enableShapeUniforms){const{uniformShape:m}=Z0(e.packedInputs,p.shapeInfo.logicalShape,p.shapeInfo.texShape);switch(m.length){case 1:s.push(`uniform int ${p.name}Shape;`);break;case 2:s.push(`uniform ivec2 ${p.name}Shape;`);break;case 3:s.push(`uniform ivec3 ${p.name}Shape;`);break;case 4:s.push(`uniform ivec4 ${p.name}Shape;`);break}s.push(`uniform ivec2 ${p.name}TexShape;`)}}),e.enableShapeUniforms){switch(t.logicalShape.length){case 1:s.push("uniform int outShape;");break;case 2:s.push("uniform ivec2 outShape;"),s.push("uniform int outShapeStrides;");break;case 3:s.push("uniform ivec3 outShape;"),s.push("uniform ivec2 outShapeStrides;");break;case 4:s.push("uniform ivec4 outShape;"),s.push("uniform ivec3 outShapeStrides;");break}s.push("uniform ivec2 outTexShape;")}e.customUniforms&&e.customUniforms.forEach(p=>{s.push(`uniform ${p.type} ${p.name}${p.arrayIndex?`[${p.arrayIndex}]`:""};`)});const r=s.join(`
`),o=n.map(p=>B9(p,t,e.packedInputs,e.enableShapeUniforms)).join(`
`),a=t.texShape,i=cs(),u=W9(i);let c,l,d=H9(i);return t.isPacked?(c=z9(t.logicalShape,a,e.enableShapeUniforms),l=G9(i)):(c=V9(t.logicalShape,a,e.enableShapeUniforms),l=U9(i)),e.packedInputs&&(d+=X9),[d,u,l,r,c,o,e.userCode].join(`
`)}function Uc(n,t=!1){const e=n.shapeInfo.logicalShape;switch(e.length){case 0:return iJ(n,t);case 1:return lJ(n,t);case 2:return dJ(n,t);case 3:return pJ(n,t);case 4:return mJ(n,t);case 5:return gJ(n);case 6:return yJ(n);default:throw new Error(`${e.length}-D input sampling is not yet supported`)}}function NE(n,t){switch(n.shapeInfo.logicalShape.length){case 0:return aJ(n);case 1:return uJ(n,t);case 2:return cJ(n,t);case 3:return hJ(n,t);default:return fJ(n,t)}}function B9(n,t,e=!1,s){let r="";e?r+=NE(n,s):r+=Uc(n,s);const o=n.shapeInfo.logicalShape,a=t.logicalShape;return o.length<=a.length&&(e?r+=bJ(n,t):r+=xJ(n,t)),r}function z9(n,t,e){switch(n.length){case 0:return CE();case 1:return Y9(n,t,e);case 2:return rJ(n,t,e);case 3:return Z9(n,t,e);default:return tJ(n,t,e)}}function V9(n,t,e){switch(n.length){case 0:return CE();case 1:return J9(n,t,e);case 2:return oJ(n,t,e);case 3:return Q9(n,t,e);case 4:return eJ(n,t,e);case 5:return nJ(n,t);case 6:return sJ(n,t);default:throw new Error(`${n.length}-D output sampling is not yet supported`)}}function W9(n){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${n.texture2D}(textureSampler, uv).r;
    }
  `}function U9(n){return`
    void setOutput(float val) {
      ${n.output} = vec4(val, 0, 0, 0);
    }
  `}function G9(n){return`
    void setOutput(vec4 val) {
      ${n.output} = val;
    }
  `}function H9(n){return`${n.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${n.varyingFs} vec2 resultUV;
    ${n.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${n.defineSpecialNaN}
    ${n.defineSpecialInf}
    ${n.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${j9}
    ${q9}
    ${K9}
  `}const j9=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,q9=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,K9=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,X9=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function CE(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function Y9(n,t,e){const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return s[0]===1?e?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${s[1]}.0);
      }
    `:s[1]===1?e?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${s[0]}.0);
      }
    `:e?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      return 2 * (resTexRC.x * ${s[1]} + resTexRC.y);
    }
  `}function J9(n,t,e){return t[0]===1?e?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${t[1]}.0);
      }
    `:t[1]===1?e?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${t[0]}.0);
      }
    `:e?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return resTexRC.x * ${t[1]} + resTexRC.y;
    }
  `}function Z9(n,t,e){if(e)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(n[2]/2),o=r*Math.ceil(n[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      int b = index / ${o};
      index -= b * ${o};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec3(b, r, c);
    }
  `}function Q9(n,t,e){if(e)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${_y(["r","c","d"],n)}
    return ivec3(r, c, d);
  }
`;const s=iu(["r","c","d"],n);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${s}
      return ivec3(r, c, d);
    }
  `}function tJ(n,t,e){if(e)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(n[n.length-1]/2),o=r*Math.ceil(n[n.length-2]/2);let a=o,i="",u="b, r, c";for(let c=2;c<n.length-1;c++)a*=n[n.length-c-1],i=`
      int b${c} = index / ${a};
      index -= b${c} * ${a};
    `+i,u=`b${c}, `+u;return`
    ivec${n.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      ${i}

      int b = index / ${o};
      index -= b * ${o};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec${n.length}(${u});
    }
  `}function eJ(n,t,e){if(e)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${_y(["r","c","d","d2"],n)}
      return ivec4(r, c, d, d2);
    }
  `;const s=iu(["r","c","d","d2"],n);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${s}
      return ivec4(r, c, d, d2);
    }
  `}function nJ(n,t){const e=iu(["r","c","d","d2","d3"],n);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},
                             ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${e}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function sJ(n,t){const e=iu(["r","c","d","d2","d3","d4"],n);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${e}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function rJ(n,t,e){const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(we(n,t))return e?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${s[0]}, ${s[1]}));
      }
    `;const r=Math.ceil(n[1]/2);return e?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));

      int index = resTexRC.x * ${s[1]} + resTexRC.y;
      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec2(r, c);
    }
  `}function oJ(n,t,e){return we(n,t)?e?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `:n[1]===1?e?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:n[0]===1?e?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:e?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = index / ${n[1]};
      int c = index - r * ${n[1]};
      return ivec2(r, c);
    }
  `}function uu(n){return`offset${n}`}function aJ(n){const t=n.name,e="get"+t.charAt(0).toUpperCase()+t.slice(1),s=cs();return`
    vec4 ${e}() {
      return ${s.texture2D}(${t}, halfCR);
    }
  `}function iJ(n,t){const e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1);if(n.shapeInfo.isUniform)return`float ${s}() {return ${e};}`;const[r,o]=n.shapeInfo.texShape;if(r===1&&o===1)return`
      float ${s}() {
        return sampleTexture(${e}, halfCR);
      }
    `;const a=uu(e);if(t)return`
    float ${s}() {
      vec2 uv = uvFromFlat(${e}TexShape[0], ${e}TexShape[1], ${a});
      return sampleTexture(${e}, uv);
    }
  `;const[i,u]=n.shapeInfo.texShape;return`
    float ${s}() {
      vec2 uv = uvFromFlat(${i}, ${u}, ${a});
      return sampleTexture(${e}, uv);
    }
  `}function uJ(n,t){const e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1),r=n.shapeInfo.texShape,o=cs();if(t)return`
    vec4 ${s}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${e}TexShape[0]) / 2.0), ceil(float(${e}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${o.texture2D}(${e}, uv);
    }
  `;const a=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return`
    vec4 ${s}(int index) {
      vec2 uv = packedUVfrom1D(
        ${a[0]}, ${a[1]}, index);
      return ${o.texture2D}(${e}, uv);
    }
  `}function lJ(n,t){const e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1);if(n.shapeInfo.isUniform)return`
      float ${s}(int index) {
        ${Gc(n)}
      }
    `;const r=n.shapeInfo.texShape,o=r[0],a=r[1];if(a===1&&o===1)return`
      float ${s}(int index) {
        return sampleTexture(${e}, halfCR);
      }
    `;const i=uu(e);return a===1?t?`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / float(${e}TexShape[0]));
        return sampleTexture(${e}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${o}.0);
        return sampleTexture(${e}, uv);
      }
    `:o===1?t?`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / float(${e}TexShape[1]), 0.5);
        return sampleTexture(${e}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${a}.0, 0.5);
        return sampleTexture(${e}, uv);
      }
    `:t?`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${e}TexShape[0], ${e}TexShape[1], index + ${i});
      return sampleTexture(${e}, uv);
    }
  `:`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${o}, ${a}, index + ${i});
      return sampleTexture(${e}, uv);
    }
  `}function cJ(n,t){const e=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=n.shapeInfo.texShape,a=o[0],i=o[1],u=cs();if(o!=null&&we(e,o))return t?`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);

        return ${u.texture2D}(${s}, uv);
      }
    `:`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${a}.0);

        return ${u.texture2D}(${s}, uv);
      }
    `;if(t)return`
    vec4 ${r}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${u.texture2D}(${s}, uv);
    }
  `;const c=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],l=Math.ceil(e[1]/2);return`
    vec4 ${r}(int row, int col) {
      vec2 uv = packedUVfrom2D(${l}, ${c[0]}, ${c[1]}, row, col);
      return ${u.texture2D}(${s}, uv);
    }
  `}function dJ(n,t){const e=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=n.shapeInfo.texShape;if(o!=null&&we(e,o)){if(t)return`
      float ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `;const h=o[0],p=o[1];return`
    float ${r}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${p}.0, ${h}.0);
      return sampleTexture(${s}, uv);
    }
  `}const{newShape:a,keptDims:i}=za(e),u=a;if(u.length<e.length){const h=Hc(n,u),p=["row","col"];return`
      ${Uc(h,t)}
      float ${r}(int row, int col) {
        return ${r}(${jc(p,i)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${e[1]}, 1)));
        ${Gc(n)}
      }
    `;const c=o[0],l=o[1],d=uu(s);return l===1?t?`
      float ${r}(int row, int col) {
        float index = dot(vec3(row, col, ${d}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${s}TexShape[0]));
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${d}), vec3(${e[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${c}.0);
      return sampleTexture(${s}, uv);
    }
  `:c===1?t?`
      float ${r}(int row, int col) {
        float index = dot(vec3(row, col, ${d}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${s}TexShape[1]), 0.5);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${d}), vec3(${e[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${l}.0, 0.5);
      return sampleTexture(${s}, uv);
    }
  `:t?`
      float ${r}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s}Shape[1] + col + ${d};
        vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
        return sampleTexture(${s}, uv);
      }
    `:`
  float ${r}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${e[1]} + col + ${d};
    vec2 uv = uvFromFlat(${c}, ${l}, index);
    return sampleTexture(${s}, uv);
  }
`}function hJ(n,t){const e=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=n.shapeInfo.texShape,a=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];if(e[0]===1){const h=e.slice(1),p=[1,2],f=Hc(n,h),m=["b","row","col"];return`
        ${NE(f,t)}
        vec4 ${r}(int b, int row, int col) {
          return ${r}(${jc(m,p)});
        }
      `}const i=cs();if(t)return`
    vec4 ${r}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${i.texture2D}(${s}, uv);
    }
  `;const u=a[0],c=a[1],l=Math.ceil(e[2]/2),d=l*Math.ceil(e[1]/2);return`
    vec4 ${r}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${u}, ${c}, ${d}, ${l}, b, row, col);
      return ${i.texture2D}(${s}, uv);
    }
  `}function pJ(n,t){const e=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=e[1]*e[2],a=e[2],{newShape:i,keptDims:u}=za(e),c=i;if(c.length<e.length){const m=Hc(n,c),g=["row","col","depth"];return`
        ${Uc(m,t)}
        float ${r}(int row, int col, int depth) {
          return ${r}(${jc(g,u)});
        }
      `}if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${o}, ${a}, 1)));
        ${Gc(n)}
      }
    `;const l=n.shapeInfo.texShape,d=l[0],h=l[1],p=n.shapeInfo.flatOffset;if(h===o&&p==null)return t?`
      float ${r}(int row, int col, int depth) {
        int stride1 = ${s}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
        float ${r}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${a}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${h}.0, ${d}.0);
          return sampleTexture(${s}, uv);
        }
      `;if(h===a&&p==null)return t?`
      float ${r}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${s}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${e[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}.0, ${d}.0);
      return sampleTexture(${s}, uv);
    }
  `;const f=uu(s);return t?`
    float ${r}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${s}Shape[1] * ${s}Shape[2];
      int stride1 = ${s}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${f};
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
      return sampleTexture(${s}, uv);
    }
    `:`
      float ${r}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${o} + col * ${a} + depth + ${f};
        vec2 uv = uvFromFlat(${d}, ${h}, index);
        return sampleTexture(${s}, uv);
      }
  `}function fJ(n,t){const e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1),r=cs();if(t)return`
    vec4 ${s}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${e}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${e}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${e}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${e}TexShape[0]) / 2.0), ceil(float(${e}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${r.texture2D}(${e}, uv);
    }
  `;const o=n.shapeInfo.logicalShape,a=o.length,i=n.shapeInfo.texShape,u=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],c=u[0],l=u[1],d=Math.ceil(o[a-1]/2);let h=d*Math.ceil(o[a-2]/2),p="int b, int row, int col",f=`b * ${h} + (row / 2) * ${d} + (col / 2)`;for(let m=2;m<a-1;m++)p=`int b${m}, `+p,h*=o[a-m-1],f=`b${m} * ${h} + `+f;return`
    vec4 ${s}(${p}) {
      int index = ${f};
      int texR = index / ${l};
      int texC = index - texR * ${l};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${l}, ${c});
      return ${r.texture2D}(${e}, uv);
    }
  `}function mJ(n,t){const e=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=e[3],a=e[2]*o,i=e[1]*a,{newShape:u,keptDims:c}=za(e);if(u.length<e.length){const b=Hc(n,u),x=["row","col","depth","depth2"];return`
      ${Uc(b,t)}
      float ${r}(int row, int col, int depth, int depth2) {
        return ${r}(${jc(x,c)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${i}, ${a}, ${o}, 1)));
        ${Gc(n)}
      }
    `;const l=n.shapeInfo.flatOffset,d=n.shapeInfo.texShape,h=d[0],p=d[1],f=`int stride2 = ${s}Shape[3];`,m=`int stride1 = ${s}Shape[2] * stride2;`,g=`int stride0 = ${s}Shape[1] * stride1;`;if(p===i&&l==null)return t?`
      float ${r}(int row, int col, int depth, int depth2) {
        ${f}
        ${m}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${a}, ${o}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${h}.0);
        return sampleTexture(${s}, uv);
      }
    `;if(p===o&&l==null)return t?`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${s}Shape[1] * ${s}Shape[2], ${s}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${e[1]*e[2]}, ${e[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${h}.0);
        return sampleTexture(${s}, uv);
      }
    `;const y=uu(s);return t?`
    float ${r}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${f}
      ${m}
      ${g}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index + ${y});
      return sampleTexture(${s}, uv);
    }
  `:`
    float ${r}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${a} +
          depth * ${o} + depth2;
      vec2 uv = uvFromFlat(${h}, ${p}, index + ${y});
      return sampleTexture(${s}, uv);
    }
  `}function gJ(n){const t=n.shapeInfo.logicalShape,e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1),r=t[4],o=t[3]*r,a=t[2]*o,i=t[1]*a,{newShape:u,keptDims:c}=za(t);if(u.length<t.length){const m=Hc(n,u),g=["row","col","depth","depth2","depth3"];return`
      ${Uc(m)}
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        return ${s}(${jc(g,c)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${i}, ${a}, ${o}, ${r})) +
          depth3;
        ${Gc(n)}
      }
    `;const l=n.shapeInfo.flatOffset,d=n.shapeInfo.texShape,h=d[0],p=d[1];if(p===i&&l==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${a}, ${o}, ${r}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${h}.0);
        return sampleTexture(${e}, uv);
      }
    `;if(p===r&&l==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]},
               ${t[2]*t[3]}, ${t[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${h}.0);
        return sampleTexture(${e}, uv);
      }
    `;const f=uu(e);return`
    float ${s}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${a} + depth * ${o} +
          depth2 * ${r} + depth3 + ${f};
      vec2 uv = uvFromFlat(${h}, ${p}, index);
      return sampleTexture(${e}, uv);
    }
  `}function yJ(n){const t=n.shapeInfo.logicalShape,e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1),{newShape:r,keptDims:o}=za(t);if(r.length<t.length){const g=Hc(n,r),y=["row","col","depth","depth2","depth3","depth4"];return`
      ${Uc(g)}
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${s}(${jc(y,o)});
      }
    `}const a=t[5],i=t[4]*a,u=t[3]*i,c=t[2]*u,l=t[1]*c;if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${l}, ${c}, ${u}, ${i})) +
          dot(
            vec2(depth3, depth4),
            vec2(${a}, 1)));
        ${Gc(n)}
      }
    `;const d=n.shapeInfo.flatOffset,h=n.shapeInfo.texShape,p=h[0],f=h[1];if(f===l&&d==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${c}, ${u}, ${i}, ${a})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${p}.0);
        return sampleTexture(${e}, uv);
      }
    `;if(f===a&&d==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]*t[4]},
               ${t[2]*t[3]*t[4]},
               ${t[3]*t[4]},
               ${t[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${p}.0);
        return sampleTexture(${e}, uv);
      }
    `;const m=uu(e);return`
    float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${l} + col * ${c} + depth * ${u} +
          depth2 * ${i} + depth3 * ${a} + depth4 + ${m};
      vec2 uv = uvFromFlat(${p}, ${f}, index);
      return sampleTexture(${e}, uv);
    }
  `}function Gc(n){const t=n.name,e=j(n.shapeInfo.logicalShape);return e<2?`return ${t};`:`
    for (int i = 0; i < ${e}; i++) {
      if (i == index) {
        return ${t}[i];
      }
    }
  `}function bJ(n,t){const e=n.name,s=e.charAt(0).toUpperCase()+e.slice(1),r="get"+s+"AtOutCoords",o=n.shapeInfo.logicalShape.length,a=t.logicalShape.length,i=SE(n.shapeInfo.logicalShape,t.logicalShape),u=Te(a),c=a-o;let l;const d=["x","y","z","w","u","v"];o===0?l="":a<2&&i.length>=1?l="coords = 0;":l=i.map(b=>`coords.${d[b+c]} = 0;`).join(`
`);let h="";a<2&&o>0?h="coords":h=n.shapeInfo.logicalShape.map((b,x)=>`coords.${d[x+c]}`).join(", ");let p="return outputValue;";const m=j(n.shapeInfo.logicalShape)===1,y=j(t.logicalShape)===1;if(o===1&&!m&&!y)p=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(m&&!y)a===1?p=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:p=`
        return vec4(outputValue.x);
      `;else if(i.length){const b=o-2,x=o-1;i.indexOf(b)>-1&&i.indexOf(x)>-1?p="return vec4(outputValue.x);":i.indexOf(b)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":i.indexOf(x)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${r}() {
      ${u} coords = getOutputCoords();
      ${l}
      vec4 outputValue = get${s}(${h});
      ${p}
    }
  `}function xJ(n,t){const e=n.name,s=e.charAt(0).toUpperCase()+e.slice(1),r="get"+s+"AtOutCoords",o=t.texShape,a=n.shapeInfo.texShape,i=n.shapeInfo.logicalShape.length,u=t.logicalShape.length;if(!n.shapeInfo.isUniform&&i===u&&n.shapeInfo.flatOffset==null&&we(a,o))return`
      float ${r}() {
        return sampleTexture(${e}, resultUV);
      }
    `;const c=Te(u),l=SE(n.shapeInfo.logicalShape,t.logicalShape),d=u-i;let h;const p=["x","y","z","w","u","v"];i===0?h="":u<2&&l.length>=1?h="coords = 0;":h=l.map(m=>`coords.${p[m+d]} = 0;`).join(`
`);let f="";return u<2&&i>0?f="coords":f=n.shapeInfo.logicalShape.map((m,g)=>`coords.${p[g+d]}`).join(", "),`
    float ${r}() {
      ${c} coords = getOutputCoords();
      ${h}
      return get${s}(${f});
    }
  `}function Te(n){if(n<=1)return"int";if(n===2)return"ivec2";if(n===3)return"ivec3";if(n===4)return"ivec4";if(n===5)return"ivec5";if(n===6)return"ivec6";throw Error(`GPU for rank ${n} is not yet supported`)}function Z0(n,t,e){const{newShape:s,keptDims:r}=za(t),o=t.length,a=n&&o===3&&t[0]===1,i=a?t.slice(1):s,u=!n&&o>1&&!we(t,e)&&s.length<o||a;return{useSqueezeShape:u,uniformShape:u?i:t,keptDims:r}}function Hc(n,t){const e=JSON.parse(JSON.stringify(n));return e.shapeInfo.logicalShape=t,e}function jc(n,t){return t.map(e=>n[e]).join(", ")}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wJ(n,t,e,s){const r=e.map((l,d)=>{const h={logicalShape:l.shape,texShape:l.isUniform?null:l.texData.texShape,isUniform:l.isUniform,isPacked:l.isUniform?!1:l.texData.isPacked,flatOffset:null};return l.texData!=null&&l.texData.slice!=null&&l.texData.slice.flatOffset>0&&(h.flatOffset=l.texData.slice.flatOffset),{name:t.variableNames[d],shapeInfo:h}}),o=r.map(l=>l.shapeInfo),a={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},i=M9(r,a,t),u=p9(n.gl,i),c=n.createProgram(u);return et().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:u,source:i,webGLProgram:c,inShapeInfos:o,outShapeInfo:a,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(n.buildVao(c),Object.assign({program:t,fragmentShader:u,source:i,webGLProgram:c,inShapeInfos:o,outShapeInfo:a},_E(n,t,c)))}function _E(n,t,e){const s=[],r=[];let o,a,i,u=null,c=null;c=n.getUniformLocation(e,"NAN",!1),et().getNumber("WEBGL_VERSION")===1&&(u=n.getUniformLocation(e,"INFINITY",!1));const l=!1;for(const d of t.variableNames){const h={name:d,uniform:n.getUniformLocation(e,d,l),offset:n.getUniformLocation(e,`offset${d}`,l)};t.enableShapeUniforms&&(h.shape=n.getUniformLocation(e,`${d}Shape`,l),h.texShape=n.getUniformLocation(e,`${d}TexShape`,l)),s.push(h)}if(t.enableShapeUniforms&&(o=n.getUniformLocation(e,"outShape",l),i=n.getUniformLocation(e,"outShapeStrides",l),a=n.getUniformLocation(e,"outTexShape",l)),t.customUniforms)for(const d of t.customUniforms)r.push(n.getUniformLocation(e,d.name,l));return{variablesLocations:s,customUniformLocations:r,infLoc:u,nanLoc:c,outShapeLocation:o,outShapeStridesLocation:i,outTexShapeLocation:a}}function Xk(n,t){if(n.length!==t.length)throw Error(`Binary was compiled with ${n.length} inputs, but was executed with ${t.length} inputs`);n.forEach((e,s)=>{const r=e.logicalShape,o=t[s],a=o.shape;if(!we(r,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${a} must match`);if(e.isUniform&&o.isUniform)return;const i=e.texShape,u=o.isUniform?null:o.texData.texShape;if(!we(i,u))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${u} must match`)})}function vJ(n,t,e,s,r){t.program.enableShapeUniforms||(Xk(t.inShapeInfos,e),Xk([t.outShapeInfo],[s]));const o=s.texData.texture,a=s.texData.texShape;s.texData.isPacked?n.setOutputPackedMatrixTexture(o.texture,a[0],a[1]):n.setOutputMatrixTexture(o.texture,a[0],a[1]),n.setProgram(t.webGLProgram),n.bindVertexArray(t.webGLProgram.vao),et().getNumber("WEBGL_VERSION")===1&&t.infLoc!==null&&n.gl.uniform1f(t.infLoc,1/0),t.nanLoc!==null&&n.gl.uniform1f(t.nanLoc,NaN);for(let u=0;u<e.length;++u){const c=e[u],{uniform:l,offset:d,shape:h,texShape:p}=t.variablesLocations[u];if(h){const{uniformShape:f}=Z0(t.program.packedInputs,c.shape,c.texData.texShape);switch(f.length){case 1:n.gl.uniform1iv(h,new Int32Array(f));break;case 2:n.gl.uniform2iv(h,new Int32Array(f));break;case 3:n.gl.uniform3iv(h,new Int32Array(f));break;case 4:n.gl.uniform4iv(h,new Int32Array(f));break}}if(p&&n.gl.uniform2i(p,c.texData.texShape[0],c.texData.texShape[1]),l!=null){if(c.isUniform){if(j(c.shape)<2)n.gl.uniform1f(l,c.uniformValues[0]);else{let f=c.uniformValues;f instanceof Float32Array||(f=new Float32Array(f)),n.gl.uniform1fv(l,f)}continue}c.texData.slice!=null&&d!=null&&n.gl.uniform1i(d,c.texData.slice.flatOffset),n.setInputMatrixTexture(c.texData.texture.texture,l,u)}}const i=t.outShapeLocation;if(i)switch(s.shape.length){case 1:n.gl.uniform1iv(i,new Int32Array(s.shape));break;case 2:n.gl.uniform2iv(i,new Int32Array(s.shape));break;case 3:n.gl.uniform3iv(i,new Int32Array(s.shape));break;case 4:n.gl.uniform4iv(i,new Int32Array(s.shape));break}if(t.outShapeStridesLocation){const u=St(s.shape);switch(s.shape.length){case 2:n.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(u));break;case 3:n.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(u));break;case 4:n.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(u));break}}if(t.outTexShapeLocation&&n.gl.uniform2i(t.outTexShapeLocation,s.texData.texShape[0],s.texData.texShape[1]),t.program.customUniforms&&r)for(let u=0;u<t.program.customUniforms.length;++u){const c=t.program.customUniforms[u],l=t.customUniformLocations[u],d=r[u];if(c.type==="float")n.gl.uniform1fv(l,d);else if(c.type==="vec2")n.gl.uniform2fv(l,d);else if(c.type==="vec3")n.gl.uniform3fv(l,d);else if(c.type==="vec4")n.gl.uniform4fv(l,d);else if(c.type==="int")n.gl.uniform1iv(l,d);else if(c.type==="ivec2")n.gl.uniform2iv(l,d);else if(c.type==="ivec3")n.gl.uniform3iv(l,d);else if(c.type==="ivec4")n.gl.uniform4iv(l,d);else throw Error(`uniform type ${c.type} is not supported yet.`)}n.executeProgram()}function IJ(n,t,e){let s="";t.concat(e).forEach(a=>{const i=a.texData!=null&&a.texData.slice!=null&&a.texData.slice.flatOffset>0;if(n.enableShapeUniforms&&!a.isUniform){const u=a.texData.texShape,{useSqueezeShape:c,uniformShape:l,keptDims:d}=Z0(n.packedInputs,a.shape,u);let h="",p="",f="";if(l.length===1&&n.packedInputs){const v=[Math.ceil(u[0]/2),Math.ceil(u[1]/2)];h=`${v[0]>1}_${v[1]>1}`}else if(l.length===2&&!n.packedInputs)p=`${l[0]>1}_${l[1]>1}`;else if(l.length>2&&!n.packedInputs){const v=St(l);f=`${v[0]===u[1]}_${v[v.length-1]===u[1]}`}const m=a.shape.length,g=l.length===2&&we(a.shape,u),y=j(a.shape)===1,b=el(a.shape,e.shape),x=!n.packedInputs&&m===e.shape.length&&we(u,e.texData.texShape),w=n.packedInputs||l.length>2?"":`${u[0]>1}_${u[1]>1}`;s+=`${m}_${x}_${c?d:""}_${l.length}_${y}_${b}_${g}_${h}_${p}_${f}_${w}_${i}`}else{const u=a.isUniform?"uniform":a.texData.texShape;s+=`${a.shape}_${u}_${i}`}});const r=n.userCode;let o=n.constructor.name;return o+="_"+s+"_"+r+`${et().getNumber("WEBGL_VERSION")}`,o}function Jn(n){return et().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&n<=4}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kJ{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=jd.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const e=cs();this.outputShape=t,this.enableShapeUniforms=Jn(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?_y(["r","c","d"],t):iu(["r","c","d"],t)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${e.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $J{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=jd.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const e=cs();this.outputShape=t,this.enableShapeUniforms=Jn(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?_y(["r","c","d"],t):iu(["r","c","d"],t)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${e.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class SJ{constructor(t){this.variableNames=["A"],this.outTexUsage=Hs.DOWNLOAD;const e=cs();this.outputShape=t,this.userCode=`
      ${$E}

      void main() {
        float x = getAAtOutCoords();
        ${e.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class NJ{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=Hs.DOWNLOAD;const e=cs();this.outputShape=t,this.userCode=`
      ${$E}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${e.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CJ={R:0,G:1,B:2,A:3};class Yk{constructor(t,e=!1,s="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const r=cs();this.outputShape=t,this.enableShapeUniforms=Jn(this.outputShape.length);let o="result";e&&(o="floor(result * 255. + 0.5)");let a="";for(let i=0;i<s.length;i++){const u=s[i];a+=`
          if(offset == ${i}) {
            result = values[${CJ[u]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?J0():Y0(t)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${s.length});

        flatIndex = idiv(flatIndex, ${s.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${r.texture2D}(A, uv);
          ${a}
        }
        ${r.output} = vec4(${o}, 0., 0., 0.);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _J{constructor(t,e=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const s=cs();this.outputShape=t,this.enableShapeUniforms=Jn(this.outputShape.length);let r="",o="result";e&&(o="floor(result * 255. + 0.5)");for(let a=0;a<=1;a++)for(let i=0;i<=1;i++){const u=a*2+i;r+=`
          localCoords = coords;
          if(localCoords[2] + ${i} < ${this.enableShapeUniforms?"outShape[2]":`${t[2]}`}) {
          localCoords[2] += ${i};
          if (localCoords[1] + ${a} < ${this.enableShapeUniforms?"outShape[1]":`${t[1]}`}) {
            localCoords[1] += ${a};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${s.texture2D}(A, uv);

            if (offset == 0) {
              result[${u}] = values[0];
            } else if (offset == 1) {
              result[${u}] = values[1];
            } else if (offset == 2) {
              result[${u}] = values[2];
            } else {
              result[${u}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?J0():Y0(t)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${r}

          ${s.output} = ${o};
        }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TJ(n){const t=cs(),e=`${t.version}
    precision highp float;
    ${t.attribute} vec3 clipSpacePos;
    ${t.attribute} vec2 uv;
    ${t.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return h9(n,e)}function EJ(n){const t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return y9(n,t)}function AJ(n){const t=new Uint16Array([0,1,2,2,1,3]);return b9(n,t)}function Jp(n,t,e,s,r,o){w9(t,e);const a=x9(n),i=n.TEXTURE_2D;return wt(n,()=>n.bindTexture(i,a)),wt(n,()=>n.texParameteri(i,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE)),wt(n,()=>n.texParameteri(i,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE)),wt(n,()=>n.texParameteri(i,n.TEXTURE_MIN_FILTER,n.NEAREST)),wt(n,()=>n.texParameteri(i,n.TEXTURE_MAG_FILTER,n.NEAREST)),et().getNumber("WEBGL_VERSION")===1?wt(n,()=>n.texImage2D(i,0,s,t,e,0,r,o,null)):wt(n,()=>n.texStorage2D(i,1,s,t,e)),wt(n,()=>n.bindTexture(n.TEXTURE_2D,null)),{texture:a,texShape:[e,t]}}function TE(n){return n.internalFormatFloat}function DJ(n,t,e,s){const[r,o]=Xp(t,e);return Jp(n,r,o,TE(s),s.textureFormatFloat,n.FLOAT)}function EE(n){return n.internalFormatHalfFloat}function RJ(n,t,e,s){const[r,o]=Xp(t,e);return Jp(n,r,o,EE(s),s.textureFormatFloat,s.textureTypeHalfFloat)}function AE(n){return n.downloadTextureFormat}function FJ(n,t,e,s){const[r,o]=Xp(t,e);return Jp(n,r,o,AE(s),n.RGBA,n.UNSIGNED_BYTE)}function DE(n){return n.internalFormatPackedFloat}function OJ(n,t,e,s){const[r,o]=Wc(t,e);return Jp(n,r,o,DE(s),n.RGBA,n.FLOAT)}function RE(n){return n.internalFormatPackedHalfFloat}function PJ(n,t,e,s){const[r,o]=Wc(t,e);return Jp(n,r,o,RE(s),n.RGBA,s.textureTypeHalfFloat)}function LJ(n,t,e){return wt(n,()=>n.bindBuffer(n.ARRAY_BUFFER,e)),jk(n,t,"clipSpacePos",e,3,20,0)&&jk(n,t,"uv",e,2,20,12)}function MJ(n,t,e,s,r,o){wt(n,()=>n.bindTexture(n.TEXTURE_2D,t));let a,i,u;r instanceof Uint8Array?(a=new Uint8Array(e*s*4),i=n.UNSIGNED_BYTE,u=n.RGBA):(a=new Float32Array(e*s*4),i=n.FLOAT,u=o.internalFormatPackedFloat),a.set(r),et().getNumber("WEBGL_VERSION")===2?wt(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,e,s,n.RGBA,i,a)):wt(n,()=>n.texImage2D(n.TEXTURE_2D,0,u,e,s,0,n.RGBA,i,a)),wt(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function BJ(n,t,e){wt(n,()=>n.bindTexture(n.TEXTURE_2D,t)),e.data instanceof Uint8Array?et().getNumber("WEBGL_VERSION")===2?wt(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,e.width,e.height,n.RGBA,n.UNSIGNED_BYTE,e.data)):wt(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,e.width,e.height,0,n.RGBA,n.UNSIGNED_BYTE,e.data)):et().getNumber("WEBGL_VERSION")===2?wt(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,n.RGBA,n.UNSIGNED_BYTE,e)):wt(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,n.RGBA,n.UNSIGNED_BYTE,e)),wt(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function zJ(n,t,e,s){const r=n.createBuffer();wt(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,r));const i=4*4*t*e;return wt(n,()=>n.bufferData(n.PIXEL_PACK_BUFFER,i,n.STREAM_READ)),wt(n,()=>n.readPixels(0,0,e,t,n.RGBA,n.FLOAT,0)),wt(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,null)),r}function VJ(n,t,e){const s=n,r=new Float32Array(e);return s.bindBuffer(s.PIXEL_PACK_BUFFER,t),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,r),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),r}function WJ(n,t,e,s){const[r,o]=Xp(t,e),a=4,i=new Uint8Array(o9(t*e,a));return wt(n,()=>n.readPixels(0,0,r,o,s.downloadTextureFormat,n.UNSIGNED_BYTE,i)),new Float32Array(i.buffer)}function UJ(n,t,e,s,r,o,a,i){const u=n,c=new Float32Array(a9(o,a));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,c),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),c}function GJ(n,t,e){const s=new Float32Array(t*e*4);return wt(n,()=>n.readPixels(0,0,e,t,n.RGBA,n.FLOAT,s)),s}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vb{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const e=et().getNumber("WEBGL_VERSION");if(t!=null?(this.gl=t,n9(e,t)):this.gl=zr(e),t=this.gl,et().getNumber("WEBGL_VERSION")===2){const o=t;this.createVertexArray=()=>wt(o,()=>o.createVertexArray()),this.bindVertexArray=a=>wt(o,()=>o.bindVertexArray(a)),this.deleteVertexArray=a=>wt(o,()=>o.deleteVertexArray(a)),this.getVertexArray=()=>wt(o,()=>o.getParameter(o.VERTEX_ARRAY_BINDING))}else if(t!=null){const o=t.getExtension("OES_vertex_array_object");if(o==null)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>wt(t,()=>o.createVertexArrayOES()),this.bindVertexArray=a=>wt(t,()=>o.bindVertexArrayOES(a)),this.deleteVertexArray=a=>wt(t,()=>o.deleteVertexArrayOES(a)),this.getVertexArray=()=>wt(t,()=>t.getParameter(o.VERTEX_ARRAY_BINDING_OES))}let s="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),et().getNumber("WEBGL_VERSION")===1){const o="OES_texture_float",a="OES_texture_half_float";if(this.textureFloatExtension=kf(this.gl,o),dr(this.gl,a))this.textureHalfFloatExtension=kf(this.gl,a);else if(et().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(s),dr(this.gl,r))this.colorBufferHalfFloatExtension=kf(this.gl,r);else if(et().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(s="EXT_color_buffer_float",dr(this.gl,s))this.colorBufferFloatExtension=this.gl.getExtension(s);else if(dr(this.gl,r))this.colorBufferHalfFloatExtension=this.gl.getExtension(r);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=EJ(this.gl),this.indexBuffer=AJ(this.gl),this.framebuffer=v9(this.gl),this.textureConfig=X0(this.gl,this.textureHalfFloatExtension)}get debug(){return et().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const t=this.gl;wt(t,()=>t.finish()),wt(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,null)),wt(t,()=>t.deleteFramebuffer(this.framebuffer)),wt(t,()=>t.bindBuffer(t.ARRAY_BUFFER,null)),wt(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null)),wt(t,()=>t.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),DJ(this.gl,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),RJ(this.gl,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),FJ(this.gl,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),BJ(this.gl,t,e)}uploadDenseMatrixToTexture(t,e,s,r){this.throwIfDisposed(),MJ(this.gl,t,e,s,r,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),PJ(this.gl,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),OJ(this.gl,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(qk(this.gl,this.framebuffer),this.outputTexture=null),wt(this.gl,()=>this.gl.deleteTexture(t))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,s){return this.downloadMatrixDriver(t,()=>WJ(this.gl,e,s,this.textureConfig))}downloadPackedMatrixFromBuffer(t,e,s,r,o,a){return UJ(this.gl,t,e,s,r,o,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(t,e){return VJ(this.gl,t,e)}createBufferFromTexture(t,e,s){this.bindTextureToFrameBuffer(t);const r=zJ(this.gl,e,s,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,s;if(et().getBool("WEBGL_FENCE_API_ENABLED")){const r=t,o=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),s=()=>{const a=r.clientWaitSync(o,0,0);return a===r.ALREADY_SIGNALED||a===r.CONDITION_SATISFIED},e=o}else et().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),s=()=>this.isQueryAvailable(e,et().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):s=()=>!0;return{query:e,isFencePassed:s}}downloadMatrixFromPackedTexture(t,e,s){return this.downloadMatrixDriver(t,()=>GJ(this.gl,e,s))}createProgram(t){this.throwIfDisposed();const e=this.gl;this.vertexShader==null&&(this.vertexShader=TJ(e));const s=m9(e);wt(e,()=>e.attachShader(s,this.vertexShader)),wt(e,()=>e.attachShader(s,t)),g9(e,s);const r=Object.assign(s,{vao:this.createVertexArray()});return this.debug&&yb(e,r),r}buildVao(t){this.setProgram(t),this.bindVertexArray(t.vao);const e=this.gl;wt(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),LJ(e,t,this.vertexBuffer)}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),t!=null&&(wt(this.gl,()=>this.gl.deleteProgram(t)),this.deleteVertexArray(t.vao))}setProgram(t){this.throwIfDisposed(),this.program=t,this.program!=null&&this.debug&&yb(this.gl,this.program),wt(this.gl,()=>this.gl.useProgram(t))}getUniformLocation(t,e,s=!0){return this.throwIfDisposed(),s?k9(this.gl,t,e):$9(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),wt(this.gl,()=>this.gl.getAttribLocation(t,e))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,s){this.throwIfDisposed(),this.throwIfNoProgram(),S9(this.gl,t,e,s)}setOutputMatrixTexture(t,e,s){this.setOutputMatrixTextureDriver(t,s,e)}setOutputPackedMatrixTexture(t,e,s){this.throwIfDisposed();const[r,o]=Wc(e,s);this.setOutputMatrixTextureDriver(t,r,o)}setOutputMatrixWriteRegion(t,e,s,r){this.setOutputMatrixWriteRegionDriver(s,t,r,e)}setOutputPackedMatrixWriteRegion(t,e,s,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&yb(this.gl,this.program),$f(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const t=this.gl;if(this.debug){const e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}wt(t,()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),wt(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=kf(this.gl,et().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(et().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const s=this.gl,r=this.getQueryTimerExtensionWebGL2(),o=s.createQuery();return s.beginQuery(r.TIME_ELAPSED_EXT,o),o}const t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if(et().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const e=this.gl,s=this.getQueryTimerExtensionWebGL2();e.endQuery(s.TIME_ELAPSED_EXT);return}const t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(t){return await TI(()=>this.disposed||this.isQueryAvailable(t,et().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(t,et().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(t,e){if(e===0)return null;if(e===2){const s=this.gl;return s.getQueryParameter(t,s.QUERY_RESULT)/1e6}else{const s=this.getQueryTimerExtensionWebGL1();return s.getQueryObjectEXT(t,s.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,e){if(e===0)return!0;if(e===2){const s=this.gl,r=this.getQueryTimerExtensionWebGL2(),o=s.getQueryParameter(t,s.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),o&&!this.disjoint}else{const s=this.getQueryTimerExtensionWebGL1(),r=s.getQueryObjectEXT(t,s.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),r&&!this.disjoint}}pollFence(t){return new Promise(e=>{this.addItemToPoll(()=>t.isFencePassed(),()=>e())})}pollItems(){const t=HJ(this.itemsToPoll.map(e=>e.isDoneFn));for(let e=0;e<=t;++e){const{resolveFn:s}=this.itemsToPoll[e];s()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){if(this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1)return;let s;"setTimeoutCustom"in et().platform&&(s=et().platform.setTimeoutCustom.bind(et().platform)),TI(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,s)}bindTextureToFrameBuffer(t){this.throwIfDisposed(),bb(this.gl,t,this.framebuffer),this.debug&&$f(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(bb(this.gl,this.outputTexture,this.framebuffer),this.debug&&$f(this.gl)):qk(this.gl,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);const s=e();return this.unbindTextureToFrameBuffer(),s}setOutputMatrixTextureDriver(t,e,s){this.throwIfDisposed();const r=this.gl;bb(r,t,this.framebuffer),this.debug&&$f(r),this.outputTexture=t,wt(r,()=>r.viewport(0,0,e,s)),wt(r,()=>r.scissor(0,0,e,s))}setOutputMatrixWriteRegionDriver(t,e,s,r){this.throwIfDisposed(),wt(this.gl,()=>this.gl.scissor(t,e,s,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}}function HJ(n){let t=0;for(;t<n.length&&n[t]();++t);return t-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:jJ,bincountImpl:FE,bincountReduceImpl:qJ,bitwiseAndImpl:KJ,castImpl:XJ,ceilImpl:YJ,concatImpl:JJ,equalImpl:ZJ,expImpl:QJ,expm1Impl:tZ,floorImpl:eZ,gatherNdImpl:nZ,gatherV2Impl:sZ,greaterImpl:rZ,greaterEqualImpl:oZ,lessImpl:aZ,lessEqualImpl:iZ,linSpaceImpl:uZ,logImpl:lZ,maxImpl:cZ,maximumImpl:dZ,minimumImpl:hZ,multiplyImpl:pZ,negImpl:fZ,notEqualImpl:mZ,prodImpl:gZ,raggedGatherImpl:yZ,raggedRangeImpl:bZ,raggedTensorToTensorImpl:xZ,rangeImpl:wZ,rsqrtImpl:vZ,scatterImpl:IZ,sigmoidImpl:kZ,simpleAbsImpl:OE,sliceImpl:$Z,sparseFillEmptyRowsImpl:SZ,sparseReshapeImpl:NZ,sparseSegmentReductionImpl:PE,sqrtImpl:CZ,staticRegexReplaceImpl:_Z,stridedSliceImpl:TZ,stringNGramsImpl:EZ,stringSplitImpl:AZ,stringToHashBucketFastImpl:DZ,subImpl:RZ,tileImpl:FZ,topKImpl:OZ,transposeImpl:Q0,uniqueImpl:PZ}=B6;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LE(n,t){return["x","y","z","w","u","v"].slice(0,t).map(e=>`${n}.${e}`)}function rs(n,t){return t===1?[n]:LE(n,t)}function LZ(n,t){if(n===1)return"rc";let e="";for(let s=0;s<n;s++)e+=t[s],s<n-1&&(e+=",");return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MZ{constructor(t){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.enableShapeUniforms=Jn(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{const e=rs("rc",this.rank),s=Te(this.rank),r=this.getOutOfBoundsCondition(e),o=this.getSetup(e),a=this.getOutput(e);this.userCode=`
        void main() {
          ${s} rc = getOutputCoords();

          if(${r}) {
            setOutput(vec4(0));
          } else {
            ${o}

            setOutput(vec4(${a}));
          }
        }
      `}}getSourceCoordsArr(t){const e=[];for(let s=0;s<=1;s++)for(let r=0;r<=1;r++){let o=`${s===0?"r":"rp1"}, ${r===0?"c":"cp1"}`;for(let a=2;a<this.rank;a++)o=`${t[t.length-1-a]},`+o;e.push(o)}return e}getOutOfBoundsCondition(t){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let e="";for(let s=this.rank-2;s<this.rank;s++)e+=`${t[s]} >= ${this.enableShapeUniforms?`outShape[${s}]`:this.outputShape[s]}`,s<this.rank-1&&(e+="||");return e}getSetup(t){if(this.rank===1)return"";const e=t.slice(-2),s=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${e[0]};
      int c = ${e[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${s};
      bool rEdge = rp1 >= ${r};
    `}getOutput(t){const e=this.getSourceCoordsArr(t);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${e[0]}),
            cEdge ? 0. : getA(${e[1]}),
            rEdge ? 0. : getA(${e[2]}),
            rEdge || cEdge ? 0. : getA(${e[3]})`}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ME{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=t,this.enableShapeUniforms=Jn(this.outputShape.length);let s="";for(let r=0;r<4;r++){let o="thisRC = rc;";r%2===1&&(o+="thisRC.z += 1;"),r>1&&(o+="thisRC.y += 1;"),s+=`
        ${o}
        ${r>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${r}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${r>0?"}":""}
      `}this.userCode=`
      ${BZ(e,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?J0():Y0(t)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":t[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":t[2]};

        ${s}

        setOutput(result);
      }
    `}}function BZ(n,t){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${t?L9(["r","c","d"],"inputShape"):iu(["r","c","d"],n)}
      return ivec3(r, c, d);
    }
  `}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zZ{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(t,e,s){const r=Zk(e,s),o=Qk(t,r,s);o in this.freeTextures||(this.freeTextures[o]=[]),o in this.usedTextures||(this.usedTextures[o]=[]);const a=Jk(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,s);if(this.freeTextures[o].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const u=this.freeTextures[o].pop();return this.usedTextures[o].push(u),u}let i;return r===Fn.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):r===Fn.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):r===Fn.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):r===Fn.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):r===Fn.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[o].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(t,e,s,r){if(this.freeTextures==null)return;const o=Zk(s,r),a=Qk(e,o,r);a in this.freeTextures||(this.freeTextures[a]=[]);const i=Jk(e,o,this.gpgpu.gl,this.gpgpu.textureConfig,r),u=et().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");u!==-1&&this._numBytesAllocated>u?(this.gpgpu.deleteMatrixTexture(t.texture),this._numBytesAllocated-=i):(this.freeTextures[a].push(t),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const c=this.usedTextures[a],l=c&&c.indexOf(t);if(l==null||l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");c[l]=c[c.length-1],c.pop(),this.log()}log(){if(!this.logEnabled)return;const t=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${t})`);const e=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(const t in this.freeTextures)this.freeTextures[t].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});for(const t in this.usedTextures)this.usedTextures[t].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function VZ(n,t){const e=n;if(t===e.R32F)return 4;if(t===e.R16F)return 2;if(t===e.RGBA32F)return 16;if(t===n.RGBA)return 16;if(t===e.RGBA16F)return 8;if(t===e.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}function Jk(n,t,e,s,r){const o=WZ(t,s);let a;if(r){const[u,c]=Wc(n[0],n[1]);a=u*c}else{const[u,c]=Xp(n[0],n[1]);a=u*c}const i=VZ(e,o);return a*i}function WZ(n,t){switch(n){case Fn.PACKED_2X2_FLOAT32:return DE(t);case Fn.PACKED_2X2_FLOAT16:return RE(t);case Fn.UNPACKED_FLOAT32:return TE(t);case Fn.UNPACKED_FLOAT16:return EE(t);case Fn.PACKED_4X1_UNSIGNED_BYTE:return AE(t);default:throw new Error(`Unknown physical texture type ${n}`)}}function UZ(n){return et().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?n?Fn.PACKED_2X2_FLOAT32:Fn.UNPACKED_FLOAT32:n?Fn.PACKED_2X2_FLOAT16:Fn.UNPACKED_FLOAT16}function Zk(n,t){if(n===Hs.UPLOAD)return Fn.PACKED_2X2_FLOAT32;if(n===Hs.RENDER||n==null)return UZ(t);if(n===Hs.DOWNLOAD||n===Hs.PIXELS)return Fn.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${n}`)}function Qk(n,t,e){return`${n[0]}_${n[1]}_${t}_${e}`}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class no{constructor(t,e){this.variableNames=["A"],this.outputShape=t,this.enableShapeUniforms=Jn(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${e}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}}const yr="if (isnan(x)) return x;",GZ="return x;",t$="return abs(x);",HZ="return (x >= 0.0) ? x : (exp(x) - 1.0);",jZ=yr+`
  return (x < 0.0) ? 0.0 : x;
`,qZ=yr+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,ua="return x;",KZ="return 1.0 / (1.0 + exp(-1.0 * x));";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XZ="return x;",YZ=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,JZ=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,ZZ=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,QZ="return 1.0 / (1.0 + exp(-1.0 * x));";class ga{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.enableShapeUniforms=Jn(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${e}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tQ{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t,this.enableShapeUniforms=Jn(this.outputShape.length);const e=t.length,s=rs("rc",e),r=Te(e),o=LZ(e,s),a=s.slice(-2),i=e<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`
      void main() {
        ${r} rc = getOutputCoords();
        vec4 packedInput = getA(${o});

        setOutput(getChannel(packedInput, ${i}));
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eQ=SC,nQ=1e-7,sQ=1e-4,Cf={};function rQ(n){return n in Cf||(Cf[n]={}),Cf[n]}const oQ=et().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),aQ=600;function iQ(){return et().global.screen==null?1024:et().global.screen.height*et().global.screen.width*window.devicePixelRatio*aQ/1024/1024}class Ty extends $g{nextDataId(){return Ty.nextDataId++}constructor(t){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!et().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let e;if(t!=null){if(t instanceof vb)e=t;else{const s=zr(et().getNumber("WEBGL_VERSION"),t);e=new vb(s)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const s=zr(et().getNumber("WEBGL_VERSION"));e=new vb(s),this.binaryCache=rQ(et().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=e,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new zZ(this.gpgpu),this.numMBBeforeWarning=iQ(),this.texData=new Dw(this,kr())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(t,e,s,r,o,a){const i=this.makeTensorInfo(e,s),u=this.texData.get(i.dataId);u.isPacked=!1,u.texture={texture:t,texShape:[r,o]},u.texShape=[r,o];const c=Sf(e),l=new Yk(c,!1,a),d=this.runWebGLProgram(l,[i],s,[[r,o]]);return d.shape=e,u.texture=null,this.disposeIntermediateTensorInfo(i),d.dataId}write(t,e,s){if((et().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||et().getBool("DEBUG"))&&this.checkNumericalProblems(t),s==="complex64"&&t!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:e,dtype:s,values:t,usage:Hs.UPLOAD,refCount:1}),r}refCount(t){return this.texData.has(t)?this.texData.get(t).refCount:0}incRef(t){const e=this.texData.get(t);e.refCount++}decRef(t){if(this.texData.has(t)){const e=this.texData.get(t);e.refCount--}}move(t,e,s,r,o){if(et().getBool("DEBUG")&&this.checkNumericalProblems(e),r==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:s,dtype:r,values:e,usage:Hs.UPLOAD,refCount:o})}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}readSync(t){const e=this.texData.get(t),{values:s,dtype:r,complexTensorInfos:o,slice:a,shape:i,isPacked:u}=e;if(a!=null){let h;u?h=new ga(i,ua):h=new no(i,ua);const p=this.runWebGLProgram(h,[{dataId:t,shape:i,dtype:r}],r),f=this.readSync(p.dataId);return this.disposeIntermediateTensorInfo(p),f}if(s!=null)return this.convertAndCacheOnCPU(t);if(r==="string")return s;const c=this.activeTimers!=null;let l;c&&(l=Un());let d;if(r==="complex64"){const h=this.readSync(o.real.dataId),p=this.readSync(o.imag.dataId);d=qo(h,p)}else d=this.getValuesFromTexture(t);return c&&(this.downloadWaitMs+=Un()-l),this.convertAndCacheOnCPU(t,d)}async read(t){if(this.pendingRead.has(t)){const f=this.pendingRead.get(t);return new Promise(m=>f.push(m))}const e=this.texData.get(t),{values:s,shape:r,slice:o,dtype:a,complexTensorInfos:i,isPacked:u}=e;if(o!=null){let f;u?f=new ga(r,ua):f=new no(r,ua);const m=this.runWebGLProgram(f,[{dataId:t,shape:r,dtype:a}],a),g=this.read(m.dataId);return this.disposeIntermediateTensorInfo(m),g}if(s!=null)return this.convertAndCacheOnCPU(t);if(et().getBool("DEBUG")&&!et().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&et().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let c=null,l;if(a!=="complex64"&&et().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(t);const f=this.texData.get(l.dataId);c=this.gpgpu.createBufferFromTexture(f.texture.texture,...If(r))}this.pendingRead.set(t,[]),a!=="complex64"&&await this.gpgpu.createAndWaitForFence();let d;if(a==="complex64"){const f=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),m=f[0],g=f[1];d=qo(m,g)}else if(c==null)d=this.getValuesFromTexture(t);else{const f=j(r);d=this.gpgpu.downloadFloat32MatrixFromBuffer(c,f)}if(l!=null&&this.disposeIntermediateTensorInfo(l),c!=null){const f=this.gpgpu.gl;wt(f,()=>f.deleteBuffer(c))}const h=this.convertAndCacheOnCPU(t,d),p=this.pendingRead.get(t);return this.pendingRead.delete(t),p.forEach(f=>f(h)),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t)&&kr().removeDataId(t,this),this.pendingDeletes--),h}readToGPU(t,e={}){const s=this.texData.get(t),{values:r,shape:o,slice:a,dtype:i,isPacked:u,texture:c}=s;if(i==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(a!=null){let p;u?p=new ga(o,ua):p=new no(o,ua);const f=this.runWebGLProgram(p,[{dataId:t,shape:o,dtype:i}],i),m=this.readToGPU(f,e);return this.disposeIntermediateTensorInfo(f),m}if(c==null)throw r!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const l=this.decode(t,e.customTexShape),d=kr().makeTensorFromTensorInfo(l),h=this.texData.get(l.dataId);return Object.assign({tensorRef:d},h.texture)}bufferSync(t){const e=this.readSync(t.dataId);if(t.dtype==="string")try{const s=e.map(r=>Ea(r));return Zt(t.shape,t.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Zt(t.shape,t.dtype,e)}checkNumericalProblems(t){if(t!=null)for(let e=0;e<t.length;e++){const s=t[e];if(!c9(s))throw et().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${s} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${s} cannot be represented on this device.`)}}getValuesFromTexture(t){const{shape:e,dtype:s,isPacked:r}=this.texData.get(t),o=j(e);if(et().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const h=this.decode(t),p=this.texData.get(h.dataId),f=this.gpgpu.downloadMatrixFromPackedTexture(p.texture.texture,...If(e)).subarray(0,o);return this.disposeIntermediateTensorInfo(h),f}const a=et().getBool("WEBGL_PACK")&&r===!0,i=a?Sf(e):e,u=a?new NJ(i):new SJ(i),c=this.runWebGLProgram(u,[{shape:i,dtype:s,dataId:t}],"float32"),l=this.texData.get(c.dataId),d=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture.texture,l.texShape[0],l.texShape[1]).subarray(0,o);return this.disposeIntermediateTensorInfo(c),d}timerAvailable(){return et().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(t){const e=this.activeTimers,s=[];let r=!1;this.programTimersStack==null?(this.programTimersStack=s,r=!0):this.activeTimers.push(s),this.activeTimers=s,t();const o=$i(this.activeTimers.map(u=>u.query)).filter(u=>u!=null),a=$i(this.activeTimers.map(u=>u.name)).filter(u=>u!=null);this.activeTimers=e,r&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(et().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const u=await Promise.all(o);i.kernelMs=jM(u),i.getExtraProfileInfo=()=>u.map((c,l)=>({name:a[l],ms:c})).map(c=>`${c.name}: ${c.ms}`).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return et().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Un(),endMs:null}}endTimer(t){return et().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=Un(),t)}async getQueryTime(t){if(et().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(t);const e=t;return e.endMs-e.startMs}disposeData(t,e=!1){if(this.pendingDisposal.has(t))return!1;if(!this.texData.has(t))return!0;if(e?this.texData.get(t).refCount=0:this.texData.get(t).refCount--,!e&&this.texData.get(t).refCount>0)return!1;if(this.pendingRead.has(t))return this.pendingDisposal.add(t),this.pendingDeletes++,!1;this.releaseGPUData(t);const{complexTensorInfos:s}=this.texData.get(t);return s!=null&&(this.disposeData(s.real.dataId,e),this.disposeData(s.imag.dataId,e)),this.texData.delete(t),!0}releaseGPUData(t){const{texture:e,dtype:s,texShape:r,usage:o,isPacked:a,slice:i}=this.texData.get(t),u=i&&i.origDataId||t,c=this.dataRefCount.get(u);c>1?this.dataRefCount.set(u,c-1):(this.dataRefCount.delete(u),e!=null&&(this.numBytesInGPU-=this.computeBytes(r,s),this.textureManager.releaseTexture(e,r,o,a)));const l=this.texData.get(t);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(t){return this.uploadToGPU(t),this.texData.get(t).texture.texture}getDataInfo(t){return this.texData.get(t)}shouldExecuteOnCPU(t,e=oQ){return et().getBool("WEBGL_CPU_FORWARD")&&t.every(s=>this.texData.get(s.dataId).texture==null&&j(s.shape)<e)}getGPGPUContext(){return this.gpgpu}where(t){Gs("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const e=t.dataSync();return eQ(t.shape,e)}packedUnaryOp(t,e,s){const r=new ga(t.shape,e),o=this.compileAndRun(r,[t],s);return kr().makeTensorFromTensorInfo(o)}abs(t){if(this.shouldExecuteOnCPU([t])&&t.dtype!=="complex64"){const r=OE(this.texData.get(t.dataId).values);return this.makeOutput(t.shape,t.dtype,r)}if(et().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,t$,t.dtype);const e=new no(t.shape,t$),s=this.compileAndRun(e,[t]);return kr().makeTensorFromTensorInfo(s)}makeTensorInfo(t,e,s){let r;if(e==="string"&&s!=null&&s.length>0&&Vh(s[0])){const o=s.map(a=>Ia(a));r=this.write(o,t,e)}else r=this.write(s,t,e);return this.texData.get(r).usage=null,{dataId:r,shape:t,dtype:e}}makeOutput(t,e,s){return kr().makeTensorFromTensorInfo(this.makeTensorInfo(t,e,s),this)}unpackTensor(t){const e=new tQ(t.shape);return this.runWebGLProgram(e,[t],t.dtype)}packTensor(t){const e=new MZ(t.shape);return this.runWebGLProgram(e,[t],t.dtype,null,!0)}packedReshape(t,e){const s=[il(t.shape),...ul(t.shape)],r={dtype:t.dtype,shape:s,dataId:t.dataId},o=[il(e),...ul(e)],a=new ME(o,s),i=!0,u=[s],c=this.runWebGLProgram(a,[r],t.dtype,u,i);return{dataId:c.dataId,shape:e,dtype:c.dtype}}decode(t,e){const s=this.texData.get(t),{isPacked:r,shape:o,dtype:a}=s;if(e!=null){const h=j(o),p=e[0]*e[1]*4;T(h<=p,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}const i=Sf(o);let u;r?u=new $J(i):u=new kJ(i);const c=!0,l=[e??If(i)],d=this.runWebGLProgram(u,[{shape:i,dtype:a,dataId:t}],a,l,c,e);return{dtype:a,shape:o,dataId:d.dataId}}runWebGLProgram(t,e,s,r,o=!1,a){const i=this.makeTensorInfo(t.outputShape,s),u=this.texData.get(i.dataId);if(t.packedOutput&&(u.isPacked=!0),t.outPackingScheme===jd.DENSE){const y=a??If(t.outputShape);u.texShape=y.map(b=>b*2)}if(t.outTexUsage!=null&&(u.usage=t.outTexUsage),j(i.shape)===0)return u.values=jn(i.dtype,0),i;const c=[],l=e.map(y=>{if(y.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let b=this.texData.get(y.dataId);if(b.texture==null){if(!t.packedInputs&&j(y.shape)<=et().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:y.shape,texData:null,isUniform:!0,uniformValues:b.values};t.packedInputs&&(b.isPacked=!0,b.shape=y.shape)}if(this.uploadToGPU(y.dataId),!!b.isPacked!=!!t.packedInputs)y=b.isPacked?this.unpackTensor(y):this.packTensor(y),c.push(y),b=this.texData.get(y.dataId);else if(b.isPacked&&!Tm(b.shape,y.shape)){const x=y,w=y.shape;y.shape=b.shape,y=this.packedReshape(y,w),c.push(y),b=this.texData.get(y.dataId),x.shape=w}return{shape:y.shape,texData:b,isUniform:!1}});this.uploadToGPU(i.dataId);const d={shape:i.shape,texData:u,isUniform:!1},h=IJ(t,l,d),p=this.getAndSaveBinary(h,()=>wJ(this.gpgpu,t,l,d)),f=this.activeTimers!=null;let m;f&&(m=this.startTimer()),et().get("ENGINE_COMPILE_ONLY")||vJ(this.gpgpu,p,l,d,r),c.forEach(y=>this.disposeIntermediateTensorInfo(y)),f&&(m=this.endTimer(m),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(m)}));const g=et().getNumber("WEBGL_FLUSH_THRESHOLD");if(g>0){const y=Un();y-this.lastGlFlushTime>g&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=y)}if(!et().getBool("WEBGL_LAZILY_UNPACK")&&u.isPacked&&o===!1){const y=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),y}return i}compileAndRun(t,e,s,r,o=!1){return s=s||e[0].dtype,this.runWebGLProgram(t,e,s,r,o)}getAndSaveBinary(t,e){return t in this.binaryCache||(this.binaryCache[t]=e()),this.binaryCache[t]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(et().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=Q(()=>{if(!et().get("WEBGL_RENDER_FLOAT32_ENABLED")){const t=et().getBool("DEBUG");et().set("DEBUG",!1);const e=this.abs(xe(1e-8)).dataSync()[0];if(et().set("DEBUG",t),e>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?nQ:sQ}uploadToGPU(t){const e=this.texData.get(t),{shape:s,dtype:r,values:o,texture:a,usage:i,isPacked:u}=e;if(a!=null)return;const c=this.activeTimers!=null;let l;c&&(l=Un());let d=e.texShape;if(d==null&&(d=_9(s,u),e.texShape=d),o!=null){const h=Sf(s);let p,f=d[1],m=d[0];const g=o instanceof Uint8Array||o instanceof Uint8ClampedArray;(u||!g)&&([f,m]=Wc(d[0],d[1])),u?p=new _J(h,g):p=new Yk(h,g);const y=g?[m,f]:d,b=this.makeTensorInfo(y,r),x=this.texData.get(b.dataId);g?x.usage=Hs.PIXELS:x.usage=Hs.UPLOAD,x.texShape=y,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(b.dataId),f,m,o);const w=[[m,f]],k=this.runWebGLProgram(p,[b],r,w,!0),S=this.texData.get(k.dataId);e.texShape=S.texShape,e.isPacked=S.isPacked,e.usage=S.usage,et().get("ENGINE_COMPILE_ONLY")?this.disposeData(k.dataId):(e.texture=S.texture,e.values=null,this.texData.delete(k.dataId)),this.disposeIntermediateTensorInfo(b),c&&(this.uploadWaitMs+=Un()-l)}else{const h=this.acquireTexture(d,i,r,u);e.texture=h}}convertAndCacheOnCPU(t,e){const s=this.texData.get(t),{dtype:r}=s;return e!=null&&(s.values=uQ(e,r)),s.values}acquireTexture(t,e,s,r){if(this.numBytesInGPU+=this.computeBytes(t,s),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){const o=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${o} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(t,e,r)}computeBytes(t,e){return t[0]*t[1]*Ju(e)}checkCompileCompletion(){for(const[,t]of Object.entries(this.binaryCache))this.checkCompletion_(t)}async checkCompileCompletionAsync(){const t=[];if(this.gpgpu.parallelCompilationExtension){for(const[,e]of Object.entries(this.binaryCache))t.push(this.checkCompletionAsync_(e));return Promise.all(t)}else{for(const[,e]of Object.entries(this.binaryCache)){const s=new Promise(r=>{try{this.checkCompletion_(e),r(!0)}catch(o){throw o}});t.push(s)}return Promise.all(t)}}async checkCompletionAsync_(t){return this.gpgpu.gl.getProgramParameter(t.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(t):(await WC(),this.checkCompletionAsync_(t))}checkCompletion_(t){if(this.gpgpu.gl.getProgramParameter(t.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(t.webGLProgram)),this.gpgpu.gl.getShaderParameter(t.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(kE(t.source,this.gpgpu.gl.getShaderInfoLog(t.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(const t of Object.values(this.binaryCache)){this.gpgpu.buildVao(t.webGLProgram);const{variablesLocations:e,customUniformLocations:s,infLoc:r,nanLoc:o,outShapeLocation:a,outShapeStridesLocation:i,outTexShapeLocation:u}=_E(this.gpgpu,t.program,t.webGLProgram);t.variablesLocations=e,t.customUniformLocations=s,t.infLoc=r,t.nanLoc=o,t.outShapeLocation=a,t.outShapeStridesLocation=i,t.outTexShapeLocation=u}}createTensorFromGPUData(t,e,s){t.channels=t.channels||"RGBA";const{texture:r,height:o,width:a,channels:i}=t,u=kr().backend;if(!u.gpgpu.gl.isTexture(r))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const c=u.writeTexture(r,e,s,o,a,i);return kr().makeTensorFromDataId(c,e,s,u)}}Ty.nextDataId=0;function uQ(n,t){if(t==="float32"||t==="complex64")return n;if(t==="int32"||t==="bool"){const e=t==="int32"?new Int32Array(n.length):new Uint8Array(n.length);for(let s=0;s<e.length;++s)e[s]=Math.round(n[s]);return e}else throw new Error(`Unknown dtype ${t}`)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */zN()&&i1("webgl",()=>new Ty,2);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tv=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;class Pi{constructor(t,e,s){this.variableNames=["A","B"],this.outputShape=Ut(e,s),this.enableShapeUniforms=Jn(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${t}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lu=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;class qc{constructor(t,e,s,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Ut(e,s);const o=this.outputShape.length;this.enableShapeUniforms=Jn(o);let a="";if(r)if(o===0||j(this.outputShape)===1)a=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(a=`
          ${Te(o)} coords = getOutputCoords();
        `,o===1)this.enableShapeUniforms?a+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:a+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{const u=rs("coords",o);this.enableShapeUniforms?a+=`
            bool nextRowOutOfBounds =
              (${u[o-2]} + 1) >= outShape[${o} - 2];
            bool nextColOutOfBounds =
              (${u[o-1]} + 1) >= outShape[${o} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:a+=`
            bool nextRowOutOfBounds =
              (${u[o-2]} + 1) >= ${this.outputShape[o-2]};
            bool nextColOutOfBounds =
              (${u[o-1]} + 1) >= ${this.outputShape[o-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${t}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${a}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ls(n){const{inputs:t,backend:e}=n,{x:s}=t;return e.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const lQ={kernelName:jl,backendName:"webgl",kernelFunc:Ls};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ka(n){const{inputs:t,backend:e}=n,{real:s,imag:r}=t,o=e.makeTensorInfo(s.shape,"complex64"),a=e.texData.get(o.dataId),i=Ls({inputs:{x:s},backend:e}),u=Ls({inputs:{x:r},backend:e});return a.complexTensorInfos={real:i,imag:u},o}const cQ={kernelName:Bw,backendName:"webgl",kernelFunc:Ka};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BE="return (a < 0.) ? b * a : a;",zE=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function dQ(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{alpha:o}=s,a=e.makeTensorInfo([],"float32",Va(o,"float32")),i=et().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new qc(zE,r.shape,a.shape):new Pi(BE,r.shape,a.shape),u=e.runWebGLProgram(i,[r,a],"float32");return e.disposeIntermediateTensorInfo(a),u}const hQ={kernelName:Yl,backendName:"webgl",kernelFunc:dQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VE="return (a < 0.) ? b * a : a;",WE=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function pQ(n){const{inputs:t,backend:e}=n,{x:s,alpha:r}=t,o=et().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new qc(WE,s.shape,r.shape):new Pi(VE,s.shape,r.shape);return e.runWebGLProgram(o,[s,r],"float32")}const fQ={kernelName:hc,backendName:"webgl",kernelFunc:pQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kc="if (isnan(x)) return x;";function ie({opSnippet:n,packedOpSnippet:t,cpuKernelImpl:e,dtype:s}){return({inputs:r,backend:o})=>{const{x:a}=r,i=o,u=s||a.dtype;if(i.shouldExecuteOnCPU([a])&&e!=null){const d=i.texData.get(a.dataId),h=e(d.values,u);return i.makeTensorInfo(a.shape,u,h)}const c=et().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&t!=null;let l;return c?l=new ga(a.shape,t):l=new no(a.shape,n),i.runWebGLProgram(l,[a],u)}}function Bn({opSnippet:n,packedOpSnippet:t,checkOutOfBounds:e=!1,supportsComplex:s=!1,cpuKernelImpl:r,dtype:o}){return({inputs:a,backend:i})=>{const{a:u,b:c}=a,l=i;if(s&&u.dtype==="complex64"){const f=l.texData.get(u.dataId),m=l.texData.get(c.dataId),[g,y]=[[f.complexTensorInfos.real,m.complexTensorInfos.real],[f.complexTensorInfos.imag,m.complexTensorInfos.imag]].map(x=>{const[w,v]=x,k={dataId:w.dataId,dtype:w.dtype,shape:u.shape},S={dataId:v.dataId,dtype:v.dtype,shape:c.shape},_=new Pi(n,u.shape,c.shape);return l.runWebGLProgram(_,[k,S],Os(w.dtype,v.dtype))}),b=Ka({inputs:{real:g,imag:y},backend:l});return l.disposeIntermediateTensorInfo(g),l.disposeIntermediateTensorInfo(y),b}const d=o||Os(u.dtype,c.dtype);if((u.dtype==="string"||c.dtype==="string"||l.shouldExecuteOnCPU([u,c]))&&r!=null){const f=l.texData.get(u.dataId).values,m=l.texData.get(c.dataId).values,g=u.dtype==="string"?Ko(f):f,y=u.dtype==="string"?Ko(m):m,[b,x]=r(u.shape,c.shape,g,y,d),w=l.makeTensorInfo(x,d),v=l.texData.get(w.dataId);return v.values=b,w}const h=et().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&t!=null;let p;return h?p=new qc(t,u.shape,c.shape,e):p=new Pi(n,u.shape,c.shape),l.runWebGLProgram(p,[u,c],d)}}function qd(n,t=!1){if(n==="linear")return t?XZ:GZ;if(n==="relu")return t?JZ:jZ;if(n==="elu")return t?YZ:HZ;if(n==="relu6")return t?ZZ:qZ;if(n==="prelu")return t?WE:VE;if(n==="leakyrelu")return t?zE:BE;if(n==="sigmoid")return t?QZ:KZ;throw new Error(`Activation ${n} has not been implemented for the WebGL backend.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class UE{constructor(t,e,s,r=!1,o=!1,a=!1,i=null,u=!1,c=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s,this.enableShapeUniforms=Jn(this.outputShape.length);const l=r?t[1]:t[2],d=Math.ceil(l/2),h=r?"i * 2, rc.y":"rc.y, i * 2",p=o?"rc.z, i * 2":"i * 2, rc.z",f=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],m=o?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let g="",y="";i&&(u?g=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${i}
        }`:c?g=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${i}
        }`:g=`vec4 activation(vec4 x) {
          ${i}
        }`,y="result = activation(result);");const b=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),u&&this.variableNames.push("preluActivationWeights"),c&&this.variableNames.push("leakyreluAlpha");let x="rc.x",w="rc.x";t[0]<e[0]?x=`imod(rc.x, ${t[0]})`:e[0]<t[0]&&(w=`imod(rc.x, ${e[0]})`),this.userCode=`
      ${g}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${d}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${x};
        int batchB = ${w};
        for (int i = 0; i < ${d}; i++) {
          vec4 a = getMatrixA(batchA, ${h});
          vec4 b = getMatrixB(batchB, ${p});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${f[0]} * ${m[0]});
          result += (${f[1]} * ${m[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${b}

        ${y}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const e$={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class n${constructor(t,e,s){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Ut(e,s),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${t}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const s$="return a * b;";function ev(n){const{inputs:t,backend:e}=n,{a:s,b:r}=t,o=Os(s.dtype,r.dtype);if(s.dtype==="complex64"){const i=e.texData.get(s.dataId),u=e.texData.get(r.dataId),c=new n$(e$.REAL,s.shape,r.shape),l=new n$(e$.IMAG,s.shape,r.shape),d=[{dataId:i.complexTensorInfos.real.dataId,dtype:i.complexTensorInfos.real.dtype,shape:s.shape},{dataId:i.complexTensorInfos.imag.dataId,dtype:i.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:u.complexTensorInfos.real.dataId,dtype:u.complexTensorInfos.real.dtype,shape:r.shape},{dataId:u.complexTensorInfos.imag.dataId,dtype:u.complexTensorInfos.imag.dtype,shape:r.shape}],h=e.runWebGLProgram(c,d,"float32"),p=e.runWebGLProgram(l,d,"float32"),f=Ka({inputs:{real:h,imag:p},backend:e});return e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(p),f}if(e.shouldExecuteOnCPU([s,r])){const i=e.texData.get(s.dataId),u=e.texData.get(r.dataId),[c,l]=pZ(s.shape,r.shape,i.values,u.values,o),d=e.makeTensorInfo(l,o),h=e.texData.get(d.dataId);return h.values=c,d}let a;return et().getBool("WEBGL_PACK_BINARY_OPERATIONS")?a=new qc(s$,s.shape,r.shape):a=new Pi(s$,s.shape,r.shape),e.runWebGLProgram(a,[s,r],o)}const mQ={kernelName:uc,backendName:"webgl",kernelFunc:ev};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gQ(n,t,e){const s=[il(n.shape),...ul(n.shape)],r={dtype:n.dtype,shape:s,dataId:n.dataId},o=[il(t),...ul(t)],a=new ME(o,s),i=!0,u=[s],c=e.runWebGLProgram(a,[r],n.dtype,u,i);return{dataId:c.dataId,shape:t,dtype:c.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yt(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{shape:o}=s,a=e,i=j(r.shape),u=Fw(o,i),c=j(u);T(i===c,()=>`The new shape (${u}) has ${c} elements and the old shape (${r.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`);const l=a.texData.get(r.dataId);return l.isPacked&&!Tm(r.shape,u)&&!(l.texture!==null&&Tm(l.shape,u))?gQ(r,u,a):(a.incRef(r.dataId),{dataId:r.dataId,shape:u,dtype:r.dtype})}const yQ={kernelName:kp,backendName:"webgl",kernelFunc:yt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class r${constructor(t,e){this.variableNames=["x"];const{windowSize:s,batchSize:r,inSize:o,outSize:a}=t;this.outputShape=[r,a];const i=Math.floor(s/4)*4,u=s%4;let c="sumValue += dot(values, ones);";if(e!=null){const d=1/e;c=`sumValue += dot(values * ${Yu(d)?d.toPrecision(2):d}, ones);`}let l="";o%s>0&&(l=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${l}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        float sumValue = 0.0;

        for (int i = 0; i < ${i}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${c}
        }

        int inIdx = inOffset + ${i};
        if (${u===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${c}
        } else if (${u===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${c}
        } else if (${u===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${c}
        }
        setOutput(sumValue);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bQ{constructor(t,e){this.variableNames=["x"];const{windowSize:s,batchSize:r,inSize:o,outSize:a}=t;this.outputShape=[r,a];let i="0.0",u="";e==="prod"?i="1.0":e==="min"?(i="1.0 / 1e-20",u="min"):e==="max"&&(i="-1.0 / 1e-20",u="max");let c=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="sum"?c="sumValue":e==="prod"?c="prodValue":e==="all"?c="allValue":e==="any"&&(c="anyValue");const l=Math.floor(s/4)*4,d=s%4;let h=`
      if (${e==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${e==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${u}(values, minMaxValue);
        if (${e==="min"} || ${e==="max"}) {
          minMaxValue = ${u}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,p="vec4";e==="all"?(i="1.0",h=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,p="bvec4"):e==="any"&&(i="0.0",h=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,p="bvec4");let f="";o%s>0&&(f=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${i};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        vec4 minMaxValue = vec4(${i});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${l}; i += 4) {
          int inIdx = inOffset + i;
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${h}
        }

        int inIdx = inOffset + ${l};
        if (${d===1}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${h}
        } else if (${d===2}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${h}
        } else if (${d===3}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${h}
        }
        setOutput(${c});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xQ(n){const t=[];for(;t.length===0||t[t.length-1].outSize!==1;){const e=t.length?t[t.length-1].outSize:n[1],s=uy(e);t.push({inSize:e,windowSize:s,outSize:Math.ceil(e/s)})}return t}function cu(n,t,e,s){const r=xQ(n.shape);let o=n;for(let a=0;a<r.length;a++){const{inSize:i,windowSize:u,outSize:c}=r[a];let l,d;e==="mean"?l=a===0?new r$({windowSize:u,inSize:i,batchSize:n.shape[0],outSize:c},i):new r$({windowSize:u,inSize:i,batchSize:n.shape[0],outSize:c}):l=new bQ({windowSize:u,inSize:i,batchSize:n.shape[0],outSize:c},e),d=o,o=s.runWebGLProgram(l,[o],t),d.dataId!==n.dataId&&s.disposeIntermediateTensorInfo(d)}return o}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wQ{constructor(t,e){this.variableNames=["A"];const s=new Array(t.length);for(let a=0;a<s.length;a++)s[a]=t[e[a]];this.outputShape=s,this.rank=s.length;const r=Te(this.rank),o=vQ(e);this.userCode=`
    void main() {
      ${r} resRC = getOutputCoords();
      setOutput(getA(${o}));
    }
    `}}function vQ(n){const t=n.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const e=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(t);for(let r=0;r<n.length;r++)s[n[r]]=e[r];return s.join()}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class IQ{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const s=new Array(t.length);for(let l=0;l<s.length;l++)s[l]=t[e[l]];if(this.outputShape=s,this.rank=s.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=Te(this.rank),o=LE("rc",this.rank),a=new Array(this.rank);for(let l=0;l<e.length;l++)a[e[l]]=o[l];const i=`vec2(${a.slice(-2).join()})`,u=`++${o[this.rank-1]} < ${s[this.rank-1]}`,c=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`
    void main() {
      ${r} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${c};
      if(${u}) {
        result[1] = ${c};
      }
      --${o[this.rank-1]};
      if(++${o[this.rank-2]} < ${s[this.rank-2]}) {
        result[2] = ${c};
        if(${u}) {
          result[3] = ${c};
        }
      }
      setOutput(result);
    }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ey(n,t,e){const s=et().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new IQ(n.shape,t):new wQ(n.shape,t);return e.runWebGLProgram(s,[n],n.dtype)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kQ(n,t,e,s){const r=t,o=n.shape.length,a=Gt(r,n.shape);let i=a;const u=Ve(i,o),c=u!=null;let l=n;c&&(l=Ey(n,u,s),i=Fe(i.length,o)),ze("sum",i,o);const[d,h]=Ge(l.shape,i);let p=d;e&&(p=Re(d,a));const f=j(h),g=j(n.shape)/f,y=yt({inputs:{x:l},attrs:{shape:[g,f]},backend:s}),b=r1(n.dtype),x=cu(y,b,"sum",s),w=yt({inputs:{x},attrs:{shape:p},backend:s});return s.disposeIntermediateTensorInfo(y),s.disposeIntermediateTensorInfo(x),c&&s.disposeIntermediateTensorInfo(l),w}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ay(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,keepDims:a}=s;return kQ(r,o,a,e)}const $Q={kernelName:Tc,backendName:"webgl",kernelFunc:Ay};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ls(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{perm:o}=s,a=e,i=r.shape.length,u=new Array(i);for(let l=0;l<u.length;l++)u[l]=r.shape[o[l]];let c;if(a.shouldExecuteOnCPU([r])){const d=a.texData.get(r.dataId).values,h=Q0(d,r.shape,r.dtype,o,u);c=a.makeTensorInfo(u,r.dtype);const p=a.texData.get(c.dataId);p.values=h}else c=Ey(r,o,a);return c}const SQ={kernelName:wa,backendName:"webgl",kernelFunc:ls};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GE=1e3;function Em({a:n,b:t,transposeA:e,transposeB:s,backend:r,bias:o=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:u=null}){const c=n.shape.length,l=t.shape.length,d=e?n.shape[c-2]:n.shape[c-1],h=s?t.shape[l-1]:t.shape[l-2],p=e?n.shape[c-1]:n.shape[c-2],f=s?t.shape[l-2]:t.shape[l-1],m=n.shape.slice(0,-2),g=t.shape.slice(0,-2),y=j(m),b=j(g),w=Ut(n.shape.slice(0,-2),t.shape.slice(0,-2)).concat([p,f]);T(d===h,()=>`Error in matMul: inner shapes (${d}) and (${h}) of Tensors with shapes ${n.shape} and ${t.shape} and transposeA=${e} and transposeB=${s} must match.`);const v=e?[y,d,p]:[y,p,d],k=s?[b,f,h]:[b,h,f],S=yt({inputs:{x:n},backend:r,attrs:{shape:v}}),_=yt({inputs:{x:t},backend:r,attrs:{shape:k}}),C=[S,_],N=Math.max(y,b),$=e?S.shape[1]:S.shape[2],A=o!=null,D=a!=null,R=u==="leakyrelu",F=u!=null?qd(u,!0):null,z=A||D||R||F!=null;let H;if((p===1||f===1)&&$>GE&&z===!1){let U=S,Z=_;e&&(U=ls({inputs:{x:S},backend:r,attrs:{perm:[0,2,1]}}),C.push(U)),s&&(Z=ls({inputs:{x:_},backend:r,attrs:{perm:[0,2,1]}}),C.push(Z));const tt=f!==1,at=f===1;let ot=U;tt&&(ot=yt({inputs:{x:U},backend:r,attrs:{shape:[N,$,1]}}),C.push(ot));const lt=f===1?2:1;let ct=Z;at&&(ct=yt({inputs:{x:Z},backend:r,attrs:{shape:[N,1,$]}}),C.push(ct));const bt=ev({inputs:{a:ot,b:ct},backend:r});H=Ay({inputs:{x:bt},backend:r,attrs:{axis:lt,keepDims:!0}}),C.push(bt)}else{const U=Os(n.dtype,t.dtype),Z=new UE(v,k,[N,p,f],e,s,A,F,D,R),tt=[S,_];if(o!=null&&tt.push(o),D&&tt.push(a),R){const at=r.makeTensorInfo([],"float32",Va(i,"float32"));tt.push(at),C.push(at)}H=r.runWebGLProgram(Z,tt,U)}const P=yt({inputs:{x:H},backend:r,attrs:{shape:w}});C.push(H);for(const U of C)r.disposeIntermediateTensorInfo(U);return P}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NQ(n){const{inputs:t,backend:e,attrs:s}=n,{a:r,b:o,bias:a,preluActivationWeights:i}=t,{transposeA:u,transposeB:c,activation:l,leakyreluAlpha:d}=s;return Em({a:r,b:o,transposeA:u,transposeB:c,backend:e,bias:a,preluActivationWeights:i,leakyreluAlpha:d,activation:l})}const CQ={kernelName:Zu,backendName:"webgl",kernelFunc:NQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o$="return abs(x);";function _Q(n){const{inputs:t,backend:e}=n,{x:s}=t;if(e.shouldExecuteOnCPU([s])&&s.dtype!=="complex64"){const o=e.texData.get(s.dataId),a=OE(o.values);return e.makeTensorInfo(s.shape,s.dtype,a)}let r;return et().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new ga(s.shape,o$):r=new no(s.shape,o$),e.runWebGLProgram(r,[s],s.dtype)}const TQ={kernelName:Wh,backendName:"webgl",kernelFunc:_Q};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EQ=yr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,AQ=ie({opSnippet:EQ}),DQ={kernelName:bl,backendName:"webgl",kernelFunc:AQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RQ=yr+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,FQ=ie({opSnippet:RQ}),OQ={kernelName:xl,backendName:"webgl",kernelFunc:FQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a$="return a + b;",PQ=Bn({opSnippet:a$,packedOpSnippet:a$,supportsComplex:!0,cpuKernelImpl:jJ}),LQ={kernelName:Xi,backendName:"webgl",kernelFunc:PQ};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MQ{constructor(t,e){this.outputShape=[],this.outputShape=t,this.variableNames=e.map((o,a)=>`T${a}`);const s=[];this.variableNames.forEach(o=>{s.push(`float v${o} = get${o}AtOutCoords();`)});const r=this.variableNames.map(o=>`v${o}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        float result = ${r};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class BQ{constructor(t,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=e.map((o,a)=>`T${a}`);const s=[];this.variableNames.forEach(o=>{s.push(`vec4 v${o} = get${o}AtOutCoords();`)});const r=this.variableNames.map(o=>`v${o}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        vec4 result = ${r};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wf(n){const{inputs:t,backend:e}=n,s=t;if(s.length===1)return Ls({inputs:{x:s[0]},backend:e});if(s.length>et().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const u=Math.floor(s.length/2),c=Wf({inputs:s.slice(0,u),backend:e}),l=Wf({inputs:s.slice(u),backend:e});return Wf({inputs:[c,l],backend:e})}const r=s.map(u=>u.dtype).reduce((u,c)=>Os(u,c)),o=s.map(u=>u.shape),i=et().getBool("WEBGL_PACK")?new BQ(s[0].shape,o):new MQ(s[0].shape,o);return e.runWebGLProgram(i,s,r)}const zQ={kernelName:Uh,backendName:"webgl",kernelFunc:Wf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VQ(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,keepDims:a}=s,i=r.shape.length,u=Gt(o,r.shape);let c=u;const l=Ve(c,i);let d=r;l!=null&&(d=ls({inputs:{x:r},backend:e,attrs:{perm:l}}),c=Fe(c.length,i)),ze("all",c,i);const[h,p]=Ge(d.shape,c),f=j(p),m=yt({inputs:{x:d},backend:e,attrs:{shape:[-1,f]}}),g=cu(m,m.dtype,"all",e);let y;if(a){const b=Re(h,u);y=yt({inputs:{x:g},backend:e,attrs:{shape:b}})}else y=yt({inputs:{x:g},backend:e,attrs:{shape:h}});return e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(g),l!=null&&e.disposeIntermediateTensorInfo(d),y}const WQ={kernelName:Gh,backendName:"webgl",kernelFunc:VQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UQ(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,keepDims:a}=s,i=r.shape.length,u=Gt(o,r.shape);let c=u;const l=Ve(c,i);let d=r;l!=null&&(d=ls({inputs:{x:r},backend:e,attrs:{perm:l}}),c=Fe(c.length,i)),ze("any",c,i);const[h,p]=Ge(d.shape,c),f=j(p),m=yt({inputs:{x:d},backend:e,attrs:{shape:[-1,f]}}),g=cu(m,m.dtype,"any",e);let y;if(a){const b=Re(h,u);y=yt({inputs:{x:g},backend:e,attrs:{shape:b}})}else y=yt({inputs:{x:g},backend:e,attrs:{shape:h}});return e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(g),l!=null&&e.disposeIntermediateTensorInfo(d),y}const GQ={kernelName:Hh,backendName:"webgl",kernelFunc:UQ};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class HQ{constructor(t,e,s){this.variableNames=["A"];const{windowSize:r,batchSize:o,outSize:a}=t;s||this.variableNames.push("bestIndicesA"),this.outputShape=[o,a];const i=e==="max"?">":"<",u=s?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${r}; i++) {
          int inIdx = ${u};
          float candidate = getA(batch, inIdx);
          if (candidate ${i} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jQ{constructor(t,e,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,T(t.length>2,()=>`Packed arg${s.charAt(0).toUpperCase()+s.slice(1)} supports only inputs with rank above 2.`);const o=t[t.length-1],a=Math.ceil(o/e);this.outputShape=t.slice(0,-1),a>1&&this.outputShape.push(a),r||this.variableNames.push("bestIndicesA");const i=this.outputShape,u=i.length,c=Te(u),l=rs("coords",u);let d,h;if(a===1){h=u+1;const _=Te(h);d=`
        ${_} sourceLocR = ${_}(${l.join()}, 0);
        ++${l[u-1]};
        ${_} sourceLocG = ${_}(${l.join()}, 0);
        ++${l[u-2]};
        ${_} sourceLocA = ${_}(${l.join()}, 0);
        --${l[u-1]};
        ${_} sourceLocB = ${_}(${l.join()}, 0);
        --${l[u-2]};`}else h=u,d=`
        ${c} sourceLocR = coords;
        ++${l[u-1]};
        ${c} sourceLocG = coords;
        ++${l[u-2]};
        ${c} sourceLocA = coords;
        --${l[u-1]};
        ${c} sourceLocB = coords;
        --${l[u-2]};`;const p=["x","y","z","w","u","v"].slice(0,h),f="."+p[h-1],m=p.map(_=>"int "+_),g=rs("sourceLocR",h-1).concat("inIdx.r"),y=rs("sourceLocG",h-1).concat("inIdx.g"),b=rs("sourceLocB",h-1).concat("inIdx.b"),x=rs("sourceLocA",h-1).concat("inIdx.a"),w=s==="max"?"greaterThan":"lessThan",v=r?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${y.join()}),
                             getBestIndicesAChannel(${b.join()}),
                             getBestIndicesAChannel(${x.join()})));`,k=`vec4(
            getAChannel(${g.join()}),
            hasNextCol ? getAChannel(${y.join()}) : 0.,
            hasNextRow ? getAChannel(${b.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${x.join()}) : 0.)`,S=r?"":`
      float getBestIndicesAChannel(${m.join()}) {
        return getChannel(getBestIndicesA(${p.join()}),
                                          vec2(${p.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${m.join()}) {
        return getChannel(getA(${p.join()}),
                               vec2(${p.slice(-2).join()}));
      }
      ${S}
      void main() {
        ${c} coords = getOutputCoords();
        bool hasNextCol = ${l[u-1]} < ${i[u-1]-1};
        bool hasNextRow = ${l[u-2]} < ${i[u-2]-1};
        ${d}
        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},
          sourceLocB${f}, sourceLocA${f}) * ${e};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${k};

        for (int i = 0; i < ${e}; i++) {
          inIdx = srcIdx;
          ${v}
          vec4 candidate = ${k};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${w}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HE(n,t,e,s=null){let r=t.shape[0],o=t.shape[1];s!=null&&(r=s.shape[0],o=s.shape[1]);const a=uy(o),i={windowSize:a,inSize:o,batchSize:r,outSize:Math.ceil(o/a)},u=new HQ(i,e,s==null),c=[t];s!=null&&c.push(s);const l=n.runWebGLProgram(u,c,"int32");if(l.shape[1]===1)return l;const d=HE(n,t,e,l);return n.disposeIntermediateTensorInfo(l),d}function jE(n,t,e,s=null){const r=s!=null?s.shape:t.shape,o=r[r.length-1],a=uy(o),i=new jQ(r,a,e,s==null),u=s==null?[t]:[t,s],c=n.runWebGLProgram(i,u,"int32");if(c.shape.length===t.shape.length){const l=jE(n,t,e,c);return n.disposeIntermediateTensorInfo(c),l}return c}function qE(n,t,e,s){const r=[e];if(ze("arg"+s.charAt(0).toUpperCase()+s.slice(1),r,t.shape.length),!et().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const o=[],a=n.texData.get(t.dataId),i=a!==null&&a.isPacked;let u=t;i&&(u=n.unpackTensor(t),o.push(u));const[c,l]=Ge(u.shape,r),d=j(l),h=yt({inputs:{x:u},backend:n,attrs:{shape:[-1,d]}});o.push(h);const p=HE(n,h,s);o.push(p);const f=yt({inputs:{x:p},backend:n,attrs:{shape:c}});return o.forEach(m=>n.disposeIntermediateTensorInfo(m)),f}return jE(n,t,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qQ(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o}=s;let a=Gt(o,r.shape);const i=Ve(a,r.shape.length);let u=r;const c=[];i!=null&&(u=ls({inputs:{x:r},backend:e,attrs:{perm:i}}),c.push(u),a=Fe(a.length,u.shape.length)),ze("argMax",[a[0]],u.shape.length);const l=qE(e,u,a[0],"max");return c.forEach(d=>e.disposeIntermediateTensorInfo(d)),l}const KQ={kernelName:jh,backendName:"webgl",kernelFunc:qQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XQ(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o}=s;let a=Gt(o,r.shape);const i=Ve(a,r.shape.length);let u=r;const c=[];i!=null&&(u=ls({inputs:{x:r},backend:e,attrs:{perm:i}}),c.push(u),a=Fe(a.length,u.shape.length)),ze("argMin",[a[0]],u.shape.length);const l=qE(e,u,a[0],"min");return c.forEach(d=>e.disposeIntermediateTensorInfo(d)),l}const YQ={kernelName:qh,backendName:"webgl",kernelFunc:XQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JQ=yr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,ZQ=ie({opSnippet:JQ}),QQ={kernelName:wl,backendName:"webgl",kernelFunc:ZQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ttt=yr+"return log(x + sqrt(x * x + 1.0));",ett=ie({opSnippet:ttt}),ntt={kernelName:vl,backendName:"webgl",kernelFunc:ett};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const stt=yr+`
  return atan(x);
`,rtt=ie({opSnippet:stt}),ott={kernelName:Il,backendName:"webgl",kernelFunc:rtt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const att=tv+`
  return atan(a, b);
`,itt=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+lu+`
  return result;
`,utt=Bn({opSnippet:att,packedOpSnippet:itt}),ltt={kernelName:$l,backendName:"webgl",kernelFunc:utt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ctt=yr+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,dtt=ie({opSnippet:ctt}),htt={kernelName:kl,backendName:"webgl",kernelFunc:dtt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Kd{constructor(t,e,s,r=!1,o=!1){if(this.variableNames=["x"],e==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const a=t.filterWidth,i=t.strideHeight,u=t.strideWidth,c=t.dilationHeight,l=t.dilationWidth,d=t.effectiveFilterHeight,h=t.effectiveFilterWidth,p=t.padInfo.top,f=t.padInfo.left;this.outputShape=t.outShape;const m=e==="avg",g=`((batch  * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + d`,y=`(xR * ${t.inWidth} + xC) * ${t.inChannels} + d`;let b="0.0";if(m||(b="-1.0 / 1e-20"),s){const _=">=";this.userCode=`
        const ivec2 strides = ivec2(${i}, ${u});
        const ivec2 pads = ivec2(${p}, ${f});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${d};
              wR += ${c}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${h};
                wC += ${l}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${_} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${r?o?g:y:`wR * ${h} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const x="max";let w=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="avg"&&(w="avgValue / max(count, 1.0)");const v=Math.floor(a/4)*4,k=a%4,S=`
      if (${m}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${x}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${i}, ${u});
      const ivec2 pads = ivec2(${p}, ${f});
      const float initializationValue = ${b};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${t.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${b});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${d};
            wR += ${c}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${t.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${v}; wC += 4) {
            int xC = xCCorner + wC * ${l};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${l}, d),
              getValue(batch, xR, xC + 2 * ${l}, d),
              getValue(batch, xR, xC + 3 * ${l}, d)
            );

            ${S}
          }

          int xC = xCCorner + ${v};
          if (${k===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${S}
          } else if (${k===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${l}, d),
              initializationValue,
              initializationValue
            );

            ${S}
          } else if (${k===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${l}, d),
              getValue(batch, xR, xC + 2 * ${l}, d),
              initializationValue
            );

            ${S}
          }
        }
        setOutput(${w});
      }
    `}}class nv{constructor(t,e,s,r=!1,o=!1){if(this.variableNames=["x"],e==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const a=t.filterWidth,i=t.strideDepth,u=t.strideHeight,c=t.strideWidth,l=t.dilationDepth,d=t.dilationHeight,h=t.dilationWidth,p=t.effectiveFilterDepth,f=t.effectiveFilterHeight,m=t.effectiveFilterWidth,g=t.padInfo.front,y=t.padInfo.top,b=t.padInfo.left;this.outputShape=t.outShape;const x=e==="avg";let w="0.0";if(x||(w="-1.0 / 1e-20"),s){const N=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${i}, ${u}, ${c});
        const ivec3 pads = ivec3(${g}, ${y}, ${b});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${p};
              wD += ${l}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${t.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${f};
                wR += ${d}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${t.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${m};
                  wC += ${h}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${t.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${N} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${r?o?`(((batch * ${t.inDepth} + xD) * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`((xD * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`wD * ${f} * ${m} +
                      wR * ${m} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const v="max";let k=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="avg"&&(k="avgValue / max(count, 1.0)");const S=Math.floor(a/4)*4,_=a%4,C=`
      if (${x}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${v}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${i}, ${u}, ${c});
      const ivec3 pads = ivec3(${g}, ${y}, ${b});
      const float initializationValue = ${w};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${t.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${w});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${p};
            wD += ${l}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${t.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${f};
            wR += ${d}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${S}; wC += 4) {
              int xC = xCCorner + wC * ${h};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${h}, ch),
                getValue(batch, xD, xR, xC + 2 * ${h}, ch),
                getValue(batch, xD, xR, xC + 3 * ${h}, ch)
              );

              ${C}
            }

            int xC = xCCorner + ${S};
            if (${_===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${C}
            } else if (${_===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${h}, ch),
                initializationValue,
                initializationValue
              );

              ${C}
            } else if (${_===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${h}, ch),
                getValue(batch, xD, xR, xC + 2 * ${h}, ch),
                initializationValue
              );

              ${C}
            }
          }
        }
        setOutput(${k});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ptt(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t;Yp(r,"avgPool");const{filterSize:o,strides:a,pad:i,dimRoundingMode:u}=s,c=1;T(Mn(a,c),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`);const l=Xn(r.shape,o,a,c,i,u);if(l.filterWidth===1&&l.filterHeight===1&&we(l.inShape,l.outShape))return Ls({inputs:{x:r},backend:e});const d=new Kd(l,"avg",!1);return e.runWebGLProgram(d,[r],"float32")}const ftt={kernelName:Sl,backendName:"webgl",kernelFunc:ptt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mtt(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{filterSize:o,strides:a,pad:i,dimRoundingMode:u,dataFormat:c}=s,l=[1,1,1],d=Js(r.shape,o,a,l,i,u,c),h=new nv(d,"avg",!1);return e.runWebGLProgram(h,[r],"float32")}const gtt={kernelName:Kh,backendName:"webgl",kernelFunc:mtt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ytt{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterHeight,s=t.filterWidth,r=t.strideHeight,o=t.strideWidth,a=t.dilationHeight,i=t.dilationWidth,u=t.effectiveFilterHeight,c=t.effectiveFilterWidth,l=u-1-t.padInfo.top,d=c-1-t.padInfo.left,h=1/(e*s);this.userCode=`
      const ivec2 pads = ivec2(${l}, ${d});
      const float avgMultiplier = float(${h});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${u};
            wR += ${a}) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${c};
            wC+= ${i}) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}}class btt{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterDepth,s=t.filterHeight,r=t.filterWidth,o=t.strideDepth,a=t.strideHeight,i=t.strideWidth,u=t.dilationDepth,c=t.dilationHeight,l=t.dilationWidth,d=t.effectiveFilterDepth,h=t.effectiveFilterHeight,p=t.effectiveFilterWidth,f=d-1-t.padInfo.front,m=h-1-t.padInfo.top,g=p-1-t.padInfo.left,y=1/(e*s*r);this.userCode=`
      const ivec3 pads = ivec3(${f}, ${m}, ${g});
      const float avgMultiplier = float(${y});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${d};
            wD += ${u}) {
          float dyD = float(dyDCorner + wD) / ${o}.0;

          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${h};
              wR += ${c}) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${p};
                wC += ${l}) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xtt(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,input:o}=t,a=o,{filterSize:i,strides:u,pad:c,dimRoundingMode:l}=s,d=[1,1,1],h=Js(a.shape,i,u,d,c,l),p=new btt(h);return e.runWebGLProgram(p,[r],a.dtype)}const wtt={kernelName:Cg,backendName:"webgl",kernelFunc:xtt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vtt(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,input:o}=t,a=o;Yp([r,o],"avgPoolGrad");const{filterSize:i,strides:u,pad:c}=s,l=Xn(a.shape,i,u,1,c),d=new ytt(l);return e.runWebGLProgram(d,[r],a.dtype)}const Itt={kernelName:Ng,backendName:"webgl",kernelFunc:vtt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ktt(n){const{inputs:t,backend:e,attrs:s}=n,{a:r,b:o}=t,{transposeA:a,transposeB:i}=s;return Em({a:r,b:o,transposeA:a,transposeB:i,backend:e})}const $tt={kernelName:Nl,backendName:"webgl",kernelFunc:ktt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Stt{constructor(t,e,s,r,o,a){this.outputShape=[],this.variableNames=["x","mean","variance"],Ut(t,e),Ut(t,s);let i="0.0";r!=null&&(Ut(t,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let u="1.0";o!=null&&(Ut(t,o),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${i};
        float scale = ${u};
        float inv = scale * inversesqrt(variance + float(${a}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ntt{constructor(t,e,s,r,o,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Ut(t,e),Ut(t,s);let i="vec4(0.0)";r!=null&&(Ut(t,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let u="vec4(1.0)";o!=null&&(Ut(t,o),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`
      void main() {
        vec4 offset = ${i};
        vec4 scale = ${u};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${a}));

        setOutput((x - mean) * inv + offset);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ctt=({inputs:n,backend:t,attrs:e})=>{const{x:s,mean:r,variance:o,offset:a,scale:i}=n;T(r.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),T(a==null||r.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),T(i==null||r.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:u}=e;u==null&&(u=.001);const c=[s,r,o];let l=null;a!=null&&(l=a.shape,c.push(a));let d=null;i!=null&&(d=i.shape,c.push(i));const h=et().getBool("WEBGL_PACK_NORMALIZATION")?new Ntt(s.shape,r.shape,o.shape,l,d,u):new Stt(s.shape,r.shape,o.shape,l,d,u);return t.runWebGLProgram(h,c,c[0].dtype)},_tt={kernelName:Gl,backendName:"webgl",kernelFunc:Ctt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ttt{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;const e=Te(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const s=Ett(this.rank);let r;const o=t.map((a,i)=>`sourceLoc.${Sx[i]} = start[${i}] + coords.${Sx[i]};`);r=`
        ${e} sourceLoc;
        ${e} coords = getOutputCoords();
        ${o.join(`
`)}
      `,this.userCode=`
      void main() {
        ${r}
        setOutput(getSource(${s}));
      }
    `}}const Sx=["x","y","z","w","u","v"];function Ett(n){if(n===1)return"sourceLoc";if(n<=6)return Sx.slice(0,n).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Att{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const e=Te(this.rank),s=rs("coords",this.rank),r=rs("sourceLoc",this.rank),o=this.rank===1?"sourceLoc":`vec2(${r.slice(-2).join()})`,a=`getChannel(getSource(${r.join()}), ${o})`,i=`
      result.x = ${a};
      if (++${s[this.rank-1]} < ${t[this.rank-1]}) {
        ++${r[this.rank-1]};
        result.y = ${a};
        --${r[this.rank-1]};
      }
    `,u=this.rank===1?"":`
      --${s[this.rank-1]};
      if (++${s[this.rank-2]} < ${t[this.rank-2]}) {
        ++${r[this.rank-2]};
        result.z = ${a};
        if (++${s[this.rank-1]} < ${t[this.rank-1]}) {
          ++${r[this.rank-1]};
          result.w = ${a};
        }
      }
    `,c=this.rank<=4?`sourceLoc = coords +
            ${e}(${t.map((l,d)=>`start[${d}]`).join()});`:t.map((l,d)=>`${r[d]} = ${s[d]} + start[${d}];`).join(`
`);this.userCode=`
      void main() {
        ${e} coords = getOutputCoords();
        ${e} sourceLoc;
        ${c}
        vec4 result = vec4(0.);
        ${i}
        ${u}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dtt(n,t,e,s){const r=s.texData.get(n.dataId),o=s.makeTensorInfo(e,n.dtype),a=s.texData.get(o.dataId);Object.assign(a,r),a.refCount=1,a.shape=e,a.dtype=n.dtype;let i=oy(t,St(n.shape));r.slice&&(i+=r.slice.flatOffset),a.slice={flatOffset:i,origDataId:r.slice&&r.slice.origDataId||n.dataId};const u=s.dataRefCount.get(a.slice.origDataId)||1;return s.dataRefCount.set(a.slice.origDataId,u+1),o}function Xc(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{begin:o,size:a}=s,[i,u]=Vp(r,o,a);if(M1(r,i,u),j(u)===0)return e.makeTensorInfo(u,r.dtype,[]);if(e.shouldExecuteOnCPU([r])||r.dtype==="string"){const d=e.texData.get(r.dataId),h=$Z(d.values,i,u,r.shape,r.dtype);return e.makeTensorInfo(u,r.dtype,h)}const{isPacked:c}=e.texData.get(r.dataId),l=ry(r.shape,i,u);if(c||!l){const d=et().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Att(u):new Ttt(u),h=[i];return e.runWebGLProgram(d,[r],r.dtype,h)}return e.uploadToGPU(r.dataId),Dtt(r,i,u,e)}const Rtt={kernelName:Cp,backendName:"webgl",kernelFunc:Xc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ftt=n=>{const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{blockShape:o,crops:a}=s;T(r.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const i=o.reduce((b,x)=>b*x),u=nu(r.shape,o,i),c=su(u.length,o.length),l=ru(r.shape,o,i),d=cy(a,o.length),h=dy(l,a,o.length),p=[],f=yt({inputs:{x:r},backend:e,attrs:{shape:u}}),m=ls({inputs:{x:f},backend:e,attrs:{perm:c}}),g=yt({inputs:{x:m},backend:e,attrs:{shape:l}}),y=Xc({inputs:{x:g},backend:e,attrs:{begin:d,size:h}});return p.push(f),p.push(m),p.push(g),p.forEach(b=>e.disposeIntermediateTensorInfo(b)),y},Ott={kernelName:Xh,backendName:"webgl",kernelFunc:Ftt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ptt(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,weights:o}=t,{size:a}=s,i=e.readSync(r.dataId),u=e.readSync(o.dataId),c=FE(i,u,o.dtype,o.shape,a);return e.makeTensorInfo([a],o.dtype,c)}const Ltt={kernelName:Yh,backendName:"webgl",kernelFunc:Ptt};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mtt=`
  int r = int(a.r) & int(b.r);
  int g = int(a.g) & int(b.g);
  int rb = int(a.b) & int(b.b);
  int ra = int(a.a) & int(b.a);
  return vec4(r, g, rb, ra);
`,Btt=`
  return float(int(a.r) & int(b.r));
`;function ztt(n){const{inputs:t,backend:e}=n,{a:s,b:r}=t,o=et().getBool("WEBGL_PACK_BINARY_OPERATIONS"),a=et().getNumber("WEBGL_VERSION");if(e.shouldExecuteOnCPU([s,r])||a===1){const u=e.texData.get(s.dataId).values,c=e.texData.get(r.dataId).values,[l,d]=KJ(s.shape,r.shape,u,c,s.dtype),h=e.makeTensorInfo(d,s.dtype),p=e.texData.get(h.dataId);return p.values=l,h}let i;return o?i=new qc(Mtt,s.shape,r.shape,!1):i=new Pi(Btt,s.shape,r.shape),e.runWebGLProgram(i,[s,r],s.dtype)}const Vtt={kernelName:_g,backendName:"webgl",kernelFunc:ztt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wtt(n){const{inputs:t,backend:e}=n,{s0:s,s1:r}=t,o=e.readSync(s.dataId),a=e.readSync(r.dataId),i=Ut(Array.from(o),Array.from(a));return e.makeTensorInfo([i.length],"int32",Int32Array.from(i))}const Utt={kernelName:Mw,backendName:"webgl",kernelFunc:Wtt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gtt="return float(a != b);",KE=Bn({opSnippet:Gtt,cpuKernelImpl:mZ,dtype:"bool"}),Htt={kernelName:yp,backendName:"webgl",kernelFunc:KE};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zp(n){const{inputs:t,backend:e}=n,{input:s}=t,r=e.texData.get(s.dataId);return Ls({inputs:{x:r.complexTensorInfos.real},backend:e})}const jtt={kernelName:Xw,backendName:"webgl",kernelFunc:Zp};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qtt="return float(int(x));";function Ktt(n,t){const e=new no(n.shape,qtt),s=t.runWebGLProgram(e,[n],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nx(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{dtype:o}=s;if(o==="complex64"){if(r.dtype==="complex64")return Ls({inputs:{x:r},backend:e});const a=Cn(r.shape),i=Nx({inputs:{x:r},backend:e,attrs:{dtype:"float32"}}),u=Ka({inputs:{real:i,imag:a},backend:e});return a.dispose(),e.disposeIntermediateTensorInfo(i),u}if(r.dtype==="complex64"){const a=Zp({inputs:{input:r},backend:e}),i=Nx({inputs:{x:a},backend:e,attrs:{dtype:o}});return e.disposeIntermediateTensorInfo(a),i}if(!xN(r.dtype,o)){const a=Ls({inputs:{x:r},backend:e});return{dataId:a.dataId,shape:a.shape,dtype:o}}if(e.shouldExecuteOnCPU([r])){const a=e.texData.get(r.dataId).values,[i,u,c]=XJ(a,r.shape,r.dtype,o);return e.makeTensorInfo(i,u,c)}if(o==="int32")return Ktt(r,e);if(o==="bool"){const a=e.makeTensorInfo([],"bool",jn("bool",1)),u=KE({inputs:{a:r,b:a},backend:e});return e.disposeIntermediateTensorInfo(a),u}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${o}`)}const Xtt={kernelName:Cl,backendName:"webgl",kernelFunc:Nx};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i$="return ceil(x);",Ytt=ie({opSnippet:i$,packedOpSnippet:i$,cpuKernelImpl:YJ}),Jtt={kernelName:_l,backendName:"webgl",kernelFunc:Ytt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ztt{constructor(t){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qtt{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tet(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{clipValueMin:o,clipValueMax:a}=s;let i;et().getBool("WEBGL_PACK_CLIP")?i=new Qtt(r.shape):i=new Ztt(r.shape);const u=[[o],[a]];return e.runWebGLProgram(i,[r],r.dtype,u)}const eet={kernelName:Yi,backendName:"webgl",kernelFunc:tet};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class net{constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u$(n,t){return{dataId:t.dataId,dtype:t.dtype,shape:n.shape}}function set(n){const{inputs:t,backend:e}=n,{x:s}=t,r=e.texData.get(s.dataId),o=new net(s.shape),a=[u$(s,r.complexTensorInfos.real),u$(s,r.complexTensorInfos.imag)];return e.runWebGLProgram(o,a,a[0].dtype)}const ret={kernelName:Tg,backendName:"webgl",kernelFunc:set};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class oet{constructor(t){this.outputShape=[],this.outputShape=Xs(t,1),this.variableNames=t.map((a,i)=>`T${i}`);const e=new Array(t.length-1);e[0]=t[0][1];for(let a=1;a<e.length;a++)e[a]=e[a-1]+t[a][1];const s=[`if (yC < ${e[0]}) setOutput(getT0(yR, yC));`];for(let a=1;a<e.length;a++){const i=e[a-1];s.push(`else if (yC < ${e[a]}) setOutput(getT${a}(yR, yC-${i}));`)}const r=e.length,o=e[e.length-1];s.push(`else setOutput(getT${r}(yR, yC-${o}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${s.join(`
        `)}
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class aet{constructor(t,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Xs(t,e);const s=this.outputShape,r=s.length,o=Te(r),a=rs("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=t.map((m,g)=>`T${g}`);const u=new Array(t.length-1);u[0]=t[0][e];for(let m=1;m<u.length;m++)u[m]=u[m-1]+t[m][e];const c=i[e],l=i.slice(-2),d=i.join();let h=`if (${c} < ${u[0]}) {
        return getChannel(
            getT0(${d}), vec2(${l.join()}));
        }`;for(let m=1;m<u.length;m++){const g=u[m-1];h+=`
        if (${c} < ${u[m]}  && ${c} >= ${u[m-1]}) {
          return getChannel(
            getT${m}(${_f(i,c,g)}),
            vec2(${_f(l,c,g)}));
        }`}const p=u.length,f=u[u.length-1];h+=`
        return getChannel(
          getT${p}(${_f(i,c,f)}),
          vec2(${_f(l,c,f)}));`,this.userCode=`
      float getValue(${i.map(m=>"int "+m)}) {
        ${h}
      }

      void main() {
        ${o} coords = getOutputCoords();
        vec4 result = vec4(getValue(${a}), 0., 0., 0.);

        ${a[r-1]} = ${a[r-1]} + 1;
        if (${a[r-1]} < ${s[r-1]}) {
          result.g = getValue(${a});
        }

        ${a[r-2]} = ${a[r-2]} + 1;
        if (${a[r-2]} < ${s[r-2]}) {
          result.a = getValue(${a});
        }

        ${a[r-1]} = ${a[r-1]} - 1;
        if (${a[r-2]} < ${s[r-2]} &&
            ${a[r-1]} < ${s[r-1]}) {
          result.b = getValue(${a});
        }
        setOutput(result);
      }
    `}}function _f(n,t,e){const s=n.indexOf(t);return n.map((o,a)=>a===s?`${o} - ${e}`:o).join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dy(n){const{inputs:t,backend:e}=n,{input:s}=t,r=e.texData.get(s.dataId);return Ls({inputs:{x:r.complexTensorInfos.imag},backend:e})}const iet={kernelName:qw,backendName:"webgl",kernelFunc:Dy};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bd(n,t,e){const s=n[0].dtype;if(s==="complex64"){const p=n.map(b=>Zp({inputs:{input:b},backend:e})),f=n.map(b=>Dy({inputs:{input:b},backend:e})),m=bd(p,t,e),g=bd(f,t,e),y=Ka({inputs:{real:m,imag:g},backend:e});return p.forEach(b=>e.disposeIntermediateTensorInfo(b)),f.forEach(b=>e.disposeIntermediateTensorInfo(b)),e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(g),y}let r=e.shouldExecuteOnCPU(n);if(s==="string"&&(r=!0),r){const p=n.map(w=>{const k=[-1,j(w.shape.slice(t))];return yt({inputs:{x:w},backend:e,attrs:{shape:k}})}),f=p.map(w=>({vals:e.readSync(w.dataId),shape:w.shape})),m=Xs(p.map(w=>w.shape),1),g=p[0].shape[0]===1,y=JJ(f,m,s,g),b=Xs(n.map(w=>w.shape),t),x=e.makeTensorInfo(b,s,y);return p.forEach(w=>e.disposeIntermediateTensorInfo(w)),x}const o=n.filter(p=>j(p.shape)>0),a=et().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&o[0].shape.length>1;if(o.length===1){const p=a?new no(n[0].shape,ua):new ga(n[0].shape,ua);return e.runWebGLProgram(p,n,s)}const i=et().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(o.length>i){const p=[];for(let m=0;m<o.length;m+=i){const g=o.slice(m,m+i);p.push(bd(g,t,e))}const f=bd(p,t,e);for(const m of p)e.disposeIntermediateTensorInfo(m);return f}if(a){const p=new aet(o.map(f=>f.shape),t);return e.runWebGLProgram(p,o,s)}const{tensors2D:u,outShape:c}=uet(o,t,e),l=new oet(u.map(p=>p.shape)),d=e.runWebGLProgram(l,u,s);u.forEach(p=>e.disposeIntermediateTensorInfo(p));const h=yt({inputs:{x:d},attrs:{shape:c},backend:e});return e.disposeIntermediateTensorInfo(d),h}function uet(n,t,e){const s=Xs(n.map(o=>o.shape),t);return{tensors2D:n.map(o=>yt({inputs:{x:o},attrs:{shape:[-1,j(o.shape.slice(t))]},backend:e})),outShape:s}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XE(n){const{inputs:t,backend:e,attrs:s}=n,{axis:r}=s,o=Gt(r,t[0].shape)[0],a=t.map(c=>c.shape);iy(a,o);const i=Xs(t.map(c=>c.shape),o);if(j(i)===0)return e.makeTensorInfo(i,t[0].dtype,[]);const u=t.filter(c=>j(c.shape)>0);return u.length===1?Ls({inputs:{x:u[0]},backend:e}):bd(u,o,e)}const cet={kernelName:Jh,backendName:"webgl",kernelFunc:XE};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class YE{constructor(t,e=!1,s=null,r=!1,o=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const a=t.padInfo.top,i=t.padInfo.left,u=t.strideHeight,c=t.strideWidth,l=t.dilationHeight,d=t.dilationWidth,h=t.filterHeight,p=t.filterWidth,f=Math.floor(t.inChannels/4)*4,m=t.inChannels%4,g=t.dataFormat==="channelsLast",y=g?1:2,b=g?2:3,x=g?3:1;let w="",v="";s&&(r?w=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:o?w=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:w=`
          float activation(float x) {
            ${s}
          }
        `,v="result = activation(result);");const k=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${w}

      const ivec2 strides = ivec2(${u}, ${c});
      const ivec2 pads = ivec2(${a}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${x}];

        ivec2 xRCCorner =
            ivec2(coords[${y}], coords[${b}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${h}; wR++) {
          int xR = xRCorner + wR * ${l};

          if (xR < 0 || xR >= ${t.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${p}; wC++) {
            int xC = xCCorner + wC * ${d};

            if (xC < 0 || xC >= ${t.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${f}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${g}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${m===1}) {

              if (${g}) {
                dotProd +=
                    getX(batch, xR, xC, ${f}) *
                    getW(wR, wC, ${f}, d2);
              } else {
                dotProd +=
                    getX(batch, ${f}, xR, xC) *
                    getW(wR, wC, ${f}, d2);
              }

            } else if (${m===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2)
              );

              if (${g}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${m===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2),
                getW(wR, wC, ${f} + 2, d2)
              );

              if (${g}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1),
                  getX(batch, xR, xC, ${f} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC),
                  getX(batch, ${f} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${k}
        ${v}
        setOutput(result);
      }
    `}}class det{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const e=t.padInfo.front,s=t.padInfo.top,r=t.padInfo.left,o=t.strideDepth,a=t.strideHeight,i=t.strideWidth,u=t.dilationDepth,c=t.dilationHeight,l=t.dilationWidth,d=t.filterDepth,h=t.filterHeight,p=t.filterWidth,f=Math.floor(t.inChannels/4)*4,m=t.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${o}, ${a}, ${i});
      const ivec3 pads = ivec3(${e}, ${s}, ${r});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${d}; wF++) {
          int xF = xFCorner + wF * ${u};

          if (xF < 0 || xF >= ${t.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${h}; wR++) {
            int xR = xRCorner + wR * ${c};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${p}; wC++) {
              int xC = xCCorner + wC * ${l};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${f}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${m===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${f}) *
                  getW(wF, wR, wC, ${f}, d2);
              } else if (${m===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${m===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1),
                  getX(batch, xF, xR, xC, ${f} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2),
                  getW(wF, wR, wC, ${f} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class JE{constructor(t,e=!1,s=null,r=!1,o=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=Jn(this.outputShape.length);const a=t.padInfo.left,i=t.strideWidth,u=t.dilationWidth,c=t.filterHeight,l=t.filterWidth,d=l;let h=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let g=0;g<l;g++)h+=`
           vec4 xTexelC${g*2};
           int xTexelC${g*2}Ready;
           vec4 xTexelC${g*2+1};
           int xTexelC${g*2+1}Ready;
           vec4 xC${g};`;h+=`
     for (int r = 0; r < ${c}; r++) {
      for (int d1 = 0; d1 < ${t.inChannels}; d1 += 2) {
       `;for(let g=0;g<l;g++)h+=`
           xTexelC${g*2} = vec4(0.0);
           xTexelC${g*2}Ready = 0;
           xTexelC${g*2+1} = vec4(0.0);
           xTexelC${g*2+1}Ready = 0;
           xC${g} = vec4(0.0);`;h+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let g=0;g<(d+1)/2;g++){const y=g*2;if(h+=`
           xC = xCCorner + ${y*u};
           `,i===1){if(y<l&&(a%2===1?(h+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                   xTexelC${y} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${y}.zw = vec2(0.0);
                   }
                   xTexelC${y}Ready = 1;
                 }
               `,u===1&&y>0?h+=`
                 xC${y} = vec4(xTexelC${y-2}.zw, xTexelC${y}.xy);
                 `:h+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${y} = vec4(previous.zw, xTexelC${y}.xy);
                   } else {
                     xC${y} = vec4(0.0, 0.0, xTexelC${y}.xy);
                   }
                   `):h+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                   xTexelC${y} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${y}.zw = vec2(0.0);
                   }
                   xTexelC${y}Ready = 1;
                 }

                 xC${y} = xTexelC${y};
                 `,y+1<l)){const b=a%2===0?Rw(u):u;u%2===0&&a%2===1||u%2!==0&&a%2!==1?(h+=`
                   xCOffset = xC + imod(pads[1], 2) + ${b};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                     xTexelC${y+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${y+1}.zw = vec2(0.0);
                     }
                     xTexelC${y+1}Ready = 1;
                   }
                   `,u>1?h+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${y+1} = vec4(previous.zw, xTexelC${y+1}.xy);
                     } else {
                      xC${y+1} = vec4(0.0, 0.0, xTexelC${y+1}.xy);
                     }
                     `:h+=`
                     xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.xy);
                     `):b===1?h+=`
                     xC${y+1} = xTexelC${y};
                     `:h+=`
                     xCOffset = xC + ${b};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                       xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${y+1}.zw = vec2(0.0);
                       }
                       xTexelC${y+1}Ready = 1;
                     }

                     xC${y+1} = xTexelC${y+1};
                     `}}else y<l&&(a%2===1?(h+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                   xTexelC${y} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${y}.zw = vec2(0.0);
                   }
                   xTexelC${y}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${y+1}Ready == 0) {
                   xTexelC${y+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${y+1}.zw = vec2(0.0);
                   }
                   xTexelC${y+1}Ready = 1;
                 }

                 xC${y} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
               `,y+1<l&&(h+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${y+1} = vec4(xTexelC${y+1}.xy, final.xy);
                 `)):(h+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                   xTexelC${y} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${y}.zw = vec2(0.0);
                   }
                   xTexelC${y}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                   xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${y+1}.zw = vec2(0.);
                   }
                   xTexelC${y+1}Ready = 1;
                 }

                 xC${y} = vec4(
                   xTexelC${y}.xy, xTexelC${y+1}.xy);
               `,y+1<l&&(h+=`
                   xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
                 `)));y<l&&(h+=`
             wTexel = getW(r, ${y}, d1, d2);
             dotProd += xC${y}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${t.inChannels}) {
               dotProd += xC${y}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,y+1<l&&(h+=`
               wTexel = getW(r, ${y+1}, d1, d2);
               dotProd += xC${y+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${t.inChannels}) {
                 dotProd += xC${y+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}h+=`
     }
   `,h+=`
     }
   `,h+=`
     }
   `;let p="",f="";s&&(r?p=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${s}
         }`:o?p=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${s}
         }`:p=`vec4 activation(vec4 x) {
           ${s}
         }`,f="result = activation(result);");const m=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${p}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${h}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${m}
         ${f}
         setOutput(result);
       }
     `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class het{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=t,this.enableShapeUniforms=Jn(this.outputShape.length);const{dataFormat:s}=e,r=cs(),o=s==="channelsLast",a=o?1:2,i=o?2:3,u=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${t[2]} && pos < ${t[1]}) {`;let c="";for(let l=0;l<=1;l++)for(let d=0;d<=1;d++)c+=`
          blockIndex = rc.z + ${d};
          pos = rc.y + ${l};

          ${u}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${a}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${i}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${o}) {
                  innerDims = vec2(d1, ch);
                  result[${l*2+d}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${l*2+d}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${c}

        ${r.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Am(n,t){const e=n.length;return e>=3?t?[...n.slice(0,-3),n[e-3]*n[e-2],n[e-1]]:[...n.slice(0,-3),n[e-3],n[e-2]*n[e-1]]:!t&&e===1&&n[0]>1?[n[0],1]:null}function ZE({x:n,filter:t,convInfo:e,backend:s,bias:r=null,preluActivationWeights:o=null,leakyreluAlpha:a=0,activation:i=null}){const u=n.shape,c=s.texData.get(n.dataId),l=e.inChannels,d=u[0]*u[1]*u[2],h=e.outChannels,p=e.dataFormat==="channelsLast",f=!1,m=!1;let g;const y=[];if(o!=null){const w=Am(o.shape,p);w!=null&&(o=yt({inputs:{x:o},backend:s,attrs:{shape:w}}),y.push(o))}if(r!=null){const w=Am(r.shape,p);w!=null&&(r=yt({inputs:{x:r},backend:s,attrs:{shape:w}}),y.push(r))}if(!((d===1||h===1)&&l>GE)&&c.isPacked&&p&&c.texture!=null&&u[2]%2!==0&&we(c.shape.slice(-3),u.slice(-3))){const w=u[0]*u[1]*(u[2]+1),v={dataId:n.dataId,shape:[1,w,e.inChannels],dtype:n.dtype},k=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,T(Tm(c.shape,v.shape),()=>`packed reshape ${c.shape} to ${v.shape} isn't free`);const S=yt({inputs:{x:t},backend:s,attrs:{shape:[1,e.inChannels,e.outChannels]}});y.push(S);const _=Em({a:v,b:S,backend:s,transposeA:f,transposeB:m,bias:r,activation:i,preluActivationWeights:o,leakyreluAlpha:a}),C=s.texData.get(_.dataId);T(C.isPacked,()=>"batchMatMul result is expected to be packed"),c.shape=k,C.shape=e.outShape,g=Ls({inputs:{x:_},backend:s}),g.shape=e.outShape,y.push(_)}else{const w=e.outHeight*e.outWidth,v=yt({inputs:{x:n},backend:s,attrs:{shape:p?[e.batchSize,w,e.inChannels]:[e.batchSize,e.inChannels,w]}}),k=yt({inputs:{x:t},backend:s,attrs:{shape:[1,e.inChannels,e.outChannels]}}),S=Em({a:p?v:k,b:p?k:v,transposeA:!p,transposeB:m,backend:s,bias:r,activation:i,preluActivationWeights:o,leakyreluAlpha:a});g=yt({inputs:{x:S},backend:s,attrs:{shape:e.outShape}}),y.push(v),y.push(k),y.push(S)}for(const w of y)s.disposeIntermediateTensorInfo(w);return g}function QE({x:n,filter:t,convInfo:e,backend:s,bias:r=null,preluActivationWeights:o=null,leakyreluAlpha:a=0,activation:i=null}){const{filterWidth:u,filterHeight:c,inChannels:l,outWidth:d,outHeight:h,dataFormat:p}=e,f=p==="channelsLast",m=u*c*l,g=h*d,y=[e.batchSize,m,g],b=!0,x=!1,w=[];if(o!=null){const P=Am(o.shape,f);P!=null&&(o=yt({inputs:{x:o},backend:s,attrs:{shape:P}}),w.push(o))}if(r!=null){const P=Am(r.shape,f);P!=null&&(r=yt({inputs:{x:r},backend:s,attrs:{shape:P}}),w.push(r))}const v=yt({inputs:{x:t},backend:s,attrs:{shape:[1,m,j(t.shape)/m]}});w.push(v);const k=new het(y,e),S=[n.shape,[e.padInfo.top,e.padInfo.left],[e.strideHeight,e.strideWidth],[e.dilationHeight,e.dilationWidth],[e.inChannels],[e.filterWidth*e.inChannels],[e.outWidth]],_=s.runWebGLProgram(k,[n],"float32",S),C=yt({inputs:{x:_},backend:s,attrs:{shape:y}});w.push(_),w.push(C);const N=r!=null,$=o!=null,A=i==="leakyrelu",D=i?qd(i,!0):null,R=new UE(f?C.shape:v.shape,f?v.shape:C.shape,f?[e.batchSize,g,e.outChannels]:[e.batchSize,e.outChannels,g],b,x,N,D,$,A),F=f?[C,v]:[v,C];if(r&&F.push(r),$&&F.push(o),A){const P=s.makeTensorInfo([],"float32",Va(a,"float32"));F.push(P),w.push(P)}const z=s.runWebGLProgram(R,F,"float32"),H=yt({inputs:{x:z},backend:s,attrs:{shape:e.outShape}});w.push(z);for(const P of w)s.disposeIntermediateTensorInfo(P);return H}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pet(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:o}=t,{strides:a,pad:i,dataFormat:u,dilations:c,dimRoundingMode:l}=s,d=Ur(u),h=Ze(r.shape,o.shape,a,c,i,l,!1,d);let p;if(h.filterHeight===1&&h.filterWidth===1&&h.dilationHeight===1&&h.dilationWidth===1&&h.strideHeight===1&&h.strideWidth===1&&(h.padInfo.type==="SAME"||h.padInfo.type==="VALID"))p=ZE({x:r,filter:o,convInfo:h,backend:e});else if(h.strideWidth<=2&&d==="channelsLast"&&et().getBool("WEBGL_EXP_CONV")){const m=new JE(h),g=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];p=e.runWebGLProgram(m,[r,o],"float32",g)}else if(et().getBool("WEBGL_CONV_IM2COL"))p=QE({x:r,filter:o,convInfo:h,backend:e});else{const m=new YE(h);p=e.runWebGLProgram(m,[r,o],"float32")}const f=yt({inputs:{x:p},backend:e,attrs:{shape:h.outShape}});return e.disposeIntermediateTensorInfo(p),f}const fet={kernelName:Tl,backendName:"webgl",kernelFunc:pet};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class met{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,s=t.strideWidth,r=t.padInfo.top,o=t.padInfo.left,a=t.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yR = 0; yR < ${t.outHeight}; yR++) {
            int xR = wR + yR * ${e} - ${r};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${t.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${o};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              ${a?`float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);`:`float dyValue = getDy(b, d2, yR, yC);
              float xValue = getX(b, d1, xR, xC);
              dotProd += (xValue * dyValue);`}
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class get{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,s=t.filterWidth,r=t.strideHeight,o=t.strideWidth,a=t.dataFormat==="channelsLast",i=e-1-t.padInfo.top,u=s-1-t.padInfo.left,c=a?1:2,l=a?2:3,d=a?3:1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${u});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${d}];

        ivec2 dyCorner = ivec2(coords[${c}], coords[${l}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${e}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${e} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            for (int d2 = 0; d2 < ${t.outChannels}; d2++) {

              if (${a}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class yet{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideDepth,s=t.strideHeight,r=t.strideWidth,o=t.padInfo.front,a=t.padInfo.top,i=t.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yF = 0; yF < ${t.outDepth}; yF++) {
            int xF = wF + yF * ${e} - ${o};

            if (xF < 0 || xF >= ${t.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${t.outHeight}; yR++) {
              int xR = wR + yR * ${s} - ${a};

              if (xR < 0 || xR >= ${t.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${t.outWidth}; yC++) {
                int xC = wC + yC * ${r} - ${i};

                if (xC < 0 || xC >= ${t.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class bet{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterDepth,s=t.filterHeight,r=t.filterWidth,o=t.strideDepth,a=t.strideHeight,i=t.strideWidth,u=e-1-t.padInfo.front,c=s-1-t.padInfo.top,l=r-1-t.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${u}, ${c}, ${l});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${e}; wF++) {
          float dyF = float(dyFCorner + wF) / ${o}.0;

          if (dyF < 0.0 || dyF >= ${t.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${e} - 1 - wF;

          for (int wR = 0; wR < ${s}; wR++) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${s} - 1 - wR;

            for (int wC = 0; wC < ${r}; wC++) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${r} - 1 - wC;

              for (int d2 = 0; d2 < ${t.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xet(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,dy:o}=t,{strides:a,pad:i,dataFormat:u,dimRoundingMode:c,filterShape:l}=s,d=Ur(u),h=Ze(r.shape,l,a,1,i,c,!1,d),p=new met(h);return e.runWebGLProgram(p,[r,o],"float32")}const wet={kernelName:zw,backendName:"webgl",kernelFunc:xet};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vet{constructor(t){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=t.inShape,this.enableShapeUniforms=Jn(this.outputShape.length);const e=t.filterHeight,s=t.filterWidth,r=e-1-t.padInfo.top,o=s-1-t.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${r}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];

        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        vec4 result = vec4(0.);
        for (int wR = 0; wR < ${e}; wR++) {
          float dyR = float(dyRCorner + wR) / strides[0];
          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);
          int wRPerm = ${e} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            int wCPerm = ${s} - 1 - wC;

            float dyC = float(dyCCorner + wC) / strides[1];
            bool idyCVal = (dyC >= 0.0) && (dyC < ${t.outWidth}.0)
              && (fract(dyC) == 0.0);
            int idyC = int(dyC);

            float dyC2 = float(dyCCorner + wC + 1) / strides[1];
            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${t.outWidth}.0)
              && (fract(dyC2) == 0.0);
            int idyC2 = int(dyC2);

            if (idyCVal && idyCVal2) {
              for (int d2 = 0; d2 < ${t.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?
                  dySample : getDy(batch, idyR, idyC2, d2);

                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));

                dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample2.xy : dySample2.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal) {
              for (int d2 = 0; d2 < ${t.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal2) {
              for (int d2 = 0; d2 < ${t.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC2, d2);
                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            }
          }
        }
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Iet(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,filter:o}=t,{inputShape:a,strides:i,pad:u,dataFormat:c,dimRoundingMode:l}=s,d=Ur(c),h=Ze(a,o.shape,i,1,u,l,!1,d);if(et().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&d==="channelsLast"){const p=[[h.strideHeight,h.strideWidth]],f=new vet(h);return e.runWebGLProgram(f,[r,o],"float32",p)}else{const p=new get(h);return e.runWebGLProgram(p,[r,o],"float32")}}const ket={kernelName:El,backendName:"webgl",kernelFunc:Iet};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $et(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:o}=t,{strides:a,pad:i,dilations:u}=s,c=Wr(r.shape,o.shape,a,u,i),l=new det(c);return e.runWebGLProgram(l,[r,o],"float32")}const Net={kernelName:Al,backendName:"webgl",kernelFunc:$et};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cet(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,dy:o}=t,{strides:a,pad:i,filterShape:u}=s,c=Wr(r.shape,u,a,1,i),l=new yet(c);return e.runWebGLProgram(l,[r,o],"float32")}const _et={kernelName:Zh,backendName:"webgl",kernelFunc:Cet};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tet(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,filter:o}=t,{pad:a,strides:i,inputShape:u}=s,c=Wr(u,o.shape,i,1,a),l=new bet(c);return e.runWebGLProgram(l,[r,o],"float32")}const Eet={kernelName:Qh,backendName:"webgl",kernelFunc:Tet};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Aet=Kc+`
  return cos(x);
`,Det=`
  vec4 result = cos(x);
  bvec4 isNaN = isnan(x);
  ${lu}
  return result;
`,Ret=ie({opSnippet:Aet,packedOpSnippet:Det}),Fet={kernelName:Dl,backendName:"webgl",kernelFunc:Ret};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oet=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,Pet=ie({opSnippet:Oet}),Let={kernelName:Rl,backendName:"webgl",kernelFunc:Pet};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Met{constructor(t,e,s,r,o){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,i,u,c]=t,[l]=e,[d,h]=s;this.outputShape=[l,d,h,c];const p=r==="bilinear"?1:0,[f,m]=[`${i-1}.0`,`${u-1}.0`],[g,y,b]=d>1?[`${(i-1)/(d-1)}`,"(y2-y1) * height_ratio",`y1*${f} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${f}`],[x,w,v]=h>1?[`${(u-1)/(h-1)}`,"(x2-x1) * width_ratio",`x1*${m} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${m}`];this.userCode=`
      const float height_ratio = float(${g});
      const float width_ratio = float(${x});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${a}) {
          return;
        }

        float height_scale = ${y};
        float width_scale = ${w};

        float in_y = ${b};
        if( in_y < 0.0 || in_y > ${f} ) {
          setOutput(float(${o}));
          return;
        }
        float in_x = ${v};
        if( in_x < 0.0 || in_x > ${m} ) {
          setOutput(float(${o}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${p} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bet=n=>{const{inputs:t,backend:e,attrs:s}=n,{image:r,boxes:o,boxInd:a}=t,{cropSize:i,method:u,extrapolationValue:c}=s,l=new Met(r.shape,o.shape,i,u,c);return e.runWebGLProgram(l,[r,o,a],"float32")},zet={kernelName:ep,backendName:"webgl",kernelFunc:Bet};var Xd;(function(n){n.Prod="*",n.Sum="+"})(Xd||(Xd={}));class l${constructor(t,e,s,r){this.op=t,this.outputShape=e,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const o=this.outputShape.length,a=this.op===Xd.Prod?"1.0":"0.0",i=s?a:`getX(${c$(o,"coords",this.op)})`,u=this.outputShape[this.outputShape.length-1];let c="",l="";s?(c=r?`end != ${u-1}`:"end != 0",l=r?"end + 1":"end - 1"):(c=r?`end + pow2 < ${u}`:"end >= pow2",l=r?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${Te(o)} coords = getOutputCoords();
        int end = ${d$(o,"coords",this.op)};
        float val = ${i};
        int pow2 = int(pow(2.0, index));
        if (${c}) {
          int idx = ${l};
          ${d$(o,"coords",this.op)} = idx;
          val ${this.op}= getX(${c$(o,"coords",this.op)});
        }
        setOutput(val);
      }
    `}}function c$(n,t,e){if(n===1)return`${t}`;if(n===2)return`${t}.x, ${t}.y`;if(n===3)return`${t}.x, ${t}.y, ${t}.z`;if(n===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${e} for rank ${n} is not yet supported`)}function d$(n,t,e){if(n===1)return`${t}`;if(n===2)return`${t}.y`;if(n===3)return`${t}.z`;if(n===4)return`${t}.w`;throw new Error(`Cumulative ${e} for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tA(n,t,e,s,r,o){const a=t.shape.length,i=Ve([s],a);let u=t;i!=null&&(u=ls({inputs:{x:t},backend:e,attrs:{perm:i}}));const c=Fe(1,a)[0];if(c!==a-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${s}`);const l=u.shape[c];let d=Ls({inputs:{x:u},backend:e});for(let h=0;h<=Math.ceil(Math.log2(l))-1;h++){const p=new l$(n,u.shape,!1,o),f=[[h]],m=d;d=e.runWebGLProgram(p,[d],d.dtype,f),e.disposeIntermediateTensorInfo(m)}if(r){const h=new l$(n,u.shape,r,o),p=d;d=e.runWebGLProgram(h,[d],d.dtype),e.disposeIntermediateTensorInfo(p)}if(i!=null){const h=vo(i),p=ls({inputs:{x:d},backend:e,attrs:{perm:h}});return e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(u),p}return d}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vet(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,exclusive:a,reverse:i}=s;return tA(Xd.Prod,r,e,o,a,i)}const Wet={kernelName:tp,backendName:"webgl",kernelFunc:Vet};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uet(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,exclusive:a,reverse:i}=s;return tA(Xd.Sum,r,e,o,a,i)}const Get={kernelName:Fl,backendName:"webgl",kernelFunc:Uet};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Het(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,weights:o}=t,{size:a,binaryOutput:i}=s;if(r.shape.length===1){const u=e.readSync(r.dataId),c=e.readSync(o.dataId),l=FE(u,c,o.dtype,o.shape,a);return e.makeTensorInfo([a],o.dtype,l)}else if(r.shape.length===2){const u=e.bufferSync(r),c=e.bufferSync(o),l=qJ(u,c,a,i);return e.makeTensorInfo(l.shape,o.dtype,l.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}const jet={kernelName:Eg,backendName:"webgl",kernelFunc:Het};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qet{constructor(t,e,s){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=s,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${e};
      int offset_h = imod(h, ${e});
      int in_w = w / ${e};
      int offset_w = imod(w, ${e});
      int offset_d = (offset_h * ${e} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ket(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{blockSize:o,dataFormat:a}=s,i=r.shape[0],u=a==="NHWC"?r.shape[1]:r.shape[2],c=a==="NHWC"?r.shape[2]:r.shape[3],l=a==="NHWC"?r.shape[3]:r.shape[1],d=u*o,h=c*o,p=l/(o*o),f=a==="NHWC"?[i,d,h,p]:[i,p,d,h],m=new qet(f,o,a);return e.runWebGLProgram(m,[r],r.dtype)}const Xet={kernelName:np,backendName:"webgl",kernelFunc:Ket};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class eA{constructor(t,e=!1,s=null,r=!1,o=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=Jn(this.outputShape.length);const a=t.filterHeight,i=t.filterWidth,u=t.outChannels/t.inChannels;let c="",l="";s&&(r?c=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:o?c=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:c=`
          float activation(float x) {
            ${s}
          }
        `,l="result = activation(result);");const d=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${c}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${u};
        int q = d2 - d1 * ${u};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${a}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${i}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${d}
        ${l}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nA{constructor(t,e=!1,s=null,r=!1,o=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=Jn(this.outputShape.length);const a=t.outChannels/t.inChannels,i=t.padInfo.left,u=t.strideWidth,c=t.dilationWidth,l=t.filterHeight,d=t.filterWidth,h=d;let p=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let y=0;y<d;y++)p+=`
          vec4 xTexelC${y*2};
          int xTexelC${y*2}Ready;
          vec4 xTexelC${y*2+1};
          int xTexelC${y*2+1}Ready;
          vec4 xC${y};`;p+=`
    for (int r = 0; r < ${l}; r++) {
      `;for(let y=0;y<d;y++)p+=`
          xTexelC${y*2} = vec4(0.0);
          xTexelC${y*2}Ready = 0;
          xTexelC${y*2+1} = vec4(0.0);
          xTexelC${y*2+1}Ready = 0;
          xC${y} = vec4(0.0);`;p+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let y=0;y<(h+1)/2;y++){const b=y*2;if(p+=`
          xC = xCCorner + ${b*c};
          `,u===1){if(b<d&&(i%2===1?(p+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }
              `,c===1&&b>0?p+=`
                xC${b} = vec4(xTexelC${b-2}.zw, xTexelC${b}.xy);
                `:p+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${b} = vec4(previous.zw, xTexelC${b}.xy);
                  } else {
                    xC${b} = vec4(0.0, 0.0, xTexelC${b}.xy);
                  }
                  `):p+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                xC${b} = xTexelC${b};
                `,b+1<d)){const x=i%2===0?Rw(c):c;c%2===0&&i%2===1||c%2!==0&&i%2!==1?(p+=`
                  xCOffset = xC + imod(pads[1], 2) + ${x};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                    xTexelC${b+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${b+1}.zw = vec2(0.0);
                    }
                    xTexelC${b+1}Ready = 1;
                  }
                  `,c>1?p+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${b+1} = vec4(previous.zw, xTexelC${b+1}.xy);
                    } else {
                     xC${b+1} = vec4(0.0, 0.0, xTexelC${b+1}.xy);
                    }
                    `:p+=`
                    xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.xy);
                    `):x===1?p+=`
                    xC${b+1} = xTexelC${b};
                    `:p+=`
                    xCOffset = xC + ${x};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                      xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${b+1}.zw = vec2(0.0);
                      }
                      xTexelC${b+1}Ready = 1;
                    }

                    xC${b+1} = xTexelC${b+1};
                    `}}else b<d&&(i%2===1?(p+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${b+1}Ready == 0) {
                  xTexelC${b+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${b+1}.zw = vec2(0.0);
                  }
                  xTexelC${b+1}Ready = 1;
                }

                xC${b} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
              `,b+1<d&&(p+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${b+1} = vec4(xTexelC${b+1}.xy, final.xy);
                `)):(p+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                  xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b+1}.zw = vec2(0.);
                  }
                  xTexelC${b+1}Ready = 1;
                }

                xC${b} = vec4(
                  xTexelC${b}.xy, xTexelC${b+1}.xy);
              `,b+1<d&&(p+=`
                  xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
                `)));b<d&&(p+=`
            wTexel = getW(r, ${b}, d1, q);
            dotProd += xC${b} * vec4(wTexel.xz, wTexel.xz);
          `,b+1<d&&(p+=`
              wTexel = getW(r, ${b+1}, d1, q);
              dotProd += xC${b+1} * vec4(wTexel.xz, wTexel.xz);
            `))}p+=`
    }
  `,p+=`
      }
    `;let f="",m="";s&&(r?f=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:o?f=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:f=`vec4 activation(vec4 x) {
          ${s}
        }`,m="result = activation(result);");const g=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${f}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${a};
        int q = d2 - d1 * ${a};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${p}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${g}
        ${m}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yet(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:o}=t,{strides:a,pad:i,dilations:u,dimRoundingMode:c}=s;let l=u;l==null&&(l=[1,1]),T(Mn(a,l),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${l}'`);const d=Ze(r.shape,o.shape,a,l,i,c,!0);let h;et().getBool("WEBGL_PACK_DEPTHWISECONV")&&d.strideWidth<=2&&d.outChannels/d.inChannels===1?h=new nA(d):h=new eA(d);const p=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];return e.runWebGLProgram(h,[r,o],"float32",p)}const Jet={kernelName:Ol,backendName:"webgl",kernelFunc:Yet};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zet{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,s=t.strideWidth,r=t.padInfo.top,o=t.padInfo.left,a=t.outChannels/t.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${a} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yR = 0; yR < ${t.outHeight}; yR++) {
            int xR = wR + yR * ${e} - ${r};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${t.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${o};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class Qet{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,s=t.filterWidth,r=t.strideHeight,o=t.strideWidth,a=e-1-t.padInfo.top,i=s-1-t.padInfo.left,u=t.outChannels/t.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${e}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${e} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${u}; dm++) {
              int d2 = d1 * ${u} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tnt(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,dy:o}=t,{strides:a,dilations:i,pad:u,dimRoundingMode:c,filterShape:l}=s,d=Ze(r.shape,l,a,i,u,c,!0),h=new Zet(d);return e.runWebGLProgram(h,[r,o],"float32")}const ent={kernelName:Vw,backendName:"webgl",kernelFunc:tnt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nnt(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,filter:o}=t,{strides:a,dilations:i,pad:u,dimRoundingMode:c,inputShape:l}=s,d=Ze(l,o.shape,a,i,u,c,!0),h=new Qet(d);return e.runWebGLProgram(h,[r,o],"float32")}const snt={kernelName:Ww,backendName:"webgl",kernelFunc:nnt};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rnt{constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ont(n){const{inputs:t,backend:e}=n,{x:s}=t,r=[...s.shape,...s.shape],o=j(s.shape),a=yt({inputs:{x:s},backend:e,attrs:{shape:[o]}}),i=new rnt(o),u=e.runWebGLProgram(i,[a],a.dtype),c=yt({inputs:{x:u},backend:e,attrs:{shape:r}});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(u),c}const ant={kernelName:Uw,backendName:"webgl",kernelFunc:ont};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class int{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const{inHeight:e,inWidth:s,padInfo:r,strideHeight:o,strideWidth:a,filterHeight:i,filterWidth:u,dilationHeight:c,dilationWidth:l}=t,{top:d,left:h}=r;this.userCode=`
      const ivec2 strides = ivec2(${o}, ${a});
      const ivec2 pads = ivec2(${d}, ${h});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${i}; h++) {
          int hIn = hBeg + h * ${c};

          if (hIn >= 0 && hIn < ${e}) {
            for (int w = 0; w < ${u}; w++) {
              int wIn = wBeg + w * ${l};

              if (wIn >= 0 && wIn < ${s}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function unt(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:o}=t,{strides:a,pad:i,dilations:u}=s,c=Wa(r.shape,o.shape,a,i,"NHWC",u);let l;const d=new int(c);l=e.runWebGLProgram(d,[r,o],"float32");const h=yt({inputs:{x:l},backend:e,attrs:{shape:c.outShape}});return e.disposeIntermediateTensorInfo(l),h}const lnt={kernelName:Pl,backendName:"webgl",kernelFunc:unt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cnt(n){const{inputs:t,backend:e,attrs:s}=n,{equation:r}=s,o=t,{allDims:a,summedDims:i,idDims:u}=q1(r,o.length);X1(a.length,u,o);const{path:c,steps:l}=Y1(i,u),d=l.length;let h=null,p=a.length;const f=[];for(let m=0;m<d;++m){for(const g of l[m]){const{permutationIndices:y,expandDims:b}=K1(p,u[g]);let x;J1(y)?x=o[g]:(x=ls({inputs:{x:o[g]},backend:e,attrs:{perm:y}}),f.push(x));const w=x.shape.slice();for(let v=0;v<b.length;++v)w.splice(b[v],0,1);we(x.shape,w)||(x=yt({inputs:{x},backend:e,attrs:{shape:w}}),f.push(x)),h===null?h=x:(h=ev({inputs:{a:x,b:h},backend:e}),f.push(h))}m<d-1&&(c[m]>=0&&(h=Ay({inputs:{x:h},backend:e,attrs:{axis:c[m]-(a.length-p),keepDims:!1}}),f.push(h)),p--)}for(const m of f)m!==h&&e.disposeIntermediateTensorInfo(m);return h}const dnt={kernelName:Gw,backendName:"webgl",kernelFunc:cnt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hnt="return (x >= 0.0) ? x : (exp(x) - 1.0);",pnt=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,fnt=ie({opSnippet:hnt,packedOpSnippet:pnt}),mnt={kernelName:Ml,backendName:"webgl",kernelFunc:fnt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gnt="return (b >= 0.0) ? a : a * (b + 1.0);",ynt=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,bnt=n=>{const{inputs:t,backend:e}=n,{dy:s,y:r}=t,o=et().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new qc(ynt,s.shape,r.shape):new Pi(gnt,s.shape,r.shape);return e.runWebGLProgram(o,[s,r],s.dtype)},xnt={kernelName:sp,backendName:"webgl",kernelFunc:bnt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wnt=`
  return vec4(equal(a, b));
`,vnt="return float(a == b);",Int=Bn({opSnippet:vnt,packedOpSnippet:wnt,dtype:"bool",cpuKernelImpl:ZJ}),knt={kernelName:rp,backendName:"webgl",kernelFunc:Int};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $nt=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${z1};
  float a1 = ${V1};
  float a2 = ${W1};
  float a3 = ${U1};
  float a4 = ${G1};
  float a5 = ${H1};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,Snt=ie({opSnippet:$nt}),Nnt={kernelName:Bl,backendName:"webgl",kernelFunc:Snt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cnt=Kc+`
  return exp(x);
`,_nt=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,sA=ie({opSnippet:Cnt,packedOpSnippet:_nt,cpuKernelImpl:QJ,dtype:"float32"}),Tnt={kernelName:zl,backendName:"webgl",kernelFunc:sA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cx(n){const{inputs:t,attrs:e,backend:s}=n,{dim:r}=e,{input:o}=t,a=o.shape.length,i=o.shape.slice();let u=r;return r<0&&(T(-(a+1)<=r,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),u=a+r+1),i.splice(u,0,1),yt({inputs:{x:o},backend:s,attrs:{shape:i}})}const Ent={kernelName:op,backendName:"webgl",kernelFunc:Cx};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h$="return exp(x) - 1.0;",Ant=ie({opSnippet:h$,packedOpSnippet:h$,cpuKernelImpl:tZ}),Dnt={kernelName:Vl,backendName:"webgl",kernelFunc:Ant};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class p${constructor(t,e,s){this.variableNames=["real","imag"];const r=e[1];this.outputShape=e;const o=s?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=s?`${r}.0`:"1.0";let i;if(t==="real")i="return real * expR - imag * expI;";else if(t==="imag")i="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${t}.`);this.userCode=`
      const float exponentMultiplier = ${o};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${i}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${r});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${r}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${a};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rA(n,t,e){const s=e.texData.get(n.dataId),r=j(n.shape),o=n.shape[n.shape.length-1],a=r/o,i=yt({inputs:{x:n},backend:e,attrs:{shape:[a,o]}}),u=i.shape,c=new p$("real",u,t),l=new p$("imag",u,t),d=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:u},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:u}],h=e.runWebGLProgram(c,d,"float32"),p=e.runWebGLProgram(l,d,"float32"),f=Ka({inputs:{real:h,imag:p},backend:e});e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(p);const m=yt({inputs:{x:f},backend:e,attrs:{shape:n.shape}});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(f),m}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rnt(n){const{inputs:t,backend:e}=n,{input:s}=t;return rA(s,!1,e)}const Fnt={kernelName:Hw,backendName:"webgl",kernelFunc:Rnt};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ont{constructor(t,e){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=t,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qp(n){const{backend:t,attrs:e}=n,{shape:s,value:r}=e;let{dtype:o}=e;if(o=o||Ki(r),o==="string"){const a=tn(o,j(s));return a.fill(r),t.makeTensorInfo(s,o,a)}else{const a=new Ont(s,r),i=[[r]];return t.runWebGLProgram(a,[],o,i)}}const Pnt={kernelName:Ag,backendName:"webgl",kernelFunc:Qp};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Lnt{constructor(t){this.variableNames=["Image"],this.outputShape=[];const e=t[2];this.outputShape=t,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${e} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${e}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mnt={kernelName:ap,backendName:"webgl",kernelFunc:({inputs:n,backend:t})=>{const{image:e}=n,s=t,r=new Lnt(e.shape);return s.runWebGLProgram(r,[e],e.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const f$="return floor(x);",Bnt=ie({opSnippet:f$,packedOpSnippet:f$,cpuKernelImpl:eZ}),znt={kernelName:Wl,backendName:"webgl",kernelFunc:Bnt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vnt=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,Wnt=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,Unt=Bn({opSnippet:Vnt,packedOpSnippet:Wnt,dtype:"int32"}),Gnt={kernelName:Ul,backendName:"webgl",kernelFunc:Unt};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Hnt{constructor(t){this.variableNames=["A"];const e=cs(),[s,r]=t;this.outputShape=t,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${s}.0);

        vec4 values = ${e.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jnt{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const e=cs(),[s,r]=t;this.outputShape=t,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${r}.0, ${s}.0);
            vec4 values = ${e.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${e.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qnt={kernelName:uB,backendName:"webgl",kernelFunc:Knt};let Iu,Ib=et().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function Knt(n){const{inputs:t,backend:e,attrs:s}=n;let{pixels:r}=t;const{numChannels:o}=s,a=typeof HTMLVideoElement<"u"&&r instanceof HTMLVideoElement,i=typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement,[u,c]=a?[r.videoWidth,r.videoHeight]:[r.width,r.height],l=[c,u],d=[c,u,o];if(i||a){const m=et().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(Iu==null||m!==Ib)&&(Ib=m,Iu=document.createElement("canvas").getContext("2d",{willReadFrequently:Ib})),Iu.canvas.width=u,Iu.canvas.height=c,Iu.drawImage(r,0,0,u,c),r=Iu.canvas}const h=e.makeTensorInfo(l,"int32");e.texData.get(h.dataId).usage=Hs.PIXELS,e.gpgpu.uploadPixelDataToTexture(e.getTexture(h.dataId),r);const p=et().getBool("WEBGL_PACK")?new jnt(d):new Hnt(d),f=e.runWebGLProgram(p,[h],"int32");return e.disposeData(h.dataId),f}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xnt(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:o,bias:a,preluActivationWeights:i}=t,{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=s,m=Ur(l),g=Ze(r.shape,o.shape,u,d,c,h,!1,m);let y;const b=[],x=a!=null,w=i!=null,v=p==="leakyrelu",k=()=>{const _=[r,o],C=(N,$)=>{if($==="NCHW"&&N.shape.length===1&&N.shape[0]!==1){const A=yt({inputs:{x:N},backend:e,attrs:{shape:[N.shape[0],1,1]}});return b.push(A),A}return N};if(x&&_.push(C(a,l)),w&&_.push(C(i,l)),v){const N=e.makeTensorInfo([],"float32",Va(f,"float32"));_.push(N),b.push(N)}return _};if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))y=ZE({x:r,filter:o,convInfo:g,backend:e,bias:a,activation:p,preluActivationWeights:i,leakyreluAlpha:f});else if(g.strideWidth<=2&&m==="channelsLast"&&et().getBool("WEBGL_EXP_CONV")){const _=p?qd(p,!0):null,C=new JE(g,x,_,w,v),N=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],$=k();y=e.runWebGLProgram(C,$,"float32",N)}else if(et().getBool("WEBGL_CONV_IM2COL"))y=QE({x:r,filter:o,convInfo:g,backend:e,bias:a,activation:p,preluActivationWeights:i,leakyreluAlpha:f});else{const _=p?qd(p,!1):null,C=new YE(g,x,_,w,v),N=k();y=e.runWebGLProgram(C,N,"float32")}const S=yt({inputs:{x:y},backend:e,attrs:{shape:g.outShape}});return b.push(y),b.forEach(_=>e.disposeIntermediateTensorInfo(_)),S}const Ynt={kernelName:Qu,backendName:"webgl",kernelFunc:Xnt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jnt(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:o,bias:a,preluActivationWeights:i}=t,{strides:u,pad:c,dilations:l,dimRoundingMode:d,activation:h,leakyreluAlpha:p}=s,f=[];let m=l;m==null&&(m=[1,1]),T(Mn(u,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${m}'`);const g=Ze(r.shape,o.shape,u,m,c,d,!0),y=et().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,b=h?qd(h,y):null,x=[r,o],w=a!=null,v=i!=null,k=h==="leakyrelu";if(w&&x.push(a),v&&x.push(i),k){const N=e.makeTensorInfo([],"float32",Va(p,"float32"));x.push(N),f.push(N)}let S;y?S=new nA(g,w,b,v,k):S=new eA(g,w,b,v,k);const _=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],C=e.runWebGLProgram(S,x,"float32",_);return f.forEach(N=>e.disposeIntermediateTensorInfo(N)),C}const Znt={kernelName:jg,backendName:"webgl",kernelFunc:Jnt};class Qnt{constructor(t,e,s,r){this.sliceDim=t,this.strides=e,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=s;const o=Te(s.length);let a=`
    int index;`;for(let i=0;i<this.sliceDim;i++)a+=`
          index = round(getIndices(coords[0], ${i}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[i]};
          flattenIndex += index * ${this.strides[i]};`;this.userCode=`
         void main() {
          ${o} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${a}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tst(n){const{inputs:t,backend:e}=n,{params:s,indices:r}=t,o=r.shape,a=o[o.length-1],i=j(s.shape),[u,c,l,d]=ny(s,r),h=yt({inputs:{x:r},backend:e,attrs:{shape:[c,a]}}),p=yt({inputs:{x:s},backend:e,attrs:{shape:[j(s.shape)/l,l]}});if(e.shouldExecuteOnCPU([s,r])||s.dtype==="string"){const y=e.readSync(r.dataId),b=e.bufferSync(s),x=nZ(y,b,s.dtype,c,a,l,d,s.shape,i);return e.makeTensorInfo(u,s.dtype,x.values)}const f=new Qnt(a,d,[c,l],s.shape),m=e.runWebGLProgram(f,[p,h],p.dtype),g=yt({inputs:{x:m},backend:e,attrs:{shape:u}});return e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(m),g}const est={kernelName:Dg,backendName:"webgl",kernelFunc:tst};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nst{constructor(t,e){this.variableNames=["A","indices"],this.outputShape=e,this.rank=e.length;const s=Te(this.rank),r=sst(t);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${t[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${r}));
      }
    `}}function sst(n,t){const e=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let r=0;r<n.length;r++)r===2?s.push("index"):s.push(`${e[r]}`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oA(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,indices:o}=t,{axis:a,batchDims:i}=s,u=Gt(a,r.shape)[0];if(et().get("DEBUG")){const b=e.readSync(o.dataId),x=r.shape[u];for(let w=0;w<b.length;++w){const v=b[w];T(v<=x-1&&v>=0,()=>`GatherV2: the index value ${v} is not in [0, ${x-1}]`)}}const c=my(r,o,u,i),l=j(o.shape),d=[],h=yt({inputs:{x:r},backend:e,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),p=yt({inputs:{x:o},backend:e,attrs:{shape:[c.batchSize,l/c.batchSize]}});d.push(h),d.push(p);const f=[c.batchSize,c.outerSize,l/c.batchSize,c.sliceSize];if(e.shouldExecuteOnCPU([r,o])||r.dtype==="string"){const b=e.bufferSync(p),x=e.bufferSync(h),w=sZ(x,b,f);return d.forEach(v=>e.disposeIntermediateTensorInfo(v)),e.makeTensorInfo(c.outputShape,w.dtype,w.values)}const m=new nst(h.shape,f),g=e.runWebGLProgram(m,[h,p],h.dtype);d.push(g);const y=yt({inputs:{x:g},backend:e,attrs:{shape:c.outputShape}});return d.forEach(b=>e.disposeIntermediateTensorInfo(b)),y}const rst={kernelName:ip,backendName:"webgl",kernelFunc:oA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ost="return float(a > b);",ast=`
  return vec4(greaterThan(a, b));
`,ist=Bn({opSnippet:ost,packedOpSnippet:ast,cpuKernelImpl:rZ,dtype:"bool"}),ust={kernelName:up,backendName:"webgl",kernelFunc:ist};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lst="return float(a >= b);",cst=`
  return vec4(greaterThanEqual(a, b));
`,dst=Bn({opSnippet:lst,packedOpSnippet:cst,dtype:"bool",cpuKernelImpl:oZ}),hst={kernelName:Hl,backendName:"webgl",kernelFunc:dst};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pst(n){const{inputs:t,backend:e}=n,{input:s}=t;return rA(s,!0,e)}const fst={kernelName:jw,backendName:"webgl",kernelFunc:pst};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mst="return float(!isnan(x) && !isinf(x));",gst=ie({opSnippet:mst,dtype:"bool"}),yst={kernelName:ql,backendName:"webgl",kernelFunc:gst};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bst="return float(isinf(x));",xst=ie({opSnippet:bst,dtype:"bool"}),wst={kernelName:Kl,backendName:"webgl",kernelFunc:xst};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vst="return float(isnan(x));",Ist=ie({opSnippet:vst,dtype:"bool"}),kst={kernelName:Xl,backendName:"webgl",kernelFunc:Ist};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $st="return float(a < b);",Sst=`
  return vec4(lessThan(a, b));
`,Nst=Bn({opSnippet:$st,packedOpSnippet:Sst,cpuKernelImpl:aZ,dtype:"bool"}),Cst={kernelName:lp,backendName:"webgl",kernelFunc:Nst};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _st="return float(a <= b);",Tst=`
  return vec4(lessThanEqual(a, b));
`,Est=Bn({opSnippet:_st,packedOpSnippet:Tst,cpuKernelImpl:iZ,dtype:"bool"}),Ast={kernelName:cp,backendName:"webgl",kernelFunc:Est};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dst(n){const{backend:t,attrs:e}=n,{start:s,stop:r,num:o}=e,a=uZ(s,r,o);return t.makeTensorInfo([a.length],"float32",a)}const Rst={kernelName:Rg,backendName:"webgl",kernelFunc:Dst};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fst=Kc+`
  return x < 0.0 ? 0./0. : log(x);
`,Ost=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,Pst=ie({opSnippet:Fst,packedOpSnippet:Ost,cpuKernelImpl:lZ}),Lst={kernelName:Jl,backendName:"webgl",kernelFunc:Pst};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mst=Kc+`
  return log(1.0 + x);
`,Bst=ie({opSnippet:Mst}),zst={kernelName:Zl,backendName:"webgl",kernelFunc:Bst};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vst="return float(a >= 1.0 && b >= 1.0);",Wst=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,Ust=Bn({opSnippet:Vst,packedOpSnippet:Wst,dtype:"bool"}),Gst={kernelName:dp,backendName:"webgl",kernelFunc:Ust};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hst="return float(!(x >= 1.0));",jst=ie({opSnippet:Hst}),qst={kernelName:hp,backendName:"webgl",kernelFunc:jst};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kst="return float(a >= 1.0 || b >= 1.0);",Xst=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,Yst=Bn({opSnippet:Kst,packedOpSnippet:Xst,dtype:"bool"}),Jst={kernelName:pp,backendName:"webgl",kernelFunc:Yst};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zst{constructor(t,e,s,r,o){this.variableNames=["x"],this.outputShape=[];const a=e,i=t[3]-1;this.outputShape=t;let u;const c=`float(${s}) + float(${r}) * sum`;o===.5?u=`inversesqrt(${c})`:o===1?u=`1.0/(${c})`:u=`exp(log(${c}) * float(-${o}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${a}; j <= ${a}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${i}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${u};
        setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qst{constructor(t,e,s,r,o){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=e,i=t[3]-1;this.outputShape=t;let u;const c=`float(${s}) + float(${r}) * sum`;o===.5?u=`inversesqrt(${c})`:o===1?u=`1.0/(${c})`:u=`exp(log(${c}) * float(-${o}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${a};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${a}; j <= ${a}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${u};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const trt=n=>{const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{depthRadius:o,bias:a,alpha:i,beta:u}=s,c=et().getBool("WEBGL_PACK_NORMALIZATION")?new Qst(r.shape,o,a,i,u):new Zst(r.shape,o,a,i,u);return e.runWebGLProgram(c,[r],r.dtype)},ert={kernelName:Ql,backendName:"webgl",kernelFunc:trt};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nrt{constructor(t,e,s,r,o){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=s,this.alpha=r,this.beta=o,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${e})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${e} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${r}) * norm + float(${s});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${r})
                * float(${o})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${o});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const srt=n=>{const{inputs:t,backend:e,attrs:s}=n,{x:r,y:o,dy:a}=t,{depthRadius:i,bias:u,alpha:c,beta:l}=s,d=new nrt(r.shape,i,u,c,l);return e.runWebGLProgram(d,[r,o,a],r.dtype)},rrt={kernelName:fp,backendName:"webgl",kernelFunc:srt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ort(n,t,e,s){const r=j(t),a=j(n.shape)/r,i=yt({inputs:{x:n},attrs:{shape:[a,r]},backend:s}),u=cu(i,n.dtype,"max",s),c=yt({inputs:{x:u},attrs:{shape:e},backend:s});return s.disposeIntermediateTensorInfo(i),s.disposeIntermediateTensorInfo(u),c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aA(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{reductionIndices:o,keepDims:a}=s,i=r.shape.length,u=Gt(o,r.shape);let c=u;const l=Ve(c,i),d=l!=null,h=e.shouldExecuteOnCPU([r]);let p=r;if(d){if(h){const x=e.texData.get(p.dataId).values,w=new Array(i);for(let S=0;S<w.length;S++)w[S]=r.shape[l[S]];const v=Q0(x,r.shape,r.dtype,l,w);p=e.makeTensorInfo(w,r.dtype);const k=e.texData.get(p.dataId);k.values=v}else p=Ey(r,l,e);c=Fe(c.length,i)}ze("max",c,i);const[f,m]=Ge(p.shape,c);let g=f;a&&(g=Re(f,u));let y;if(h){const x=e.texData.get(p.dataId).values,w=cZ(x,j(m),g,r.dtype);y=e.makeTensorInfo(g,r.dtype);const v=e.texData.get(y.dataId);v.values=w}else y=ort(p,m,g,e);return d&&e.disposeIntermediateTensorInfo(p),y}const art={kernelName:tc,backendName:"webgl",kernelFunc:aA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const irt=tv+`
  return max(a, b);
`,urt=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+lu+`
  return result;
`,lrt=Bn({opSnippet:irt,packedOpSnippet:urt,cpuKernelImpl:dZ}),crt={kernelName:ec,backendName:"webgl",kernelFunc:lrt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function drt(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t;Yp(r,"maxPool");const{filterSize:o,strides:a,pad:i,dimRoundingMode:u}=s,c=1;T(Mn(a,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`);const l=Xn(r.shape,o,a,c,i,u);if(l.filterWidth===1&&l.filterHeight===1&&we(l.inShape,l.outShape))return Ls({inputs:{x:r},backend:e});const d=new Kd(l,"max",!1);return e.runWebGLProgram(d,[r],r.dtype)}const hrt={kernelName:nc,backendName:"webgl",kernelFunc:drt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function prt(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{filterSize:o,strides:a,pad:i,dataFormat:u,dimRoundingMode:c}=s,l=[1,1,1],d=Js(r.shape,o,a,l,i,c,u),h=new nv(d,"max",!1);return e.runWebGLProgram(h,[r],r.dtype)}const frt={kernelName:mp,backendName:"webgl",kernelFunc:prt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mrt{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideHeight,s=t.strideWidth,r=t.dilationHeight,o=t.effectiveFilterHeight,a=t.effectiveFilterWidth,i=o-1-t.padInfo.top,u=a-1-t.padInfo.left,c=o*a-1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${u});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${o};
          wR += ${r}) {
          float dyR = float(dyRCorner + wR) / ${e}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${a}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${c} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${a} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}}class grt{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideDepth,s=t.strideHeight,r=t.strideWidth,o=t.dilationDepth,a=t.dilationHeight,i=t.dilationWidth,u=t.effectiveFilterDepth,c=t.effectiveFilterHeight,l=t.effectiveFilterWidth,d=u-1-t.padInfo.front,h=c-1-t.padInfo.top,p=l-1-t.padInfo.left,f=u*c*l-1;this.userCode=`
      const ivec3 pads = ivec3(${d}, ${h}, ${p});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${u};
           wD += ${o}) {
          float dyD = float(dyDCorner + wD) / ${e}.0;

          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${c};
              wR += ${a}) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${l};
                wC += ${i}) {
              float dyC = float(dyCCorner + wC) / ${r}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${f} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${c} * ${l} +
                  wR * ${l} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yrt(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,input:o}=t,a=o,{filterSize:i,strides:u,pad:c,dimRoundingMode:l}=s,d=[1,1,1],h=Js(a.shape,i,u,d,c,l),p=new nv(h,"max",!0),f=e.runWebGLProgram(p,[a],a.dtype),m=new grt(h),g=e.runWebGLProgram(m,[r,f],a.dtype);return e.disposeIntermediateTensorInfo(f),g}const brt={kernelName:Og,backendName:"webgl",kernelFunc:yrt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xrt(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,input:o,output:a}=t,i=o;Yp([o,a],"maxPoolGrad");const{filterSize:u,strides:c,pad:l,dimRoundingMode:d}=s,h=Xn(i.shape,u,c,1,l,d),p=!0,f=new Kd(h,"max",p),m=e.runWebGLProgram(f,[i],i.dtype),g=new mrt(h),y=e.runWebGLProgram(g,[r,m],i.dtype);return e.disposeIntermediateTensorInfo(m),y}const wrt={kernelName:Fg,backendName:"webgl",kernelFunc:xrt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vrt(n,t,e,s){let r=new Kd(e,"max",!1);const o=s.runWebGLProgram(r,[n],"float32");r=new Kd(e,"max",!0,!0,t);const a=s.runWebGLProgram(r,[n],"float32");return[o,a]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Irt={kernelName:Kw,backendName:"webgl",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{x:s}=n,{filterSize:r,strides:o,pad:a,includeBatchInIndex:i}=t,u=e;T(s.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`);const c=[1,1];T(Mn(o,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);const l=Xn(s.shape,r,o,c,a),[d,h]=vrt(s,i,l,u);return[d,h]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function krt(n,t,e,s){const r=j(t),a=j(n.shape)/r,i=yt({inputs:{x:n},attrs:{shape:[a,r]},backend:s}),u=cu(i,"float32","mean",s),c=yt({inputs:{x:u},attrs:{shape:e},backend:s});return s.disposeIntermediateTensorInfo(i),s.disposeIntermediateTensorInfo(u),c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $rt={kernelName:sc,backendName:"webgl",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{x:s}=n,{keepDims:r,axis:o}=t,a=e,i=s.shape.length,u=Gt(o,s.shape);let c=u;const l=Ve(c,i),d=l!=null,h=a.shouldExecuteOnCPU([s]),p=[];let f=s;if(d){if(h){const w=a.texData.get(f.dataId).values,v=new Array(i);for(let _=0;_<v.length;_++)v[_]=s.shape[l[_]];const k=Q0(w,s.shape,s.dtype,l,v);f=a.makeTensorInfo(v,s.dtype);const S=a.texData.get(f.dataId);S.values=k}else f=Ey(s,l,a);p.push(f),c=Fe(c.length,i)}ze("sum",c,i);const[m,g]=Ge(f.shape,c);let y=m;r&&(y=Re(m,u));const b=krt(f,g,y,a);for(const x of p)a.disposeIntermediateTensorInfo(x);return b}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Srt(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,keepDims:a}=s,i=r.shape.length,u=Gt(o,r.shape);let c=u;const l=Ve(c,i);let d=r;l!=null&&(d=ls({inputs:{x:r},backend:e,attrs:{perm:l}}),c=Fe(c.length,r.shape.length)),ze("min",c,i);const[h,p]=Ge(d.shape,c),f=j(p),m=yt({inputs:{x:d},backend:e,attrs:{shape:[-1,f]}}),g=cu(m,m.dtype,"min",e);let y;if(a){const b=Re(h,u);y=yt({inputs:{x:g},backend:e,attrs:{shape:b}})}else y=yt({inputs:{x:g},backend:e,attrs:{shape:h}});return e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(g),l!=null&&e.disposeIntermediateTensorInfo(d),y}const Nrt={kernelName:rc,backendName:"webgl",kernelFunc:Srt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Crt=tv+`
  return min(a, b);
`,_rt=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+lu+`
  return result;
`,Trt=Bn({opSnippet:Crt,packedOpSnippet:_rt,cpuKernelImpl:hZ}),Ert={kernelName:oc,backendName:"webgl",kernelFunc:Trt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Art{constructor(t,e,s){this.variableNames=["x"],this.outputShape=e.map((l,d)=>l[0]+t[d]+l[1]);const r=t.length,o=Te(r),a=e.map(l=>l[0]).join(","),i=e.map((l,d)=>l[0]+t[d]).join(","),u=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),c=s==="reflect"?0:1;if(r===1){this.userCode=`
        int start = ${a};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${c};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${c};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${o} start = ${o}(${a});
      ${o} end = ${o}(${i});

      void main() {
        ${o} outC = getOutputCoords();
        for (int i = 0; i < ${r}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${c};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${c};
          }
        }
        ${o} coords = outC - start;
        setOutput(getX(${u}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Drt{constructor(t,e,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map((f,m)=>f[0]+t[m]+f[1]);const r=t.length,o=Te(r),a=e.map(f=>f[0]).join(","),i=e.map((f,m)=>f[0]+t[m]).join(","),u=rs("rc",r),c=rs("source",r),l=`${u[r-1]} < ${this.outputShape[r-1]}`,d=r===1?"source":`vec2(${c.slice(-2).join()})`,h=s==="reflect"?0:1;let p="";if(r===1){const f=`
        ${o} source = rc;
        if (source < start) {
          source = start * 2 - source - ${h};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${h};
        }
        source -= start;
      `;p=`
        ${o} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${c.join()}), ${d});
        ${u[r-1]} += 1;
        if(${l}) {
          ${f}
          result[1] = getChannel(getX(${c.join()}), ${d});
        }
      `}else{const f=`
        ${o} source = rc;
        ${o} lt = ${o}(lessThan(source, start));
        ${o} gte = ${o}(greaterThanEqual(source, end));
        ${o} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${h}) +
                gte * ((end - 1) * 2 - source + ${h});
        source -= start;
      `;p=`
        ${o} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${c.join()}), ${d});
        ${u[r-1]} += 1;
        if(${l}) {
          ${f}
          result[1] = getChannel(getX(${c.join()}), ${d});
        }
        rc = outputLoc;
        ${u[r-2]} += 1;
        if(${u[r-2]} < ${this.outputShape[r-2]}) {
          ${f}
          result[2] = getChannel(getX(${c.join()}), ${d});
          ${u[r-1]} += 1;
          if(${l}) {
            ${f}
            result[3] = getChannel(getX(${c.join()}), ${d});
          }
        }
      `}this.userCode=`
      const ${o} start = ${o}(${a});
      const ${o} end = ${o}(${i});

      void main() {
        ${o} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${p}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rrt=({inputs:n,backend:t,attrs:e})=>{const{x:s}=n,{paddings:r,mode:o}=e,a=et().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Drt(s.shape,r,o):new Art(s.shape,r,o);return t.runWebGLProgram(a,[s],s.dtype)},Frt={kernelName:ac,backendName:"webgl",kernelFunc:Rrt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ort=`if (b == 0.0) return NAN;
  return mod(a, b);`,Prt=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+lu+`
  return result;
`,Lrt=Bn({opSnippet:Ort,packedOpSnippet:Prt}),Mrt={kernelName:ic,backendName:"webgl",kernelFunc:Lrt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Brt{constructor(t,e,s){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[t,s],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${e-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${e-1}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zrt=`
if (a == b) {
  return 1.0;
};
return a / b;`,Vrt=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,iA=Bn({opSnippet:zrt,packedOpSnippet:Vrt,checkOutOfBounds:!0}),Wrt={kernelName:Ll,backendName:"webgl",kernelFunc:iA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const m$="return a - b;",uA=Bn({opSnippet:m$,packedOpSnippet:m$,supportsComplex:!0,cpuKernelImpl:RZ}),Urt={kernelName:Dc,backendName:"webgl",kernelFunc:uA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lA(n){const{inputs:t,backend:e,attrs:s}=n,{logits:r}=t,{dim:o}=s,a=Gt([o],r.shape),i=aA({inputs:{x:r},backend:e,attrs:{reductionIndices:a,keepDims:!1}}),u=Re(i.shape,a),c=yt({inputs:{x:i},backend:e,attrs:{shape:u}}),l=uA({inputs:{a:r,b:c},backend:e}),d=sA({inputs:{x:l},backend:e}),h=Ay({inputs:{x:d},backend:e,attrs:{axis:a,keepDims:!1}}),p=yt({inputs:{x:h},backend:e,attrs:{shape:u}}),f=iA({inputs:{a:d,b:p},backend:e});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(l),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(p),f}const Grt={kernelName:Ec,backendName:"webgl",kernelFunc:lA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hrt(n){const{inputs:t,backend:e,attrs:s}=n,{logits:r}=t,{numSamples:o,seed:a,normalized:i}=s,u=i?r:lA({inputs:{logits:r},backend:e,attrs:{dim:r.shape.length-1}}),c=u.shape[0],l=u.shape[1],d=new Brt(c,l,o),h=[[a]],p=e.runWebGLProgram(d,[u],"int32",h);return i||e.disposeIntermediateTensorInfo(u),p}const jrt={kernelName:Pg,backendName:"webgl",kernelFunc:Hrt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qrt=yr+`
  return -x;
`,Krt=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function Xrt(n){const{inputs:t,backend:e}=n,{x:s}=t;if(e.shouldExecuteOnCPU([s])){const o=e.texData.get(s.dataId),[a,i]=fZ(o.values,s.shape,s.dtype);return e.makeTensorInfo(i,s.dtype,a)}let r;return et().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new ga(s.shape,Krt):r=new no(s.shape,qrt),e.runWebGLProgram(r,[s],s.dtype)}const Yrt={kernelName:gp,backendName:"webgl",kernelFunc:Xrt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jrt=R1;function Zrt(n){Gs("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:e,attrs:s}=n,{boxes:r,scores:o}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u}=s,c=e.readSync(r.dataId),l=e.readSync(o.dataId),{selectedIndices:d}=Jrt(c,l,a,i,u);return e.makeTensorInfo([d.length],"int32",new Int32Array(d))}const Qrt={kernelName:bp,backendName:"webgl",kernelFunc:Zrt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tot=F1;function eot(n){Gs("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:e,attrs:s}=n,{boxes:r,scores:o}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u,padToMaxOutputSize:c}=s,l=e.readSync(r.dataId),d=e.readSync(o.dataId),{selectedIndices:h,validOutputs:p}=tot(l,d,a,i,u,c);return[e.makeTensorInfo([h.length],"int32",new Int32Array(h)),e.makeTensorInfo([],"int32",new Int32Array([p]))]}const not={kernelName:xp,backendName:"webgl",kernelFunc:eot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sot=O1;function rot(n){Gs("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:e,attrs:s}=n,{boxes:r,scores:o}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u,softNmsSigma:c}=s,l=e.readSync(r.dataId),d=e.readSync(o.dataId),h=a,p=i,f=u,m=c,{selectedIndices:g,selectedScores:y}=sot(l,d,h,p,f,m);return[e.makeTensorInfo([g.length],"int32",new Int32Array(g)),e.makeTensorInfo([y.length],"float32",new Float32Array(y))]}const oot={kernelName:wp,backendName:"webgl",kernelFunc:rot};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class aot{constructor(t,e,s,r){this.variableNames=["indices"],this.outputShape=[t,e],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${r}), float(${s}),
                      float(index == coords.y)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iot=n=>{const{inputs:t,backend:e,attrs:s}=n,{indices:r}=t,{dtype:o,depth:a,onValue:i,offValue:u}=s,c=j(r.shape),l=new aot(c,a,i,u),d=yt({inputs:{x:r},backend:e,attrs:{shape:[c]}}),h=e.runWebGLProgram(l,[d],o);e.disposeIntermediateTensorInfo(d);const p=[...r.shape,a],f=yt({inputs:{x:h},backend:e,attrs:{shape:p}});return e.disposeIntermediateTensorInfo(h),f},uot={kernelName:lc,backendName:"webgl",kernelFunc:iot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dm(n){const{inputs:t,backend:e}=n,{x:s}=t;if(s.dtype==="complex64"){const r=Zp({inputs:{input:s},backend:e}),o=Dm({inputs:{x:r},backend:e}),a=Dy({inputs:{input:s},backend:e}),i=Dm({inputs:{x:a},backend:e}),u=Ka({inputs:{real:o,imag:i},backend:e});return e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(i),u}else return Qp({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:e})}const lot={kernelName:Fp,backendName:"webgl",kernelFunc:Dm};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cA(n){const{inputs:t,backend:e}=n,{x:s}=t;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){const r=Zp({inputs:{input:s},backend:e}),o=cA({inputs:{x:r},backend:e}),a=Dy({inputs:{input:s},backend:e}),i=Dm({inputs:{x:a},backend:e}),u=Ka({inputs:{real:o,imag:i},backend:e});return e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(i),u}else return Qp({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:e})}const cot={kernelName:vp,backendName:"webgl",kernelFunc:cA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dot(n){const{inputs:t,backend:e,attrs:s}=n,{axis:r}=s;if(t.length===1)return Cx({inputs:{input:t[0]},backend:e,attrs:{dim:r}});const o=t[0].shape,a=t[0].dtype;t.forEach(l=>{Sg(o,l.shape,"All tensors passed to stack must have matching shapes"),T(a===l.dtype,()=>"All tensors passed to stack must have matching dtypes")});const i=[],u=t.map(l=>{const d=Cx({inputs:{input:l},backend:e,attrs:{dim:r}});return i.push(d),d}),c=XE({inputs:u,backend:e,attrs:{axis:r}});return i.forEach(l=>e.disposeIntermediateTensorInfo(l)),c}const hot={kernelName:Ip,backendName:"webgl",kernelFunc:dot};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pot{constructor(t,e,s){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map((c,l)=>c[0]+t[l]+c[1]);const r=t.length,o=Te(r),a=e.map(c=>c[0]).join(","),i=e.map((c,l)=>c[0]+t[l]).join(","),u=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);if(r===1){this.userCode=`
        int start = ${a};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${o} start = ${o}(${a});
      ${o} end = ${o}(${i});

      void main() {
        ${o} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${o} coords = outC - start;
          setOutput(getX(${u}));
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fot{constructor(t,e,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map((m,g)=>m[0]+t[g]+m[1]);const r=t.length,o=Te(r),a=e.map(m=>m[0]).join(","),i=e.map((m,g)=>m[0]+t[g]).join(","),u=rs("rc",r),c=rs("source",r),l=`${u[r-1]} < ${this.outputShape[r-1]}`,d=r===1?"source":`vec2(${c.slice(-2).join()})`,h=[`${o} rc = outputLoc;`,`${u[r-1]} += 1;
       if(${l}) {
      `,r===1?"":`}
       rc = outputLoc;
       ${u[r-2]} += 1;
       if(${u[r-2]} < ${this.outputShape[r-2]}) {`,r===1?"":`  ${u[r-1]} += 1;
         if(${l}) {`],p=r===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let f="";for(let m=0,g=r===1?2:4;m<g;m++)f+=`
        ${h[m]}
        if (${p}) {
          result[${m}] = float(value);
        } else {
          ${o} source = rc - start;
          result[${m}] = getChannel(getX(${c.join()}), ${d});
        }
      `;f+=r===1?"} ":"}}",this.userCode=`
      const ${o} start = ${o}(${a});
      const ${o} end = ${o}(${i});

      void main() {
        ${o} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${f}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dA=n=>{const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{paddings:o,constantValue:a}=s;if(j(r.shape)===0){const c=o.map((l,d)=>l[0]+r.shape[d]+l[1]);return Qp({backend:e,attrs:{shape:c,value:a,dtype:r.dtype}})}const i=et().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new fot(r.shape,o,a):new pot(r.shape,o,a),u=[[a]];return e.runWebGLProgram(i,[r],r.dtype,u)},mot={kernelName:cc,backendName:"webgl",kernelFunc:dA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const got=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,yot=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+lu+`
  return result;
`,bot=Bn({opSnippet:got,packedOpSnippet:yot}),xot={kernelName:dc,backendName:"webgl",kernelFunc:bot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wot(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,keepDims:a}=s,i=r.shape.length,u=[],c=Gt(o,r.shape);let l=c;const d=Ve(l,i);let h=r;d!=null&&(h=ls({inputs:{x:r},backend:e,attrs:{perm:d}}),l=Fe(l.length,i),u.push(h)),ze("prod",l,i);let p;if(e.shouldExecuteOnCPU([h])){const f=e.texData.get(h.dataId).values,{outVals:m,outShape:g,outDtype:y}=gZ(h.shape,h.dtype,f,l);p=e.makeTensorInfo(g,y,m)}else{const[f,m]=Ge(h.shape,l),g=j(m),y=yt({inputs:{x:h},backend:e,attrs:{shape:[-1,g]}}),b=r1(r.dtype),x=cu(y,b,"prod",e);p=yt({inputs:{x},backend:e,attrs:{shape:f}}),u.push(y),u.push(x)}if(a){u.push(p);const f=Re(p.shape,c);p=yt({inputs:{x:p},backend:e,attrs:{shape:f}})}return u.forEach(f=>e.disposeIntermediateTensorInfo(f)),p}const vot={kernelName:pc,backendName:"webgl",kernelFunc:wot};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Iot(n){const{inputs:t,backend:e,attrs:s}=n,{paramsNestedSplits:r,paramsDenseValues:o,indices:a}=t,{outputRaggedRank:i}=s,u=r.map(y=>e.readSync(y.dataId)),c=r.map(y=>y.shape),l=e.readSync(o.dataId),d=e.readSync(a.dataId),[h,p,f]=yZ(u,c,l,o.shape,o.dtype,d,a.shape,i),m=h.map(y=>e.makeTensorInfo([y.length],"int32",y)),g=e.makeTensorInfo(f,o.dtype,p);return m.concat([g])}const kot={kernelName:$N,backendName:"webgl",kernelFunc:Iot};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $ot(n){const{inputs:t,backend:e}=n,{starts:s,limits:r,deltas:o}=t,a=e.readSync(s.dataId),i=e.readSync(r.dataId),u=e.readSync(o.dataId),[c,l]=bZ(a,s.shape,s.dtype,i,r.shape,u,o.shape),d=e.makeTensorInfo([c.length],"int32",c),h=e.makeTensorInfo([l.length],s.dtype,l);return[d,h]}const Sot={kernelName:SN,backendName:"webgl",kernelFunc:$ot};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Not(n){const{inputs:t,backend:e,attrs:s}=n,{shape:r,values:o,defaultValue:a,rowPartitionTensors:i}=t,{rowPartitionTypes:u}=s,c=e.readSync(r.dataId),l=e.readSync(o.dataId),d=e.readSync(a.dataId),h=i.map(g=>e.readSync(g.dataId)),p=i.map(g=>g.shape),[f,m]=xZ(c,r.shape,l,o.shape,o.dtype,d,a.shape,h,p,u);return e.makeTensorInfo(f,o.dtype,m)}const Cot={kernelName:NN,backendName:"webgl",kernelFunc:Not};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hA=n=>{const{backend:t,attrs:e}=n,{start:s,stop:r,step:o,dtype:a}=e,i=wZ(s,r,o,a);return t.makeTensorInfo([i.length],a,i)},_ot={kernelName:Lg,backendName:"webgl",kernelFunc:hA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tot="return 1.0 / x;",Eot=ie({opSnippet:Tot}),Aot={kernelName:fc,backendName:"webgl",kernelFunc:Eot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dot=yr+`
  return (x < 0.0) ? 0.0 : x;
`,Rot=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Fot=ie({opSnippet:Dot,packedOpSnippet:Rot}),Oot={kernelName:mc,backendName:"webgl",kernelFunc:Fot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pot=yr+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Lot=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Mot=ie({opSnippet:Pot,packedOpSnippet:Lot}),Bot={kernelName:bc,backendName:"webgl",kernelFunc:Mot};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zot{constructor(t,e,s,r,o){this.variableNames=["A"],this.outputShape=[];const[a,i,u,c]=t;this.outputShape=[a,e,s,c];const l=[r&&e>1?i-1:i,r&&s>1?u-1:u],d=[r&&e>1?e-1:e,r&&s>1?s-1:s];let h;o?h="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":h="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${l[0]/d[0]},
          ${l[1]/d[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${u}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${h};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Vot{constructor(t,e,s,r,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,u,c]=t;this.outputShape=[a,e,s,c];const l=[r&&e>1?i-1:i,r&&s>1?u-1:u],d=[r&&e>1?e-1:e,r&&s>1?s-1:s];let h;o?h="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":h="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${l[0]/d[0]},
          ${l[1]/d[1]},
          ${l[1]/d[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${u}.0,
                                     ${u}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${h};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${c-1};
        bool hasNextRow = coords.z < ${s-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wot(n){const{inputs:t,backend:e,attrs:s}=n,{images:r}=t,{alignCorners:o,halfPixelCenters:a,size:i}=s,[u,c]=i,l=et().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Vot(r.shape,u,c,o,a):new zot(r.shape,u,c,o,a);return e.runWebGLProgram(l,[r],"float32")}const Uot={kernelName:yc,backendName:"webgl",kernelFunc:Wot};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Got{constructor(t,e,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,r,o]=e,[,a,i]=t,u=[s&&a>1?r-1:r,s&&i>1?o-1:o],c=[s&&a>1?a-1:a,s&&i>1?i-1:i],l=u[0]/c[0],d=u[1]/c[1],h=1/l,p=1/d,f=Math.ceil(h)*2+2,m=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${l});
        const float widthScale = float(${d});

        const float invHeightScale = float(${h});
        const float invWidthScale = float(${p});

        const int winHeight = int(${f});
        const int winWidth = int(${m});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${o-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hot(n){const{inputs:t,backend:e,attrs:s}=n,{images:r,dy:o}=t,{alignCorners:a}=s,i=new Got(o.shape,r.shape,a);return e.runWebGLProgram(i,[o],o.dtype)}const jot={kernelName:Sp,backendName:"webgl",kernelFunc:Hot};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qot{constructor(t,e,s,r,o){this.variableNames=["A"],this.outputShape=[];const[a,i,u,c]=t;this.outputShape=[a,e,s,c];const l=[r&&e>1?i-1:i,r&&s>1?u-1:u],d=[r&&e>1?e-1:e,r&&s>1?s-1:s],h=r?"0.5":"0.0";let p;o?p="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":p="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${l[0]/d[0]},
          ${l[1]/d[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${u}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Kot{constructor(t,e,s,r,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,u,c]=t;this.outputShape=[a,e,s,c];const l=[r&&e>1?i-1:i,r&&s>1?u-1:u],d=[r&&e>1?e-1:e,r&&s>1?s-1:s],h=r?"0.5":"0.0";let p;o?p="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":p="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${l[0]/d[0]},
          ${l[1]/d[1]},
          ${l[1]/d[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${u}.0,
                                     ${u}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${c-1};
        bool hasNextRow = coords.z < ${s-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xot(n){const{inputs:t,backend:e,attrs:s}=n,{images:r}=t,{alignCorners:o,halfPixelCenters:a,size:i}=s,[u,c]=i,l=et().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Kot(r.shape,u,c,o,a):new qot(r.shape,u,c,o,a);return e.runWebGLProgram(l,[r],r.dtype)}const Yot={kernelName:gc,backendName:"webgl",kernelFunc:Xot};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jot{constructor(t,e,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,r,o]=e,[,a,i]=t,u=[s&&a>1?r-1:r,s&&i>1?o-1:o],c=[s&&a>1?a-1:a,s&&i>1?i-1:i],l=u[0]/c[0],d=u[1]/c[1],h=1/l,p=1/d,f=Math.ceil(h)*2+2,m=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${l});
        const float widthScale = float(${d});

        const float invHeightScale = float(${h});
        const float invWidthScale = float(${p});

        const int winHeight = int(${f});
        const int winWidth = int(${m});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float sourceFracRow =
              float(${u[0]}) *
                (float(dyR) / float(${c[0]}));

            float sourceFracCol =
                float(${u[1]}) *
                  (float(dyC) / float(${c[1]}));

            int sourceNearestRow = int(min(
                float(int(${r}) - 1),
                ${s} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${o}) - 1),
                ${s} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zot(n){const{inputs:t,backend:e,attrs:s}=n,{images:r,dy:o}=t,{alignCorners:a}=s,i=new Jot(o.shape,r.shape,a);return e.runWebGLProgram(i,[o],o.dtype)}const Qot={kernelName:$p,backendName:"webgl",kernelFunc:Zot};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tat{constructor(t,e){this.variableNames=["x"];const s=t.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);if(this.outputShape=t,s===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${t[0]} - coord - 1));
        }
      `;return}const r=i=>e.indexOf(i)!==-1&&t[i]!==1?`${t[i]} - coords[${i}] - 1`:`coords[${i}]`,o=t.map((i,u)=>r(u)).join(","),a=Te(s);this.userCode=`
      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${o}));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class eat{constructor(t,e){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const s=t.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);this.outputShape=t;const r=rs("rc",s),o=`${r[s-1]} + 1 < ${this.outputShape[s-1]}`,a=`${r[s-2]} + 1 < ${this.outputShape[s-2]}`,i=Te(s);s===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${t[0]} - rc - 1),
            ${t[0]} - rc - 1);
          if(${o}){
              result.g = getChannel(getX(${t[0]} - (rc  + 1) - 1),
                ${t[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${i} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${u(r.slice())};
          if(${o}){
            result.g = ${c(r.slice())};
          }
          if(${a}) {
            result.b = ${l(r.slice())};
            if(${o}) {
              result.a = ${d(r.slice())};
            }
          }
          setOutput(result);
        }
    `;function u(f){return h(f)}function c(f){return f[s-1]="("+f[s-1]+" + 1)",h(f)}function l(f){return f[s-2]="("+f[s-2]+" + 1)",h(f)}function d(f){return f[s-1]="("+f[s-1]+" + 1)",f[s-2]="("+f[s-2]+" + 1)",h(f)}function h(f){const m=t.map((b,x)=>p(x,f)),g=m.join(","),y=m.slice(-2).join(",");return`getChannel(getX(${g}), vec2(${y}))`}function p(f,m){return e.indexOf(f)!==-1&&t[f]!==1?`${t[f]} - ${m[f]} - 1`:`${m[f]}`}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nat(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{dims:o}=s,a=r.shape.length,i=Gt(o,r.shape);if(a===0)return Ls({inputs:{x:r},backend:e});const u=et().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new eat(r.shape,i):new tat(r.shape,i);return e.runWebGLProgram(u,[r],r.dtype)}const sat={kernelName:xc,backendName:"webgl",kernelFunc:nat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rat{constructor(t,e){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const s=t[1],r=t[2];this.outputShape=t;let o="";typeof e=="number"?o=`float outputValue = ${e.toFixed(2)};`:o=`
        vec3 fill = vec3(${e.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${o}
          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${s}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oat={kernelName:Op,backendName:"webgl",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{image:s}=n,{radians:r,fillValue:o,center:a}=t,i=e,u=new rat(s.shape,o),[c,l]=ly(a,s.shape[1],s.shape[2]),d=[[c,l,Math.sin(r),Math.cos(r)]];return i.runWebGLProgram(u,[s],s.dtype,d)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aat=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,iat=ie({opSnippet:aat}),uat={kernelName:wc,backendName:"webgl",kernelFunc:iat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lat="return inversesqrt(x);",cat=ie({opSnippet:lat,cpuKernelImpl:vZ}),dat={kernelName:vc,backendName:"webgl",kernelFunc:cat};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sv{constructor(t,e,s,r,o,a,i=!0,u=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const c=Te(o.length),l=Te(a.length);let d="";s===1?d="i":s===2&&(d="i, j");const h=`getIndices(${d})`;let p="";r===1?p="i":r===2&&(p="i, coords[1]");const f=`getUpdates(${p})`;let m="";u&&(m="coords[0], coords[1]");const g=`getDefaultValue(${m})`,y=e>1?"strides[j]":"strides";this.userCode=`
        ${c} strides = ${c}(${o});

        void main() {
          ${l} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${t}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${e}; j++) {
              int index = round(${h});
              flattenedIndex += index * ${y};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${f};
              found = true;
            }
          }
          setOutput(mix(${g}, sum, float(found)));
        }
      `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hat{constructor(t,e,s,r,o,a,i=!0,u=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=a;const c=Te(o.length),l=Te(a.length);let d="";s===1?d="i":s===2&&(d="i, j");const h=`getIndices(${d})`;let p="";r===1?p="i":r===2&&(p="i, coords[1]");const f=`getUpdates(${p})`;let m="";u&&(m="coords[0], coords[1]");const g=`getDefaultValue(${m})`,y=e>1?"strides[j]":"strides",b=e>1?"strides[j + 1]":"strides";this.userCode=`
        ${c} strides = ${c}(${o});

        void main() {
          ${l} coords = getOutputCoords();
          vec4 sum = vec4(0.);
          vec4 found = vec4(0.);
          for (int i = 0; i < ${t}; i+=2) {
            ivec2 flattenedIndex = ivec2(0);
            for (int j = 0; j < ${e}; j+=2) {
              ivec4 index = round(${h});
              flattenedIndex += index.xz * ${y};
              if (j + 1 < ${e}) {
                flattenedIndex += index.yw * ${b};
              }
            }
            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||
                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {
              vec4 updVals = ${f};
              if (flattenedIndex[0] == coords[0]) {
                sum.xy += updVals.xy;
                found.xy = vec2(1.);
              } else if (flattenedIndex[0] == coords[0] + 1) {
                sum.zw += updVals.xy;
                found.zw = vec2(1.);
              }
              if (flattenedIndex[1] == coords[0]) {
                sum.xy += updVals.zw;
                found.xy = vec2(1.);
              } else if (flattenedIndex[1] == coords[0] + 1) {
                sum.zw += updVals.zw;
                found.zw = vec2(1.);
              }
            }
          }
          setOutput(mix(${g}, sum, found));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pat(n){const{inputs:t,backend:e,attrs:s}=n,{indices:r,updates:o}=t,{shape:a}=s,{sliceRank:i,numUpdates:u,sliceSize:c,strides:l,outputSize:d}=Io(o,r,a),h=[d/c,c];if(d===0)return e.makeTensorInfo(a,r.dtype);const p=yt({inputs:{x:r},backend:e,attrs:{shape:[u,i]}}),f=yt({inputs:{x:o},backend:e,attrs:{shape:[u,c]}}),m=e.makeTensorInfo([],"float32",new Float32Array([0]));let g;et().getBool("WEBGL_PACK")?g=new hat(u,i,p.shape.length,f.shape.length,l,h):g=new sv(u,i,p.shape.length,f.shape.length,l,h);const y=e.runWebGLProgram(g,[f,p,m],f.dtype),b=yt({inputs:{x:y},backend:e,attrs:{shape:a}});return e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(y),e.disposeIntermediateTensorInfo(m),b}const fat={kernelName:Mg,backendName:"webgl",kernelFunc:pat};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mat{constructor(t,e,s,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[t,s];const o="while (left < right) {",a=`for (int i = 0; i < ${Math.ceil(Math.log2(e+1))}; ++i) { if (left >= right) break;`,i=et().getNumber("WEBGL_VERSION")===2?o:a,u=r==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${i}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${u} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gat(n){const{inputs:t,backend:e,attrs:s}=n,{sortedSequence:r,values:o}=t,{side:a}=s,i=new mat(r.shape[0],r.shape[1],o.shape[1],a),u=[[r.shape[1]]];return e.runWebGLProgram(i,[r,o],"int32",u)}const yat={kernelName:zg,backendName:"webgl",kernelFunc:gat};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bat{constructor(t,e,s){this.variableNames=["c","a","b"],this.outputShape=e;let r,o;if(s>4)throw Error(`Where for rank ${s} is not yet supported`);if(s===1)o="resRC",r="resRC";else{const i=["resRC.x","resRC.y","resRC.z","resRC.w"],u=[],c=[];for(let l=0;l<e.length;l++)c.push(`${i[l]}`),l<t&&u.push(`${i[l]}`);r=u.join(),o=c.join()}const a=Te(s);this.userCode=`
      void main() {
        ${a} resRC = getOutputCoords();
        float cVal = getC(${r});
        if (cVal >= 1.0) {
          setOutput(getA(${o}));
        } else {
          setOutput(getB(${o}));
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xat(n){const{inputs:t,backend:e}=n,{condition:s,t:r,e:o}=t,a=new bat(s.shape.length,r.shape,r.shape.length);return e.runWebGLProgram(a,[s,r,o],Os(r.dtype,o.dtype))}const wat={kernelName:Np,backendName:"webgl",kernelFunc:xat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vat=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${hy};
  float scale = ${py};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,Iat=ie({opSnippet:vat}),kat={kernelName:Ic,backendName:"webgl",kernelFunc:Iat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $at=Kc+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,Sat=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Nat=ie({opSnippet:$at,packedOpSnippet:Sat,cpuKernelImpl:kZ}),Cat={kernelName:Nc,backendName:"webgl",kernelFunc:Nat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _at=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,Tat=ie({opSnippet:_at}),Eat={kernelName:Sc,backendName:"webgl",kernelFunc:Tat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Aat=Kc+`
  return sin(x);
`,Dat=`
  vec4 result = sin(x);
  bvec4 isNaN = isnan(x);
  ${lu}
  return result;
`,Rat=ie({opSnippet:Aat,packedOpSnippet:Dat}),Fat={kernelName:kc,backendName:"webgl",kernelFunc:Rat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oat=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,Pat=ie({opSnippet:Oat}),Lat={kernelName:$c,backendName:"webgl",kernelFunc:Pat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mat=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,Bat=ie({opSnippet:Mat}),zat={kernelName:Cc,backendName:"webgl",kernelFunc:Bat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vat=n=>{const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{blockShape:o,paddings:a}=s;T(r.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const i=o.reduce((y,b)=>y*b),u=[[0,0]];u.push(...a);for(let y=1+o.length;y<r.shape.length;++y)u.push([0,0]);const c=[],l=dA({inputs:{x:r},backend:e,attrs:{paddings:u,constantValue:0}}),d=nu(l.shape,o,i,!1),h=su(d.length,o.length,!1),p=ru(l.shape,o,i,!1),f=yt({inputs:{x:l},backend:e,attrs:{shape:d}}),m=ls({inputs:{x:f},backend:e,attrs:{perm:h}}),g=yt({inputs:{x:m},backend:e,attrs:{shape:p}});return c.push(l),c.push(f),c.push(m),c.forEach(y=>e.disposeIntermediateTensorInfo(y)),g},Wat={kernelName:_p,backendName:"webgl",kernelFunc:Vat};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uat(n){const{inputs:t,backend:e}=n,{indices:s,values:r,denseShape:o,defaultValue:a}=t;if(o.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${o.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${s.shape}`);if(r.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${r.shape}`);if(a.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${a.shape}`);const i=e.readSync(s.dataId),u=e.readSync(r.dataId),c=e.readSync(o.dataId),l=e.readSync(a.dataId)[0],[d,h,p,f,m]=SZ(i,s.shape,s.dtype,u,r.dtype,c,l);return[e.makeTensorInfo(h,s.dtype,d),e.makeTensorInfo([h[0]],r.dtype,p),e.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),e.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}const Gat={kernelName:Yw,backendName:"webgl",kernelFunc:Uat};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hat(n){const{inputs:t,backend:e}=n,{inputIndices:s,inputShape:r,newShape:o}=t;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${r.shape}`);if(o.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${o.shape}`);const a=Array.from(e.readSync(r.dataId)),i=e.readSync(s.dataId),u=Array.from(e.readSync(o.dataId)),[c,l,d]=NZ(i,s.shape,s.dtype,a,u);return[e.makeTensorInfo(l,s.dtype,c),e.makeTensorInfo([d.length],o.dtype,new Int32Array(d))]}const jat={kernelName:Vg,backendName:"webgl",kernelFunc:Hat};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qat(n){const{inputs:t,backend:e}=n,{data:s,indices:r,segmentIds:o}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${r.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${o.shape}`);const a=e.readSync(s.dataId),i=e.readSync(r.dataId),u=e.readSync(o.dataId),[c,l]=PE(a,s.shape,s.dtype,i,u,!0);return e.makeTensorInfo(l,s.dtype,c)}const Kat={kernelName:Jw,backendName:"webgl",kernelFunc:qat};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xat(n){const{inputs:t,backend:e}=n,{data:s,indices:r,segmentIds:o}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${r.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${o.shape}`);const a=e.readSync(s.dataId),i=e.readSync(r.dataId),u=e.readSync(o.dataId),[c,l]=PE(a,s.shape,s.dtype,i,u);return e.makeTensorInfo(l,s.dtype,c)}const Yat={kernelName:Zw,backendName:"webgl",kernelFunc:Xat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jat(n){const{inputs:t,backend:e,attrs:s}=n,{sparseIndices:r,sparseValues:o,defaultValue:a}=t,{outputShape:i}=s,{sliceRank:u,numUpdates:c,sliceSize:l,strides:d,outputSize:h}=Io(o,r,i),p=!1;if(o.dtype==="string"){const y=e.bufferSync(r),b=e.bufferSync(o),x=Ea(e.readSync(a.dataId)[0]),w=IZ(y,b,i,h,l,c,u,d,x,p);return e.makeTensorInfo(i,w.dtype,w.values)}const f=new sv(c,u,r.shape.length,o.shape.length,d,[h,1],p),m=e.runWebGLProgram(f,[o,r,a],o.dtype),g=yt({inputs:{x:m},backend:e,attrs:{shape:i}});return e.disposeIntermediateTensorInfo(m),g}const Zat={kernelName:Wg,backendName:"webgl",kernelFunc:Jat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qat(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{numOrSizeSplits:o,axis:a}=s,i=Gt(a,r.shape)[0],u=fy(r,o,i),c=r.shape.length,l=new Array(c).fill(0),d=r.shape.slice();return u.map(h=>{const p=[...d];p[i]=h;const f=Xc({inputs:{x:r},backend:e,attrs:{begin:l,size:p}});return l[i]+=h,f})}const tit={kernelName:Tp,backendName:"webgl",kernelFunc:Qat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g$="return sqrt(x);",eit=ie({opSnippet:g$,packedOpSnippet:g$,cpuKernelImpl:CZ}),nit={kernelName:_c,backendName:"webgl",kernelFunc:eit};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sit="return x * x;",rit=ie({opSnippet:sit}),oit={kernelName:Ug,backendName:"webgl",kernelFunc:rit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y$="return (a - b) * (a - b);",ait=Bn({opSnippet:y$,packedOpSnippet:y$}),iit={kernelName:Ac,backendName:"webgl",kernelFunc:ait};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uit(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t;if(r.dtype!=="string")throw new Error("Input must be of datatype string");const o=e.readSync(r.dataId),a=Ko(o),i=_Z(a,"string",s);return e.makeTensorInfo(r.shape,"string",i)}const lit={kernelName:Qw,backendName:"webgl",kernelFunc:uit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cit({inputs:n,attrs:t,backend:e}){const{x:s}=n,r=yr+`
    return x > 0.0 ? 1.0 : float(${t.alpha});
  `,o=new no(s.shape,r);return e.runWebGLProgram(o,[s],s.dtype)}const dit={kernelName:Zi,backendName:"webgl",kernelFunc:cit};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hit{constructor(t,e,s){this.variableNames=["x"],this.outputShape=s;const r=s.length,o=Te(s.length),a=Te(s.length);let i="";if(r===1)i="coords * strides + begin";else{let u=0;i=s.map((c,l)=>(u++,s.length===1?`coords * strides[${l}] + begin[${l}]`:`coords[${u-1}] * strides[${l}] + begin[${l}]`)).join(",")}this.userCode=`
      ${o} begin = ${o}(${t});
      ${o} strides = ${o}(${e});

      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${i}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pit(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{begin:o,end:a,strides:i,beginMask:u,endMask:c,ellipsisMask:l,newAxisMask:d,shrinkAxisMask:h}=s,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:w}=ay(r.shape,o,a,i,u,c,l,d,h);let v;if(m)v=yt({inputs:{x:r},backend:e,attrs:{shape:f}});else if(g||y){T(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);const S=sy(b,x,w),_=Xc({inputs:{x:r},backend:e,attrs:{begin:b,size:S}});v=yt({inputs:{x:_},backend:e,attrs:{shape:f}}),e.disposeIntermediateTensorInfo(_)}else if(e.shouldExecuteOnCPU([r])){const _=e.readSync(r.dataId),C=Zt(r.shape,r.dtype,_),N=TZ(p,C,w,b);v=e.makeTensorInfo(f,r.dtype,N.values)}else{const _=new hit(b,w,p);v=e.runWebGLProgram(_,[r],r.dtype)}const k=yt({inputs:{x:v},backend:e,attrs:{shape:f}});return e.disposeIntermediateTensorInfo(v),k}const fit={kernelName:Ep,backendName:"webgl",kernelFunc:pit};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mit(n){const{inputs:t,backend:e,attrs:s}=n,{separator:r,nGramWidths:o,leftPad:a,rightPad:i,padWidth:u,preserveShortSequences:c}=s,{data:l,dataSplits:d}=t,h=e.readSync(l.dataId),p=e.readSync(d.dataId),[f,m]=EZ(h,p,r,o,a,i,u,c);return[e.makeTensorInfo([f.length],"string",f),e.makeTensorInfo(d.shape,"int32",m)]}const git={kernelName:t1,backendName:"webgl",kernelFunc:mit};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yit(n){const{inputs:t,backend:e,attrs:s}=n,{skipEmpty:r}=s,{input:o,delimiter:a}=t;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(o.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${o.shape}`);if(a.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);const i=e.readSync(o.dataId),u=e.readSync(a.dataId)[0],[c,l,d]=AZ(i,u,r),h=l.length;return[e.makeTensorInfo([h,2],"int32",c),e.makeTensorInfo([h],"string",l),e.makeTensorInfo([2],"int32",new Int32Array(d))]}const bit={kernelName:e1,backendName:"webgl",kernelFunc:yit};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xit(n){const{inputs:t,backend:e,attrs:s}=n,{numBuckets:r}=s,{input:o}=t;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const a=e.readSync(o.dataId),i=DZ(a,r);return e.makeTensorInfo(o.shape,"int32",i)}const wit={kernelName:n1,backendName:"webgl",kernelFunc:xit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vit="return tan(x);",Iit=ie({opSnippet:vit}),kit={kernelName:Rc,backendName:"webgl",kernelFunc:Iit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $it=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,Sit=ie({opSnippet:$it}),Nit={kernelName:Fc,backendName:"webgl",kernelFunc:Sit};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cit(n){const{inputs:t,backend:e,attrs:s}=n,{tensor:r,indices:o,updates:a}=t,{sliceRank:i,numUpdates:u,sliceSize:c,strides:l,outputSize:d}=Io(a,o,r.shape),h=[d/c,c];if(d===0)return e.makeTensorInfo(r.shape,o.dtype);const p=yt({inputs:{x:o},backend:e,attrs:{shape:[u,i]}}),f=yt({inputs:{x:a},backend:e,attrs:{shape:[u,c]}}),m=yt({inputs:{x:r},backend:e,attrs:{shape:h}}),g=new sv(u,i,p.shape.length,f.shape.length,l,h,!1,!0),y=e.runWebGLProgram(g,[f,p,m],m.dtype),b=yt({inputs:{x:y},backend:e,attrs:{shape:r.shape}});return e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(y),b}const _it={kernelName:Bg,backendName:"webgl",kernelFunc:Cit};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Tit{constructor(t,e){this.variableNames=["A"];const s=new Array(t.length);for(let a=0;a<s.length;a++)s[a]=t[a]*e[a];this.outputShape=s,this.rank=s.length;const r=Te(this.rank),o=Eit(t);this.userCode=`
      void main() {
        ${r} resRC = getOutputCoords();
        setOutput(getA(${o}));
      }
    `}}function Eit(n){const t=n.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(t===1)return`imod(resRC, ${n[0]})`;const e=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let r=0;r<n.length;r++)s.push(`imod(${e[r]}, ${n[r]})`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pA(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{reps:o}=s;if(r.dtype==="string"||r.shape.length>5){const u=e.readSync(r.dataId),c=r.dtype==="string"?u.map(h=>Ea(h)):u,l=Zt(r.shape,r.dtype,c),d=FZ(l,o);return e.makeTensorInfo(d.shape,d.dtype,d.values)}const a=new Tit(r.shape,o);return e.runWebGLProgram(a,[r],r.dtype)}const Ait={kernelName:Ji,backendName:"webgl",kernelFunc:pA};class Dit{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=t,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}}class Rit{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=t,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ri(n,t){t!==null&&n.disposeIntermediateTensorInfo(t)}function b$(n){let t=1;for(;t<n;)t*=2;return t}function Fit(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{k:o,sorted:a}=s,i=et().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=et().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),c=r.shape,l=c[c.length-1];if(e.shouldExecuteOnCPU([r])||l<i||o>u){const N=e.readSync(r.dataId),[$,A]=OZ(N,c,r.dtype,o,a);return[e.makeTensorInfo($.shape,$.dtype,$.values),e.makeTensorInfo(A.shape,A.dtype,A.values)]}if(o===0)return c[c.length-1]=0,[e.makeTensorInfo(c,r.dtype,[]),e.makeTensorInfo(c,"int32",[])];if(l===1)return[r,Qp({attrs:{shape:c,dtype:"int32",value:0},backend:e})];const d=e.texData.get(r.dataId),h=d!==null&&d.isPacked,p=h?e.unpackTensor(r):r,m=j(c)/l,g=yt({inputs:{x:p},attrs:{shape:[m,l]},backend:e});h&&ri(e,p);const y=b$(o),b=b$(l);let x=null;const w=()=>x===null?[g,g]:[g,x],v=(N,$,A)=>{const D=w(),R=new Dit(A),z=[[l],[x===null?1:0],[Number.NEGATIVE_INFINITY],[N],[$]],H=x;x=e.runWebGLProgram(R,D,"int32",z),ri(e,H)};for(let N=1;N<y;N*=2){const $=N*2;for(let A=N;A>=1;A/=2)v($,A,[m,b])}for(let N=b;N>y;N/=2){const $=w(),A=new Rit([m,N/2]),R=[[l],[x===null?1:0],[y]],F=x;x=e.runWebGLProgram(A,$,"int32",R),ri(e,F);const z=y/2,H=z*2;for(let P=z;P>=1;P/=2)v(H,P,x.shape)}let k=x;x=Xc({inputs:{x},backend:e,attrs:{begin:0,size:[m,o]}}),ri(e,k);let S=oA({inputs:{x:g,indices:x},backend:e,attrs:{axis:1,batchDims:1}});ri(e,g);const _=c.slice(0,-1);_.push(o),k=x,x=yt({inputs:{x},attrs:{shape:_},backend:e}),ri(e,k);const C=S;return S=yt({inputs:{x:S},attrs:{shape:_},backend:e}),ri(e,C),[S,x]}const Oit={kernelName:Ap,backendName:"webgl",kernelFunc:Fit};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Pit{constructor(t,e,s,r,o,a){this.variableNames=["Image","Transforms"],this.outputShape=a;const i=s==="nearest"?1:2;let u;switch(r){case"constant":u=1;break;case"reflect":u=2;break;case"wrap":u=3;break;case"nearest":u=4;break;default:u=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${u} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${u} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${u} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${t} && 0 <= coordX && coordX < ${e}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${o});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${o});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${e}));
                float mapY = mapCoord(inY, float(${t}));

                if (${i} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lit(n){const{inputs:t,backend:e,attrs:s}=n,{image:r,transforms:o}=t,{interpolation:a,fillMode:i,fillValue:u,outputShape:c}=s,[l,d,h,p]=r.shape,[f,m]=c??[d,h],g=[l,f,m,p],y=new Pit(d,h,a,i,u,g);return e.runWebGLProgram(y,[r,o],"float32")}const Mit={kernelName:Dp,backendName:"webgl",kernelFunc:Lit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bit(n){const{inputs:t,attrs:e,backend:s}=n,{axis:r}=e,{x:o}=t;Yp(o,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const a=s.readSync(o.dataId),{outputValues:i,outputShape:u,indices:c}=PZ(a,r,o.shape,o.dtype);return[s.makeTensorInfo(u,o.dtype,i),s.makeTensorInfo([c.length],"int32",c)]}const zit={kernelName:Gg,backendName:"webgl",kernelFunc:Bit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vit(n){const{inputs:t,backend:e,attrs:s}=n,{value:r}=t;let{axis:o}=s;o<0&&(o+=r.shape.length);const a=r,i=a.shape.length,u=r.shape[o],c=new Array(i-1);let l=0;for(let m=0;m<i;m++)m!==o&&(c[l++]=a.shape[m]);const d=[],h=new Array(i).fill(0),p=a.shape.slice();p[o]=1;const f=new Array(u);for(let m=0;m<f.length;m++){h[o]=m;const g=Xc({inputs:{x:a},backend:e,attrs:{begin:h,size:p}}),y=yt({inputs:{x:g},backend:e,attrs:{shape:c}});f[m]=y,d.push(g)}return d.forEach(m=>e.disposeIntermediateTensorInfo(m)),f}const Wit={kernelName:Rp,backendName:"webgl",kernelFunc:Vit};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Uit{constructor(t,e){this.variableNames=["x","segmentIds"];const s=t.windowSize,r=t.batchSize,o=t.inSize,a=t.numSegments,i=a*Math.ceil(o/s);this.outputShape=[r,i];const u="0.0",c="sumValue",l=Math.floor(s/4)*4,d=s%4,h=`
        sumValue += dot(values, segFilter);
    `;let p="";o%s>0&&(p=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return initializationValue;
        }
      `);let f="";o%s>0&&(f=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${u};

      float getValue(int batch, int inIdx) {
        ${p}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${f}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${a})) * float(${s}));
        int currentSeg = int(mod(float(outIdx), float(${a})));

        float sumValue = 0.0;

        for (int i = 0; i < ${l}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${h}
        }

        int inIdx = inOffset + ${l};
        if (${d===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${h}
        } else if (${d===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${h}
        } else if (${d===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${h}
        }
        setOutput(${c});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Git(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,segmentIds:o}=t,{numSegments:a}=s,i=r.shape.length,u=[];let c=0;const l=Ve([c],i);let d=r;l!=null&&(d=ls({inputs:{x:r},backend:e,attrs:{perm:l}}),u.push(d),c=Fe(1,i)[0]);const h=t2(d.shape,c,a),p=j([d.shape[c]]),f=yt({inputs:{x:d},backend:e,attrs:{shape:[-1,p]}});u.push(f);const m=r1(r.dtype),g=(w,v,k,S,_)=>{const C=w.shape[0],N=w.shape[1],$=QC(N,_),A={windowSize:$,inSize:N,batchSize:C,numSegments:_},D=new Uit(A,v),R=e.compileAndRun(D,[w,k],S);if(u.push(R),R.shape[1]===_)return R;const F=hA({backend:e,attrs:{start:0,stop:_,step:1,dtype:"float32"}}),z=pA({inputs:{x:F},backend:e,attrs:{reps:[N/$]}});return u.push(F),u.push(z),g(R,v,z,S,_)},y=g(f,"unsortedSegmentSum",o,m,a),b=yt({inputs:{x:y},backend:e,attrs:{shape:h}});let x=b;if(l!=null){u.push(b);const w=vo(l);x=ls({inputs:{x},backend:e,attrs:{perm:w}})}return u.forEach(w=>e.disposeIntermediateTensorInfo(w)),x}const Hit={kernelName:Hg,backendName:"webgl",kernelFunc:Git};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jit=[CQ,TQ,DQ,OQ,LQ,zQ,WQ,GQ,KQ,YQ,QQ,ntt,ott,ltt,htt,ftt,gtt,wtt,Itt,$tt,_tt,Ott,Ltt,Vtt,Utt,Xtt,Jtt,eet,cQ,ret,cet,fet,wet,ket,Net,_et,Eet,Fet,Let,zet,Wet,Get,jet,Xet,Jet,ent,snt,ant,lnt,dnt,mnt,xnt,knt,Nnt,Tnt,Ent,Dnt,Fnt,Pnt,Mnt,znt,Gnt,qnt,Ynt,Znt,est,rst,ust,hst,lQ,fst,iet,yst,wst,kst,hQ,Cst,Ast,Rst,Lst,zst,Gst,qst,Jst,ert,rrt,art,crt,hrt,frt,brt,wrt,Irt,$rt,Nrt,Ert,Frt,Mrt,jrt,mQ,Yrt,Qrt,not,oot,Htt,uot,cot,hot,mot,xot,fQ,vot,kot,Sot,Cot,_ot,jtt,Wrt,Aot,Oot,Bot,yQ,Uot,jot,Yot,Qot,sat,oat,uat,dat,fat,yat,wat,kat,Cat,Eat,Fat,Lat,Rtt,Grt,zat,Wat,Gat,jat,Kat,Yat,Zat,tit,nit,oit,iit,lit,dit,fit,git,bit,wit,Urt,$Q,kit,Nit,_it,Ait,Oit,Mit,SQ,zit,Wit,Hit,lot];for(const n of jit)s1(n);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var fe;(function(n){n[n.float32=0]="float32",n[n.int32=1]="int32",n[n.bool=2]="bool",n[n.string=3]="string",n[n.complex64=4]="complex64"})(fe||(fe={}));var Yd;(function(n){n[n.linear=0]="linear",n[n.relu=1]="relu",n[n.relu6=2]="relu6",n[n.prelu=3]="prelu",n[n.leakyrelu=4]="leakyrelu",n[n.sigmoid=5]="sigmoid",n[n.elu=6]="elu"})(Yd||(Yd={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let fA;function qit(n){fA=n.wasm.cwrap(Zu,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])}function Kit(n){const{inputs:t,backend:e,attrs:s}=n,{a:r,b:o,bias:a,preluActivationWeights:i}=t;if(r.dtype!=="float32"||o.dtype!=="float32")throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");const{transposeA:u,transposeB:c,activation:l,leakyreluAlpha:d}=s,h=e.dataIdMap.get(r.dataId).id,p=e.dataIdMap.get(o.dataId).id;let f=0;if(a!=null){const _=e.dataIdMap.get(a.dataId);if(_.shape.length!==1)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${_.shape.length}.`);f=_.id}const m=i==null?0:e.dataIdMap.get(i.dataId).id,g=Yd[l];if(g==null)throw new Error(`${l} activation not yet supported for FusedConv2D in the wasm backend.`);const y=u?r.shape[2]:r.shape[1],b=c?o.shape[1]:o.shape[2],x=Ut(r.shape.slice(0,-2),o.shape.slice(0,-2)),w=e.makeOutput([...x,y,b],r.dtype),v=e.dataIdMap.get(w.dataId).id,k=new Uint8Array(new Int32Array(r.shape).buffer),S=new Uint8Array(new Int32Array(o.shape).buffer);return fA(h,k,r.shape.length,p,S,o.shape.length,u,c,g,f,m,d||0,v),w}const Xit={kernelName:Zu,backendName:"wasm",setupFunc:qit,kernelFunc:Kit};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function re(n,t){let e;function s(o){e=o.wasm.cwrap(n,null,["number","number","number"])}function r(o){const{backend:a,inputs:{x:i}}=o,u=a.dataIdMap.get(i.dataId).id,c=a.makeOutput(i.shape,t||i.dtype),l=a.dataIdMap.get(c.dataId).id;return j(c.shape)===0||e(u,fe[i.dtype],l),c}return{kernelName:n,backendName:"wasm",setupFunc:s,kernelFunc:r}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yit=re(Wh);/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jit=re(bl);/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zit=re(xl);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fn(n,t,e){let s;function r(a){s=a.wasm.cwrap(n,null,["number","array","number","number","array","number","number","number"])}function o(a){const{backend:i,inputs:u}=a,{a:c,b:l}=u,d=i.dataIdMap.get(c.dataId).id,h=i.dataIdMap.get(l.dataId).id,p=e??c.dtype,f=Ut(c.shape,l.shape),m=i.makeOutput(f,p);if(j(f)===0)return m;const g=new Uint8Array(new Int32Array(c.shape).buffer),y=new Uint8Array(new Int32Array(l.shape).buffer),b=i.dataIdMap.get(m.dataId).id;return s(d,g,c.shape.length,h,y,l.shape.length,fe[c.dtype],b),m}return{kernelName:n,backendName:"wasm",setupFunc:r,kernelFunc:o}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qit=fn(Xi);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let mA;function tut(n){mA=n.wasm.cwrap(Uh,null,["array","number","number","number"])}function eut(n){const{inputs:t,backend:e}=n,s=e.makeOutput(t[0].shape,t[0].dtype);if(j(s.shape)===0)return s;const r=t.map(i=>e.dataIdMap.get(i.dataId).id),o=new Uint8Array(new Int32Array(r).buffer),a=e.dataIdMap.get(s.dataId).id;return mA(o,r.length,fe[s.dtype],a),s}const nut={kernelName:Uh,backendName:"wasm",setupFunc:tut,kernelFunc:eut};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ry(n){const{inputs:{x:t},backend:e}=n;if(t.dtype==="string")return a1(e.readSync(t.dataId),t.shape,t.dtype);const s=e.makeOutput(t.shape,t.dtype),r=e.typedArrayFromHeap(t);return e.typedArrayFromHeap(s).set(r),s}const sut={kernelName:jl,backendName:"wasm",kernelFunc:Ry};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let gA;function rut(n){gA=n.wasm.cwrap(wa,null,["number","array","number","number","number","array","number"])}function Pa(n){const{inputs:t,backend:e,attrs:s}=n,[r,o]=aut(t.x.shape,s.perm);let a=!0;for(let f=0;f<o.length;f++)o[f]!==f&&(a=!1);const i=out(t.x.shape,s.perm),u={dataId:t.x.dataId,shape:r,dtype:t.x.dtype};if(a){const f=Ry({inputs:t,backend:e});return f.shape=i,f}const c=e.makeOutput(i,u.dtype),l=e.dataIdMap.get(u.dataId).id,d=e.dataIdMap.get(c.dataId).id,h=new Uint8Array(new Int32Array(o).buffer),p=new Uint8Array(new Int32Array(u.shape).buffer);return gA(l,p,u.shape.length,fe[u.dtype],d,h,o.length),c}function out(n,t){const e=new Array(n.length);for(let s=0;s<e.length;s++)e[s]=n[t[s]];return e}function aut(n,t){const e=[],s=[];for(let r=0;r<n.length;++r)n[r]!==1&&e.push(n[r]),n[t[r]]!==1&&s.push(t[r]);for(let r=0;r<s.length;++r){let o=-1;for(let a=0;a<s.length;++a)s[a]>=r&&(o===-1||s[o]>s[a])&&(o=a);s[o]=r}return[e,s]}const iut={kernelName:wa,backendName:"wasm",kernelFunc:Pa,setupFunc:rut};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xa(n,t,e){const s=n.shape,r=n.shape.length,o=Gt(t,s);let a=o;const i=Ve(a,r);let u=null,c=!1;if(i!=null){const l=new Array(r);for(let p=0;p<l.length;p++)l[p]=s[i[p]];a=Fe(a.length,r),u=Pa({inputs:{x:n},attrs:{perm:i},backend:e});const d=e.dataIdMap.get(n.dataId).id;e.dataIdMap.get(u.dataId).id!==d&&(c=!0)}return{transposed:u,originalAxes:o,axes:a,inputWasTransposed:c}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let yA;function uut(n){yA=n.wasm.cwrap(Gh,null,["number, number, number"])}function lut(n){const{backend:t,inputs:e,attrs:s}=n,{axis:r,keepDims:o}=s,{x:a}=e;let u=t.dataIdMap.get(a.dataId).id,c=a;const{transposed:l,axes:d,originalAxes:h,inputWasTransposed:p}=Xa(a,r,t);if(p){const x=t.dataIdMap.get(l.dataId).id;c=l,u=x}const f=c.shape.length;ze("all",d,f);const[m,g]=Ge(c.shape,d),y=j(g),b=t.makeOutput(m,a.dtype);if(j(c.shape)!==0){const x=t.dataIdMap.get(b.dataId).id;yA(u,y,x)}if(p&&t.disposeData(l.dataId),o){const x=Re(b.shape,h);b.shape=x}return b}const cut={kernelName:Gh,backendName:"wasm",setupFunc:uut,kernelFunc:lut};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let bA;function dut(n){bA=n.wasm.cwrap(Hh,null,["number, number, number"])}function hut(n){const{backend:t,inputs:e,attrs:s}=n,{axis:r,keepDims:o}=s,{x:a}=e;let u=t.dataIdMap.get(a.dataId).id,c=a;const{transposed:l,axes:d,originalAxes:h,inputWasTransposed:p}=Xa(a,r,t);if(p){const x=t.dataIdMap.get(l.dataId).id;c=l,u=x}const f=c.shape.length;ze("any",d,f);const[m,g]=Ge(c.shape,d),y=j(g),b=t.makeOutput(m,a.dtype);if(j(c.shape)!==0){const x=t.dataIdMap.get(b.dataId).id;bA(u,y,x)}if(p&&t.disposeData(l.dataId),o){const x=Re(b.shape,h);b.shape=x}return b}const put={kernelName:Hh,backendName:"wasm",setupFunc:dut,kernelFunc:hut};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xA(n){let t;function e(r){t=r.wasm.cwrap(n,null,["number","number","number","number","number"])}function s(r){const{backend:o,inputs:a,attrs:i}=r,{axis:u}=i,{x:c}=a,l=o.dataIdMap.get(c.dataId).id;let d=l,h=c;const{transposed:p,axes:f,inputWasTransposed:m}=Xa(c,u,o);if(m){const v=o.dataIdMap.get(p.dataId).id;v!==l&&(h=p,d=v)}const g=h.shape.slice(0,-1),y=o.makeOutput(g,"int32"),b=o.dataIdMap.get(y.dataId).id,x=j(y.shape),w=h.shape[f[0]];return t(d,fe[h.dtype],x,w,b),m&&o.disposeData(p.dataId),y}return{kernelName:n,backendName:"wasm",setupFunc:e,kernelFunc:s}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fut=xA(jh);/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mut=xA(qh);/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gut=re(wl);/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yut=re(vl);/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const but=re(Il);/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xut=fn($l);/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wut=re(kl);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let wA;function vut(n){wA=n.wasm.cwrap(Sl,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Iut(n){const{inputs:t,attrs:e,backend:s}=n,r=t.x,o=s.dataIdMap.get(r.dataId).id,{filterSize:a,strides:i,pad:u,dimRoundingMode:c}=e,l=Xn(r.shape,a,i,1,u,c),d=l.filterHeight,h=l.filterWidth,p=l.padInfo.top,f=l.padInfo.right,m=l.padInfo.bottom,g=l.padInfo.left,y=l.strideHeight,b=l.strideWidth,x=l.inChannels;if(l.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${l.dataFormat}'. Please use 'channelsLast'.`);if(l.dilationWidth!==1||l.dilationHeight!==1)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${l.dilationHeight}, ${l.dilationWidth}].`);const w=s.makeOutput(l.outShape,"float32"),v=s.dataIdMap.get(w.dataId).id;return wA(o,r.shape[0],r.shape[1],r.shape[2],d,h,p,f,m,g,y,b,x,v),w}const kut={kernelName:Sl,backendName:"wasm",setupFunc:vut,kernelFunc:Iut};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let vA;function $ut(n){vA=n.wasm.cwrap("AvgPool3D",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Sut(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{filterSize:o,strides:a,pad:i,dimRoundingMode:u,dataFormat:c}=s,l=Js(r.shape,o,a,1,i,u,c),d=e.makeOutput(l.outShape,r.dtype);return vA(e.dataIdMap.get(r.dataId).id,e.dataIdMap.get(d.dataId).id,l.batchSize,l.inChannels,l.inDepth,l.inHeight,l.inWidth,l.outDepth,l.outHeight,l.outWidth,l.strideDepth,l.strideHeight,l.strideWidth,l.dilationDepth,l.dilationHeight,l.dilationWidth,l.effectiveFilterDepth,l.effectiveFilterHeight,l.effectiveFilterWidth,l.padInfo.front,l.padInfo.top,l.padInfo.left),d}const Nut={kernelName:Kh,backendName:"wasm",setupFunc:$ut,kernelFunc:Sut};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let IA;function Cut(n){IA=n.wasm.cwrap("AvgPool3DGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function _ut(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,input:o}=t,{filterSize:a,strides:i,pad:u,dimRoundingMode:c}=s,l=Js(o.shape,a,i,1,u,c),d=e.makeOutput(o.shape,o.dtype);return IA(e.dataIdMap.get(r.dataId).id,e.dataIdMap.get(d.dataId).id,l.batchSize,l.inChannels,l.inDepth,l.inHeight,l.inWidth,l.outDepth,l.outHeight,l.outWidth,l.strideDepth,l.strideHeight,l.strideWidth,l.dilationDepth,l.dilationHeight,l.dilationWidth,l.effectiveFilterDepth,l.effectiveFilterHeight,l.effectiveFilterWidth,l.padInfo.front,l.padInfo.top,l.padInfo.left,l.filterDepth,l.filterHeight,l.filterWidth),d}const Tut={kernelName:Cg,backendName:"wasm",setupFunc:Cut,kernelFunc:_ut};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let kA;function Eut(n){kA=n.wasm.cwrap("AvgPoolGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Aut(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,input:o}=t,{filterSize:a,strides:i,pad:u}=s,c=Xn(o.shape,a,i,1,u),l=e.makeOutput(o.shape,o.dtype);return kA(e.dataIdMap.get(r.dataId).id,e.dataIdMap.get(l.dataId).id,c.batchSize,c.inChannels,c.inHeight,c.inWidth,c.outHeight,c.outWidth,c.strideHeight,c.strideWidth,c.dilationHeight,c.dilationWidth,c.effectiveFilterHeight,c.effectiveFilterWidth,c.padInfo.top,c.padInfo.left,c.filterHeight,c.filterWidth),l}const Dut={kernelName:Ng,backendName:"wasm",setupFunc:Eut,kernelFunc:Aut};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Is(n){const{inputs:t,attrs:e}=n,{x:s}=t,{shape:r}=e,o=j(s.shape),a=Fw(r,o);return T(o===j(a),()=>`new shape: ${a}, old shape: ${s.shape}. New shape and old shape must have the same number of elements.`),n.backend.incRef(s.dataId),{dataId:s.dataId,shape:a,dtype:s.dtype}}const Rut={kernelName:kp,backendName:"wasm",kernelFunc:Is};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let $A;function Fut(n){$A=n.wasm.cwrap(Nl,null,["number","array","number","number","array","number","number","number","number"])}function Out(n){const{inputs:t,backend:e,attrs:s}=n,{a:r,b:o}=t,{transposeA:a,transposeB:i}=s;if(r.dtype!=="float32"||o.dtype!=="float32")throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");const u=r.shape.length,c=o.shape.length,l=a?r.shape[u-2]:r.shape[u-1],d=i?o.shape[c-1]:o.shape[c-2],h=a?r.shape[u-1]:r.shape[u-2],p=i?o.shape[c-2]:o.shape[c-1],f=r.shape.slice(0,-2),m=o.shape.slice(0,-2),g=j(f),y=j(m),x=Ut(r.shape.slice(0,-2),o.shape.slice(0,-2)).concat([h,p]);T(l===d,()=>`Error in matMul: inner shapes (${l}) and (${d}) of Tensors with shapes ${r.shape} and ${o.shape} and transposeA=${a} and transposeB=${i} must match.`);const w=a?[g,l,h]:[g,h,l],v=i?[y,p,d]:[y,d,p],k=Is({inputs:{x:r},backend:e,attrs:{shape:w}}),S=Is({inputs:{x:o},backend:e,attrs:{shape:v}}),_=e.dataIdMap.get(k.dataId).id,C=e.dataIdMap.get(S.dataId).id,N=a?k.shape[2]:k.shape[1],$=i?S.shape[1]:S.shape[2],A=Math.max(g,y),D=e.makeOutput([A,N,$],k.dtype),R=e.dataIdMap.get(D.dataId).id,F=new Uint8Array(new Int32Array(k.shape).buffer),z=new Uint8Array(new Int32Array(S.shape).buffer);return $A(_,F,k.shape.length,C,z,S.shape.length,a,i,R),e.disposeData(k.dataId),e.disposeData(S.dataId),D.shape=x,D}const Put={kernelName:Nl,backendName:"wasm",setupFunc:Fut,kernelFunc:Out};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Li(n){const{inputs:{x:t},attrs:{begin:e,size:s},backend:r}=n,[o,a]=Vp(t,e,s),i=ry(t.shape,o,a),u=r.readSync(t.dataId),c=r.makeOutput(a,t.dtype),l=St(t.shape),d=r.dataIdMap.get(c.dataId);if(i){const f=oy(o,l);return t.dtype==="string"?d.stringBytes=u.slice(f,f+j(a)):r.typedArrayFromHeap(c).set(u.subarray(f,f+j(a))),c}if(t.dtype==="string"){const f=Sm(u,o,a,t.shape,t.dtype);return d.stringBytes=f,c}const h=r.typedArrayFromHeap(c),p=t.shape.length;if(p===2)Lut(u,l[0],h,o,a);else if(p===3)Mut(u,l[0],l[1],h,o,a);else if(p===4)But(u,l[0],l[1],l[2],h,o,a);else{const f=Sm(u,o,a,t.shape,t.dtype);h.set(f)}return c}function Lut(n,t,e,s,r){let o=0;const a=s[0],i=s[1],u=a+r[0];for(let c=a;c<u;c++){const l=c*t+i;e.set(n.subarray(l,l+r[1]),o),o+=r[1]}}function Mut(n,t,e,s,r,o){let a=0;const i=r[0],u=r[1],c=r[2],l=i+o[0],d=u+o[1];for(let h=i;h<l;h++)for(let p=u;p<d;p++){const f=h*t+p*e+c;s.set(n.subarray(f,f+o[2]),a),a+=o[2]}}function But(n,t,e,s,r,o,a){let i=0;const u=o[0],c=o[1],l=o[2],d=u+a[0],h=c+a[1],p=l+a[2],f=o[3];for(let m=u;m<d;m++)for(let g=c;g<h;g++)for(let y=l;y<p;y++){const b=m*t+g*e+y*s+f;r.set(n.subarray(b,b+a[3]),i),i+=a[3]}}const zut={kernelName:Cp,backendName:"wasm",kernelFunc:Li};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vut(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{blockShape:o,crops:a}=s,i=o.reduce((y,b)=>y*b),u=nu(r.shape,o,i),c=su(u.length,o.length),l=ru(r.shape,o,i),d=cy(a,o.length),h=dy(l,a,o.length),p=Is({inputs:{x:r},backend:e,attrs:{shape:u}}),f=Pa({inputs:{x:p},backend:e,attrs:{perm:c}}),m=Is({inputs:{x:f},backend:e,attrs:{shape:l}}),g=Li({inputs:{x:m},backend:e,attrs:{begin:d,size:h}});return e.disposeData(p.dataId),e.disposeData(f.dataId),e.disposeData(m.dataId),g}const Wut={kernelName:Xh,backendName:"wasm",kernelFunc:Vut};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let SA;function Uut(n){SA=n.wasm.cwrap(Yh,null,["number","number","boolean","number","number","number"])}function Gut(n){const{backend:t,inputs:e,attrs:s}=n,{x:r,weights:o}=e,{size:a}=s,i=o.shape.reduce((d,h)=>d*h,1)!==0,u=r.shape.length===1?[a]:[r.shape[0],a],c=t.makeOutput(u,o.dtype);function l(d){return t.dataIdMap.get(d.dataId).id}return SA(l(r),a,i,l(o),fe[o.dtype],l(c)),c}const Hut={kernelName:Yh,backendName:"wasm",setupFunc:Uut,kernelFunc:Gut};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jut=fn(_g);/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qut(n){const{inputs:t,backend:e}=n,{s0:s,s1:r}=t,o=e.typedArrayFromHeap(s),a=e.typedArrayFromHeap(r),i=Ut(Array.from(o),Array.from(a));return e.makeOutput([i.length],"int32",void 0,new Int32Array(i))}const Kut={kernelName:Mw,backendName:"wasm",kernelFunc:qut};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ya(n){const{inputs:{x:t},attrs:{dtype:e},backend:s}=n,r=s.makeOutput(t.shape,e),o=s.typedArrayFromHeap(t);return s.typedArrayFromHeap(r).set(o),r}const Xut={kernelName:Cl,backendName:"wasm",kernelFunc:Ya};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yut=re(_l);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let NA;function Jut(n){NA=n.wasm.cwrap(Yi,null,["number","number","number","number"])}function Zut(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{clipValueMin:o,clipValueMax:a}=s,i=e.dataIdMap.get(r.dataId).id,u=e.makeOutput(r.shape,r.dtype),c=e.dataIdMap.get(u.dataId).id;return NA(i,o,a,c),u}const Qut={kernelName:Yi,backendName:"wasm",setupFunc:Jut,kernelFunc:Zut};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CA(n){const{inputs:t,backend:e}=n,s=Gt(n.attrs.axis,t[0].shape)[0],r=t.map(p=>p.shape);iy(r,s);let o=Xs(t.map(p=>p.shape),s);const a=t.filter(p=>j(p.shape)>0);if(a.length===1)return Ry({inputs:{x:a[0]},backend:e});const i=e.makeOutput(o,t[0].dtype);if(j(o)===0)return i;if(a[0].dtype==="string"){const p=a.map(x=>{const v=[-1,j(x.shape.slice(s))];return Is({inputs:{x},backend:e,attrs:{shape:v}})}),f=p.map(x=>({vals:e.readSync(x.dataId),shape:x.shape}));o=Xs(p.map(x=>x.shape),1);const m=p[0].shape[0]===1,g=P0(f,o,t[0].dtype,m),y=Xs(a.map(x=>x.shape),s);i.shape=y;const b=e.dataIdMap.get(i.dataId);return b.stringBytes=l0(g),p.forEach(x=>e.disposeData(x.dataId)),i}const u=j(a[0].shape.slice(0,s));let c=0;const l=a.map(p=>{const f=j(p.shape.slice(s));return c+=f,f}),d=a.map(p=>e.typedArrayFromHeap(p)),h=e.typedArrayFromHeap(i);for(let p=0;p<u;p++){let f=p*c;for(let m=0;m<d.length;m++){const g=l[m],y=p*g,b=d[m].subarray(y,y+g);h.set(b,f),f+=g}}return i}const tlt={kernelName:Jh,backendName:"wasm",kernelFunc:CA};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let _A;function elt(n){_A=n.wasm.cwrap(Tl,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function nlt(n){const{inputs:t,attrs:e,backend:s}=n,{x:r,filter:o}=t,a=s.dataIdMap.get(r.dataId).id,i=s.dataIdMap.get(o.dataId).id,{strides:u,dilations:c,pad:l,dimRoundingMode:d,dataFormat:h}=e,p=Ur(h),f=Ze(r.shape,o.shape,u,c,l,d,!1,p),m=f.filterHeight,g=f.filterWidth,y=f.padInfo.top,b=f.padInfo.right,x=f.padInfo.bottom,w=f.padInfo.left,v=f.dilationHeight,k=f.dilationWidth,S=f.strideHeight,_=f.strideWidth,C=f.inChannels,N=f.outChannels,$=f.padInfo.type==="SAME"?1:0;if(f.dataFormat!=="channelsLast")throw new Error(`wasm backend Conv2D does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);const A=s.makeOutput(f.outShape,"float32"),D=s.dataIdMap.get(A.dataId).id;return _A(a,r.shape[0],r.shape[1],r.shape[2],i,m,g,y,b,x,w,$,v,k,S,_,C,N,D),A}const slt={kernelName:Tl,backendName:"wasm",setupFunc:elt,kernelFunc:nlt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let TA;function rlt(n){TA=n.wasm.cwrap(El,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function olt(n){const{backend:t,inputs:e,attrs:s}=n,{dy:r,filter:o}=e,{strides:a,pad:i,dataFormat:u,dimRoundingMode:c,inputShape:l}=s,d=1,h=Ur(u),p=Ze(l,o.shape,a,d,i,c,!1,h),{batchSize:f,filterHeight:m,filterWidth:g,inChannels:y,inHeight:b,inWidth:x,outChannels:w,outHeight:v,outWidth:k,strideHeight:S,strideWidth:_}=p,C=m-1-p.padInfo.top,N=g-1-p.padInfo.left,$=p.dataFormat==="channelsLast",A=St(p.inShape),D=St(r.shape),[R,F,z]=St(o.shape),H=A[0],P=$?A[1]:A[2],U=$?A[2]:1,Z=$?1:A[1],tt=D[0],at=$?D[1]:D[2],ot=$?D[2]:1,lt=$?1:D[1],ct=t.makeOutput(p.inShape,"float32"),bt=t.dataIdMap.get(ct.dataId).id,Nt=t.dataIdMap.get(r.dataId).id,xt=t.dataIdMap.get(o.dataId).id;return TA(Nt,xt,f,m,g,b,x,y,v,k,w,S,_,C,N,R,F,z,H,P,U,Z,tt,at,ot,lt,bt),ct}const alt={kernelName:El,backendName:"wasm",setupFunc:rlt,kernelFunc:olt};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let EA;function ilt(n){EA=n.wasm.cwrap(Al,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function ult(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:o}=t,{strides:a,pad:i,dilations:u}=s;if(r.dtype!=="float32")throw new Error(`Tensor x must have dtype float32, got ${r.dtype}`);if(o.dtype!=="float32")throw new Error(`Tensor filter must have dtype float32, got ${o.dtype}`);const c=Wr(r.shape,o.shape,a,u,i),l=e.makeOutput(c.outShape,r.dtype);return EA(e.dataIdMap.get(r.dataId).id,e.dataIdMap.get(o.dataId).id,e.dataIdMap.get(l.dataId).id,c.batchSize,c.inDepth,c.inHeight,c.inWidth,c.inChannels,c.outDepth,c.outHeight,c.outWidth,c.outChannels,c.strideDepth,c.strideHeight,c.strideWidth,c.dilationDepth,c.dilationHeight,c.dilationWidth,c.filterDepth,c.filterHeight,c.filterWidth,c.padInfo.front,c.padInfo.top,c.padInfo.left),l}const llt={kernelName:Al,backendName:"wasm",setupFunc:ilt,kernelFunc:ult};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let AA;function clt(n){AA=n.wasm.cwrap(Zh,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function dlt(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,dy:o}=t,{strides:a,pad:i,filterShape:u}=s;if(r.dtype!=="float32")throw new Error(`Tensor dy must have dtype float32, got ${r.dtype}`);if(o.dtype!=="float32")throw new Error(`Tensor filter must have dtype float32, got ${o.dtype}`);const c=Wr(r.shape,u,a,1,i),l=e.makeOutput(c.filterShape,o.dtype);return AA(e.dataIdMap.get(r.dataId).id,e.dataIdMap.get(o.dataId).id,e.dataIdMap.get(l.dataId).id,c.batchSize,c.inDepth,c.inHeight,c.inWidth,c.inChannels,c.outDepth,c.outHeight,c.outWidth,c.outChannels,c.strideDepth,c.strideHeight,c.strideWidth,c.dilationDepth,c.dilationHeight,c.dilationWidth,c.filterDepth,c.filterHeight,c.filterWidth,c.padInfo.front,c.padInfo.top,c.padInfo.left),l}const hlt={kernelName:Zh,backendName:"wasm",setupFunc:clt,kernelFunc:dlt};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let DA;function plt(n){DA=n.wasm.cwrap(Qh,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function flt(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,filter:o}=t,{pad:a,strides:i,inputShape:u}=s;if(r.dtype!=="float32")throw new Error(`Tensor dy must have dtype float32, got ${r.dtype}`);if(o.dtype!=="float32")throw new Error(`Tensor filter must have dtype float32, got ${o.dtype}`);const c=Wr(u,o.shape,i,1,a),l=e.makeOutput(c.inShape,r.dtype);return DA(e.dataIdMap.get(o.dataId).id,e.dataIdMap.get(r.dataId).id,e.dataIdMap.get(l.dataId).id,c.batchSize,c.inDepth,c.inHeight,c.inWidth,c.inChannels,c.outDepth,c.outHeight,c.outWidth,c.outChannels,c.strideDepth,c.strideHeight,c.strideWidth,c.dilationDepth,c.dilationHeight,c.dilationWidth,c.filterDepth,c.filterHeight,c.filterWidth,c.padInfo.front,c.padInfo.top,c.padInfo.left),l}const mlt={kernelName:Qh,backendName:"wasm",setupFunc:plt,kernelFunc:flt};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const glt=re(Dl);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ylt=re(Rl);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var _x;(function(n){n[n.bilinear=0]="bilinear",n[n.nearest=1]="nearest"})(_x||(_x={}));let RA;function blt(n){RA=n.wasm.cwrap(ep,null,["number","number","number","number","array","number","number","number","number","number"])}function xlt(n){const{backend:t,inputs:e,attrs:s}=n,{method:r,extrapolationValue:o,cropSize:a}=s,{image:i,boxes:u,boxInd:c}=e,l=u.shape[0],[d,h]=a,p=[l,d,h,i.shape[3]];let f=t.dataIdMap.get(i.dataId),m;i.dtype!=="float32"&&(m=Ya({backend:t,inputs:{x:i},attrs:{dtype:"float32"}}),f=t.dataIdMap.get(m.dataId));const g=f.id,y=t.dataIdMap.get(u.dataId).id,b=t.dataIdMap.get(c.dataId).id,x=t.makeOutput(p,"float32"),w=t.dataIdMap.get(x.dataId).id,v=new Uint8Array(new Int32Array(i.shape).buffer);return RA(g,y,b,l,v,d,h,_x[r],o,w),m!=null&&t.disposeData(m.dataId),x}const wlt={kernelName:ep,backendName:"wasm",setupFunc:blt,kernelFunc:xlt};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let FA;function vlt(n){FA=n.wasm.cwrap(tp,null,["number","number","number","number","number","number"])}function Ilt(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,exclusive:a,reverse:i}=s,u=r.shape.length;T(r.dtype==="float32"||r.dtype==="int32",()=>`cumprod does not support ${r.dtype} tensors in the WASM backend`);const c=Ve([o],u);let l=r;c!==null&&(l=Pa({inputs:{x:r},attrs:{perm:c},backend:e}));const d=Fe(1,u)[0];ze("cumprod",[d],u);const h=e.makeOutput(l.shape,l.dtype),p=l.shape[d],f=e.dataIdMap.get(l.dataId).id,m=e.dataIdMap.get(h.dataId).id;FA(f,a?1:0,i?1:0,p,m,fe[r.dtype]);let g=h;if(c!==null){const y=vo(c);g=Pa({inputs:{x:h},attrs:{perm:y},backend:e}),e.disposeData(l.dataId),e.disposeData(h.dataId)}return g}const klt={kernelName:tp,backendName:"wasm",setupFunc:vlt,kernelFunc:Ilt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let OA;function $lt(n){OA=n.wasm.cwrap(Fl,null,["number","number","number","number","number","number"])}function Slt(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,exclusive:a,reverse:i}=s,u=r.shape.length;T(r.dtype==="float32"||r.dtype==="int32",()=>`cumsum does not support ${r.dtype} tensors in the WASM backend`);const c=Ve([o],u);let l=r;c!==null&&(l=Pa({inputs:{x:r},attrs:{perm:c},backend:e}));const d=Fe(1,u)[0];ze("cumsum",[d],u);const h=e.makeOutput(l.shape,l.dtype),p=l.shape[d],f=e.dataIdMap.get(l.dataId).id,m=e.dataIdMap.get(h.dataId).id;OA(f,a?1:0,i?1:0,p,m,fe[r.dtype]);let g=h;if(c!==null){const y=vo(c);g=Pa({inputs:{x:h},attrs:{perm:y},backend:e}),e.disposeData(l.dataId),e.disposeData(h.dataId)}return g}const Nlt={kernelName:Fl,backendName:"wasm",setupFunc:$lt,kernelFunc:Slt};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let PA;function Clt(n){PA=n.wasm.cwrap("DenseBincount",null,["number","array","number","number","boolean","number","number","boolean","number"])}function _lt(n){const{backend:t,inputs:e,attrs:s}=n,{x:r,weights:o}=e,{size:a,binaryOutput:i}=s,u=o.shape.reduce((h,p)=>h*p,1)!==0,c=r.shape.length===1?[a]:[r.shape[0],a],l=t.makeOutput(c,o.dtype);function d(h){return t.dataIdMap.get(h.dataId).id}return PA(d(r),new Uint8Array(new Int32Array(r.shape).buffer),r.shape.length,a,u,d(o),fe[o.dtype],i,d(l)),l}const Tlt={kernelName:Eg,backendName:"wasm",setupFunc:Clt,kernelFunc:_lt};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let LA;function Elt(n){LA=n.wasm.cwrap(np,null,["number","number","number","array","number","array","array","number","number"])}function Alt(n){const{backend:t,inputs:e,attrs:s}=n,{x:r}=e,{blockSize:o,dataFormat:a}=s,i=r.shape[0],u=a==="NHWC"?r.shape[1]:r.shape[2],c=a==="NHWC"?r.shape[2]:r.shape[3],l=a==="NHWC"?r.shape[3]:r.shape[1],d=u*o,h=c*o,p=l/(o*o),f=a==="NHWC"?[i,d,h,p]:[i,p,d,h],m=t.makeOutput(f,"float32"),y=t.dataIdMap.get(r.dataId).id,b=new Uint8Array(new Int32Array(St(r.shape)).buffer),x=new Uint8Array(new Int32Array(f).buffer),w=new Uint8Array(new Int32Array(St(f)).buffer),v=t.dataIdMap.get(m.dataId).id;return LA(y,o,a==="NHWC"?1:0,b,r.shape.length-1,x,w,f.length,v),m}const Dlt={kernelName:np,backendName:"wasm",setupFunc:Elt,kernelFunc:Alt};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let MA;function Rlt(n){MA=n.wasm.cwrap(Ol,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Flt(n){const{inputs:t,attrs:e,backend:s}=n,{x:r,filter:o}=t,a=s.dataIdMap.get(r.dataId).id,i=s.dataIdMap.get(o.dataId).id,{strides:u,dilations:c,pad:l,dimRoundingMode:d}=e,h=c??[1,1],p=Ze(r.shape,o.shape,u,h,l,d,!0),f=p.filterHeight,m=p.filterWidth,g=p.padInfo.top,y=p.padInfo.right,b=p.padInfo.bottom,x=p.padInfo.left,w=p.dilationHeight,v=p.dilationWidth,k=p.strideHeight,S=p.strideWidth,_=p.inChannels,C=p.outChannels,N=p.padInfo.type==="SAME"?1:0;if(p.dataFormat!=="channelsLast")throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${p.dataFormat}'. Please use 'channelsLast'.`);const $=s.makeOutput(p.outShape,"float32"),A=s.dataIdMap.get($.dataId).id;return MA(a,r.shape[0],r.shape[1],r.shape[2],i,f,m,g,y,b,x,N,w,v,k,S,_,C,A),$}const Olt={kernelName:Ol,backendName:"wasm",setupFunc:Rlt,kernelFunc:Flt};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let BA;function Plt(n){BA=n.wasm.cwrap("Diag",null,["number","number","number","number"])}function Llt(n){const{inputs:t,backend:e}=n,{x:s}=t,r=j(s.shape),o=e.makeOutput([...s.shape,...s.shape],s.dtype);return BA(e.dataIdMap.get(s.dataId).id,fe[s.dtype],r,e.dataIdMap.get(o.dataId).id),o}const Mlt={kernelName:Uw,backendName:"wasm",setupFunc:Plt,kernelFunc:Llt};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let zA;function Blt(n){zA=n.wasm.cwrap(Pl,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function zlt(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:o}=t,{strides:a,pad:i,dilations:u}=s;if(r.dtype!==o.dtype)throw new Error(`Dilation2D error: x must have the same dtype as filter. Got ${r.dtype} and ${o.dtype}`);const c=Wa(r.shape,o.shape,a,i,"NHWC",u),l=e.makeOutput(c.outShape,r.dtype);return zA(e.dataIdMap.get(r.dataId).id,e.dataIdMap.get(o.dataId).id,e.dataIdMap.get(l.dataId).id,fe[r.dtype],c.batchSize,c.inChannels,c.inHeight,c.inWidth,c.outHeight,c.outWidth,c.strideHeight,c.strideWidth,c.dilationHeight,c.dilationWidth,c.filterHeight,c.filterWidth,c.padInfo.top,c.padInfo.left),l}const Vlt={kernelName:Pl,backendName:"wasm",setupFunc:Blt,kernelFunc:zlt};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let VA;function Wlt(n){VA=n.wasm.cwrap(Od,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Ult(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:o,dy:a}=t,{strides:i,pad:u,dilations:c}=s;if(r.dtype!==o.dtype||r.dtype!==a.dtype)throw new Error(`Dilation2DBackpropFilter error: x must have the same dtype as filter and dy. Got ${r.dtype}, ${o.dtype}, and ${a.dtype}`);const l=Wa(r.shape,o.shape,i,u,"NHWC",c),d=e.makeOutput(o.shape,o.dtype);return VA(e.dataIdMap.get(r.dataId).id,e.dataIdMap.get(o.dataId).id,e.dataIdMap.get(a.dataId).id,e.dataIdMap.get(d.dataId).id,fe[r.dtype],l.batchSize,l.inChannels,l.inHeight,l.inWidth,l.outHeight,l.outWidth,l.strideHeight,l.strideWidth,l.dilationHeight,l.dilationWidth,l.filterHeight,l.filterWidth,l.padInfo.top,l.padInfo.left),d}const Glt={kernelName:Od,backendName:"wasm",setupFunc:Wlt,kernelFunc:Ult};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let WA;function Hlt(n){WA=n.wasm.cwrap(Fd,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function jlt(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:o,dy:a}=t,{strides:i,pad:u,dilations:c}=s;if(r.dtype!==o.dtype||r.dtype!==a.dtype)throw new Error(`Dilation2DBackpropInput error: x must have the same dtype as filter and dy. Got ${r.dtype}, ${o.dtype}, and ${a.dtype}`);const l=Wa(r.shape,o.shape,i,u,"NHWC",c),d=e.makeOutput(r.shape,r.dtype);return WA(e.dataIdMap.get(r.dataId).id,e.dataIdMap.get(o.dataId).id,e.dataIdMap.get(a.dataId).id,e.dataIdMap.get(d.dataId).id,fe[r.dtype],l.batchSize,l.inChannels,l.inHeight,l.inWidth,l.outHeight,l.outWidth,l.strideHeight,l.strideWidth,l.dilationHeight,l.dilationWidth,l.filterHeight,l.filterWidth,l.padInfo.top,l.padInfo.left),d}const qlt={kernelName:Fd,backendName:"wasm",setupFunc:Hlt,kernelFunc:jlt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Klt=re(Ml);/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let UA;function Xlt(n){UA=n.wasm.cwrap(sp,null,["number","number","number"])}function Ylt(n){const{inputs:t,backend:e}=n,{dy:s,y:r}=t,o=e.makeOutput(r.shape,"float32"),a=i=>e.dataIdMap.get(i.dataId).id;return UA(a(r),a(s),a(o)),o}const Jlt={kernelName:sp,backendName:"wasm",setupFunc:Xlt,kernelFunc:Ylt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zlt=!1,Qlt=fn(rp,Zlt,"bool");/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tct=re(Bl);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ect=re(zl,"float32");/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tx(n){const{inputs:t,attrs:e,backend:s}=n,{input:r}=t,{dim:o}=e,a=r.shape.length,i=r.shape.slice();let u=o;return o<0&&(T(-(a+1)<=o,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),u=a+o+1),i.splice(u,0,1),Is({inputs:{x:r},backend:s,attrs:{shape:i}})}const nct={kernelName:op,backendName:"wasm",kernelFunc:Tx};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sct=re(Vl,"float32");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GA(n){const{attrs:{shape:t,value:e},backend:s}=n;let{attrs:{dtype:r}}=n;r=r||Ki(e);const o=s.makeOutput(t,r);return s.typedArrayFromHeap(o).fill(e),o}const rct={kernelName:Ag,backendName:"wasm",kernelFunc:GA};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let HA;function oct(n){HA=n.wasm.cwrap(ap,null,["number","number","number","number","number","number"])}function act(n){const{inputs:t,backend:e}=n,{image:s}=t,r=e.makeOutput(s.shape,s.dtype),o=e.dataIdMap.get(s.dataId).id,a=e.dataIdMap.get(r.dataId).id,[i,u,c,l]=s.shape;return HA(o,i,u,c,l,a),r}const ict={kernelName:ap,backendName:"wasm",kernelFunc:act,setupFunc:oct};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uct=re(Wl);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lct=fn(Ul);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let jA;function cct(n){jA=n.wasm.cwrap(Gl,null,["number","number","number","number","number","number","number"])}function dct(n){const{backend:t,inputs:e,attrs:s}=n,{varianceEpsilon:r}=s,{x:o,mean:a,variance:i,offset:u,scale:c}=e,l=t.dataIdMap.get(o.dataId).id,d=t.dataIdMap.get(a.dataId).id,h=t.dataIdMap.get(i.dataId).id,p=u!=null?t.dataIdMap.get(u.dataId).id:0,f=c!=null?t.dataIdMap.get(c.dataId).id:0,m=t.makeOutput(o.shape,o.dtype);if(j(o.shape)===0)return m;const g=t.dataIdMap.get(m.dataId).id;return jA(l,d,h,p,f,r,g),m}const hct={kernelName:Gl,backendName:"wasm",setupFunc:cct,kernelFunc:dct};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let qA;function pct(n){qA=n.wasm.cwrap(Qu,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function fct(n){const{inputs:t,attrs:e,backend:s}=n,{x:r,filter:o,bias:a,preluActivationWeights:i}=t,{strides:u,pad:c,dilations:l,dataFormat:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=e,m=Ze(r.shape,o.shape,u,l,c,h),g=Yd[p];if(g==null)throw new Error(`${p} activation not yet supported for FusedConv2D in the wasm backend.`);const y=s.dataIdMap.get(r.dataId).id,b=s.dataIdMap.get(o.dataId).id,x=m.outChannels;let w=0;if(a!=null){const ot=s.dataIdMap.get(a.dataId);if(ot.shape.length!==1)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${ot.shape.length}.`);if(ot.shape[0]!==x)throw new Error(`FusedConv2D bias shape (${ot.shape}) does not match the number of output channels (${x})`);w=ot.id}const v=m.filterHeight,k=m.filterWidth,S=m.padInfo.top,_=m.padInfo.right,C=m.padInfo.bottom,N=m.padInfo.left,$=m.dilationHeight,A=m.dilationWidth,D=m.strideHeight,R=m.strideWidth,F=m.inChannels,z=m.padInfo.type==="SAME"?1:0,H=m.batchSize,P=m.inHeight,U=m.inWidth;if(d!=="NHWC")throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${d}'. Please use 'NHWC'.`);const Z=s.makeOutput(m.outShape,"float32"),tt=s.dataIdMap.get(Z.dataId).id,at=i==null?0:s.dataIdMap.get(i.dataId).id;return qA(y,H,P,U,b,v,k,w,S,_,C,N,z,$,A,D,R,F,x,g,at,f||0,tt),Z}const mct={kernelName:Qu,backendName:"wasm",setupFunc:pct,kernelFunc:fct};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let KA;function gct(n){KA=n.wasm.cwrap(jg,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function yct(n){const{inputs:t,attrs:e,backend:s}=n,{x:r,filter:o,bias:a,preluActivationWeights:i}=t,{strides:u,pad:c,dilations:l,dataFormat:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=e,m=Ze(r.shape,o.shape,u,l,c,h,!0),g=Yd[p];if(g==null)throw new Error(`${p} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);const y=s.dataIdMap.get(r.dataId).id,b=s.dataIdMap.get(o.dataId).id,x=m.outChannels;let w=0;if(a!=null){const ot=s.dataIdMap.get(a.dataId);if(ot.shape.length!==1)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${ot.shape.length}.`);if(ot.shape[0]!==x)throw new Error(`FusedDepthwiseConv2D bias shape (${ot.shape}) does not match the number of output channels (${x})`);w=ot.id}const v=m.filterHeight,k=m.filterWidth,S=m.padInfo.top,_=m.padInfo.right,C=m.padInfo.bottom,N=m.padInfo.left,$=m.dilationHeight,A=m.dilationWidth,D=m.strideHeight,R=m.strideWidth,F=m.inChannels,z=m.padInfo.type==="SAME"?1:0,H=m.batchSize,P=m.inHeight,U=m.inWidth;if(d!=="NHWC")throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${d}'. Please use 'NHWC'.`);const Z=s.makeOutput(m.outShape,"float32"),tt=s.dataIdMap.get(Z.dataId).id,at=i==null?0:s.dataIdMap.get(i.dataId).id;return KA(y,H,P,U,b,v,k,w,S,_,C,N,z,$,A,D,R,F,x,g,at,f||0,tt),Z}const bct={kernelName:jg,backendName:"wasm",setupFunc:gct,kernelFunc:yct};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let XA;function xct(n){XA=n.wasm.cwrap(Dg,null,["number","number","number","number","number","number","array","number"])}function wct(n){const{backend:t,inputs:e}=n,{params:s,indices:r}=e,[o,a,i,u]=ny(s,r),c=t.makeOutput(o,s.dtype);if(a===0)return c;const l=r.shape,d=l[l.length-1],p=t.dataIdMap.get(s.dataId).id,m=t.dataIdMap.get(r.dataId).id,g=new Uint8Array(new Int32Array(u).buffer),y=t.dataIdMap.get(c.dataId).id;return XA(p,fe[s.dtype],m,a,d,i,g,y),c}const vct={kernelName:Dg,backendName:"wasm",setupFunc:xct,kernelFunc:wct};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let YA;function Ict(n){YA=n.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])}function kct(n){const{backend:t,inputs:e,attrs:s}=n,{x:r,indices:o}=e,{axis:a,batchDims:i}=s,u=Gt(a,r.shape)[0],c=t.readSync(o.dataId),l=r.shape[u];for(let C=0;C<c.length;++C){const N=c[C];T(N<=l-1&&N>=0,()=>`GatherV2: the index value ${N} is not in [0, ${l-1}]`)}const d=my(r,o,u,i),h=Is({inputs:{x:r},attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]},backend:t}),p=j(o.shape),f=Is({inputs:{x:o},attrs:{shape:[d.batchSize,p/d.batchSize]},backend:t}),m=[d.batchSize,d.outerSize,p/d.batchSize,d.sliceSize],g=t.makeOutput(m,r.dtype);if(j(r.shape)===0)return g;const y=h.shape.length-1,x=t.dataIdMap.get(h.dataId).id,v=t.dataIdMap.get(f.dataId).id,k=t.dataIdMap.get(g.dataId).id,S=new Uint8Array(new Int32Array(St(h.shape)).buffer),_=new Uint8Array(new Int32Array(St(m)).buffer);return YA(x,fe[r.dtype],S,y,v,d.batchSize,_,k),t.disposeData(h.dataId),t.disposeData(f.dataId),g.shape=d.outputShape,g}const $ct={kernelName:ip,backendName:"wasm",setupFunc:Ict,kernelFunc:kct};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sct=!1,Nct=fn(up,Sct,"bool");/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cct=!1,_ct=fn(Hl,Cct,"bool");/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tct=re(ql,"bool");/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ect=re(Kl,"bool");/**
 * @license
 * Copyright 2022 The TensorFlow Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Act=re(Xl,"bool");/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let JA;function Dct(n){JA=n.wasm.cwrap(Yl,null,["number","number","number","number"])}function Rct(n){const{inputs:{x:t},attrs:{alpha:e},backend:s}=n,r=s.dataIdMap.get(t.dataId).id,o=s.makeOutput(t.shape,"float32");if(j(t.shape)!==0){const a=s.dataIdMap.get(o.dataId).id;JA(r,fe[t.dtype],e,a)}return o}const Fct={kernelName:Yl,backendName:"wasm",setupFunc:Dct,kernelFunc:Rct};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oct=!1,Pct=fn(lp,Oct,"bool");/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lct=!1,Mct=fn(cp,Lct,"bool");/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let ZA;function Bct(n){ZA=n.wasm.cwrap(Rg,null,["number","number","number","number"])}function zct(n){const{attrs:t,backend:e}=n,{start:s,stop:r,num:o}=t,a=Math.floor(o),i=e.makeOutput([a],"float32");return ZA(e.dataIdMap.get(i.dataId).id,s,r,a),i}const Vct={kernelName:Rg,backendName:"wasm",setupFunc:Bct,kernelFunc:zct};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wct=re(Jl);/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uct=re(Zl);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gct=!1,Hct=fn(dp,Gct,"bool");/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jct=re(hp);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qct=!1,Kct=fn(pp,qct,"bool");/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xct=!1,Yct=fn(aB,Xct,"bool");/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let QA;function Jct(n){QA=n.wasm.cwrap(Ql,null,["number","number","number","number","number","number","number"])}function Zct(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{depthRadius:o,bias:a,alpha:i,beta:u}=s;if(r.dtype!=="float32")throw new Error("LRN error: x must have dtype float32");const c=e.makeOutput(r.shape,r.dtype);return QA(e.dataIdMap.get(r.dataId).id,e.dataIdMap.get(c.dataId).id,r.shape[3],o,a,i,u),c}const Qct={kernelName:Ql,backendName:"wasm",setupFunc:Jct,kernelFunc:Zct};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let tD;function tdt(n){tD=n.wasm.cwrap(fp,null,["number","number","number","number","number","number","number","number","number"])}function edt(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,y:o,dy:a}=t,{depthRadius:i,bias:u,alpha:c,beta:l}=s;if(r.dtype!=="float32"||o.dtype!=="float32"||a.dtype!=="float32")throw new Error("LRNGrad error: x, y, and dy must have dtype float32");const d=e.makeOutput(r.shape,r.dtype);return tD(e.dataIdMap.get(r.dataId).id,e.dataIdMap.get(o.dataId).id,e.dataIdMap.get(a.dataId).id,e.dataIdMap.get(d.dataId).id,a.shape[3],i,u,c,l),d}const ndt={kernelName:fp,backendName:"wasm",setupFunc:tdt,kernelFunc:edt};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let eD;function sdt(n){eD=n.wasm.cwrap(tc,null,["number","number","number","number"])}function rdt(n){const{backend:t,inputs:e,attrs:s}=n,{reductionIndices:r,keepDims:o}=s,{x:a}=e;let u=t.dataIdMap.get(a.dataId).id,c=a;const{transposed:l,axes:d,originalAxes:h,inputWasTransposed:p}=Xa(a,r,t);if(p){const x=t.dataIdMap.get(l.dataId).id;c=l,u=x}const f=c.shape.length;ze("max",d,f);const[m,g]=Ge(c.shape,d),y=j(g),b=t.makeOutput(m,a.dtype);if(j(c.shape)!==0){const x=t.dataIdMap.get(b.dataId).id;eD(u,fe[a.dtype],y,x)}if(p&&t.disposeData(l.dataId),o){const x=Re(b.shape,h);b.shape=x}return b}const odt={kernelName:tc,backendName:"wasm",setupFunc:sdt,kernelFunc:rdt};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const adt=fn(ec);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let nD;function idt(n){nD=n.wasm.cwrap(nc,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function udt(n){const{inputs:t,attrs:e,backend:s}=n,r=t.x,o=s.dataIdMap.get(r.dataId).id;T(r.dtype==="float32",()=>`Error in MaxPool: only float32 input is supported. Got ${r.dtype}.`);const{filterSize:a,strides:i,pad:u,dimRoundingMode:c}=e,l=Xn(r.shape,a,i,1,u,c),d=l.filterHeight,h=l.filterWidth,p=l.padInfo.top,f=l.padInfo.right,m=l.padInfo.bottom,g=l.padInfo.left,y=l.dilationHeight,b=l.dilationWidth,x=l.strideHeight,w=l.strideWidth,v=l.inChannels,k=l.outChannels;if(l.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${l.dataFormat}'. Please use 'channelsLast'.`);const S=s.makeOutput(l.outShape,"float32"),_=s.dataIdMap.get(S.dataId).id;return nD(o,r.shape[0],r.shape[1],r.shape[2],d,h,p,f,m,g,y,b,x,w,v,k,_),S}const ldt={kernelName:nc,backendName:"wasm",setupFunc:idt,kernelFunc:udt};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let sD;function cdt(n){sD=n.wasm.cwrap("MaxPool3D",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function ddt(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{filterSize:o,strides:a,pad:i,dimRoundingMode:u,dataFormat:c}=s,l=Js(r.shape,o,a,1,i,u,c),d=e.makeOutput(l.outShape,r.dtype);return sD(e.dataIdMap.get(r.dataId).id,e.dataIdMap.get(d.dataId).id,l.batchSize,l.inChannels,l.inDepth,l.inHeight,l.inWidth,l.outDepth,l.outHeight,l.outWidth,l.strideDepth,l.strideHeight,l.strideWidth,l.dilationDepth,l.dilationHeight,l.dilationWidth,l.effectiveFilterDepth,l.effectiveFilterHeight,l.effectiveFilterWidth,l.padInfo.front,l.padInfo.top,l.padInfo.left),d}const hdt={kernelName:mp,backendName:"wasm",setupFunc:cdt,kernelFunc:ddt};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let rD;function pdt(n){rD=n.wasm.cwrap("MaxPool3DGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function fdt(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,input:o}=t,{filterSize:a,strides:i,pad:u,dimRoundingMode:c}=s,l=Js(o.shape,a,i,1,u,c),d=e.makeOutput(o.shape,o.dtype);return rD(e.dataIdMap.get(o.dataId).id,e.dataIdMap.get(r.dataId).id,e.dataIdMap.get(d.dataId).id,l.batchSize,l.inChannels,l.inDepth,l.inHeight,l.inWidth,l.outDepth,l.outHeight,l.outWidth,l.strideDepth,l.strideHeight,l.strideWidth,l.dilationDepth,l.dilationHeight,l.dilationWidth,l.effectiveFilterDepth,l.effectiveFilterHeight,l.effectiveFilterWidth,l.padInfo.front,l.padInfo.top,l.padInfo.left),d}const mdt={kernelName:Og,backendName:"wasm",setupFunc:pdt,kernelFunc:fdt};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let oD;function gdt(n){oD=n.wasm.cwrap("MaxPoolGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function ydt(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,input:o}=t,{filterSize:a,strides:i,pad:u,dimRoundingMode:c}=s,l=Xn(o.shape,a,i,1,u,c),d=e.makeOutput(o.shape,o.dtype);return oD(e.dataIdMap.get(o.dataId).id,e.dataIdMap.get(r.dataId).id,e.dataIdMap.get(d.dataId).id,l.batchSize,l.inChannels,l.inHeight,l.inWidth,l.outHeight,l.outWidth,l.strideHeight,l.strideWidth,l.dilationHeight,l.dilationWidth,l.effectiveFilterHeight,l.effectiveFilterWidth,l.padInfo.top,l.padInfo.left),d}const bdt={kernelName:Fg,backendName:"wasm",setupFunc:gdt,kernelFunc:ydt};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let aD;function xdt(n){aD=n.wasm.cwrap("MaxPoolWithArgmax",null,["number","number","number","number","boolean","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function wdt(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{filterSize:o,strides:a,pad:i,includeBatchInIndex:u}=s;T(r.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`);const c=[1,1];T(Mn(a,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`);const l=Xn(r.shape,o,a,[1,1],i),d=e.makeOutput(l.outShape,r.dtype),h=e.makeOutput(l.outShape,"int32");return aD(e.dataIdMap.get(r.dataId).id,e.dataIdMap.get(d.dataId).id,e.dataIdMap.get(h.dataId).id,fe[r.dtype],u,l.batchSize,l.inChannels,l.inHeight,l.inWidth,l.outHeight,l.outWidth,l.strideHeight,l.strideWidth,l.dilationHeight,l.dilationWidth,l.effectiveFilterHeight,l.effectiveFilterWidth,l.padInfo.top,l.padInfo.left),[d,h]}const vdt={kernelName:Kw,backendName:"wasm",setupFunc:xdt,kernelFunc:wdt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let iD;function Idt(n){iD=n.wasm.cwrap(sc,null,["number, number, number"])}function kdt(n){const{backend:t,inputs:e,attrs:s}=n,{axis:r,keepDims:o}=s,{x:a}=e,i=t.dataIdMap.get(a.dataId).id;let u=i,c=a;const{transposed:l,axes:d,originalAxes:h,inputWasTransposed:p}=Xa(a,r,t);let f=d;if(p){const w=t.dataIdMap.get(l.dataId).id;w!==i&&(c=l,u=w,f=Fe(f.length,c.shape.length))}ze("mean",f,c.shape.length);const[m,g]=Ge(c.shape,f),y=j(g);let b=c;c.dtype!=="float32"&&(b=Ya({backend:t,inputs:{x:c},attrs:{dtype:"float32"}}),u=t.dataIdMap.get(b.dataId).id);const x=t.makeOutput(m,"float32");if(j(c.shape)!==0){const w=t.dataIdMap.get(x.dataId).id;iD(u,y,w)}if(p&&t.disposeData(l.dataId),o){const w=Re(x.shape,h);x.shape=w}return c.dtype!=="float32"&&t.disposeData(b.dataId),x}const $dt={kernelName:sc,backendName:"wasm",setupFunc:Idt,kernelFunc:kdt};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let uD;function Sdt(n){uD=n.wasm.cwrap(rc,null,["number","number","number","number"])}function Ndt(n){const{backend:t,inputs:e,attrs:s}=n,{axis:r,keepDims:o}=s,{x:a}=e,i=t.dataIdMap.get(a.dataId).id;let u=i,c=a;const{transposed:l,axes:d,originalAxes:h,inputWasTransposed:p}=Xa(a,r,t);if(p){const x=t.dataIdMap.get(l.dataId).id;x!==i&&(c=l,u=x)}const f=c.shape.length;ze("min",d,f);const[m,g]=Ge(c.shape,d),y=j(g),b=t.makeOutput(m,c.dtype);if(j(c.shape)!==0){const x=t.dataIdMap.get(b.dataId).id;uD(u,fe[a.dtype],y,x)}if(p&&t.disposeData(l.dataId),o){const x=Re(b.shape,h);b.shape=x}return b}const Cdt={kernelName:rc,backendName:"wasm",setupFunc:Sdt,kernelFunc:Ndt};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _dt=fn(oc);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Ex;(function(n){n[n.reflect=0]="reflect",n[n.symmetric=1]="symmetric"})(Ex||(Ex={}));let lD;function Tdt(n){lD=n.wasm.cwrap(ac,null,["number","array","number","number","array","array","number","number"])}function Edt(n){const{inputs:{x:t},backend:e,attrs:{paddings:s,mode:r}}=n,o=s.map((f,m)=>f[0]+t.shape[m]+f[1]),a=e.dataIdMap.get(t.dataId).id,i=e.makeOutput(o,t.dtype),u=e.dataIdMap.get(i.dataId).id,c=new Uint8Array(new Int32Array(t.shape).buffer),l=s.map(f=>f[0]),d=s.map(f=>f[1]),h=new Uint8Array(new Int32Array(l).buffer),p=new Uint8Array(new Int32Array(d).buffer);return lD(a,c,t.shape.length,fe[t.dtype],h,p,Ex[r],u),i}const Adt={kernelName:ac,backendName:"wasm",kernelFunc:Edt,setupFunc:Tdt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let cD;function Ddt(n){cD=n.wasm.cwrap(Ec,null,["number","number","number","number"])}function dD(n){const{backend:t,inputs:{logits:e},attrs:{dim:s}}=n,r=t.dataIdMap.get(e.dataId).id,o=t.makeOutput(e.shape,e.dtype),a=t.dataIdMap.get(o.dataId).id,i=e.shape[s],u=j(e.shape)/i;return j(o.shape)===0||cD(r,a,i,u),o}const Rdt={kernelName:Ec,backendName:"wasm",setupFunc:Ddt,kernelFunc:dD};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let hD;function Fdt(n){hD=n.wasm.cwrap(Pg,null,["number","number","number","number","number","number"])}function Odt(n){const{inputs:t,backend:e,attrs:s}=n,{logits:r}=t,{numSamples:o,seed:a,normalized:i}=s;if(r.dtype!=="float32")throw new Error(`Tensor logits must have dtype float32, got ${r.dtype}`);const u=i?r:dD({inputs:{logits:r},backend:e,attrs:{dim:r.shape.length-1}}),[c,l]=u.shape,d=e.makeOutput([c,o],"int32");return hD(e.dataIdMap.get(u.dataId).id,c,l,o,a,e.dataIdMap.get(d.dataId).id),i||e.disposeData(u.dataId),d}const Pdt={kernelName:Pg,backendName:"wasm",setupFunc:Fdt,kernelFunc:Odt};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ldt=fn(ic);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mdt=fn(uc);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bdt=re(gp);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rv(n,t){const e=new Int32Array(n.wasm.HEAPU8.buffer,t,4),s=e[0],r=e[1],o=e[2],a=e[3];return n.wasm._free(t),{pSelectedIndices:s,selectedSize:r,pSelectedScores:o,pValidOutputs:a}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let pD;function zdt(n){pD=n.wasm.cwrap(bp,"number",["number","number","number","number","number"])}function Vdt(n){const{backend:t,inputs:e,attrs:s}=n,{iouThreshold:r,maxOutputSize:o,scoreThreshold:a}=s,{boxes:i,scores:u}=e,c=t.dataIdMap.get(i.dataId).id,l=t.dataIdMap.get(u.dataId).id,d=pD(c,l,o,r,a),{pSelectedIndices:h,selectedSize:p,pSelectedScores:f,pValidOutputs:m}=rv(t,d);return t.wasm._free(f),t.wasm._free(m),t.makeOutput([p],"int32",h)}const Wdt={kernelName:bp,backendName:"wasm",setupFunc:zdt,kernelFunc:Vdt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let fD;function Udt(n){fD=n.wasm.cwrap(xp,"number",["number","number","number","number","number","bool"])}function Gdt(n){const{backend:t,inputs:e,attrs:s}=n,{iouThreshold:r,maxOutputSize:o,scoreThreshold:a,padToMaxOutputSize:i}=s,{boxes:u,scores:c}=e,l=t.dataIdMap.get(u.dataId).id,d=t.dataIdMap.get(c.dataId).id,h=fD(l,d,o,r,a,i),{pSelectedIndices:p,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=rv(t,h);t.wasm._free(m);const y=t.makeOutput([f],"int32",p),b=t.makeOutput([],"int32",g);return[y,b]}const Hdt={kernelName:xp,backendName:"wasm",setupFunc:Udt,kernelFunc:Gdt};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let mD;function jdt(n){mD=n.wasm.cwrap(wp,"number",["number","number","number","number","number","number"])}function qdt(n){const{backend:t,inputs:e,attrs:s}=n,{iouThreshold:r,maxOutputSize:o,scoreThreshold:a,softNmsSigma:i}=s,{boxes:u,scores:c}=e,l=t.dataIdMap.get(u.dataId).id,d=t.dataIdMap.get(c.dataId).id,h=mD(l,d,o,r,a,i),{pSelectedIndices:p,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=rv(t,h);t.wasm._free(g);const y=t.makeOutput([f],"int32",p),b=t.makeOutput([f],"float32",m);return[y,b]}const Kdt={kernelName:wp,backendName:"wasm",setupFunc:jdt,kernelFunc:qdt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xdt=!1,Ydt=fn(yp,Xdt,"bool");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let gD;function Jdt(n){gD=n.wasm.cwrap(lc,null,["number","number","number","number","number"])}function Zdt(n){const{inputs:t,backend:e,attrs:s}=n,{indices:r}=t,{dtype:o,depth:a,onValue:i,offValue:u}=s,c=e.makeOutput([...r.shape,a],o),l=e.dataIdMap.get(c.dataId).id,h=e.dataIdMap.get(r.dataId).id;return gD(h,a,i,u,l),c}const Qdt={kernelName:lc,backendName:"wasm",setupFunc:Jdt,kernelFunc:Zdt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tht(n){const{inputs:{x:t},backend:e}=n,s=e.makeOutput(t.shape,t.dtype);return e.typedArrayFromHeap(s).fill(1),s}const eht={kernelName:vp,backendName:"wasm",kernelFunc:tht};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nht(n){const{inputs:t,backend:e,attrs:s}=n,{axis:r}=s;if(t.length===1)return Tx({inputs:{input:t[0]},backend:e,attrs:{dim:r}});const o=t[0].shape,a=t[0].dtype;t.forEach(l=>{Sg(o,l.shape,"All tensors passed to stack must have matching shapes"),T(a===l.dtype,()=>"All tensors passed to stack must have matching dtypes")});const i=[],u=t.map(l=>{const d=Tx({inputs:{input:l},backend:e,attrs:{dim:r}});return i.push(d),d}),c=CA({inputs:u,backend:e,attrs:{axis:r}});return i.forEach(l=>e.disposeData(l.dataId)),c}const sht={kernelName:Ip,backendName:"wasm",kernelFunc:nht};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let yD;function rht(n){yD=n.wasm.cwrap(cc,null,["number","array","number","number","array","array","number","number"])}function oht(n){const{inputs:{x:t},backend:e,attrs:{paddings:s,constantValue:r}}=n,o=s.map((m,g)=>m[0]+t.shape[g]+m[1]);if(j(t.shape)===0)return GA({backend:e,attrs:{shape:o,value:r,dtype:t.dtype}});const a=e.dataIdMap.get(t.dataId).id,i=e.makeOutput(o,t.dtype),c=e.dataIdMap.get(i.dataId).id,l=new Uint8Array(new Int32Array(t.shape).buffer),d=s.map(m=>m[0]),h=s.map(m=>m[1]),p=new Uint8Array(new Int32Array(d).buffer),f=new Uint8Array(new Int32Array(h).buffer);return yD(a,l,t.shape.length,fe[t.dtype],p,f,r,c),i}const bD={kernelName:cc,backendName:"wasm",kernelFunc:oht,setupFunc:rht};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aht=fn(dc);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let xD;function iht(n){xD=n.wasm.cwrap(hc,null,["number","number","number"])}function uht(n){const{inputs:t,backend:e}=n,{x:s,alpha:r}=t,o=e.dataIdMap.get(s.dataId).id,a=e.dataIdMap.get(r.dataId).id;let i=o;const u=s;let c=u;u.dtype!=="float32"&&(c=Ya({backend:e,inputs:{x:s},attrs:{dtype:"float32"}}),i=e.dataIdMap.get(c.dataId).id);const l=e.makeOutput(s.shape,"float32"),d=e.dataIdMap.get(l.dataId).id;return xD(i,a,d),u.dtype!=="float32"&&e.disposeData(c.dataId),l}const lht={kernelName:hc,backendName:"wasm",setupFunc:iht,kernelFunc:uht};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let wD;function cht(n){wD=n.wasm.cwrap(pc,null,["number","number","number","number"])}function dht(n){const{backend:t,inputs:e,attrs:s}=n,{axis:r,keepDims:o}=s,{x:a}=e,i=t.dataIdMap.get(a.dataId).id;let u=i,c=a;const{transposed:l,axes:d,originalAxes:h,inputWasTransposed:p}=Xa(a,r,t);let f=d;if(p){const x=t.dataIdMap.get(l.dataId).id;x!==i&&(c=l,u=x,f=Fe(f.length,c.shape.length))}ze("prod",f,c.shape.length);const[m,g]=Ge(c.shape,f),y=j(g),b=t.makeOutput(m,c.dtype);if(j(c.shape)!==0){const x=t.dataIdMap.get(b.dataId).id;wD(u,y,fe[b.dtype],x)}if(p&&t.disposeData(l.dataId),o){const x=Re(b.shape,h);b.shape=x}return b}const hht={kernelName:pc,backendName:"wasm",setupFunc:cht,kernelFunc:dht};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pht=n=>{const{backend:t,attrs:e}=n,{start:s,stop:r,step:o,dtype:a}=e,i=B0(s,r,o,a),u=t.makeOutput([i.length],a);return t.typedArrayFromHeap(u).set(i),u},fht={kernelName:Lg,backendName:"wasm",kernelFunc:pht};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mht=fn(Ll);/**
 * @license
 * Copyright 2022 The TensorFlow Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ght=re(fc);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yht=re(mc);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bht=re(bc);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let vD;function xht(n){vD=n.wasm.cwrap(yc,null,["number","number","number","number","number","number","number","number","number","number"])}function wht(n){const{backend:t,inputs:e,attrs:s}=n,{images:r}=e,{alignCorners:o,halfPixelCenters:a,size:i}=s,[u,c]=i,[l,d,h,p]=r.shape,f=[l,u,c,p];let m=t.dataIdMap.get(r.dataId),g;m.dtype!=="float32"&&(g=Ya({backend:t,inputs:{x:r},attrs:{dtype:"float32"}}),m=t.dataIdMap.get(g.dataId));const y=m.id,b=t.makeOutput(f,"float32");if(j(r.shape)===0)return b;const x=t.dataIdMap.get(b.dataId).id;return vD(y,l,d,h,p,u,c,o?1:0,a?1:0,x),g!=null&&t.disposeData(g.dataId),b}const vht={kernelName:yc,backendName:"wasm",setupFunc:xht,kernelFunc:wht};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let ID;function Iht(n){ID=n.wasm.cwrap(Sp,null,["number","number","number","array","array","boolean"])}function kht(n){const{inputs:t,backend:e,attrs:s}=n,{images:r,dy:o}=t,{alignCorners:a}=s,i=e.makeOutput(r.shape,"float32");let u=e.dataIdMap.get(r.dataId),c;return u.dtype!=="float32"&&(c=Ya({backend:e,inputs:{x:r},attrs:{dtype:"float32"}}),u=e.dataIdMap.get(c.dataId)),ID(e.dataIdMap.get(r.dataId).id,e.dataIdMap.get(o.dataId).id,e.dataIdMap.get(i.dataId).id,new Uint8Array(new Int32Array(r.shape).buffer),new Uint8Array(new Int32Array(o.shape).buffer),a),c!=null&&e.disposeData(c.dataId),i}const $ht={kernelName:Sp,backendName:"wasm",setupFunc:Iht,kernelFunc:kht};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let kD;function Sht(n){kD=n.wasm.cwrap(gc,null,["number","number","number","number","number","number","number","number","number","number"])}function Nht(n){const{backend:t,inputs:e,attrs:s}=n,{images:r}=e,{alignCorners:o,halfPixelCenters:a,size:i}=s,[u,c]=i,[l,d,h,p]=r.shape,f=[l,u,c,p],m=t.makeOutput(f,"float32");if(j(r.shape)===0)return m;let g=t.dataIdMap.get(r.dataId),y;g.dtype!=="float32"&&(y=Ya({backend:t,inputs:{x:r},attrs:{dtype:"float32"}}),g=t.dataIdMap.get(y.dataId));const b=g.id,x=t.dataIdMap.get(m.dataId).id;return kD(b,l,d,h,p,u,c,o?1:0,a?1:0,x),y!=null&&t.disposeData(y.dataId),m}const Cht={kernelName:gc,backendName:"wasm",setupFunc:Sht,kernelFunc:Nht};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let $D;function _ht(n){$D=n.wasm.cwrap($p,null,["number","number","number","array","array","boolean"])}function Tht(n){const{inputs:t,backend:e,attrs:s}=n,{images:r,dy:o}=t,{alignCorners:a}=s,i=e.makeOutput(r.shape,"float32");let u=e.dataIdMap.get(r.dataId),c;return u.dtype!=="float32"&&(c=Ya({backend:e,inputs:{x:r},attrs:{dtype:"float32"}}),u=e.dataIdMap.get(c.dataId)),$D(e.dataIdMap.get(r.dataId).id,e.dataIdMap.get(o.dataId).id,e.dataIdMap.get(i.dataId).id,new Uint8Array(new Int32Array(r.shape).buffer),new Uint8Array(new Int32Array(o.shape).buffer),a),c!=null&&e.disposeData(c.dataId),i}const Eht={kernelName:$p,backendName:"wasm",setupFunc:_ht,kernelFunc:Tht};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let SD;function Aht(n){SD=n.wasm.cwrap(xc,null,["number","array","number","array","number","number"])}function Dht(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{dims:o}=s,a=Gt(o,r.shape);if(r.shape.length===0)return Ry({inputs:{x:r},backend:e});const i=e.makeOutput(r.shape,r.dtype),u=e.dataIdMap.get(r.dataId).id,c=e.dataIdMap.get(i.dataId).id,l=new Uint8Array(new Int32Array(a).buffer),d=new Uint8Array(new Int32Array(r.shape).buffer);SD(u,l,a.length,d,r.shape.length,c);const h=Is({inputs:{x:i},attrs:{shape:r.shape},backend:e});return e.disposeData(i.dataId),h}const Rht={kernelName:xc,backendName:"wasm",kernelFunc:Dht,setupFunc:Aht};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let ND;function Fht(n){ND=n.wasm.cwrap(Op,null,["number","number","number","number","number","number","number","number","array","number","number"])}function Oht(n){const{inputs:t,backend:e,attrs:s}=n,{image:r}=t,{radians:o,fillValue:a,center:i}=s,u=e.makeOutput(r.shape,r.dtype),c=e.dataIdMap.get(r.dataId).id,l=e.dataIdMap.get(u.dataId).id,[d,h,p,f]=r.shape,[m,g]=ly(i,h,p),y=a===0,b=255,x=typeof a=="number"?[a,a,a,y?0:b]:[...a,b],w=new Uint8Array(new Int32Array(x).buffer);return ND(c,d,h,p,f,o,m,g,w,x.length,l),u}const Pht={kernelName:Op,backendName:"wasm",kernelFunc:Oht,setupFunc:Fht};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lht=re(wc);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mht=re(vc);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let CD;function Bht(n){CD=n.wasm.cwrap(Mg,null,["number","number","number","number","number","number","array","number","number"])}function zht(n){const{backend:t,inputs:e,attrs:s}=n,{indices:r,updates:o}=e,{shape:a}=s,i=t.makeOutput(a,o.dtype);if(j(a)===0)return i;const{sliceRank:u,numUpdates:c,sliceSize:l,strides:d,outputSize:h}=Io(o,r,a),f=t.dataIdMap.get(r.dataId).id,g=t.dataIdMap.get(o.dataId).id,y=new Uint8Array(new Int32Array(d).buffer),b=t.dataIdMap.get(i.dataId).id;return CD(f,g,fe[o.dtype],u,c,l,y,h,b),i}const Vht={kernelName:Mg,backendName:"wasm",setupFunc:Bht,kernelFunc:zht};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let _D;function Wht(n){_D=n.wasm.cwrap(zg,null,["number","number","number","number","number","number","bool","number"])}function Uht(n){const{inputs:t,backend:e,attrs:s}=n,{sortedSequence:r,values:o}=t,{side:a}=s;if(r.dtype!==o.dtype)throw new Error(`SearchSorted error: sorted_sequence must have the same dtype as values. Got ${r.dtype} and ${o.dtype}`);const i=e.makeOutput(o.shape,"int32");function u(c){return e.dataIdMap.get(c.dataId).id}return _D(u(r),u(o),r.shape[0],r.shape[1],o.shape[1],fe[r.dtype],a==="left",u(i)),i}const Ght={kernelName:zg,backendName:"wasm",setupFunc:Wht,kernelFunc:Uht};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let TD;function Hht(n){TD=n.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}function jht(n){const{inputs:t,backend:e}=n,{condition:s,t:r,e:o}=t,a=e.dataIdMap.get(s.dataId).id,i=e.dataIdMap.get(r.dataId).id,u=e.dataIdMap.get(o.dataId).id,c=e.makeOutput(r.shape,r.dtype),l=e.dataIdMap.get(c.dataId).id,d=s.shape.length,h=r.shape.length,p=d===0||d>1||h===1?1:j(r.shape.slice(1));return TD(a,i,u,p,l),c}const qht={kernelName:Np,backendName:"wasm",kernelFunc:jht,setupFunc:Hht};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kht=re(Ic);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let ED;function Xht(n){ED=n.wasm.cwrap(Nc,null,["number","number"])}function Yht(n){const{backend:t,inputs:{x:e}}=n,s=t.dataIdMap.get(e.dataId).id,r=t.makeOutput(e.shape,e.dtype),o=t.dataIdMap.get(r.dataId).id;return j(r.shape)===0||ED(s,o),r}const Jht={kernelName:"Sigmoid",backendName:"wasm",setupFunc:Xht,kernelFunc:Yht};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zht=re(Sc);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qht=re(kc);/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tpt=re($c);/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ept=re(Cc);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function npt(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{blockShape:o,paddings:a}=s,i=j(o),u=[[0,0]];u.push(...a);for(let k=1+o.length;k<r.shape.length;++k)u.push([0,0]);const c=bD.kernelFunc({inputs:{x:r},backend:e,attrs:{paddings:u,constantValue:0}}),l=nu(c.shape,o,i,!1),d=su(l.length,o.length,!1),h=ru(c.shape,o,i,!1),m=Is({inputs:{x:c},backend:e,attrs:{shape:l}}),b=Pa({inputs:{x:m},backend:e,attrs:{perm:d}}),v=Is({inputs:{x:b},backend:e,attrs:{shape:h}});return e.disposeData(c.dataId),e.disposeData(m.dataId),e.disposeData(b.dataId),v}const spt={kernelName:_p,backendName:"wasm",kernelFunc:npt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let AD;function rpt(n){AD=n.wasm.cwrap("SparseFillEmptyRows","number",["number","number","number","number","number","number","number","number","number","number","number","number"])}function opt(n){const{backend:t,inputs:e}=n,{indices:s,values:r,denseShape:o,defaultValue:a}=e,i=s.shape[0],u=s.shape[1],c=t.readSync(o.dataId)[0],l=[i+c,u],d=t.dataIdMap.get(s.dataId).id,h=t.dataIdMap.get(r.dataId).id,p=t.dataIdMap.get(a.dataId).id,f=t.makeOutput(l,s.dtype),m=t.dataIdMap.get(f.dataId).id,g=t.makeOutput(l.slice(0,1),r.dtype),y=t.dataIdMap.get(g.dataId).id,b=t.makeOutput([c],"bool"),x=t.dataIdMap.get(b.dataId).id,w=t.makeOutput([i],s.dtype),v=t.dataIdMap.get(w.dataId).id,k=t.makeOutput([4],"int32"),S=t.dataIdMap.get(k.dataId).id,_=AD(d,h,fe[r.dtype],i,c,u,p,m,y,x,v,S),C=t.readSync(k.dataId);let N;switch(C[0]){case 1:{N=Z1(C[1]);break}case 2:{N=Q1(C[1],C[2]);break}case 3:N=t0(C[1],C[2],C[3]);break;default:N=""}if(t.disposeData(k.dataId),N)throw t.disposeData(f.dataId),t.disposeData(g.dataId),t.disposeData(b.dataId),t.disposeData(w.dataId),new Error(N);let $=f,A=g;return _!==l[0]&&($=Li({inputs:{x:f},attrs:{begin:0,size:[_,u]},backend:t}),A=Li({inputs:{x:g},attrs:{begin:0,size:_},backend:t}),t.disposeData(f.dataId),t.disposeData(g.dataId)),[$,A,b,w]}const apt={kernelName:Yw,backendName:"wasm",setupFunc:rpt,kernelFunc:opt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let DD;function ipt(n){DD=n.wasm.cwrap(Vg,null,["number","number","number","number","number","number","number"])}function upt(n){const{backend:t,inputs:e}=n,{inputIndices:s,inputShape:r,newShape:o}=e;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${r.shape}`);if(o.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${o.shape}`);const a=t.dataIdMap.get(s.dataId).id,i=t.dataIdMap.get(r.dataId).id,u=t.dataIdMap.get(o.dataId).id,c=s.shape[0],l=j(o.shape),d=t.makeOutput([c,l],s.dtype),h=t.dataIdMap.get(d.dataId).id,p=t.makeOutput([l],o.dtype),f=t.dataIdMap.get(p.dataId).id,m=t.makeOutput([3],"int32"),g=t.dataIdMap.get(m.dataId).id;DD(a,i,u,c,h,f,g);const y=t.readSync(m.dataId);let b;switch(y[0]){case 0:{b=e0(y[1],y[2]);break}case 1:{b=n0(y[1],y[2]);break}case 2:b=s0();break;case 3:{const x=Array.from(t.readSync(r.dataId)),w=Array.from(t.readSync(p.dataId));b=r0(x,w);break}case 4:{const x=Array.from(t.readSync(r.dataId)),w=Array.from(t.readSync(p.dataId));b=o0(x,w);break}default:b=""}if(t.disposeData(m.dataId),b)throw t.disposeData(d.dataId),t.disposeData(p.dataId),new Error(b);return[d,p]}const lpt={kernelName:Vg,backendName:"wasm",setupFunc:ipt,kernelFunc:upt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let RD;function FD(n){RD=n.wasm.cwrap("SparseSegmentReduction",null,["number","number","number","number","number","number","number","number","number"])}function OD(n,t){const{backend:e,inputs:s}=n,{data:r,indices:o,segmentIds:a}=s,i=o.shape[0],u=e.readSync(a.dataId,i-1,i)[0],l=i>0?u+1:0;if(l<0)throw new Error(Vd());const d=r.shape.slice();d[0]=l;const h=e.dataIdMap.get(r.dataId).id,p=e.dataIdMap.get(o.dataId).id,f=e.dataIdMap.get(a.dataId).id,m=e.makeOutput(d,r.dtype),g=e.dataIdMap.get(m.dataId).id,y=e.makeOutput([4],"int32"),b=e.dataIdMap.get(y.dataId).id;RD(h,fe[r.dtype],r.shape[0],p,f,g,b,t,0);const x=e.readSync(y.dataId);let w;switch(x[0]){case 0:{w=Vd();break}case 1:{w=a0();break}case 2:w=i0(x[1],x[2]);break;case 3:w=u0(x[1],x[2],x[3]);break;default:w=""}if(e.disposeData(y.dataId),w)throw e.disposeData(m.dataId),new Error(w);return m}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cpt(n){return OD(n,!0)}const dpt={kernelName:Jw,backendName:"wasm",setupFunc:FD,kernelFunc:cpt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hpt(n){return OD(n,!1)}const ppt={kernelName:Zw,backendName:"wasm",setupFunc:FD,kernelFunc:hpt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let PD;function fpt(n){PD=n.wasm.cwrap(Wg,null,["number","number","number","number","number","number","number","number","array","number","number"])}function mpt(n){const{backend:t,inputs:e,attrs:s}=n,{sparseIndices:r,sparseValues:o,defaultValue:a}=e,{outputShape:i}=s,u=t.makeOutput(i,a.dtype);if(j(i)===0)return u;const{sliceRank:c,numUpdates:l,sliceSize:d,strides:h,outputSize:p}=Io(o,r,i),f=t.dataIdMap.get(r.dataId).id,m=t.dataIdMap.get(o.dataId).id,g=t.dataIdMap.get(a.dataId).id,y=new Uint8Array(new Int32Array(h).buffer),b=t.dataIdMap.get(u.dataId).id;return PD(f,m,o.shape.length,g,fe[a.dtype],c,l,d,y,p,b),u}const gpt={kernelName:Wg,backendName:"wasm",setupFunc:fpt,kernelFunc:mpt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ypt(n){const{inputs:t,attrs:e,backend:s}=n,{x:r}=t,{numOrSizeSplits:o,axis:a}=e,i=Gt(a,r.shape)[0],u=fy(r,o,i),c=new Array(r.shape.length).fill(0),l=r.shape.slice();return u.map(d=>{const h=[...l];h[i]=d;const p=Li({inputs:{x:r},attrs:{begin:c,size:h},backend:s});return c[i]+=d,p})}const bpt={kernelName:Tp,backendName:"wasm",kernelFunc:ypt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xpt=re(_c);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wpt=re(Ug);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vpt=fn(Ac);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let LD;function Ipt(n){LD=n.wasm.cwrap(Zi,null,["number","number","number","number"])}function kpt(n){const{backend:t,inputs:e,attrs:s}=n,{alpha:r}=s,{x:o}=e,a=t.dataIdMap.get(o.dataId).id,i=t.makeOutput(o.shape,o.dtype),u=t.dataIdMap.get(i.dataId).id;return LD(a,r,fe[o.dtype],u),i}const $pt={kernelName:Zi,backendName:"wasm",setupFunc:Ipt,kernelFunc:kpt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let MD;function Spt(n){MD=n.wasm.cwrap(Ep,null,["number","array","number","array","array","array","array","array","number","number"])}function Npt(n){const{backend:t,inputs:e,attrs:s}=n,{x:r}=e,{begin:o,end:a,strides:i,beginMask:u,endMask:c,ellipsisMask:l,newAxisMask:d,shrinkAxisMask:h}=s,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:w}=ay(r.shape,o,a,i,u,c,l,d,h);let v;if(m)v=Is({inputs:{x:r},backend:t,attrs:{shape:f}});else if(g||y){T(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);const k=sy(b,x,w),S=Li({inputs:{x:r},backend:t,attrs:{begin:b,size:k}});v=Is({inputs:{x:S},backend:t,attrs:{shape:f}}),t.disposeData(S.dataId)}else{const k=t.makeOutput(p,"float32"),S=t.dataIdMap.get(r.dataId).id,_=new Uint8Array(new Int32Array(St(r.shape)).buffer),C=new Uint8Array(new Int32Array(b).buffer),N=new Uint8Array(new Int32Array(x).buffer),$=new Uint8Array(new Int32Array(w).buffer),A=new Uint8Array(new Int32Array(p).buffer),D=new Uint8Array(new Int32Array(St(p)).buffer),R=t.dataIdMap.get(k.dataId).id;MD(S,_,r.shape.length,C,N,$,A,D,p.length,R),v=Is({inputs:{x:k},backend:t,attrs:{shape:f}}),t.disposeData(k.dataId)}return v}const Cpt={kernelName:Ep,backendName:"wasm",setupFunc:Spt,kernelFunc:Npt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _pt(n){const{backend:t,inputs:e,attrs:s}=n,{data:r,dataSplits:o}=e,{separator:a,nGramWidths:i,leftPad:u,rightPad:c,padWidth:l,preserveShortSequences:d}=s,h=t.readSync(r.dataId),p=t.readSync(o.dataId),[f,m]=V0(h,p,a,i,u,c,l,d),g=t.makeOutput([f.length],"string"),y=t.dataIdMap.get(g.dataId);y.stringBytes=f;const b=t.makeOutput(o.shape,"int32");return t.typedArrayFromHeap(b).set(m),[g,b]}const Tpt={kernelName:t1,backendName:"wasm",kernelFunc:_pt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ept(n){const{backend:t,inputs:e,attrs:s}=n,{input:r,delimiter:o}=e,{skipEmpty:a}=s,i=t.readSync(r.dataId),u=t.readSync(o.dataId),[c,l,d]=W0(i,u[0],a),h=l.length,p=t.makeOutput([h,2],"int32");t.typedArrayFromHeap(p).set(c);const m=t.makeOutput([h],"string"),g=t.dataIdMap.get(m.dataId);g.stringBytes=l;const y=t.makeOutput([2],"int32");return t.typedArrayFromHeap(y).set(d),[p,m,y]}const Apt={kernelName:e1,backendName:"wasm",kernelFunc:Ept};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dpt(n){const{backend:t,inputs:e,attrs:s}=n,{input:r}=e,{numBuckets:o}=s,a=t.readSync(r.dataId),i=U0(a,o),u=t.makeOutput(r.shape,"int32");return t.typedArrayFromHeap(u).set(i),u}const Rpt={kernelName:n1,backendName:"wasm",kernelFunc:Dpt};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fpt=fn(Dc);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let BD;function Opt(n){BD=n.wasm.cwrap(Tc,null,["number","number","number","number"])}function Ppt(n){const{backend:t,inputs:e,attrs:s}=n,{axis:r,keepDims:o}=s,{x:a}=e,i=t.dataIdMap.get(a.dataId).id;let u=i,c=a;const{transposed:l,axes:d,originalAxes:h,inputWasTransposed:p}=Xa(a,r,t);let f=d;if(p){const x=t.dataIdMap.get(l.dataId).id;x!==i&&(c=l,u=x,f=Fe(f.length,c.shape.length))}ze("sum",f,c.shape.length);const[m,g]=Ge(c.shape,f),y=j(g),b=t.makeOutput(m,c.dtype);if(j(c.shape)!==0){const x=t.dataIdMap.get(b.dataId).id;BD(u,y,fe[b.dtype],x)}if(p&&t.disposeData(l.dataId),o){const x=Re(b.shape,h);b.shape=x}return b}const Lpt={kernelName:Tc,backendName:"wasm",setupFunc:Opt,kernelFunc:Ppt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mpt=re(Rc);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bpt=re(Fc);/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let zD;function zpt(n){zD=n.wasm.cwrap(Bg,null,["number","number","number","number","number","number","array","number","number","number"])}function Vpt(n){const{backend:t,inputs:e,attrs:s}=n,{tensor:r,indices:o,updates:a}=e,i=t.makeOutput(r.shape,r.dtype);if(j(r.shape)===0)return i;const{sliceRank:u,numUpdates:c,sliceSize:l,strides:d,outputSize:h}=Io(a,o,r.shape),f=t.dataIdMap.get(o.dataId).id,g=t.dataIdMap.get(a.dataId).id,b=t.dataIdMap.get(r.dataId).id,x=new Uint8Array(new Int32Array(d).buffer),w=t.dataIdMap.get(i.dataId).id;return zD(f,g,fe[a.dtype],u,c,l,x,h,w,b),i}const Wpt={kernelName:Bg,backendName:"wasm",setupFunc:zpt,kernelFunc:Vpt};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let VD;function Upt(n){VD=n.wasm.cwrap(Ji,null,["number","array","number","array","number","number"])}function Gpt(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,o=e.dataIdMap.get(r.dataId).id,{reps:a}=s,i=new Array(r.shape.length);for(let h=0;h<i.length;h++)i[h]=r.shape[h]*a[h];const u=new Uint8Array(new Int32Array(r.shape).buffer),c=new Uint8Array(new Int32Array(i).buffer),l=e.makeOutput(i,r.dtype),d=e.dataIdMap.get(l.dataId).id;return VD(o,u,r.shape.length,c,i.length,fe[l.dtype],d),l}const Hpt={kernelName:Ji,backendName:"wasm",setupFunc:Upt,kernelFunc:Gpt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let WD;function jpt(n){WD=n.wasm.cwrap(Ap,null,["number","array","number","number","number","bool","number","number"])}const qpt=({inputs:n,backend:t,attrs:e})=>{const{x:s}=n,{k:r,sorted:o}=e,a=t.dataIdMap.get(s.dataId).id,i=new Uint8Array(new Int32Array(s.shape).buffer),u=s.shape.slice();u[u.length-1]=r;const c=t.makeOutput(u,s.dtype),l=t.dataIdMap.get(c.dataId).id,d=t.makeOutput(u,"int32"),h=t.dataIdMap.get(d.dataId).id;return WD(a,i,s.shape.length,fe[s.dtype],r,o,l,h),[c,d]},Kpt={kernelName:Ap,backendName:"wasm",setupFunc:jpt,kernelFunc:qpt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let UD;function Xpt(n){UD=n.wasm.cwrap(Dp,null,["number","number","bool","number","number","number","number","number","number","array","number","array","number","number","number","number","number"])}function Ypt(n){const{backend:t,inputs:e,attrs:s}=n,{image:r,transforms:o}=e,{interpolation:a,fillMode:i,fillValue:u,outputShape:c}=s,[l,d,h,p]=r.shape,[f,m]=c??[d,h],g=[l,f,m,p],y=new Uint8Array(new Int32Array(St(r.shape)).buffer),b=new Uint8Array(new Int32Array(St(g)).buffer),x=t.makeOutput(g,r.dtype),w=t.dataIdMap.get(x.dataId).id,k=t.dataIdMap.get(r.dataId).id,_=t.dataIdMap.get(o.dataId).id,C=a==="nearest"?1:2;let N;switch(i){case"constant":N=1;break;case"reflect":N=2;break;case"wrap":N=3;break;case"nearest":N=4;break;default:N=1;break}return UD(k,_,o.shape[0]>1,l,f,m,p,h,d,y,r.shape.length-1,b,g.length-1,C,N,u,w),x}const Jpt={kernelName:Dp,backendName:"wasm",setupFunc:Xpt,kernelFunc:Ypt};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zpt(n){const{inputs:t,attrs:e,backend:s}=n,{axis:r}=e,{x:o}=t,{outputValues:a,outputShape:i,indices:u}=H0(s.readSync(o.dataId),r,o.shape,o.dtype);return[s.makeOutput(i,o.dtype,void 0,a),s.makeOutput([u.length],"int32",void 0,u)]}const Qpt={kernelName:Gg,backendName:"wasm",kernelFunc:Zpt};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tft(n){const{inputs:t,backend:e,attrs:s}=n,{value:r}=t;let{axis:o}=s;o<0&&(o+=r.shape.length);const a=r.shape[o],i=r.shape.length,u=new Array(i-1);let c=0;for(let p=0;p<i;p++)p!==o&&(u[c++]=r.shape[p]);const l=new Array(a),d=new Array(i).fill(0),h=r.shape.slice();h[o]=1;for(let p=0;p<l.length;p++)d[o]=p,l[p]=Li({inputs:{x:r},attrs:{begin:d,size:h},backend:e});return l.map(({dataId:p,dtype:f})=>({dataId:p,dtype:f,shape:u}))}const eft={kernelName:Rp,backendName:"wasm",kernelFunc:tft};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nft(n){const{inputs:{x:t},backend:e}=n,s=e.makeOutput(t.shape,t.dtype);return e.typedArrayFromHeap(s).fill(0),s}const sft={kernelName:Fp,backendName:"wasm",kernelFunc:nft};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rft=[Xit,Yit,Jit,Zit,Qit,nut,cut,put,fut,mut,gut,yut,but,xut,wut,kut,Dut,Nut,Tut,Put,Wut,Hut,jut,Kut,Xut,Yut,Qut,tlt,slt,alt,llt,hlt,mlt,glt,ylt,wlt,klt,Nlt,Tlt,Dlt,Olt,Mlt,Vlt,Glt,qlt,Klt,Jlt,Qlt,tct,ect,nct,sct,rct,ict,uct,lct,hct,mct,bct,vct,$ct,Nct,_ct,sut,Tct,Ect,Act,Fct,Pct,Mct,Vct,Uct,Wct,Hct,jct,Kct,Yct,Qct,ndt,odt,adt,ldt,hdt,mdt,bdt,vdt,$dt,Cdt,_dt,Adt,Pdt,Ldt,Mdt,Bdt,Wdt,Hdt,Kdt,Ydt,Qdt,eht,sht,bD,aht,lht,hht,fht,mht,ght,yht,bht,Rut,vht,$ht,Cht,Eht,Rht,Pht,Lht,Mht,Vht,Ght,qht,Kht,Jht,Zht,Qht,tpt,zut,Rdt,ept,spt,apt,lpt,dpt,ppt,gpt,bpt,xpt,wpt,vpt,$pt,Cpt,Tpt,Apt,Rpt,Fpt,Lpt,Mpt,Bpt,Wpt,Hpt,Kpt,Jpt,iut,Qpt,eft,sft];for(const n of rft)s1(n);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ax=et();Ax.registerFlag("WASM_HAS_SIMD_SUPPORT",async()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]))}catch{return!1}});Ax.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",async()=>{if(Ax.get("IS_NODE"))return!1;try{return new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}});var kb={exports:{}},x$;function oft(){return x$||(x$=1,function(n,t){var e=(()=>{var s=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(s=s||__filename),function(r){r=r||{};function o(){return P.buffer!=xt&&se(P.buffer),Ct}function a(){return P.buffer!=xt&&se(P.buffer),zt}function i(){return P.buffer!=xt&&se(P.buffer),Wt}function u(){return P.buffer!=xt&&se(P.buffer),Jt}function c(){return P.buffer!=xt&&se(P.buffer),ue}var l=typeof r<"u"?r:{},d,h;l.ready=new Promise(function(O,Y){d=O,h=Y});var p;typeof process<"u"&&process.listeners&&(p={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var f=Object.assign({},l),m=(O,Y)=>{throw Y},g=typeof window=="object",y=typeof importScripts=="function",b=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",x=l.ENVIRONMENT_IS_PTHREAD||!1,w="";function v(O){return l.locateFile?l.locateFile(O,w):w+O}var k,S,_;function C(O){if(O instanceof xr)return;F("exiting due to exception: "+O)}if(b){var N=la,$=la;y?w=$.dirname(w)+"/":w=__dirname+"/",k=(Y,pt)=>(Y=jr(Y)?new URL(Y):$.normalize(Y),N.readFileSync(Y,pt?void 0:"utf8")),_=Y=>{var pt=k(Y,!0);return pt.buffer||(pt=new Uint8Array(pt)),pt},S=(Y,pt,Lt)=>{Y=jr(Y)?new URL(Y):$.normalize(Y),N.readFile(Y,function(Ht,jt){Ht?Lt(Ht):pt(jt.buffer)})},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),process.argv.slice(2),process.on("uncaughtException",function(Y){if(!(Y instanceof xr))throw Y}),process.on("unhandledRejection",function(Y){throw Y}),m=(Y,pt)=>{if(Ee())throw process.exitCode=Y,pt;C(pt),process.exit(Y)},l.inspect=function(){return"[Emscripten Module object]"};let O;try{O=la}catch(Y){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),Y}uI.Worker=O.Worker}else(g||y)&&(y?w=self.location.href:typeof document<"u"&&document.currentScript&&(w=document.currentScript.src),typeof s<"u"&&s&&(w=s),w.indexOf("blob:")!==0?w=w.substr(0,w.replace(/[?#].*/,"").lastIndexOf("/")+1):w="",b||(k=O=>{var Y=new XMLHttpRequest;return Y.open("GET",O,!1),Y.send(null),Y.responseText},y&&(_=O=>{var Y=new XMLHttpRequest;return Y.open("GET",O,!1),Y.responseType="arraybuffer",Y.send(null),new Uint8Array(Y.response)}),S=(O,Y,pt)=>{var Lt=new XMLHttpRequest;Lt.open("GET",O,!0),Lt.responseType="arraybuffer",Lt.onload=()=>{if(Lt.status==200||Lt.status==0&&Lt.response){Y(Lt.response);return}pt()},Lt.onerror=pt,Lt.send(null)}));b&&typeof performance>"u"&&(uI.performance=la.performance);var A=console.log.bind(console),D=console.warn.bind(console);b&&(A=O=>N.writeSync(1,O+`
`),D=O=>N.writeSync(2,O+`
`));var R=l.print||A,F=l.printErr||D;Object.assign(l,f),f=null,l.arguments&&l.arguments,l.thisProgram&&l.thisProgram,l.quit&&(m=l.quit);var z;l.wasmBinary&&(z=l.wasmBinary);var H=l.noExitRuntime||!0;typeof WebAssembly!="object"&&Bs("no native wasm support detected");var P,U,Z=!1,tt;function at(O,Y){O||Bs(Y)}var ot=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0;function lt(O,Y,pt){Y>>>=0;for(var Lt=Y+pt,Ht=Y;O[Ht]&&!(Ht>=Lt);)++Ht;if(Ht-Y>16&&O.buffer&&ot)return ot.decode(O.buffer instanceof SharedArrayBuffer?O.slice(Y,Ht):O.subarray(Y,Ht));for(var jt="";Y<Ht;){var kt=O[Y++];if(!(kt&128)){jt+=String.fromCharCode(kt);continue}var Dt=O[Y++]&63;if((kt&224)==192){jt+=String.fromCharCode((kt&31)<<6|Dt);continue}var Ke=O[Y++]&63;if((kt&240)==224?kt=(kt&15)<<12|Dt<<6|Ke:kt=(kt&7)<<18|Dt<<12|Ke<<6|O[Y++]&63,kt<65536)jt+=String.fromCharCode(kt);else{var zs=kt-65536;jt+=String.fromCharCode(55296|zs>>10,56320|zs&1023)}}return jt}function ct(O,Y){return O>>>=0,O?lt(a(),O,Y):""}function bt(O,Y,pt,Lt){if(pt>>>=0,!(Lt>0))return 0;for(var Ht=pt,jt=pt+Lt-1,kt=0;kt<O.length;++kt){var Dt=O.charCodeAt(kt);if(Dt>=55296&&Dt<=57343){var Ke=O.charCodeAt(++kt);Dt=65536+((Dt&1023)<<10)|Ke&1023}if(Dt<=127){if(pt>=jt)break;Y[pt++>>>0]=Dt}else if(Dt<=2047){if(pt+1>=jt)break;Y[pt++>>>0]=192|Dt>>6,Y[pt++>>>0]=128|Dt&63}else if(Dt<=65535){if(pt+2>=jt)break;Y[pt++>>>0]=224|Dt>>12,Y[pt++>>>0]=128|Dt>>6&63,Y[pt++>>>0]=128|Dt&63}else{if(pt+3>=jt)break;Y[pt++>>>0]=240|Dt>>18,Y[pt++>>>0]=128|Dt>>12&63,Y[pt++>>>0]=128|Dt>>6&63,Y[pt++>>>0]=128|Dt&63}}return Y[pt>>>0]=0,pt-Ht}function Nt(O,Y,pt){return bt(O,a(),Y,pt)}var xt,Ct,zt,Wt,Jt,ue;x&&(xt=l.buffer);function se(O){xt=O,l.HEAP8=Ct=new Int8Array(O),l.HEAP16=new Int16Array(O),l.HEAP32=Wt=new Int32Array(O),l.HEAPU8=zt=new Uint8Array(O),l.HEAPU16=new Uint16Array(O),l.HEAPU32=Jt=new Uint32Array(O),l.HEAPF32=new Float32Array(O),l.HEAPF64=ue=new Float64Array(O)}var ee=l.INITIAL_MEMORY||16777216;if(x)P=l.wasmMemory,xt=l.buffer;else if(l.wasmMemory)P=l.wasmMemory;else if(P=new WebAssembly.Memory({initial:ee/65536,maximum:65536,shared:!0}),!(P.buffer instanceof SharedArrayBuffer))throw F("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),b&&F("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");P&&(xt=P.buffer),ee=xt.byteLength,se(xt);var Vt,ve=[],me=[],zn=[];function Ee(){return H}function Qn(){if(l.preRun)for(typeof l.preRun=="function"&&(l.preRun=[l.preRun]);l.preRun.length;)Vn(l.preRun.shift());ce(ve)}function mn(){x||ce(me)}function Ns(){if(!x){if(l.postRun)for(typeof l.postRun=="function"&&(l.postRun=[l.postRun]);l.postRun.length;)ds(l.postRun.shift());ce(zn)}}function Vn(O){ve.unshift(O)}function ts(O){me.unshift(O)}function ds(O){zn.unshift(O)}var ln=0,cn=null;function tr(O){ln++,l.monitorRunDependencies&&l.monitorRunDependencies(ln)}function $o(O){if(ln--,l.monitorRunDependencies&&l.monitorRunDependencies(ln),ln==0&&cn){var Y=cn;cn=null,Y()}}function Bs(O){l.onAbort&&l.onAbort(O),O="Aborted("+O+")",F(O),Z=!0,tt=1,O+=". Build with -sASSERTIONS for more info.";var Y=new WebAssembly.RuntimeError(O);throw h(Y),Y}var ti="data:application/octet-stream;base64,";function er(O){return O.startsWith(ti)}function jr(O){return O.startsWith("file://")}var dn;dn="tfjs-backend-wasm-threaded-simd.wasm",er(dn)||(dn=v(dn));function hu(O){try{if(O==dn&&z)return new Uint8Array(z);if(_)return _(O);throw"both async and sync fetching of the wasm failed"}catch(Y){Bs(Y)}}function ei(){if(!z&&(g||y)){if(typeof fetch=="function"&&!jr(dn))return fetch(dn,{credentials:"same-origin"}).then(function(O){if(!O.ok)throw"failed to load wasm binary file at '"+dn+"'";return O.arrayBuffer()}).catch(function(){return hu(dn)});if(S)return new Promise(function(O,Y){S(dn,function(pt){O(new Uint8Array(pt))},Y)})}return Promise.resolve().then(function(){return hu(dn)})}function pu(){var O={env:Mv,wasi_snapshot_preview1:Mv};function Y(kt,Dt){var Ke=kt.exports;if(l.asm=Ke,Cs(l.asm._emscripten_tls_init),Vt=l.asm.__indirect_function_table,ts(l.asm.__wasm_call_ctors),U=Dt,!x){var zs=ft.unusedWorkers.length;ft.unusedWorkers.forEach(function(Co){ft.loadWasmModuleToWorker(Co,function(){--zs||$o()})})}}x||tr();function pt(kt){Y(kt.instance,kt.module)}function Lt(kt){return ei().then(function(Dt){return WebAssembly.instantiate(Dt,O)}).then(function(Dt){return Dt}).then(kt,function(Dt){F("failed to asynchronously prepare wasm: "+Dt),Bs(Dt)})}function Ht(){return!z&&typeof WebAssembly.instantiateStreaming=="function"&&!er(dn)&&!jr(dn)&&!b&&typeof fetch=="function"?fetch(dn,{credentials:"same-origin"}).then(function(kt){var Dt=WebAssembly.instantiateStreaming(kt,O);return Dt.then(pt,function(Ke){return F("wasm streaming compile failed: "+Ke),F("falling back to ArrayBuffer instantiation"),Lt(pt)})}):Lt(pt)}if(l.instantiateWasm)try{var jt=l.instantiateWasm(O,Y);return jt}catch(kt){F("Module.instantiateWasm callback failed with error: "+kt),h(kt)}return Ht().catch(h),{}}var fu={};function xr(O){this.name="ExitStatus",this.message="Program terminated with exit("+O+")",this.status=O}function na(O){var Y=ft.pthreads[O];delete ft.pthreads[O],Y.terminate(),qy(O),ft.runningWorkers.splice(ft.runningWorkers.indexOf(Y),1),Y.pthread_ptr=0}function mu(O){var Y=ft.pthreads[O];Y.postMessage({cmd:"cancel"})}function So(O){var Y=ft.pthreads[O];at(Y),ft.returnWorkerToPool(Y)}function le(O){var Y=ft.getNewWorker();if(!Y)return 6;ft.runningWorkers.push(Y),ft.pthreads[O.pthread_ptr]=Y,Y.pthread_ptr=O.pthread_ptr;var pt={cmd:"run",start_routine:O.startRoutine,arg:O.arg,pthread_ptr:O.pthread_ptr};return Y.runPthread=()=>{b&&Y.ref(),Y.postMessage(pt,O.transferList),delete Y.runPthread},Y.loaded&&Y.runPthread(),0}function Qe(O){if(x)return gu(1,1,O);tt=O,Ee()||(ft.terminateAllThreads(),l.onExit&&l.onExit(O),Z=!0),m(O,new xr(O))}function nt(O,Y){if(tt=O,!Y&&x)throw Pt(O),"unwind";Qe(O)}var dt=nt;function _t(O){if(O instanceof xr||O=="unwind")return tt;m(1,O)}var ft={unusedWorkers:[],runningWorkers:[],tlsInitFunctions:[],pthreads:{},init:function(){x?ft.initWorker():ft.initMainThread()},initMainThread:function(){for(var O=8;O--;)ft.allocateUnusedWorker()},initWorker:function(){H=!1},setExitStatus:function(O){tt=O},terminateAllThreads:function(){for(var O of Object.values(ft.pthreads))ft.returnWorkerToPool(O);for(var O of ft.unusedWorkers)O.terminate();ft.unusedWorkers=[]},returnWorkerToPool:function(O){var Y=O.pthread_ptr;delete ft.pthreads[Y],ft.unusedWorkers.push(O),ft.runningWorkers.splice(ft.runningWorkers.indexOf(O),1),O.pthread_ptr=0,b&&O.unref(),qy(Y)},receiveObjectTransfer:function(O){},threadInitTLS:function(){ft.tlsInitFunctions.forEach(O=>O())},loadWasmModuleToWorker:function(O,Y){O.onmessage=jt=>{var kt=jt.data,Dt=kt.cmd;if(O.pthread_ptr&&(ft.currentProxiedOperationCallerThread=O.pthread_ptr),kt.targetThread&&kt.targetThread!=rf()){var Ke=ft.pthreads[kt.targetThread];Ke?Ke.postMessage(kt,kt.transferList):F('Internal error! Worker sent a message "'+Dt+'" to target pthread '+kt.targetThread+", but that thread no longer exists!"),ft.currentProxiedOperationCallerThread=void 0;return}Dt==="processProxyingQueue"?Gy(kt.queue):Dt==="spawnThread"?le(kt):Dt==="cleanupThread"?So(kt.thread):Dt==="killThread"?na(kt.thread):Dt==="cancelThread"?mu(kt.thread):Dt==="loaded"?(O.loaded=!0,b&&O.unref(),Y&&Y(O),O.runPthread&&O.runPthread()):Dt==="print"?R("Thread "+kt.threadId+": "+kt.text):Dt==="printErr"?F("Thread "+kt.threadId+": "+kt.text):Dt==="alert"?alert("Thread "+kt.threadId+": "+kt.text):kt.target==="setimmediate"?O.postMessage(kt):Dt==="callHandler"?l[kt.handler](...kt.args):Dt&&F("worker sent an unknown command "+Dt),ft.currentProxiedOperationCallerThread=void 0},O.onerror=jt=>{var kt="worker sent an error!";throw F(kt+" "+jt.filename+":"+jt.lineno+": "+jt.message),jt},b&&(O.on("message",function(jt){O.onmessage({data:jt})}),O.on("error",function(jt){O.onerror(jt)}),O.on("detachedExit",function(){}));var pt=[],Lt=["onExit","onAbort","print","printErr"];for(var Ht of Lt)l.hasOwnProperty(Ht)&&pt.push(Ht);O.postMessage({cmd:"load",handlers:pt,urlOrBlob:l.mainScriptUrlOrBlob||s,wasmMemory:P,wasmModule:U})},allocateUnusedWorker:function(){var O,Y=v("tfjs-backend-wasm-threaded-simd.worker.js");O=new Worker(Y),ft.unusedWorkers.push(O)},getNewWorker:function(){return ft.unusedWorkers.length==0&&(ft.allocateUnusedWorker(),ft.loadWasmModuleToWorker(ft.unusedWorkers[0])),ft.unusedWorkers.pop()}};l.PThread=ft;function ce(O){for(;O.length>0;)O.shift()(l)}function Ie(){var O=rf(),Y=i()[O+52>>>2],pt=i()[O+56>>>2],Lt=Y-pt;Uv(Y,Lt),of(Y)}l.establishStackSpace=Ie;function Pt(O){if(x)return gu(2,0,O);try{dt(O)}catch(Y){_t(Y)}}var At=[];function de(O){var Y=At[O];return Y||(O>=At.length&&(At.length=O+1),At[O]=Y=Vt.get(O)),Y}function gn(O,Y){var pt=de(O)(Y);Ee()?ft.setExitStatus(pt):Wv(pt)}l.invokeEntryPoint=gn;function Cs(O){ft.tlsInitFunctions.push(O)}function qr(O){Bv(O,!y,1,!g),ft.threadInitTLS()}function No(O){x?postMessage({cmd:"cleanupThread",thread:O}):So(O)}function ni(O,Y,pt,Lt){return x?gu(3,1,O,Y,pt,Lt):hn(O,Y,pt,Lt)}function hn(O,Y,pt,Lt){if(typeof SharedArrayBuffer>"u")return F("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var Ht=[],jt=0;if(x&&(Ht.length===0||jt))return ni(O,Y,pt,Lt);var kt={startRoutine:pt,pthread_ptr:O,arg:Lt,transferList:Ht};return x?(kt.cmd="spawnThread",postMessage(kt,Ht),0):le(kt)}function Kr(){return 65536}var sf=!0;function fF(){return sf}function Gy(O){Atomics.store(i(),O>>2,1),rf()&&Vv(O),Atomics.compareExchange(i(),O>>2,1,0)}l.executeNotifiedProxyingQueue=Gy;function mF(O,Y,pt,Lt){if(O==Y)setTimeout(()=>Gy(Lt));else if(x)postMessage({targetThread:O,cmd:"processProxyingQueue",queue:Lt});else{var Ht=ft.pthreads[O];if(!Ht)return;Ht.postMessage({cmd:"processProxyingQueue",queue:Lt})}return 1}function gF(O,Y,pt){return-1}function yF(){Bs("")}function Zc(O){Zc.shown||(Zc.shown={}),Zc.shown[O]||(Zc.shown[O]=1,b&&(O="warning: "+O),F(O))}function bF(){b||y||Zc("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")}function xF(){return Date.now()}function Rv(){return 4294901760}function wF(){return Rv()}var Hy;b?Hy=()=>{var O=process.hrtime();return O[0]*1e3+O[1]/1e6}:Hy=()=>performance.timeOrigin+performance.now();function vF(O,Y,pt){a().copyWithin(O>>>0,Y>>>0,Y+pt>>>0)}function IF(){return b?la.cpus().length:navigator.hardwareConcurrency}function kF(O){var Y=Ky(),pt=O();return of(Y),pt}function gu(O,Y){var pt=arguments.length-2,Lt=arguments;return kF(()=>{for(var Ht=pt,jt=af(Ht*8),kt=jt>>3,Dt=0;Dt<pt;Dt++){var Ke=Lt[2+Dt];c()[kt+Dt>>>0]=Ke}return zv(O,Ht,jt,Y)})}var jy=[];function $F(O,Y,pt){jy.length=Y;for(var Lt=pt>>3,Ht=0;Ht<Y;Ht++)jy[Ht]=c()[Lt+Ht>>>0];var jt=O<0,kt=jt?fu[-O-1]:RF[O];return kt.apply(null,jy)}function SF(O){try{return P.grow(O-xt.byteLength+65535>>>16),se(P.buffer),1}catch{}}function NF(O){var Y=a().length;if(O=O>>>0,O<=Y)return!1;var pt=Rv();if(O>pt)return!1;let Lt=(Ke,zs)=>Ke+(zs-Ke%zs)%zs;for(var Ht=1;Ht<=4;Ht*=2){var jt=Y*(1+.2/Ht);jt=Math.min(jt,O+100663296);var kt=Math.min(pt,Lt(Math.max(O,jt),65536)),Dt=SF(kt);if(Dt)return!0}return!1}function CF(){throw"unwind"}function Fv(O){return x?gu(4,1,O):52}function Ov(O,Y,pt,Lt,Ht){return x?gu(5,1,O,Y,pt,Lt,Ht):70}var _F=[null,[],[]];function TF(O,Y){var pt=_F[O];Y===0||Y===10?((O===1?R:F)(lt(pt,0)),pt.length=0):pt.push(Y)}function Pv(O,Y,pt,Lt){if(x)return gu(6,1,O,Y,pt,Lt);for(var Ht=0,jt=0;jt<pt;jt++){var kt=u()[Y>>>2],Dt=u()[Y+4>>>2];Y+=8;for(var Ke=0;Ke<Dt;Ke++)TF(O,a()[kt+Ke>>>0]);Ht+=Dt}return u()[Lt>>>2]=Ht,0}function Lv(O){var Y=l["_"+O];return Y}function EF(O,Y){o().set(O,Y>>>0)}function AF(O,Y,pt,Lt,Ht){var jt={string:_s=>{var yu=0;if(_s!=null&&_s!==0){var jv=(_s.length<<2)+1;yu=af(jv),Nt(_s,yu,jv)}return yu},array:_s=>{var yu=af(_s.length);return EF(_s,yu),yu}};function kt(_s){return Y==="string"?ct(_s):Y==="boolean"?!!_s:_s}var Dt=Lv(O),Ke=[],zs=0;if(Lt)for(var Co=0;Co<Lt.length;Co++){var Hv=jt[pt[Co]];Hv?(zs===0&&(zs=Ky()),Ke[Co]=Hv(Lt[Co])):Ke[Co]=Lt[Co]}var Xy=Dt.apply(null,Ke);function OF(_s){return zs!==0&&of(zs),kt(_s)}return Xy=OF(Xy),Xy}function DF(O,Y,pt,Lt){pt=pt||[];var Ht=pt.every(kt=>kt==="number"||kt==="boolean"),jt=Y!=="string";return jt&&Ht&&!Lt?Lv(O):function(){return AF(O,Y,pt,arguments)}}ft.init();var RF=[null,Qe,Pt,ni,Fv,Ov,Pv],Mv={__emscripten_init_main_thread_js:qr,__emscripten_thread_cleanup:No,__pthread_create_js:hn,_emscripten_default_pthread_stack_size:Kr,_emscripten_get_now_is_monotonic:fF,_emscripten_notify_task_queue:mF,_emscripten_set_offscreencanvas_size:gF,abort:yF,emscripten_check_blocking_allowed:bF,emscripten_date_now:xF,emscripten_get_heap_max:wF,emscripten_get_now:Hy,emscripten_memcpy_big:vF,emscripten_num_logical_cores:IF,emscripten_receive_on_main_thread_js:$F,emscripten_resize_heap:NF,emscripten_unwind_to_js_event_loop:CF,exit:dt,fd_close:Fv,fd_seek:Ov,fd_write:Pv,memory:P||l.wasmMemory};pu(),l.___wasm_call_ctors=function(){return(l.___wasm_call_ctors=l.asm.__wasm_call_ctors).apply(null,arguments)},l._init=function(){return(l._init=l.asm.init).apply(null,arguments)},l._init_with_threads_count=function(){return(l._init_with_threads_count=l.asm.init_with_threads_count).apply(null,arguments)},l._get_threads_count=function(){return(l._get_threads_count=l.asm.get_threads_count).apply(null,arguments)},l._register_tensor=function(){return(l._register_tensor=l.asm.register_tensor).apply(null,arguments)},l._dispose_data=function(){return(l._dispose_data=l.asm.dispose_data).apply(null,arguments)},l._dispose=function(){return(l._dispose=l.asm.dispose).apply(null,arguments)},l._Abs=function(){return(l._Abs=l.asm.Abs).apply(null,arguments)},l._Acos=function(){return(l._Acos=l.asm.Acos).apply(null,arguments)},l._Acosh=function(){return(l._Acosh=l.asm.Acosh).apply(null,arguments)},l._Add=function(){return(l._Add=l.asm.Add).apply(null,arguments)},l._AddN=function(){return(l._AddN=l.asm.AddN).apply(null,arguments)},l._All=function(){return(l._All=l.asm.All).apply(null,arguments)},l._Any=function(){return(l._Any=l.asm.Any).apply(null,arguments)},l._ArgMax=function(){return(l._ArgMax=l.asm.ArgMax).apply(null,arguments)},l._ArgMin=function(){return(l._ArgMin=l.asm.ArgMin).apply(null,arguments)},l._Asin=function(){return(l._Asin=l.asm.Asin).apply(null,arguments)},l._Asinh=function(){return(l._Asinh=l.asm.Asinh).apply(null,arguments)},l._Atan=function(){return(l._Atan=l.asm.Atan).apply(null,arguments)},l._Atan2=function(){return(l._Atan2=l.asm.Atan2).apply(null,arguments)},l._Atanh=function(){return(l._Atanh=l.asm.Atanh).apply(null,arguments)},l._AvgPool=function(){return(l._AvgPool=l.asm.AvgPool).apply(null,arguments)},l._AvgPool3D=function(){return(l._AvgPool3D=l.asm.AvgPool3D).apply(null,arguments)},l._AvgPool3DGrad=function(){return(l._AvgPool3DGrad=l.asm.AvgPool3DGrad).apply(null,arguments)},l._AvgPoolGrad=function(){return(l._AvgPoolGrad=l.asm.AvgPoolGrad).apply(null,arguments)},l._BatchMatMul=function(){return(l._BatchMatMul=l.asm.BatchMatMul).apply(null,arguments)},l._Bincount=function(){return(l._Bincount=l.asm.Bincount).apply(null,arguments)},l._BitwiseAnd=function(){return(l._BitwiseAnd=l.asm.BitwiseAnd).apply(null,arguments)},l._Ceil=function(){return(l._Ceil=l.asm.Ceil).apply(null,arguments)},l._ClipByValue=function(){return(l._ClipByValue=l.asm.ClipByValue).apply(null,arguments)},l._Conv2D=function(){return(l._Conv2D=l.asm.Conv2D).apply(null,arguments)},l._Conv2DBackpropInput=function(){return(l._Conv2DBackpropInput=l.asm.Conv2DBackpropInput).apply(null,arguments)},l._Conv3D=function(){return(l._Conv3D=l.asm.Conv3D).apply(null,arguments)},l._Conv3DBackpropFilterV2=function(){return(l._Conv3DBackpropFilterV2=l.asm.Conv3DBackpropFilterV2).apply(null,arguments)},l._Conv3DBackpropInputV2=function(){return(l._Conv3DBackpropInputV2=l.asm.Conv3DBackpropInputV2).apply(null,arguments)},l._Cos=function(){return(l._Cos=l.asm.Cos).apply(null,arguments)},l._Cosh=function(){return(l._Cosh=l.asm.Cosh).apply(null,arguments)},l._CropAndResize=function(){return(l._CropAndResize=l.asm.CropAndResize).apply(null,arguments)},l._Cumprod=function(){return(l._Cumprod=l.asm.Cumprod).apply(null,arguments)},l._Cumsum=function(){return(l._Cumsum=l.asm.Cumsum).apply(null,arguments)},l._DenseBincount=function(){return(l._DenseBincount=l.asm.DenseBincount).apply(null,arguments)},l._DepthToSpace=function(){return(l._DepthToSpace=l.asm.DepthToSpace).apply(null,arguments)},l._DepthwiseConv2dNative=function(){return(l._DepthwiseConv2dNative=l.asm.DepthwiseConv2dNative).apply(null,arguments)},l._Diag=function(){return(l._Diag=l.asm.Diag).apply(null,arguments)},l._Dilation2D=function(){return(l._Dilation2D=l.asm.Dilation2D).apply(null,arguments)},l._Dilation2DBackpropFilter=function(){return(l._Dilation2DBackpropFilter=l.asm.Dilation2DBackpropFilter).apply(null,arguments)},l._Dilation2DBackpropInput=function(){return(l._Dilation2DBackpropInput=l.asm.Dilation2DBackpropInput).apply(null,arguments)},l._Elu=function(){return(l._Elu=l.asm.Elu).apply(null,arguments)},l._EluGrad=function(){return(l._EluGrad=l.asm.EluGrad).apply(null,arguments)},l._Equal=function(){return(l._Equal=l.asm.Equal).apply(null,arguments)},l._Erf=function(){return(l._Erf=l.asm.Erf).apply(null,arguments)},l._Exp=function(){return(l._Exp=l.asm.Exp).apply(null,arguments)},l._Expm1=function(){return(l._Expm1=l.asm.Expm1).apply(null,arguments)},l._FlipLeftRight=function(){return(l._FlipLeftRight=l.asm.FlipLeftRight).apply(null,arguments)},l._Floor=function(){return(l._Floor=l.asm.Floor).apply(null,arguments)},l._FloorDiv=function(){return(l._FloorDiv=l.asm.FloorDiv).apply(null,arguments)},l._FusedBatchNorm=function(){return(l._FusedBatchNorm=l.asm.FusedBatchNorm).apply(null,arguments)},l._FusedConv2D=function(){return(l._FusedConv2D=l.asm.FusedConv2D).apply(null,arguments)},l._FusedDepthwiseConv2D=function(){return(l._FusedDepthwiseConv2D=l.asm.FusedDepthwiseConv2D).apply(null,arguments)},l._Gather=function(){return(l._Gather=l.asm.Gather).apply(null,arguments)},l._GatherNd=function(){return(l._GatherNd=l.asm.GatherNd).apply(null,arguments)},l._Greater=function(){return(l._Greater=l.asm.Greater).apply(null,arguments)},l._GreaterEqual=function(){return(l._GreaterEqual=l.asm.GreaterEqual).apply(null,arguments)},l._IsFinite=function(){return(l._IsFinite=l.asm.IsFinite).apply(null,arguments)},l._IsInf=function(){return(l._IsInf=l.asm.IsInf).apply(null,arguments)},l._IsNan=function(){return(l._IsNan=l.asm.IsNan).apply(null,arguments)},l._LRN=function(){return(l._LRN=l.asm.LRN).apply(null,arguments)},l._LRNGrad=function(){return(l._LRNGrad=l.asm.LRNGrad).apply(null,arguments)},l._LeakyRelu=function(){return(l._LeakyRelu=l.asm.LeakyRelu).apply(null,arguments)},l._Less=function(){return(l._Less=l.asm.Less).apply(null,arguments)},l._LessEqual=function(){return(l._LessEqual=l.asm.LessEqual).apply(null,arguments)},l._LinSpace=function(){return(l._LinSpace=l.asm.LinSpace).apply(null,arguments)},l._Log=function(){return(l._Log=l.asm.Log).apply(null,arguments)},l._Log1p=function(){return(l._Log1p=l.asm.Log1p).apply(null,arguments)},l._LogicalAnd=function(){return(l._LogicalAnd=l.asm.LogicalAnd).apply(null,arguments)},l._LogicalNot=function(){return(l._LogicalNot=l.asm.LogicalNot).apply(null,arguments)},l._LogicalOr=function(){return(l._LogicalOr=l.asm.LogicalOr).apply(null,arguments)},l._LogicalXor=function(){return(l._LogicalXor=l.asm.LogicalXor).apply(null,arguments)},l._Max=function(){return(l._Max=l.asm.Max).apply(null,arguments)},l._MaxPool=function(){return(l._MaxPool=l.asm.MaxPool).apply(null,arguments)},l._MaxPool3D=function(){return(l._MaxPool3D=l.asm.MaxPool3D).apply(null,arguments)},l._MaxPool3DGrad=function(){return(l._MaxPool3DGrad=l.asm.MaxPool3DGrad).apply(null,arguments)},l._MaxPoolGrad=function(){return(l._MaxPoolGrad=l.asm.MaxPoolGrad).apply(null,arguments)},l._MaxPoolWithArgmax=function(){return(l._MaxPoolWithArgmax=l.asm.MaxPoolWithArgmax).apply(null,arguments)},l._Maximum=function(){return(l._Maximum=l.asm.Maximum).apply(null,arguments)},l._Mean=function(){return(l._Mean=l.asm.Mean).apply(null,arguments)},l._Min=function(){return(l._Min=l.asm.Min).apply(null,arguments)},l._Minimum=function(){return(l._Minimum=l.asm.Minimum).apply(null,arguments)},l._MirrorPad=function(){return(l._MirrorPad=l.asm.MirrorPad).apply(null,arguments)},l._Mod=function(){return(l._Mod=l.asm.Mod).apply(null,arguments)},l._Multinomial=function(){return(l._Multinomial=l.asm.Multinomial).apply(null,arguments)},l._Multiply=function(){return(l._Multiply=l.asm.Multiply).apply(null,arguments)},l._Neg=function(){return(l._Neg=l.asm.Neg).apply(null,arguments)},l._NonMaxSuppressionV3=function(){return(l._NonMaxSuppressionV3=l.asm.NonMaxSuppressionV3).apply(null,arguments)},l._NonMaxSuppressionV4=function(){return(l._NonMaxSuppressionV4=l.asm.NonMaxSuppressionV4).apply(null,arguments)},l._NonMaxSuppressionV5=function(){return(l._NonMaxSuppressionV5=l.asm.NonMaxSuppressionV5).apply(null,arguments)},l._NotEqual=function(){return(l._NotEqual=l.asm.NotEqual).apply(null,arguments)},l._OneHot=function(){return(l._OneHot=l.asm.OneHot).apply(null,arguments)},l._PadV2=function(){return(l._PadV2=l.asm.PadV2).apply(null,arguments)},l._Pow=function(){return(l._Pow=l.asm.Pow).apply(null,arguments)},l._Prelu=function(){return(l._Prelu=l.asm.Prelu).apply(null,arguments)},l._Prod=function(){return(l._Prod=l.asm.Prod).apply(null,arguments)},l._RealDiv=function(){return(l._RealDiv=l.asm.RealDiv).apply(null,arguments)},l._Reciprocal=function(){return(l._Reciprocal=l.asm.Reciprocal).apply(null,arguments)},l._Relu=function(){return(l._Relu=l.asm.Relu).apply(null,arguments)},l._Relu6=function(){return(l._Relu6=l.asm.Relu6).apply(null,arguments)},l._ResizeBilinear=function(){return(l._ResizeBilinear=l.asm.ResizeBilinear).apply(null,arguments)},l._ResizeBilinearGrad=function(){return(l._ResizeBilinearGrad=l.asm.ResizeBilinearGrad).apply(null,arguments)},l._ResizeNearestNeighbor=function(){return(l._ResizeNearestNeighbor=l.asm.ResizeNearestNeighbor).apply(null,arguments)},l._ResizeNearestNeighborGrad=function(){return(l._ResizeNearestNeighborGrad=l.asm.ResizeNearestNeighborGrad).apply(null,arguments)},l._Reverse=function(){return(l._Reverse=l.asm.Reverse).apply(null,arguments)},l._RotateWithOffset=function(){return(l._RotateWithOffset=l.asm.RotateWithOffset).apply(null,arguments)},l._Round=function(){return(l._Round=l.asm.Round).apply(null,arguments)},l._Rsqrt=function(){return(l._Rsqrt=l.asm.Rsqrt).apply(null,arguments)},l._ScatterNd=function(){return(l._ScatterNd=l.asm.ScatterNd).apply(null,arguments)},l._SearchSorted=function(){return(l._SearchSorted=l.asm.SearchSorted).apply(null,arguments)},l._SelectV2=function(){return(l._SelectV2=l.asm.SelectV2).apply(null,arguments)},l._Selu=function(){return(l._Selu=l.asm.Selu).apply(null,arguments)},l._Sigmoid=function(){return(l._Sigmoid=l.asm.Sigmoid).apply(null,arguments)},l._Sign=function(){return(l._Sign=l.asm.Sign).apply(null,arguments)},l._Sin=function(){return(l._Sin=l.asm.Sin).apply(null,arguments)},l._Sinh=function(){return(l._Sinh=l.asm.Sinh).apply(null,arguments)},l._Softmax=function(){return(l._Softmax=l.asm.Softmax).apply(null,arguments)},l._Softplus=function(){return(l._Softplus=l.asm.Softplus).apply(null,arguments)},l._SparseFillEmptyRows=function(){return(l._SparseFillEmptyRows=l.asm.SparseFillEmptyRows).apply(null,arguments)},l._SparseReshape=function(){return(l._SparseReshape=l.asm.SparseReshape).apply(null,arguments)},l._SparseSegmentReduction=function(){return(l._SparseSegmentReduction=l.asm.SparseSegmentReduction).apply(null,arguments)},l._SparseToDense=function(){return(l._SparseToDense=l.asm.SparseToDense).apply(null,arguments)},l._Sqrt=function(){return(l._Sqrt=l.asm.Sqrt).apply(null,arguments)},l._Square=function(){return(l._Square=l.asm.Square).apply(null,arguments)},l._SquaredDifference=function(){return(l._SquaredDifference=l.asm.SquaredDifference).apply(null,arguments)},l._Step=function(){return(l._Step=l.asm.Step).apply(null,arguments)},l._StridedSlice=function(){return(l._StridedSlice=l.asm.StridedSlice).apply(null,arguments)},l._Sub=function(){return(l._Sub=l.asm.Sub).apply(null,arguments)},l._Sum=function(){return(l._Sum=l.asm.Sum).apply(null,arguments)},l._Tan=function(){return(l._Tan=l.asm.Tan).apply(null,arguments)},l._Tanh=function(){return(l._Tanh=l.asm.Tanh).apply(null,arguments)},l._TensorScatterUpdate=function(){return(l._TensorScatterUpdate=l.asm.TensorScatterUpdate).apply(null,arguments)},l._Tile=function(){return(l._Tile=l.asm.Tile).apply(null,arguments)},l._TopK=function(){return(l._TopK=l.asm.TopK).apply(null,arguments)},l._Transform=function(){return(l._Transform=l.asm.Transform).apply(null,arguments)},l._Transpose=function(){return(l._Transpose=l.asm.Transpose).apply(null,arguments)},l.__FusedMatMul=function(){return(l.__FusedMatMul=l.asm._FusedMatMul).apply(null,arguments)},l._malloc=function(){return(l._malloc=l.asm.malloc).apply(null,arguments)},l._free=function(){return(l._free=l.asm.free).apply(null,arguments)},l.__emscripten_tls_init=function(){return(l.__emscripten_tls_init=l.asm._emscripten_tls_init).apply(null,arguments)};var rf=l._pthread_self=function(){return(rf=l._pthread_self=l.asm.pthread_self).apply(null,arguments)};l.___errno_location=function(){return(l.___errno_location=l.asm.__errno_location).apply(null,arguments)};var Bv=l.__emscripten_thread_init=function(){return(Bv=l.__emscripten_thread_init=l.asm._emscripten_thread_init).apply(null,arguments)};l.__emscripten_thread_crashed=function(){return(l.__emscripten_thread_crashed=l.asm._emscripten_thread_crashed).apply(null,arguments)},l._emscripten_main_thread_process_queued_calls=function(){return(l._emscripten_main_thread_process_queued_calls=l.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},l._emscripten_main_browser_thread_id=function(){return(l._emscripten_main_browser_thread_id=l.asm.emscripten_main_browser_thread_id).apply(null,arguments)};var zv=l._emscripten_run_in_main_runtime_thread_js=function(){return(zv=l._emscripten_run_in_main_runtime_thread_js=l.asm.emscripten_run_in_main_runtime_thread_js).apply(null,arguments)};l._emscripten_dispatch_to_thread_=function(){return(l._emscripten_dispatch_to_thread_=l.asm.emscripten_dispatch_to_thread_).apply(null,arguments)};var Vv=l.__emscripten_proxy_execute_task_queue=function(){return(Vv=l.__emscripten_proxy_execute_task_queue=l.asm._emscripten_proxy_execute_task_queue).apply(null,arguments)},qy=l.__emscripten_thread_free_data=function(){return(qy=l.__emscripten_thread_free_data=l.asm._emscripten_thread_free_data).apply(null,arguments)},Wv=l.__emscripten_thread_exit=function(){return(Wv=l.__emscripten_thread_exit=l.asm._emscripten_thread_exit).apply(null,arguments)},Uv=l._emscripten_stack_set_limits=function(){return(Uv=l._emscripten_stack_set_limits=l.asm.emscripten_stack_set_limits).apply(null,arguments)},Ky=l.stackSave=function(){return(Ky=l.stackSave=l.asm.stackSave).apply(null,arguments)},of=l.stackRestore=function(){return(of=l.stackRestore=l.asm.stackRestore).apply(null,arguments)},af=l.stackAlloc=function(){return(af=l.stackAlloc=l.asm.stackAlloc).apply(null,arguments)};l.dynCall_iijjiiii=function(){return(l.dynCall_iijjiiii=l.asm.dynCall_iijjiiii).apply(null,arguments)},l.dynCall_jiji=function(){return(l.dynCall_jiji=l.asm.dynCall_jiji).apply(null,arguments)},l.keepRuntimeAlive=Ee,l.wasmMemory=P,l.cwrap=DF,l.ExitStatus=xr,l.PThread=ft;var uf;cn=function O(){uf||Gv(),uf||(cn=O)};function Gv(O){if(ln>0)return;if(x){d(l),mn(),startWorker(l);return}if(Qn(),ln>0)return;function Y(){uf||(uf=!0,l.calledRun=!0,!Z&&(mn(),d(l),l.onRuntimeInitialized&&l.onRuntimeInitialized(),Ns()))}l.setStatus?(l.setStatus("Running..."),setTimeout(function(){setTimeout(function(){l.setStatus("")},1),Y()},1)):Y()}if(l.preInit)for(typeof l.preInit=="function"&&(l.preInit=[l.preInit]);l.preInit.length>0;)l.preInit.pop()();Gv();var lf;p&&(lf={uncaughtException:process.listeners("uncaughtException").filter(function(O){return!p.uncaughtException.indexOf(O)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(O){return!p.unhandledRejection.indexOf(O)>-1})});var cf;if(typeof WasmBackendModule<"u")cf=WasmBackendModule;else if(typeof r<"u")cf=r;else throw new Error("Could not find wasm module in post.js");if(lf){var FF=cf._dispose;cf._dispose=function(){FF(),lf.uncaughtException.forEach(function(O){process.removeListener("uncaughtException",O)}),lf.unhandledRejection.forEach(function(O){process.removeListener("unhandledRejection",O)})}}return r.ready}})();n.exports=e}(kb)),kb.exports}var GD=oft();const HD=bg(GD),aft=aw({__proto__:null,default:HD},[GD]);var $b={},w$;function ift(){return w$||(w$=1,$b.wasmWorkerContents=`"use strict";var Module={};var ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads");var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",data=>onmessage({data:data}));var fs=require("fs");Object.assign(global,{self:global,require:require,Module:Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:function(f){(0,eval)(fs.readFileSync(f,"utf8")+"//# sourceURL="+f)},postMessage:function(msg){parentPort.postMessage(msg)},performance:global.performance||{now:function(){return Date.now()}}})}var initializedJS=false;var pendingNotifiedProxyingQueues=[];function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,text+"
");return}console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;self.alert=threadAlert;Module["instantiateWasm"]=(info,receiveInstance)=>{var instance=new WebAssembly.Instance(Module["wasmModule"],info);receiveInstance(instance);Module["wasmModule"]=null;return instance.exports};self.onunhandledrejection=e=>{throw e.reason??e};self.startWorker=instance=>{Module=instance;postMessage({"cmd":"loaded"})};self.onmessage=e=>{try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;for(const handler of e.data.handlers){Module[handler]=function(){postMessage({cmd:"callHandler",handler:handler,args:[...arguments]})}}Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob=="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module)}else if(e.data.cmd==="run"){Module["__emscripten_thread_init"](e.data.pthread_ptr,0,0,1);Module["establishStackSpace"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].threadInitTLS();if(!initializedJS){pendingNotifiedProxyingQueues.forEach(queue=>{Module["executeNotifiedProxyingQueue"](queue)});pendingNotifiedProxyingQueues=[];initializedJS=true}try{Module["invokeEntryPoint"](e.data.start_routine,e.data.arg)}catch(ex){if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["keepRuntimeAlive"]()){}else{Module["__emscripten_thread_exit"](ex.status)}}else{throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["__emscripten_thread_exit"](-1)}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processProxyingQueue"){if(initializedJS){Module["executeNotifiedProxyingQueue"](e.data.queue)}else{pendingNotifiedProxyingQueues.push(e.data.queue)}}else if(e.data.cmd){err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){if(Module["__emscripten_thread_crashed"]){Module["__emscripten_thread_crashed"]()}throw ex}};`),$b}var uft=ift(),Sb={exports:{}},v$;function lft(){return v$||(v$=1,function(n,t){var e=(()=>{var s=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(s=s||__filename),function(r){r=r||{};var o=typeof r<"u"?r:{},a,i;o.ready=new Promise(function(nt,dt){a=nt,i=dt});var u;typeof process<"u"&&process.listeners&&(u={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var c=Object.assign({},o),l=typeof window=="object",d=typeof importScripts=="function",h=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",p="";function f(nt){return o.locateFile?o.locateFile(nt,p):p+nt}var m,g,y;if(h){var b=la,x=la;d?p=x.dirname(p)+"/":p=__dirname+"/",m=(nt,dt)=>(nt=ee(nt)?new URL(nt):x.normalize(nt),b.readFileSync(nt,dt?void 0:"utf8")),y=nt=>{var dt=m(nt,!0);return dt.buffer||(dt=new Uint8Array(dt)),dt},g=(nt,dt,_t)=>{nt=ee(nt)?new URL(nt):x.normalize(nt),b.readFile(nt,function(ft,ce){ft?_t(ft):dt(ce.buffer)})},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),process.argv.slice(2),process.on("uncaughtException",function(nt){if(!(nt instanceof Ee))throw nt}),process.on("unhandledRejection",function(nt){throw nt}),o.inspect=function(){return"[Emscripten Module object]"}}else(l||d)&&(d?p=self.location.href:typeof document<"u"&&document.currentScript&&(p=document.currentScript.src),s&&(p=s),p.indexOf("blob:")!==0?p=p.substr(0,p.replace(/[?#].*/,"").lastIndexOf("/")+1):p="",m=nt=>{var dt=new XMLHttpRequest;return dt.open("GET",nt,!1),dt.send(null),dt.responseText},d&&(y=nt=>{var dt=new XMLHttpRequest;return dt.open("GET",nt,!1),dt.responseType="arraybuffer",dt.send(null),new Uint8Array(dt.response)}),g=(nt,dt,_t)=>{var ft=new XMLHttpRequest;ft.open("GET",nt,!0),ft.responseType="arraybuffer",ft.onload=()=>{if(ft.status==200||ft.status==0&&ft.response){dt(ft.response);return}_t()},ft.onerror=_t,ft.send(null)});var w=o.print||console.log.bind(console),v=o.printErr||console.warn.bind(console);Object.assign(o,c),c=null,o.arguments&&o.arguments,o.thisProgram&&o.thisProgram,o.quit&&o.quit;var k;o.wasmBinary&&(k=o.wasmBinary),o.noExitRuntime,typeof WebAssembly!="object"&&Jt("no native wasm support detected");var S,_=!1,C=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0;function N(nt,dt,_t){dt>>>=0;for(var ft=dt+_t,ce=dt;nt[ce]&&!(ce>=ft);)++ce;if(ce-dt>16&&nt.buffer&&C)return C.decode(nt.subarray(dt,ce));for(var Ie="";dt<ce;){var Pt=nt[dt++];if(!(Pt&128)){Ie+=String.fromCharCode(Pt);continue}var At=nt[dt++]&63;if((Pt&224)==192){Ie+=String.fromCharCode((Pt&31)<<6|At);continue}var de=nt[dt++]&63;if((Pt&240)==224?Pt=(Pt&15)<<12|At<<6|de:Pt=(Pt&7)<<18|At<<12|de<<6|nt[dt++]&63,Pt<65536)Ie+=String.fromCharCode(Pt);else{var gn=Pt-65536;Ie+=String.fromCharCode(55296|gn>>10,56320|gn&1023)}}return Ie}function $(nt,dt){return nt>>>=0,nt?N(z,nt,dt):""}function A(nt,dt,_t,ft){if(_t>>>=0,!(ft>0))return 0;for(var ce=_t,Ie=_t+ft-1,Pt=0;Pt<nt.length;++Pt){var At=nt.charCodeAt(Pt);if(At>=55296&&At<=57343){var de=nt.charCodeAt(++Pt);At=65536+((At&1023)<<10)|de&1023}if(At<=127){if(_t>=Ie)break;dt[_t++>>>0]=At}else if(At<=2047){if(_t+1>=Ie)break;dt[_t++>>>0]=192|At>>6,dt[_t++>>>0]=128|At&63}else if(At<=65535){if(_t+2>=Ie)break;dt[_t++>>>0]=224|At>>12,dt[_t++>>>0]=128|At>>6&63,dt[_t++>>>0]=128|At&63}else{if(_t+3>=Ie)break;dt[_t++>>>0]=240|At>>18,dt[_t++>>>0]=128|At>>12&63,dt[_t++>>>0]=128|At>>6&63,dt[_t++>>>0]=128|At&63}}return dt[_t>>>0]=0,_t-ce}function D(nt,dt,_t){return A(nt,z,dt,_t)}var R,F,z,H;function P(nt){R=nt,o.HEAP8=F=new Int8Array(nt),o.HEAP16=new Int16Array(nt),o.HEAP32=new Int32Array(nt),o.HEAPU8=z=new Uint8Array(nt),o.HEAPU16=new Uint16Array(nt),o.HEAPU32=H=new Uint32Array(nt),o.HEAPF32=new Float32Array(nt),o.HEAPF64=new Float64Array(nt)}o.INITIAL_MEMORY;var U=[],Z=[],tt=[];function at(){if(o.preRun)for(typeof o.preRun=="function"&&(o.preRun=[o.preRun]);o.preRun.length;)ct(o.preRun.shift());Qn(U)}function ot(){Qn(Z)}function lt(){if(o.postRun)for(typeof o.postRun=="function"&&(o.postRun=[o.postRun]);o.postRun.length;)Nt(o.postRun.shift());Qn(tt)}function ct(nt){U.unshift(nt)}function bt(nt){Z.unshift(nt)}function Nt(nt){tt.unshift(nt)}var xt=0,Ct=null;function zt(nt){xt++,o.monitorRunDependencies&&o.monitorRunDependencies(xt)}function Wt(nt){if(xt--,o.monitorRunDependencies&&o.monitorRunDependencies(xt),xt==0&&Ct){var dt=Ct;Ct=null,dt()}}function Jt(nt){o.onAbort&&o.onAbort(nt),nt="Aborted("+nt+")",v(nt),_=!0,nt+=". Build with -sASSERTIONS for more info.";var dt=new WebAssembly.RuntimeError(nt);throw i(dt),dt}var ue="data:application/octet-stream;base64,";function se(nt){return nt.startsWith(ue)}function ee(nt){return nt.startsWith("file://")}var Vt;Vt="tfjs-backend-wasm.wasm",se(Vt)||(Vt=f(Vt));function ve(nt){try{if(nt==Vt&&k)return new Uint8Array(k);if(y)return y(nt);throw"both async and sync fetching of the wasm failed"}catch(dt){Jt(dt)}}function me(){if(!k&&(l||d)){if(typeof fetch=="function"&&!ee(Vt))return fetch(Vt,{credentials:"same-origin"}).then(function(nt){if(!nt.ok)throw"failed to load wasm binary file at '"+Vt+"'";return nt.arrayBuffer()}).catch(function(){return ve(Vt)});if(g)return new Promise(function(nt,dt){g(Vt,function(_t){nt(new Uint8Array(_t))},dt)})}return Promise.resolve().then(function(){return ve(Vt)})}function zn(){var nt={env:ei,wasi_snapshot_preview1:ei};function dt(Pt,At){var de=Pt.exports;o.asm=de,S=o.asm.memory,P(S.buffer),o.asm.__indirect_function_table,bt(o.asm.__wasm_call_ctors),Wt()}zt();function _t(Pt){dt(Pt.instance)}function ft(Pt){return me().then(function(At){return WebAssembly.instantiate(At,nt)}).then(function(At){return At}).then(Pt,function(At){v("failed to asynchronously prepare wasm: "+At),Jt(At)})}function ce(){return!k&&typeof WebAssembly.instantiateStreaming=="function"&&!se(Vt)&&!ee(Vt)&&!h&&typeof fetch=="function"?fetch(Vt,{credentials:"same-origin"}).then(function(Pt){var At=WebAssembly.instantiateStreaming(Pt,nt);return At.then(_t,function(de){return v("wasm streaming compile failed: "+de),v("falling back to ArrayBuffer instantiation"),ft(_t)})}):ft(_t)}if(o.instantiateWasm)try{var Ie=o.instantiateWasm(nt,dt);return Ie}catch(Pt){v("Module.instantiateWasm callback failed with error: "+Pt),i(Pt)}return ce().catch(i),{}}function Ee(nt){this.name="ExitStatus",this.message="Program terminated with exit("+nt+")",this.status=nt}function Qn(nt){for(;nt.length>0;)nt.shift()(o)}function mn(){Jt("")}function Ns(){return 4294901760}function Vn(){return Ns()}function ts(nt,dt,_t){z.copyWithin(nt>>>0,dt>>>0,dt+_t>>>0)}function ds(nt){try{return S.grow(nt-R.byteLength+65535>>>16),P(S.buffer),1}catch{}}function ln(nt){var dt=z.length;nt=nt>>>0;var _t=Ns();if(nt>_t)return!1;let ft=(de,gn)=>de+(gn-de%gn)%gn;for(var ce=1;ce<=4;ce*=2){var Ie=dt*(1+.2/ce);Ie=Math.min(Ie,nt+100663296);var Pt=Math.min(_t,ft(Math.max(nt,Ie),65536)),At=ds(Pt);if(At)return!0}return!1}function cn(nt){return 52}function tr(nt,dt,_t,ft,ce){return 70}var $o=[null,[],[]];function Bs(nt,dt){var _t=$o[nt];dt===0||dt===10?((nt===1?w:v)(N(_t,0)),_t.length=0):_t.push(dt)}function ti(nt,dt,_t,ft){for(var ce=0,Ie=0;Ie<_t;Ie++){var Pt=H[dt>>>2],At=H[dt+4>>>2];dt+=8;for(var de=0;de<At;de++)Bs(nt,z[Pt+de>>>0]);ce+=At}return H[ft>>>2]=ce,0}function er(nt){var dt=o["_"+nt];return dt}function jr(nt,dt){F.set(nt,dt>>>0)}function dn(nt,dt,_t,ft,ce){var Ie={string:hn=>{var Kr=0;if(hn!=null&&hn!==0){var sf=(hn.length<<2)+1;Kr=xr(sf),D(hn,Kr,sf)}return Kr},array:hn=>{var Kr=xr(hn.length);return jr(hn,Kr),Kr}};function Pt(hn){return dt==="string"?$(hn):dt==="boolean"?!!hn:hn}var At=er(nt),de=[],gn=0;if(ft)for(var Cs=0;Cs<ft.length;Cs++){var qr=Ie[_t[Cs]];qr?(gn===0&&(gn=pu()),de[Cs]=qr(ft[Cs])):de[Cs]=ft[Cs]}var No=At.apply(null,de);function ni(hn){return gn!==0&&fu(gn),Pt(hn)}return No=ni(No),No}function hu(nt,dt,_t,ft){_t=_t||[];var ce=_t.every(Pt=>Pt==="number"||Pt==="boolean"),Ie=dt!=="string";return Ie&&ce&&!ft?er(nt):function(){return dn(nt,dt,_t,arguments)}}var ei={abort:mn,emscripten_get_heap_max:Vn,emscripten_memcpy_big:ts,emscripten_resize_heap:ln,fd_close:cn,fd_seek:tr,fd_write:ti};zn(),o.___wasm_call_ctors=function(){return(o.___wasm_call_ctors=o.asm.__wasm_call_ctors).apply(null,arguments)},o._init=function(){return(o._init=o.asm.init).apply(null,arguments)},o._init_with_threads_count=function(){return(o._init_with_threads_count=o.asm.init_with_threads_count).apply(null,arguments)},o._get_threads_count=function(){return(o._get_threads_count=o.asm.get_threads_count).apply(null,arguments)},o._register_tensor=function(){return(o._register_tensor=o.asm.register_tensor).apply(null,arguments)},o._dispose_data=function(){return(o._dispose_data=o.asm.dispose_data).apply(null,arguments)},o._dispose=function(){return(o._dispose=o.asm.dispose).apply(null,arguments)},o._Abs=function(){return(o._Abs=o.asm.Abs).apply(null,arguments)},o._Acos=function(){return(o._Acos=o.asm.Acos).apply(null,arguments)},o._Acosh=function(){return(o._Acosh=o.asm.Acosh).apply(null,arguments)},o._Add=function(){return(o._Add=o.asm.Add).apply(null,arguments)},o._AddN=function(){return(o._AddN=o.asm.AddN).apply(null,arguments)},o._All=function(){return(o._All=o.asm.All).apply(null,arguments)},o._Any=function(){return(o._Any=o.asm.Any).apply(null,arguments)},o._ArgMax=function(){return(o._ArgMax=o.asm.ArgMax).apply(null,arguments)},o._ArgMin=function(){return(o._ArgMin=o.asm.ArgMin).apply(null,arguments)},o._Asin=function(){return(o._Asin=o.asm.Asin).apply(null,arguments)},o._Asinh=function(){return(o._Asinh=o.asm.Asinh).apply(null,arguments)},o._Atan=function(){return(o._Atan=o.asm.Atan).apply(null,arguments)},o._Atan2=function(){return(o._Atan2=o.asm.Atan2).apply(null,arguments)},o._Atanh=function(){return(o._Atanh=o.asm.Atanh).apply(null,arguments)},o._AvgPool=function(){return(o._AvgPool=o.asm.AvgPool).apply(null,arguments)},o._AvgPool3D=function(){return(o._AvgPool3D=o.asm.AvgPool3D).apply(null,arguments)},o._AvgPool3DGrad=function(){return(o._AvgPool3DGrad=o.asm.AvgPool3DGrad).apply(null,arguments)},o._AvgPoolGrad=function(){return(o._AvgPoolGrad=o.asm.AvgPoolGrad).apply(null,arguments)},o._BatchMatMul=function(){return(o._BatchMatMul=o.asm.BatchMatMul).apply(null,arguments)},o._Bincount=function(){return(o._Bincount=o.asm.Bincount).apply(null,arguments)},o._BitwiseAnd=function(){return(o._BitwiseAnd=o.asm.BitwiseAnd).apply(null,arguments)},o._Ceil=function(){return(o._Ceil=o.asm.Ceil).apply(null,arguments)},o._ClipByValue=function(){return(o._ClipByValue=o.asm.ClipByValue).apply(null,arguments)},o._Conv2D=function(){return(o._Conv2D=o.asm.Conv2D).apply(null,arguments)},o._Conv2DBackpropInput=function(){return(o._Conv2DBackpropInput=o.asm.Conv2DBackpropInput).apply(null,arguments)},o._Conv3D=function(){return(o._Conv3D=o.asm.Conv3D).apply(null,arguments)},o._Conv3DBackpropFilterV2=function(){return(o._Conv3DBackpropFilterV2=o.asm.Conv3DBackpropFilterV2).apply(null,arguments)},o._Conv3DBackpropInputV2=function(){return(o._Conv3DBackpropInputV2=o.asm.Conv3DBackpropInputV2).apply(null,arguments)},o._Cos=function(){return(o._Cos=o.asm.Cos).apply(null,arguments)},o._Cosh=function(){return(o._Cosh=o.asm.Cosh).apply(null,arguments)},o._CropAndResize=function(){return(o._CropAndResize=o.asm.CropAndResize).apply(null,arguments)},o._Cumprod=function(){return(o._Cumprod=o.asm.Cumprod).apply(null,arguments)},o._Cumsum=function(){return(o._Cumsum=o.asm.Cumsum).apply(null,arguments)},o._DenseBincount=function(){return(o._DenseBincount=o.asm.DenseBincount).apply(null,arguments)},o._DepthToSpace=function(){return(o._DepthToSpace=o.asm.DepthToSpace).apply(null,arguments)},o._DepthwiseConv2dNative=function(){return(o._DepthwiseConv2dNative=o.asm.DepthwiseConv2dNative).apply(null,arguments)},o._Diag=function(){return(o._Diag=o.asm.Diag).apply(null,arguments)},o._Dilation2D=function(){return(o._Dilation2D=o.asm.Dilation2D).apply(null,arguments)},o._Dilation2DBackpropFilter=function(){return(o._Dilation2DBackpropFilter=o.asm.Dilation2DBackpropFilter).apply(null,arguments)},o._Dilation2DBackpropInput=function(){return(o._Dilation2DBackpropInput=o.asm.Dilation2DBackpropInput).apply(null,arguments)},o._Elu=function(){return(o._Elu=o.asm.Elu).apply(null,arguments)},o._EluGrad=function(){return(o._EluGrad=o.asm.EluGrad).apply(null,arguments)},o._Equal=function(){return(o._Equal=o.asm.Equal).apply(null,arguments)},o._Erf=function(){return(o._Erf=o.asm.Erf).apply(null,arguments)},o._Exp=function(){return(o._Exp=o.asm.Exp).apply(null,arguments)},o._Expm1=function(){return(o._Expm1=o.asm.Expm1).apply(null,arguments)},o._FlipLeftRight=function(){return(o._FlipLeftRight=o.asm.FlipLeftRight).apply(null,arguments)},o._Floor=function(){return(o._Floor=o.asm.Floor).apply(null,arguments)},o._FloorDiv=function(){return(o._FloorDiv=o.asm.FloorDiv).apply(null,arguments)},o._FusedBatchNorm=function(){return(o._FusedBatchNorm=o.asm.FusedBatchNorm).apply(null,arguments)},o._FusedConv2D=function(){return(o._FusedConv2D=o.asm.FusedConv2D).apply(null,arguments)},o._FusedDepthwiseConv2D=function(){return(o._FusedDepthwiseConv2D=o.asm.FusedDepthwiseConv2D).apply(null,arguments)},o._Gather=function(){return(o._Gather=o.asm.Gather).apply(null,arguments)},o._GatherNd=function(){return(o._GatherNd=o.asm.GatherNd).apply(null,arguments)},o._Greater=function(){return(o._Greater=o.asm.Greater).apply(null,arguments)},o._GreaterEqual=function(){return(o._GreaterEqual=o.asm.GreaterEqual).apply(null,arguments)},o._IsFinite=function(){return(o._IsFinite=o.asm.IsFinite).apply(null,arguments)},o._IsInf=function(){return(o._IsInf=o.asm.IsInf).apply(null,arguments)},o._IsNan=function(){return(o._IsNan=o.asm.IsNan).apply(null,arguments)},o._LRN=function(){return(o._LRN=o.asm.LRN).apply(null,arguments)},o._LRNGrad=function(){return(o._LRNGrad=o.asm.LRNGrad).apply(null,arguments)},o._LeakyRelu=function(){return(o._LeakyRelu=o.asm.LeakyRelu).apply(null,arguments)},o._Less=function(){return(o._Less=o.asm.Less).apply(null,arguments)},o._LessEqual=function(){return(o._LessEqual=o.asm.LessEqual).apply(null,arguments)},o._LinSpace=function(){return(o._LinSpace=o.asm.LinSpace).apply(null,arguments)},o._Log=function(){return(o._Log=o.asm.Log).apply(null,arguments)},o._Log1p=function(){return(o._Log1p=o.asm.Log1p).apply(null,arguments)},o._LogicalAnd=function(){return(o._LogicalAnd=o.asm.LogicalAnd).apply(null,arguments)},o._LogicalNot=function(){return(o._LogicalNot=o.asm.LogicalNot).apply(null,arguments)},o._LogicalOr=function(){return(o._LogicalOr=o.asm.LogicalOr).apply(null,arguments)},o._LogicalXor=function(){return(o._LogicalXor=o.asm.LogicalXor).apply(null,arguments)},o._Max=function(){return(o._Max=o.asm.Max).apply(null,arguments)},o._MaxPool=function(){return(o._MaxPool=o.asm.MaxPool).apply(null,arguments)},o._MaxPool3D=function(){return(o._MaxPool3D=o.asm.MaxPool3D).apply(null,arguments)},o._MaxPool3DGrad=function(){return(o._MaxPool3DGrad=o.asm.MaxPool3DGrad).apply(null,arguments)},o._MaxPoolGrad=function(){return(o._MaxPoolGrad=o.asm.MaxPoolGrad).apply(null,arguments)},o._MaxPoolWithArgmax=function(){return(o._MaxPoolWithArgmax=o.asm.MaxPoolWithArgmax).apply(null,arguments)},o._Maximum=function(){return(o._Maximum=o.asm.Maximum).apply(null,arguments)},o._Mean=function(){return(o._Mean=o.asm.Mean).apply(null,arguments)},o._Min=function(){return(o._Min=o.asm.Min).apply(null,arguments)},o._Minimum=function(){return(o._Minimum=o.asm.Minimum).apply(null,arguments)},o._MirrorPad=function(){return(o._MirrorPad=o.asm.MirrorPad).apply(null,arguments)},o._Mod=function(){return(o._Mod=o.asm.Mod).apply(null,arguments)},o._Multinomial=function(){return(o._Multinomial=o.asm.Multinomial).apply(null,arguments)},o._Multiply=function(){return(o._Multiply=o.asm.Multiply).apply(null,arguments)},o._Neg=function(){return(o._Neg=o.asm.Neg).apply(null,arguments)},o._NonMaxSuppressionV3=function(){return(o._NonMaxSuppressionV3=o.asm.NonMaxSuppressionV3).apply(null,arguments)},o._NonMaxSuppressionV4=function(){return(o._NonMaxSuppressionV4=o.asm.NonMaxSuppressionV4).apply(null,arguments)},o._NonMaxSuppressionV5=function(){return(o._NonMaxSuppressionV5=o.asm.NonMaxSuppressionV5).apply(null,arguments)},o._NotEqual=function(){return(o._NotEqual=o.asm.NotEqual).apply(null,arguments)},o._OneHot=function(){return(o._OneHot=o.asm.OneHot).apply(null,arguments)},o._PadV2=function(){return(o._PadV2=o.asm.PadV2).apply(null,arguments)},o._Pow=function(){return(o._Pow=o.asm.Pow).apply(null,arguments)},o._Prelu=function(){return(o._Prelu=o.asm.Prelu).apply(null,arguments)},o._Prod=function(){return(o._Prod=o.asm.Prod).apply(null,arguments)},o._RealDiv=function(){return(o._RealDiv=o.asm.RealDiv).apply(null,arguments)},o._Reciprocal=function(){return(o._Reciprocal=o.asm.Reciprocal).apply(null,arguments)},o._Relu=function(){return(o._Relu=o.asm.Relu).apply(null,arguments)},o._Relu6=function(){return(o._Relu6=o.asm.Relu6).apply(null,arguments)},o._ResizeBilinear=function(){return(o._ResizeBilinear=o.asm.ResizeBilinear).apply(null,arguments)},o._ResizeBilinearGrad=function(){return(o._ResizeBilinearGrad=o.asm.ResizeBilinearGrad).apply(null,arguments)},o._ResizeNearestNeighbor=function(){return(o._ResizeNearestNeighbor=o.asm.ResizeNearestNeighbor).apply(null,arguments)},o._ResizeNearestNeighborGrad=function(){return(o._ResizeNearestNeighborGrad=o.asm.ResizeNearestNeighborGrad).apply(null,arguments)},o._Reverse=function(){return(o._Reverse=o.asm.Reverse).apply(null,arguments)},o._RotateWithOffset=function(){return(o._RotateWithOffset=o.asm.RotateWithOffset).apply(null,arguments)},o._Round=function(){return(o._Round=o.asm.Round).apply(null,arguments)},o._Rsqrt=function(){return(o._Rsqrt=o.asm.Rsqrt).apply(null,arguments)},o._ScatterNd=function(){return(o._ScatterNd=o.asm.ScatterNd).apply(null,arguments)},o._SearchSorted=function(){return(o._SearchSorted=o.asm.SearchSorted).apply(null,arguments)},o._SelectV2=function(){return(o._SelectV2=o.asm.SelectV2).apply(null,arguments)},o._Selu=function(){return(o._Selu=o.asm.Selu).apply(null,arguments)},o._Sigmoid=function(){return(o._Sigmoid=o.asm.Sigmoid).apply(null,arguments)},o._Sign=function(){return(o._Sign=o.asm.Sign).apply(null,arguments)},o._Sin=function(){return(o._Sin=o.asm.Sin).apply(null,arguments)},o._Sinh=function(){return(o._Sinh=o.asm.Sinh).apply(null,arguments)},o._Softmax=function(){return(o._Softmax=o.asm.Softmax).apply(null,arguments)},o._Softplus=function(){return(o._Softplus=o.asm.Softplus).apply(null,arguments)},o._SparseFillEmptyRows=function(){return(o._SparseFillEmptyRows=o.asm.SparseFillEmptyRows).apply(null,arguments)},o._SparseReshape=function(){return(o._SparseReshape=o.asm.SparseReshape).apply(null,arguments)},o._SparseSegmentReduction=function(){return(o._SparseSegmentReduction=o.asm.SparseSegmentReduction).apply(null,arguments)},o._SparseToDense=function(){return(o._SparseToDense=o.asm.SparseToDense).apply(null,arguments)},o._Sqrt=function(){return(o._Sqrt=o.asm.Sqrt).apply(null,arguments)},o._Square=function(){return(o._Square=o.asm.Square).apply(null,arguments)},o._SquaredDifference=function(){return(o._SquaredDifference=o.asm.SquaredDifference).apply(null,arguments)},o._Step=function(){return(o._Step=o.asm.Step).apply(null,arguments)},o._StridedSlice=function(){return(o._StridedSlice=o.asm.StridedSlice).apply(null,arguments)},o._Sub=function(){return(o._Sub=o.asm.Sub).apply(null,arguments)},o._Sum=function(){return(o._Sum=o.asm.Sum).apply(null,arguments)},o._Tan=function(){return(o._Tan=o.asm.Tan).apply(null,arguments)},o._Tanh=function(){return(o._Tanh=o.asm.Tanh).apply(null,arguments)},o._TensorScatterUpdate=function(){return(o._TensorScatterUpdate=o.asm.TensorScatterUpdate).apply(null,arguments)},o._Tile=function(){return(o._Tile=o.asm.Tile).apply(null,arguments)},o._TopK=function(){return(o._TopK=o.asm.TopK).apply(null,arguments)},o._Transform=function(){return(o._Transform=o.asm.Transform).apply(null,arguments)},o._Transpose=function(){return(o._Transpose=o.asm.Transpose).apply(null,arguments)},o.__FusedMatMul=function(){return(o.__FusedMatMul=o.asm._FusedMatMul).apply(null,arguments)},o._malloc=function(){return(o._malloc=o.asm.malloc).apply(null,arguments)},o._free=function(){return(o._free=o.asm.free).apply(null,arguments)},o.___errno_location=function(){return(o.___errno_location=o.asm.__errno_location).apply(null,arguments)};var pu=o.stackSave=function(){return(pu=o.stackSave=o.asm.stackSave).apply(null,arguments)},fu=o.stackRestore=function(){return(fu=o.stackRestore=o.asm.stackRestore).apply(null,arguments)},xr=o.stackAlloc=function(){return(xr=o.stackAlloc=o.asm.stackAlloc).apply(null,arguments)};o.dynCall_iijjiiii=function(){return(o.dynCall_iijjiiii=o.asm.dynCall_iijjiiii).apply(null,arguments)},o.dynCall_jiji=function(){return(o.dynCall_jiji=o.asm.dynCall_jiji).apply(null,arguments)},o.cwrap=hu;var na;Ct=function nt(){na||mu(),na||(Ct=nt)};function mu(nt){if(xt>0||(at(),xt>0))return;function dt(){na||(na=!0,o.calledRun=!0,!_&&(ot(),a(o),o.onRuntimeInitialized&&o.onRuntimeInitialized(),lt()))}o.setStatus?(o.setStatus("Running..."),setTimeout(function(){setTimeout(function(){o.setStatus("")},1),dt()},1)):dt()}if(o.preInit)for(typeof o.preInit=="function"&&(o.preInit=[o.preInit]);o.preInit.length>0;)o.preInit.pop()();mu();var So;u&&(So={uncaughtException:process.listeners("uncaughtException").filter(function(nt){return!u.uncaughtException.indexOf(nt)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(nt){return!u.unhandledRejection.indexOf(nt)>-1})});var le;if(typeof r<"u")le=r;else if(typeof WasmBackendModuleThreadedSimd<"u")le=WasmBackendModuleThreadedSimd;else throw new Error("Could not find wasm module in post.js");if(So){var Qe=le._dispose;le._dispose=function(){Qe(),So.uncaughtException.forEach(function(nt){process.removeListener("uncaughtException",nt)}),So.unhandledRejection.forEach(function(nt){process.removeListener("unhandledRejection",nt)})}}return r.ready}})();n.exports=e}(Sb)),Sb.exports}var jD=lft();const qD=bg(jD),cft=aw({__proto__:null,default:qD},[jD]);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I$=HD||aft,dft=qD||cft;class hft extends $g{constructor(t){super(),this.wasm=t,this.dataIdNextNumber=1,this.wasm.tfjs.initWithThreadsCount(yft),this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new Dw(this,kr())}write(t,e,s){const r={id:this.dataIdNextNumber++};return this.move(r,t,e,s,1),r}numDataIds(){return this.dataIdMap.numDataIds()}async time(t){const e=Un();return t(),{kernelMs:Un()-e}}move(t,e,s,r,o){const a=this.dataIdNextNumber++;if(r==="string"){const l=e;this.dataIdMap.set(t,{id:a,stringBytes:l,shape:s,dtype:r,memoryOffset:null,refCount:o});return}const i=j(s),u=i*Ju(r),c=this.wasm._malloc(u)>>>0;this.dataIdMap.set(t,{id:a,memoryOffset:c,shape:s,dtype:r,refCount:o}),this.wasm.tfjs.registerTensor(a,i,c),e!=null&&this.wasm.HEAPU8.set(new Uint8Array(e.buffer,e.byteOffset,u),c)}async read(t){return this.readSync(t)}readSync(t,e,s){const{memoryOffset:r,dtype:o,shape:a,stringBytes:i}=this.dataIdMap.get(t);if(o==="string")return(e==null||e===0)&&(s==null||s>=i.length)?i:i.slice(e,s);e=e||0,s=s||j(a);const u=Ju(o),c=this.wasm.HEAPU8.slice(r+e*u,r+s*u);return mft(c.buffer,o)}disposeData(t,e=!1){if(this.dataIdMap.has(t)){const s=this.dataIdMap.get(t);if(s.refCount--,!e&&s.refCount>0)return!1;this.wasm._free(s.memoryOffset),this.wasm.tfjs.disposeData(s.id),this.dataIdMap.delete(t)}return!0}refCount(t){return this.dataIdMap.has(t)?this.dataIdMap.get(t).refCount:0}incRef(t){const e=this.dataIdMap.get(t);e!=null&&e.refCount++}floatPrecision(){return 32}getMemoryOffset(t){return this.dataIdMap.get(t).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(t,e,s,r){let o;if(s==null)o=this.write(r??null,t,e);else{const a=this.dataIdNextNumber++;o={id:a},this.dataIdMap.set(o,{id:a,memoryOffset:s,shape:t,dtype:e,refCount:1});const i=j(t);this.wasm.tfjs.registerTensor(a,i,s)}return{dataId:o,shape:t,dtype:e}}typedArrayFromHeap({shape:t,dtype:e,dataId:s}){const r=this.wasm.HEAPU8.buffer,{memoryOffset:o}=this.dataIdMap.get(s),a=j(t);switch(e){case"float32":return new Float32Array(r,o,a);case"int32":return new Int32Array(r,o,a);case"bool":return new Uint8Array(r,o,a);default:throw new Error(`Unknown dtype ${e}`)}}}function pft(n,t,e){let s="tfjs-backend-wasm.wasm";return n&&t?s="tfjs-backend-wasm-threaded-simd.wasm":n&&(s="tfjs-backend-wasm-simd.wasm"),Nb!=null&&Nb[s]!=null?Nb[s]:e+s}async function fft(){const[n,t]=await Promise.all([et().getAsync("WASM_HAS_SIMD_SUPPORT"),et().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise((e,s)=>{const r={};r.locateFile=(i,u)=>{if(i.endsWith(".worker.js")){const c=uft.wasmWorkerContents.replace(/\n/g,"\\n"),l=new Blob([c],{type:"application/javascript"});return URL.createObjectURL(l)}return i.endsWith(".wasm")?pft(n,t,u):u+i};let o=!1;r.onAbort=()=>{if(o||Cb)return;Cb=!0,s({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"})};let a;t&&n&&gft==null?(r.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+I$.toString()],{type:"text/javascript"}),a=I$(r)):a=dft(r),a.then(i=>{o=!0,Cb=!1;const u=null;i.tfjs={init:i.cwrap("init",null,[]),initWithThreadsCount:i.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:i.cwrap("get_threads_count","number",[]),registerTensor:i.cwrap("register_tensor",null,["number","number","number"]),disposeData:i.cwrap("dispose_data",u,["number"]),dispose:i.cwrap("dispose",u,[])},e({wasm:i})}).catch(s)})}function mft(n,t){switch(t){case"float32":return new Float32Array(n);case"int32":return new Int32Array(n);case"bool":return new Uint8Array(n);default:throw new Error(`Unknown dtype ${t}`)}}let gft=null,Nb={},Cb=!1,yft=-1;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bft=2;i1("wasm",async()=>{const{wasm:n}=await fft();return new hft(n)},bft);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xft=1e-7,wft=1e-4;class vft{refCount(t){return Vs("refCount")}incRef(t){return Vs("incRef")}timerAvailable(){return!0}time(t){return Vs("time")}read(t){return Vs("read")}readSync(t){return Vs("readSync")}readToGPU(t,e){return Vs("readToGPU")}numDataIds(){return Vs("numDataIds")}disposeData(t,e){return Vs("disposeData")}write(t,e,s){return Vs("write")}move(t,e,s,r,o){return Vs("move")}memory(){return Vs("memory")}floatPrecision(){return Vs("floatPrecision")}epsilon(){return this.floatPrecision()===32?xft:wft}dispose(){return Vs("dispose")}}function Vs(n){throw new Error(`'${n}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L(n,t){if(!n)throw new Error(typeof t=="string"?t:t())}function br(n,t,e=""){L(La(n,t),()=>e+` Shapes ${n} and ${t} must match`)}function Yc(n){L(n!=null,()=>"The input to the tensor constructor must be a non-null value.")}function tf(n,t=[],e=!1){if(t==null&&(t=[]),Array.isArray(n)||xo(n)&&!e)for(let s=0;s<n.length;++s)tf(n[s],t,e);else t.push(n);return t}function Ln(n){if(n.length===0)return 1;let t=n[0];for(let e=1;e<n.length;e++)t*=n[e];return t}function La(n,t){if(n===t)return!0;if(n==null||t==null||n.length!==t.length)return!1;for(let e=0;e<n.length;e++)if(n[e]!==t[e])return!1;return!0}function Jd(n){return n%1===0}function Uf(n,t){return t<=n.length?n:n+" ".repeat(t-n.length)}function Fy(n,t){const e=t.length;return n=n==null?t.map((s,r)=>r):[].concat(n),L(n.every(s=>s>=-e&&s<e),()=>`All values in axis param must be in range [-${e}, ${e}) but got axis ${n}`),L(n.every(s=>Jd(s)),()=>`All values in axis param must be integers but got axis ${n}`),n.map(s=>s<0?e+s:s)}function Ift(n,t){const e=[],s=[],r=t!=null&&Array.isArray(t)&&t.length===0,o=t==null||r?null:Fy(t,n).sort();let a=0;for(let i=0;i<n.length;++i){if(o!=null){if(o[a]===i&&n[i]!==1)throw new Error(`Can't squeeze axis ${i} since its dim '${n[i]}' is not 1`);(o[a]==null||o[a]>i)&&n[i]===1&&(e.push(n[i]),s.push(i)),o[a]<=i&&a++}n[i]!==1&&(e.push(n[i]),s.push(i))}return{newShape:e,keptDims:s}}function kft(n,t){let e=null;return e=new Uint8Array(t),e}function $ft(n,t){let e=null;if(n==null||n==="float32")e=new Float32Array(t);else if(n==="int32")e=new Int32Array(t);else if(n==="bool")e=new Uint8Array(t);else if(n==="string")e=new Array(t);else throw new Error(`Unknown data type ${n}`);return e}function Sft(n,t){for(let e=0;e<n.length;e++){const s=n[e];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${t} being uploaded contains ${s}.`)}}function Nft(n){return n==="bool"||n==="complex64"||n==="float32"||n==="int32"||n==="string"}function xo(n){return n instanceof Float32Array||n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray}function k$(n){if(n==="float32"||n==="int32")return 4;if(n==="complex64")return 8;if(n==="bool")return 1;throw new Error(`Unknown dtype ${n}`)}function Cft(n){if(n==null)return 0;let t=0;return n.forEach(e=>t+=e.length),t}function ov(n){return typeof n=="string"||n instanceof String}function _ft(n){return typeof n=="boolean"}function Tft(n){return typeof n=="number"}function av(n){return Array.isArray(n)?av(n[0]):n instanceof Float32Array?"float32":n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray?"int32":Tft(n)?"float32":ov(n)?"string":_ft(n)?"bool":"float32"}function $$(n){return!!(n&&n.constructor&&n.call&&n.apply)}function iv(n){const t=n.length;if(t<2)return[];const e=new Array(t-1);e[t-2]=n[t-1];for(let s=t-3;s>=0;--s)e[s]=e[s+1]*n[s+1];return e}function KD(n,t,e,s=!1){const r=new Array;if(t.length===1){const o=t[0]*(s?2:1);for(let a=0;a<o;a++)r[a]=e[n+a]}else{const o=t[0],a=t.slice(1),i=a.reduce((u,c)=>u*c)*(s?2:1);for(let u=0;u<o;u++)r[u]=KD(n+u*i,a,e,s)}return r}function Dx(n,t,e=!1){if(n.length===0)return t[0];const s=n.reduce((r,o)=>r*o)*(e?2:1);if(s===0)return[];if(s!==t.length)throw new Error(`[${n}] does not match the input size ${t.length}${e?" for a complex tensor":""}.`);return KD(0,n,t,e)}function XD(n,t){const e=uv(n,t);for(let s=0;s<e.length;s++)e[s]=1;return e}function uv(n,t){if(t==null||t==="float32"||t==="complex64")return new Float32Array(n);if(t==="int32")return new Int32Array(n);if(t==="bool")return new Uint8Array(n);throw new Error(`Unknown data type ${t}`)}function YD(n){n.forEach(t=>{L(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${n}].`)})}function ll(n){return n&&n.then&&typeof n.then=="function"}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S$="tfjsflags";class Eft{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=Aft,this.populateURLFlags()}setPlatform(t,e){this.platform!=null&&(he().getBool("IS_TEST")||he().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`)),this.platformName=t,this.platform=e}registerFlag(t,e,s){if(this.flagRegistry[t]={evaluationFn:e,setHook:s},this.urlFlags[t]!=null){const r=this.urlFlags[t];he().getBool("IS_TEST")||he().getBool("PROD")||console.warn(`Setting feature override from URL ${t}: ${r}.`),this.set(t,r)}}async getAsync(t){return t in this.flags?this.flags[t]:(this.flags[t]=await this.evaluateFlag(t),this.flags[t])}get(t){if(t in this.flags)return this.flags[t];const e=this.evaluateFlag(t);if(ll(e))throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(this.flagRegistry[t]==null)throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=e,this.flagRegistry[t].setHook!=null&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(this.flagRegistry[t]==null)throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;const t=this.getQueryParams(this.global.location.search);S$ in t&&t[S$].split(",").forEach(s=>{const[r,o]=s.split(":");this.urlFlags[r]=Rft(r,o)})}}function Aft(n){const t={};return n.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(e,...s)=>(Dft(t,s[0],s[1]),s.join("="))),t}function Dft(n,t,e){n[decodeURIComponent(t)]=decodeURIComponent(e||"")}function Rft(n,t){if(t=t.toLowerCase(),t==="true"||t==="false")return t==="true";if(`${+t}`===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${n}.`)}function he(){return JD}let JD=null;function Fft(n){JD=n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let _b;function ZD(){if(_b==null){let n;if(typeof window<"u")n=window;else if(typeof global<"u")n=global;else if(typeof process<"u")n=process;else if(typeof self<"u")n=self;else throw new Error("Could not find a global object");_b=n}return _b}function Oft(){const n=ZD();return n._tfGlobals==null&&(n._tfGlobals=new Map),n._tfGlobals}function lv(n,t){const e=Oft();if(e.has(n))return e.get(n);{const s=t();return e.set(n,s),e.get(n)}}const Pft="Abs",Lft="Acos",Mft="Acosh",QD="Add",Bft="AddN",zft="All",Vft="Any",Wft="ArgMax",Uft="ArgMin",Gft="Asin",Hft="Asinh",jft="Atan",qft="Atanh",Kft="Atan2",Xft="AvgPool",Yft="AvgPool3D",Jft="BatchMatMul",Zft="BatchToSpaceND",Qft="Bincount",tmt="BroadcastArgs",tR="Cast",emt="Ceil",nmt="ClipByValue",smt="Complex",rmt="ComplexAbs",omt="Concat",amt="Conv2D",imt="Conv2DBackpropFilter",umt="Conv2DBackpropInput",lmt="Conv3D",cmt="Conv3DBackpropInputV2",dmt="Cos",hmt="Cosh",pmt="Cumprod",fmt="Cumsum",mmt="CropAndResize",gmt="DenseBincount",ymt="DepthToSpace",bmt="DepthwiseConv2dNative",xmt="DepthwiseConv2dNativeBackpropFilter",wmt="DepthwiseConv2dNativeBackpropInput",vmt="Diag",Imt="Dilation2D",kmt="RealDiv",$mt="Einsum",Smt="Elu",Nmt="Erf",Cmt="Equal",_mt="Exp",Tmt="ExpandDims",Emt="Expm1",Amt="FFT",Dmt="Fill",Rmt="FlipLeftRight",Fmt="Floor",Omt="FloorDiv",Pmt="FusedBatchNorm",Lmt="GatherV2",Mmt="GatherNd",Bmt="Greater",zmt="GreaterEqual",eR="Identity",Vmt="IFFT",Wmt="Imag",Umt="IsFinite",Gmt="IsInf",Hmt="IsNan",jmt="LeakyRelu",qmt="Less",Kmt="LessEqual",Xmt="LinSpace",Ymt="Log",Jmt="Log1p",Zmt="LogicalAnd",Qmt="LogicalNot",tgt="LogicalOr",egt="LRN",ngt="Max",sgt="Maximum",rgt="MaxPool",ogt="MaxPool3D",agt="MaxPoolWithArgmax",igt="Mean",ugt="Min",lgt="Minimum",cgt="MirrorPad",dgt="Mod",hgt="Multinomial",pgt="Multiply",fgt="Neg",mgt="NotEqual",ggt="NonMaxSuppressionV3",ygt="NonMaxSuppressionV4",bgt="NonMaxSuppressionV5",xgt="OnesLike",wgt="OneHot",vgt="Pack",Igt="PadV2",kgt="Pow",$gt="Prelu",Sgt="Prod",Ngt="RaggedGather",Cgt="RaggedTensorToTensor",_gt="Range",Tgt="Real",Egt="Reciprocal",Agt="Relu",Dgt="Reshape",Rgt="ResizeNearestNeighbor",Fgt="ResizeBilinear",Ogt="Relu6",Pgt="Reverse",Lgt="Round",Mgt="Rsqrt",Bgt="ScatterNd",zgt="SearchSorted",Vgt="Select",Wgt="Selu",Ugt="Slice",Ggt="Sin",Hgt="Sinh",jgt="Sign",qgt="Sigmoid",Kgt="Softplus",Xgt="Sqrt",Ygt="Sum",Jgt="SpaceToBatchND",Zgt="SplitV",Qgt="Softmax",tyt="SparseFillEmptyRows",eyt="SparseReshape",nyt="SparseSegmentMean",syt="SparseSegmentSum",ryt="SparseToDense",oyt="SquaredDifference",ayt="StridedSlice",iyt="StringNGrams",uyt="StringSplit",lyt="StringToHashBucketFast",cyt="Sub",dyt="Tan",hyt="Tanh",nR="Tile",pyt="TopK",fyt="Transform",Tb="Transpose",myt="Unique",gyt="Unpack",yyt="UnsortedSegmentSum",byt="ZerosLike",xyt="Step",wyt="RotateWithOffset",N$="_FusedMatMul",C$="FusedConv2D",_$="FusedDepthwiseConv2D";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ud(...n){he().getBool("IS_TEST")||he().getBool("PROD")||console.warn(...n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sR=lv("kernelRegistry",()=>new Map),vyt=lv("gradRegistry",()=>new Map);function T$(n,t){const e=Iyt(n,t);return sR.get(e)}function E$(n){return vyt.get(n)}function A$(n){const t=sR.entries(),e=[];for(;;){const{done:s,value:r}=t.next();if(s)break;const[o,a]=r,[i]=o.split("_");i===n&&e.push(a)}return e}function Iyt(n,t){return`${t}_${n}`}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kyt(n,t){return n instanceof Float32Array&&t==="float32"||n instanceof Int32Array&&t==="int32"||n instanceof Uint8Array&&t==="bool"}function rR(n,t){if(t==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(n)&&(n=tf(n)),he().getBool("DEBUG")&&Sft(n,t),kyt(n,t))return n;if(t==null||t==="float32"||t==="complex64")return new Float32Array(n);if(t==="int32")return new Int32Array(n);if(t==="bool"){const e=new Uint8Array(n.length);for(let s=0;s<e.length;++s)Math.round(n[s])!==0&&(e[s]=1);return e}else throw new Error(`Unknown data type ${t}`)}function Rm(){return he().platform.now()}function $yt(n,t){return he().platform.fetch(n,t)}function Syt(n,t="utf-8"){return t=t||"utf-8",he().platform.encode(n,t)}function D$(n,t="utf-8"){return t=t||"utf-8",he().platform.decode(n,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Nyt{constructor(t,e){this.backendTimer=t,this.logger=e,e==null&&(this.logger=new _yt)}profileKernel(t,e,s){let r;const o=()=>{r=s()};let a;const i=Rm();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(o);else{o();for(const c of r)c.dataSync();a=Promise.resolve({kernelMs:Rm()-i})}if(he().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let c=0;c<r.length;c++){const l=r[c];l.data().then(d=>{Cyt(d,l.dtype,t)})}return{kernelName:t,outputs:r,inputs:e,timeMs:a.then(c=>c.kernelMs),extraInfo:a.then(c=>c.getExtraProfileInfo!=null?c.getExtraProfileInfo():"")}}logKernelProfile(t){const{kernelName:e,outputs:s,timeMs:r,inputs:o,extraInfo:a}=t;s.forEach(i=>{Promise.all([i.data(),r,a]).then(u=>{this.logger.logKernelProfile(e,i,u[0],u[1],o,u[2])})})}}function Cyt(n,t,e){if(t!=="float32")return!1;for(let s=0;s<n.length;s++){const r=n[s];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${e}'`),!0}return!1}class _yt{logKernelProfile(t,e,s,r,o,a){const i=typeof r=="number"?Uf(`${r}ms`,9):r.error,u=Uf(t,25),c=e.rank,l=e.size,d=Uf(e.shape.toString(),14);let h="";for(const p in o){const f=o[p];if(f!=null){const m=f.shape||e.shape,g=m.length;h+=`${p}: ${g}D ${g>0?m:""} `}}console.log(`%c${u}	%c${i}	%c${c}D ${d}	%c${l}	%c${h}	%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tyt(n,t,e){const s={},r={};for(let u=0;u<t.length;u++)s[t[u].id]=!0;for(let u=0;u<n.length;u++){const c=n[u],l=c.inputs;for(const d in l){const h=l[d];let p=!1;for(let f=0;f<t.length;f++)if(s[h.id]){c.outputs.forEach(m=>s[m.id]=!0),p=!0,r[c.id]=!0;break}if(p)break}}const o={};o[e.id]=!0;const a={};for(let u=n.length-1;u>=0;u--){const c=n[u],l=c.inputs;for(let d=0;d<c.outputs.length;d++)if(o[c.outputs[d].id]){for(const h in l)o[l[h].id]=!0,a[c.id]=!0;break}}const i=[];for(let u=0;u<n.length;u++){const c=n[u];if(r[c.id]&&a[c.id]){const l={};for(const h in c.inputs){const p=c.inputs[h];s[p.id]&&(l[h]=p)}const d=Object.assign({},c);d.inputs=l,d.outputs=c.outputs,i.push(d)}}return i}function Eyt(n,t,e,s){for(let r=t.length-1;r>=0;r--){const o=t[r],a=[];if(o.outputs.forEach(u=>{const c=n[u.id];c!=null?a.push(c):a.push(null)}),o.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${o.kernelName}.`);const i=o.gradient(a);for(const u in o.inputs){if(!(u in i))throw new Error(`Cannot backprop through input ${u}. Available gradients found: ${Object.keys(i)}.`);const c=e(()=>i[u]());if(c.dtype!=="float32")throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input ${u} must have 'float32' dtype, but has '${c.dtype}'`);const l=o.inputs[u];if(!La(c.shape,l.shape))throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input '${u}' has shape '${c.shape}', which does not match the shape of the input '${l.shape}'`);if(n[l.id]==null)n[l.id]=c;else{const d=n[l.id];n[l.id]=s(d,c),d.dispose()}}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R$=20,ld=3,Eb=7;function Ayt(n,t,e,s){const r=iv(t),o=Dyt(n,t,e,r),a=t.length,i=Gf(n,t,e,r,o),u=["Tensor"];return s&&(u.push(`  dtype: ${e}`),u.push(`  rank: ${a}`),u.push(`  shape: [${t}]`),u.push("  values:")),u.push(i.map(c=>"    "+c).join(`
`)),u.join(`
`)}function Dyt(n,t,e,s){const r=Ln(t),o=s[s.length-1],a=new Array(o).fill(0),i=t.length,u=e==="complex64"?wd(n):n;if(i>1)for(let c=0;c<r/o;c++){const l=c*o;for(let d=0;d<o;d++)a[d]=Math.max(a[d],xd(u[l+d],0,e).length)}return a}function xd(n,t,e){let s;return Array.isArray(n)?s=`${parseFloat(n[0].toFixed(Eb))} + ${parseFloat(n[1].toFixed(Eb))}j`:ov(n)?s=`'${n}'`:e==="bool"?s=oR(n):s=parseFloat(n.toFixed(Eb)).toString(),Uf(s,t)}function oR(n){return n===0?"false":"true"}function Gf(n,t,e,s,r,o=!0){const a=e==="complex64"?2:1,i=t[0],u=t.length;if(u===0){if(e==="complex64"){const m=wd(n);return[xd(m[0],0,e)]}return e==="bool"?[oR(n[0])]:[n[0].toString()]}if(u===1){if(i>R$){const g=ld*a;let y=Array.from(n.slice(0,g)),b=Array.from(n.slice((i-ld)*a,i*a));return e==="complex64"&&(y=wd(y),b=wd(b)),["["+y.map((x,w)=>xd(x,r[w],e)).join(", ")+", ..., "+b.map((x,w)=>xd(x,r[i-ld+w],e)).join(", ")+"]"]}return["["+(e==="complex64"?wd(n):Array.from(n)).map((g,y)=>xd(g,r[y],e)).join(", ")+"]"]}const c=t.slice(1),l=s.slice(1),d=s[0]*a,h=[];if(i>R$){for(let m=0;m<ld;m++){const g=m*d,y=g+d;h.push(...Gf(n.slice(g,y),c,e,l,r,!1))}h.push("...");for(let m=i-ld;m<i;m++){const g=m*d,y=g+d;h.push(...Gf(n.slice(g,y),c,e,l,r,m===i-1))}}else for(let m=0;m<i;m++){const g=m*d,y=g+d;h.push(...Gf(n.slice(g,y),c,e,l,r,m===i-1))}const p=u===2?",":"";h[0]="["+h[0]+p;for(let m=1;m<h.length-1;m++)h[m]=" "+h[m]+p;let f=`,
`;for(let m=2;m<u;m++)f+=`
`;return h[h.length-1]=" "+h[h.length-1]+"]"+(o?"":f),h}function wd(n){const t=[];for(let e=0;e<n.length;e+=2)t.push([n[e],n[e+1]]);return t}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Rx{constructor(t,e,s){if(this.dtype=e,this.shape=t.slice(),this.size=Ln(t),s!=null){const r=s.length;L(r===this.size,()=>`Length of values '${r}' does not match the size inferred by the shape '${this.size}'.`)}if(e==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=s||$ft(e,this.size),this.strides=iv(t)}set(t,...e){e.length===0&&(e=[0]),L(e.length===this.rank,()=>`The number of provided coordinates (${e.length}) must match the rank (${this.rank})`);const s=this.locToIndex(e);this.values[s]=t}get(...t){t.length===0&&(t=[0]);let e=0;for(const r of t){if(r<0||r>=this.shape[e]){const o=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(o)}e++}let s=t[t.length-1];for(let r=0;r<t.length-1;++r)s+=this.strides[r]*t[r];return this.values[s]}locToIndex(t){if(this.rank===0)return 0;if(this.rank===1)return t[0];let e=t[t.length-1];for(let s=0;s<t.length-1;++s)e+=this.strides[s]*t[s];return e}indexToLoc(t){if(this.rank===0)return[];if(this.rank===1)return[t];const e=new Array(this.shape.length);for(let s=0;s<e.length-1;++s)e[s]=Math.floor(t/this.strides[s]),t-=e[s]*this.strides[s];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return Cr().makeTensor(this.values,this.shape,this.dtype)}}let Cr=null,Tu=null;function Ryt(n){Cr=n}function Fyt(n){Tu=n}class Gn{constructor(t,e,s,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=Ln(t),this.strides=iv(t),this.dataId=s,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const t=await this.data();return Tu.buffer(this.shape,this.dtype,t)}bufferSync(){return Tu.buffer(this.shape,this.dtype,this.dataSync())}async array(){const t=await this.data();return Dx(this.shape,t,this.dtype==="complex64")}arraySync(){return Dx(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();const t=Cr().read(this.dataId);if(this.dtype==="string"){const e=await t;try{return e.map(s=>D$(s))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t}dataToGPU(t){return this.throwIfDisposed(),Cr().readToGPU(this.dataId,t)}dataSync(){this.throwIfDisposed();const t=Cr().readSync(this.dataId);if(this.dtype==="string")try{return t.map(e=>D$(e))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}async bytes(){this.throwIfDisposed();const t=await Cr().read(this.dataId);return this.dtype==="string"?t:new Uint8Array(t.buffer)}dispose(){this.isDisposed||(Cr().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return Tu.print(this,t)}clone(){return this.throwIfDisposed(),Tu.clone(this)}toString(t=!1){const e=this.dataSync();return Ayt(e,this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),Tu.cast(this,t)}variable(t=!0,e,s){return this.throwIfDisposed(),Cr().makeVariable(this,t,e,s)}}Object.defineProperty(Gn,Symbol.hasInstance,{value:n=>!!n&&n.data!=null&&n.dataSync!=null&&n.throwIfDisposed!=null});function Oyt(){return lv("Tensor",()=>Gn)}Oyt();class Fx extends Gn{constructor(t,e,s,r){super(t.shape,t.dtype,t.dataId,r),this.trainable=e,this.name=s}assign(t){if(t.dtype!==this.dtype)throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`);if(!La(t.shape,this.shape))throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`);Cr().disposeTensor(this),this.dataId=t.dataId,Cr().incRef(this,null)}dispose(){Cr().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(Fx,Symbol.hasInstance,{value:n=>n instanceof Gn&&n.assign!=null&&n.assign instanceof Function});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var F$;(function(n){n.R0="R0",n.R1="R1",n.R2="R2",n.R3="R3",n.R4="R4",n.R5="R5",n.R6="R6"})(F$||(F$={}));var Ox;(function(n){n.float32="float32",n.int32="int32",n.bool="int32",n.complex64="complex64"})(Ox||(Ox={}));var Px;(function(n){n.float32="float32",n.int32="int32",n.bool="bool",n.complex64="complex64"})(Px||(Px={}));var Lx;(function(n){n.float32="float32",n.int32="float32",n.bool="float32",n.complex64="complex64"})(Lx||(Lx={}));var Mx;(function(n){n.float32="complex64",n.int32="complex64",n.bool="complex64",n.complex64="complex64"})(Mx||(Mx={}));const Pyt={float32:Lx,int32:Ox,bool:Px,complex64:Mx};function Lyt(n,t){if(n==="string"||t==="string"){if(n==="string"&&t==="string")return"string";throw new Error(`Can not upcast ${n} with ${t}`)}return Pyt[n][t]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Je(n,t){if(n.dtype===t.dtype)return[n,t];const e=Lyt(n.dtype,t.dtype);return[n.cast(e),t.cast(e)]}function Myt(n,t){L(n.dtype===t.dtype,()=>`The dtypes of the first(${n.dtype}) and second(${t.dtype}) input must match`)}function aR(n){const t=[];return iR(n,t,new Set),t}function iR(n,t,e){if(n==null)return;if(n instanceof Gn){t.push(n);return}if(!Byt(n))return;const s=n;for(const r in s){const o=s[r];e.has(o)||(e.add(o),iR(o,t,e))}}function Byt(n){return Array.isArray(n)||typeof n=="object"}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ab(n){return n.kernelName!=null}class O${constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(t=>t.name)))}}}dispose(){for(const t in this.registeredVariables)this.registeredVariables[t].dispose()}}class cl{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new O$}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const s=t[e];if(await this.initializeBackend(s).success){await this.setBackend(s);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){const{name:t,asyncInit:e}=this.initializeBackendsAndReturnBest();if(e)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry))if(t in this.registryFactory){const{asyncInit:e}=this.initializeBackend(t);if(e)return null}else return null;return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,e,s=1){return t in this.registryFactory?(ud(`${t} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[t]={factory:e,priority:s},!0)}async setBackend(t){if(this.registryFactory[t]==null)throw new Error(`Backend name '${t}' not found in registry`);if(this.backendName=t,this.registry[t]==null){this.backendInstance=null;const{success:e,asyncInit:s}=this.initializeBackend(t);if(!(s?await e:e))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new Nyt(this.backendInstance),!0}setupRegisteredKernels(){A$(this.backendName).forEach(e=>{e.setupFunc!=null&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(t){A$(t).forEach(s=>{s.disposeFunc!=null&&s.disposeFunc(this.registry[t])})}initializeBackend(t){const e=this.registryFactory[t];if(e==null)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{const s=e.factory();if(s&&!(s instanceof vft)&&typeof s.then=="function"){const r=++this.pendingBackendInitId,o=s.then(a=>r<this.pendingBackendInitId?!1:(this.registry[t]=a,this.pendingBackendInit=null,!0)).catch(a=>(r<this.pendingBackendInitId||(this.pendingBackendInit=null,ud(`Initialization of backend ${t} failed`),ud(a.stack||a.message)),!1));return this.pendingBackendInit=o,{success:o,asyncInit:!0}}else return this.registry[t]=s,{success:!0,asyncInit:!1}}catch(s){return ud(`Initialization of backend ${t} failed`),ud(s.stack||s.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(`${t} backend not found in registry`);this.backendName===t&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((t,e)=>this.registryFactory[e].priority-this.registryFactory[t].priority)}initializeBackendsAndReturnBest(){const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const s=t[e],{success:r,asyncInit:o}=this.initializeBackend(s);if(o||r)return{name:s,asyncInit:o}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,e){const s=this.state.tensorInfo.get(e),r=s.backend,o=this.readSync(e),a=r.refCount(e);r.disposeData(e,!0),s.backend=t,t.move(e,o,s.shape,s.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,e){let s=null;if(e==null){if(typeof t!="function")throw new Error("Please provide a function to tidy()");e=t}else{if(typeof t!="string"&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof e!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");s=t}let r;return this.scopedRun(()=>this.startScope(s),()=>this.endScope(r),()=>(r=e(),r instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),r))}scopedRun(t,e,s){t();try{const r=s();return e(),r}catch(r){throw e(),r}}nextTensorId(){return cl.nextTensorId++}nextVariableId(){return cl.nextVariableId++}clone(t){const e=q.runKernel(eR,{x:t}),s={x:t},r=a=>({x:()=>{const i="float32",u={x:a},c={dtype:i};return q.runKernel(tR,u,c)}}),o=[];return this.addTapeNode(this.state.activeScope.name,s,[e],r,o,{}),e}runKernel(t,e,s){if(this.backendName==null&&this.backend,!(T$(t,this.backendName)!=null))throw new Error(`Kernel '${t}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:t,inputs:e,attrs:s})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,e,s){const r=this.backend.numDataIds();let o=0;s.forEach(u=>{o+=u.dtype==="complex64"?3:1});const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-e-o-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${t}'`)}runKernelFunc(t){let e,s=[];const r=this.isTapeOn(),o=this.state.numBytes,a=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let i;this.backendName==null&&this.backend;let u;const c=Ab(t)?t.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(Ab(t)){const{kernelName:f,inputs:m,attrs:g}=t;this.backendName==null&&this.backend;const y=T$(f,this.backendName);L(y!=null,()=>`Cannot find registered kernel '${f}' for backend '${this.backendName}'`),i=()=>{const b=this.backend.numDataIds();u=y.kernelFunc({inputs:m,attrs:g,backend:this.backend});const x=Array.isArray(u)?u:[u];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(f,b,x);const w=x.map(v=>v.rank!=null?v:this.makeTensorFromTensorInfo(v));if(r){const v=this.getTensorsForGradient(f,m,w);s=this.saveTensorsForBackwardMode(v)}return w}}else{const{forwardFunc:f}=t,m=g=>{r&&(s=g.map(y=>this.keep(this.clone(y))))};i=()=>{const g=this.backend.numDataIds();u=this.tidy(()=>f(this.backend,m));const y=Array.isArray(u)?u:[u];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(c,g,y),y}}const{inputs:l,attrs:d}=t,h=Ab(t)?null:t.backwardsFunc;let p;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?e=i():(p=this.profiler.profileKernel(c,l,()=>i()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(p),e=p.outputs)}),r&&this.addTapeNode(c,l,e,h,s,d),this.state.profiling&&this.state.activeProfile.kernels.push({name:c,bytesAdded:this.state.numBytes-o,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(l).map(f=>l[f]!=null?l[f].shape:null),outputShapes:e.map(f=>f.shape),kernelTimeMs:p.timeMs,extraInfo:p.extraInfo}),Array.isArray(u)?e:e[0]}saveTensorsForBackwardMode(t){return t.map(s=>this.keep(this.clone(s)))}getTensorsForGradient(t,e,s){const r=E$(t);if(r!=null){const o=r.inputsToSave||[],a=r.outputsToSave||[];let i;r.saveAllInputs?(L(Array.isArray(e),()=>"saveAllInputs is true, expected inputs to be an array."),i=Object.keys(e).map(c=>e[c])):i=o.map(c=>e[c]);const u=s.filter((c,l)=>a[l]);return i.concat(u)}return[]}makeTensor(t,e,s,r){if(t==null)throw new Error("Values passed to engine.makeTensor() are null");s=s||"float32",r=r||this.backend;let o=t;s==="string"&&ov(t[0])&&(o=t.map(u=>Syt(u)));const a=r.write(o,e,s),i=new Gn(e,s,a,this.nextTensorId());if(this.trackTensor(i,r),s==="string"){const u=this.state.tensorInfo.get(a),c=Cft(o);this.state.numBytes+=c-u.bytes,u.bytes=c}return i}makeTensorFromDataId(t,e,s,r){s=s||"float32";const o={dataId:t,shape:e,dtype:s};return this.makeTensorFromTensorInfo(o,r)}makeTensorFromTensorInfo(t,e){const{dataId:s,shape:r,dtype:o}=t,a=new Gn(r,o,s,this.nextTensorId());return this.trackTensor(a,e),a}makeVariable(t,e=!0,s,r){s=s||this.nextVariableId().toString(),r!=null&&r!==t.dtype&&(t=t.cast(r));const o=new Fx(t,e,s,this.nextTensorId());if(this.state.registeredVariables[o.name]!=null)throw new Error(`Variable with name ${o.name} was already registered`);return this.state.registeredVariables[o.name]=o,this.incRef(o,this.backend),o}trackTensor(t,e){this.state.numTensors++,t.dtype==="string"&&this.state.numStringTensors++;let s=0;t.dtype!=="complex64"&&t.dtype!=="string"&&(s=t.size*k$(t.dtype)),this.state.numBytes+=s,this.state.tensorInfo.has(t.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(t.dataId,{backend:e||this.backend,dtype:t.dtype,shape:t.shape,bytes:s})),t instanceof Fx||this.track(t)}incRef(t,e){this.trackTensor(t,e),this.backend.incRef(t.dataId)}removeDataId(t,e){this.state.tensorInfo.has(t)&&this.state.tensorInfo.get(t).backend===e&&(this.state.tensorInfo.delete(t),this.state.numDataBuffers--)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;const e=this.state.tensorInfo.get(t.dataId);if(this.state.numTensors--,t.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=e.bytes),t.dtype!=="complex64"&&t.dtype!=="string"){const s=t.size*k$(t.dtype);this.state.numBytes-=s}e.backend.disposeData(t.dataId)&&this.removeDataId(t.dataId,e.backend)}disposeVariables(){for(const t in this.state.registeredVariables){const e=this.state.registeredVariables[t];this.disposeVariable(e)}}disposeVariable(t){this.disposeTensor(t),this.state.registeredVariables[t.name]!=null&&delete this.state.registeredVariables[t.name]}memory(){const t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,t.reasons==null&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;const e=this.state.numBytes,s=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(r=>r.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-s;for(const r of this.state.activeProfile.kernels)r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(t,e,s,r,o,a){const i={id:this.state.nextTapeNodeId++,kernelName:t,inputs:e,outputs:s,saved:o},u=E$(t);u!=null&&(r=u.gradFunc),r!=null&&(i.gradient=c=>(c=c.map((l,d)=>{if(l==null){const h=s[d],p=uv(h.size,h.dtype);return this.makeTensor(p,h.shape,h.dtype)}return l}),r(c.length>1?c:c[0],o,a))),this.state.activeTape.push(i)}keep(t){return t.kept=!0,t}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){const e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e}endScope(t){const e=aR(t),s=new Set(e.map(o=>o.id));for(let o=0;o<this.state.activeScope.track.length;o++){const a=this.state.activeScope.track[o];!a.kept&&!s.has(a.id)&&a.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],e.forEach(o=>{!o.kept&&o.scopeId===r.id&&this.track(o)})}gradients(t,e,s,r=!1){if(L(e.length>0,()=>"gradients() received an empty list of xs."),s!=null&&s.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${s.dtype}'`);const o=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",t));L(o instanceof Gn,()=>"The result y returned by f() must be a tensor.");const a=Tyt(this.state.activeTape,e,o);if(!r&&a.length===0&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const i={};i[o.id]=s??zyt(o.shape),Eyt(i,a,c=>this.tidy(c),Vyt);const u=e.map(c=>i[c.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(c=>{for(const l of c.saved)l.dispose()}),this.state.activeTape=null),{value:o,grads:u}})}customGrad(t){return L($$(t),()=>"The f passed in customGrad(f) must be a function."),(...e)=>{L(e.every(i=>i instanceof Gn),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let s;const r={};e.forEach((i,u)=>{r[u]=i});const o=(i,u)=>(s=t(...e,u),L(s.value instanceof Gn,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),L($$(s.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),s.value),a=(i,u)=>{const c=s.gradFunc(i,u),l=Array.isArray(c)?c:[c];L(l.length===e.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),L(l.every(h=>h instanceof Gn),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const d={};return l.forEach((h,p)=>{d[p]=()=>h}),d};return this.runKernelFunc({forwardFunc:o,backwardsFunc:a,inputs:r})}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}readToGPU(t,e){return this.state.tensorInfo.get(t).backend.readToGPU(t,e)}async time(t){const e=Rm(),s=await this.backend.time(t);return s.wallMs=Rm()-e,s}track(t){return this.state.activeScope!=null&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new O$;for(const t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}cl.nextTensorId=0;cl.nextVariableId=0;function zyt(n){const t=XD(Ln(n),"float32");return q.makeTensor(t,n,"float32")}function uR(){const n=ZD();if(n._tfengine==null){const t=new Eft(n);n._tfengine=new cl(t)}return Fft(n._tfengine.ENV),Ryt(()=>n._tfengine),n._tfengine}const q=uR();function Vyt(n,t){const e={a:n,b:t};return q.runKernel(QD,e)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wyt(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ms=he();Ms.registerFlag("DEBUG",()=>!1,n=>{n&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});Ms.registerFlag("IS_BROWSER",()=>Wyt());Ms.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");Ms.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));Ms.registerFlag("PROD",()=>!1);Ms.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Ms.getBool("DEBUG"));Ms.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);Ms.registerFlag("IS_TEST",()=>!1);Ms.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0);Ms.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);Ms.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);Ms.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);Ms.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ja(n,t){let e=n;if(xo(n))return t==="string"?[]:[n.length];if(!Array.isArray(n))return[];const s=[];for(;Array.isArray(e)||xo(e)&&t!=="string";)s.push(e.length),e=e[0];return Array.isArray(n)&&he().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&lR(n,s,[]),s}function lR(n,t,e){if(e=e||[],!Array.isArray(n)&&!xo(n)){L(t.length===0,()=>`Element arr[${e.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);return}L(t.length>0,()=>`Element arr[${e.join("][")}] should be a primitive, but is an array of ${n.length} elements`),L(n.length===t[0],()=>`Element arr[${e.join("][")}] should have ${t[0]} elements, but has ${n.length} elements`);const s=t.slice(1);for(let r=0;r<n.length;++r)lR(n[r],s,e.concat(r))}function P$(n,t,e,s){if(n!=="string_or_numeric"){if(n==null)throw new Error("Expected dtype cannot be null.");if(n!=="numeric"&&n!==t||n==="numeric"&&t==="string")throw new Error(`Argument '${e}' passed to '${s}' must be ${n} tensor, but got ${t} tensor`)}}function E(n,t,e,s="numeric"){if(n instanceof Gn)return P$(s,n.dtype,t,e),n;let r=av(n);if(r!=="string"&&["bool","int32","float32"].indexOf(s)>=0&&(r=s),P$(s,r,t,e),n==null||!xo(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string"){const u=n==null?"null":n.constructor.name;throw new Error(`Argument '${t}' passed to '${e}' must be a Tensor or TensorLike, but got '${u}'`)}const o=Ja(n,r);!xo(n)&&!Array.isArray(n)&&(n=[n]);const i=r!=="string"?rR(n,r):tf(n,[],!0);return q.makeTensor(i,o,r)}function Fm(n,t,e,s="numeric"){if(!Array.isArray(n))throw new Error(`Argument ${t} passed to ${e} must be a \`Tensor[]\` or \`TensorLike[]\``);return n.map((o,a)=>E(o,`${t}[${a}]`,e,s))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cR="__op";function B(n){const t=Object.keys(n);if(t.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let e=t[0];const s=n[e];e.endsWith("_")&&(e=e.substring(0,e.length-1)),e=e+cR;const r=(...o)=>{q.startScope(e);try{const a=s(...o);return ll(a)&&console.error("Cannot return a Promise inside of tidy."),q.endScope(a),a}catch(a){throw q.endScope(null),a}};return Object.defineProperty(r,"name",{value:e,configurable:!0}),r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uyt(n,t){const e=E(n,"real","complex"),s=E(t,"imag","complex");br(e.shape,s.shape,`real and imag shapes, ${e.shape} and ${s.shape}, must match in call to tf.complex().`);const r={real:e,imag:s};return q.runKernel(smt,r)}const Ma=B({complex_:Uyt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Za(n,t,e,s){if(s==null&&(s=av(n)),s==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!xo(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(t!=null){YD(t);const r=Ln(t),o=Ln(e);L(r===o,()=>`Based on the provided shape, [${t}], the tensor should have ${r} values but has ${o}`);for(let a=0;a<e.length;++a){const i=e[a],u=a===e.length-1?i!==Ln(t.slice(a)):!0;L(e[a]===t[a]||!u,()=>`Error creating a new Tensor. Inferred shape (${e}) does not match the provided shape (${t}). `)}}return!xo(n)&&!Array.isArray(n)&&(n=[n]),t=t||e,n=s!=="string"?rR(n,s):tf(n,[],!0),q.makeTensor(n,t,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uo(n,t,e){const s=Ja(n,e);return Za(n,t,s,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bx={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Om=4;async function Gyt(n,t){const e=[],s=[],r=Array.isArray(n)?n.map(a=>a.name):Object.keys(n);for(let a=0;a<r.length;++a){const i=r[a],u=Array.isArray(n)?n[a].tensor:n[i];if(u.dtype!=="float32"&&u.dtype!=="int32"&&u.dtype!=="bool"&&u.dtype!=="string"&&u.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${i}': ${u.dtype}`);const c={name:i,shape:u.shape,dtype:u.dtype};if(u.dtype==="string"){const l=new Promise(async d=>{const h=await u.bytes(),p=h.reduce((g,y)=>g+y.length,0)+Om*h.length,f=new Uint8Array(p);let m=0;for(let g=0;g<h.length;g++){const y=h[g],b=new Uint8Array(new Uint32Array([y.length]).buffer);f.set(b,m),m+=Om,f.set(y,m),m+=y.length}d(f)});s.push(l)}else s.push(u.data());t!=null&&(c.group=t),e.push(c)}const o=await Promise.all(s);return{data:Hyt(o),specs:e}}function dR(n,t){const e={};let s,r=0;for(const o of t){const a=o.name,i=o.dtype,u=o.shape,c=Ln(u);let l;if("quantization"in o){const d=o.quantization;if(d.dtype==="uint8"||d.dtype==="uint16"){if(!("min"in d&&"scale"in d))throw new Error(`Weight ${o.name} with quantization ${d.dtype} doesn't have corresponding metadata min and scale.`)}else if(d.dtype==="float16"){if(i!=="float32")throw new Error(`Weight ${o.name} is quantized with ${d.dtype} which only supports weights of type float32 not ${i}.`)}else throw new Error(`Weight ${o.name} has unknown quantization dtype ${d.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);const h=Bx[d.dtype],p=n.slice(r,r+c*h),f=d.dtype==="uint8"?new Uint8Array(p):new Uint16Array(p);if(i==="float32")if(d.dtype==="uint8"||d.dtype==="uint16"){l=new Float32Array(f.length);for(let m=0;m<f.length;m++){const g=f[m];l[m]=g*d.scale+d.min}}else if(d.dtype==="float16")s===void 0&&(s=Jyt()),l=s(f);else throw new Error(`Unsupported quantization type ${d.dtype} for weight type float32.`);else if(i==="int32"){if(d.dtype!=="uint8"&&d.dtype!=="uint16")throw new Error(`Unsupported quantization type ${d.dtype} for weight type int32.`);l=new Int32Array(f.length);for(let m=0;m<f.length;m++){const g=f[m];l[m]=Math.round(g*d.scale+d.min)}}else throw new Error(`Unsupported dtype in weight '${a}': ${i}`);r+=c*h}else if(i==="string"){const d=Ln(o.shape);l=[];for(let h=0;h<d;h++){const p=new Uint32Array(n.slice(r,r+Om))[0];r+=Om;const f=new Uint8Array(n.slice(r,r+p));l.push(f),r+=p}}else{const d=Bx[i],h=n.slice(r,r+c*d);if(i==="float32")l=new Float32Array(h);else if(i==="int32")l=new Int32Array(h);else if(i==="bool")l=new Uint8Array(h);else if(i==="complex64"){l=new Float32Array(h);const p=new Float32Array(l.length/2),f=new Float32Array(l.length/2);for(let y=0;y<p.length;y++)p[y]=l[y*2],f[y]=l[y*2+1];const m=uo(p,u,"float32"),g=uo(f,u,"float32");e[a]=Ma(m,g),m.dispose(),g.dispose()}else throw new Error(`Unsupported dtype in weight '${a}': ${i}`);r+=c*d}i!=="complex64"&&(e[a]=uo(l,u,i))}return e}function Hyt(n){if(n===null)throw new Error(`Invalid input value: ${JSON.stringify(n)}`);let t=0;const e=[];n.forEach(o=>{if(t+=o.byteLength,e.push(o.byteLength===o.buffer.byteLength?o:new o.constructor(o)),!(o instanceof Float32Array||o instanceof Int32Array||o instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${o.constructor.name}`)});const s=new Uint8Array(t);let r=0;return e.forEach(o=>{s.set(new Uint8Array(o.buffer),r),r+=o.byteLength}),s.buffer}const cv=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function L$(n){return cv?Buffer.byteLength(n):new Blob([n]).size}function jyt(n){if(cv)return Buffer.from(n).toString("base64");const t=new Uint8Array(n);let e="";for(let s=0,r=t.length;s<r;s++)e+=String.fromCharCode(t[s]);return btoa(e)}function qyt(n){if(cv){const s=Buffer.from(n,"base64");return s.buffer.slice(s.byteOffset,s.byteOffset+s.byteLength)}const t=atob(n),e=new Uint8Array(t.length);for(let s=0;s<t.length;++s)e.set([t.charCodeAt(s)],s);return e.buffer}function dv(n){if(n.length===1)return n[0];let t=0;n.forEach(r=>{t+=r.byteLength});const e=new Uint8Array(t);let s=0;return n.forEach(r=>{e.set(new Uint8Array(r),s),s+=r.byteLength}),e.buffer}function M$(n){const t="/";for(n=n.trim();n.endsWith(t);)n=n.slice(0,n.length-1);const e=n.split(t);return e[e.length-1]}function hR(n,t){const e={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy,weightsManifest:t};return n.signature!=null&&(e.signature=n.signature),n.userDefinedMetadata!=null&&(e.userDefinedMetadata=n.userDefinedMetadata),n.modelInitializer!=null&&(e.modelInitializer=n.modelInitializer),n.trainingConfig!=null&&(e.trainingConfig=n.trainingConfig),e}function pR(n,t,e){const s={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy};if(n.trainingConfig!=null&&(s.trainingConfig=n.trainingConfig),n.weightsManifest!=null){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!e)throw new Error("modelJSON has weightsManifest but weightData is null");s.weightSpecs=t,s.weightData=e}return n.signature!=null&&(s.signature=n.signature),n.userDefinedMetadata!=null&&(s.userDefinedMetadata=n.userDefinedMetadata),n.modelInitializer!=null&&(s.modelInitializer=n.modelInitializer),s}async function hv(n,t){let e,s;return n.weightsManifest!=null&&([e,s]=await t(n.weightsManifest)),pR(n,e,s)}function ef(n){if(n.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:n.modelTopology==null?0:L$(JSON.stringify(n.modelTopology)),weightSpecsBytes:n.weightSpecs==null?0:L$(JSON.stringify(n.weightSpecs)),weightDataBytes:n.weightData==null?0:n.weightData.byteLength}}function fR(n){const t=[];for(const e of n)t.push(...e.weights);return t}function Kyt(){const n=e=>{let s=e<<13,r=0;for(;(s&8388608)===0;)r-=8388608,s<<=1;return s&=-8388609,r+=947912704,s|r},t=new Uint32Array(2048);t[0]=0;for(let e=1;e<1024;e++)t[e]=n(e);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}function Xyt(){const n=new Uint32Array(64);n[0]=0,n[31]=1199570944,n[32]=2147483648,n[63]=3347054592;for(let t=1;t<31;t++)n[t]=t<<23;for(let t=33;t<63;t++)n[t]=2147483648+(t-32<<23);return n}function Yyt(){const n=new Uint32Array(64);for(let t=0;t<64;t++)n[t]=1024;return n[0]=n[32]=0,n}function Jyt(){const n=Kyt(),t=Xyt(),e=Yyt();return s=>{const r=new ArrayBuffer(4*s.length),o=new Uint32Array(r);for(let a=0;a<s.length;a++){const i=s[a],u=n[e[i>>10]+(i&1023)]+t[i>>10];o[a]=u}return new Float32Array(r)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Xe{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return Xe.instance==null&&(Xe.instance=new Xe),Xe.instance}static registerSaveRouter(t){Xe.getInstance().saveRouters.push(t)}static registerLoadRouter(t){Xe.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return Xe.getHandlers(t,"save")}static getLoadHandlers(t,e){return Xe.getHandlers(t,"load",e)}static getHandlers(t,e,s){const r=[];return(e==="load"?Xe.getInstance().loadRouters:Xe.getInstance().saveRouters).forEach(a=>{const i=a(t,s);i!==null&&r.push(i)}),r}}const Zyt=n=>Xe.registerSaveRouter(n),Qyt=n=>Xe.registerLoadRouter(n),tbt=n=>Xe.getSaveHandlers(n),ebt=(n,t)=>Xe.getLoadHandlers(n,t);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zx="tensorflowjs",Vx=1,hi="models_store",ya="model_info_store";function mR(){if(!he().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const n=typeof window>"u"?self:window,t=n.indexedDB||n.mozIndexedDB||n.webkitIndexedDB||n.msIndexedDB||n.shimIndexedDB;if(t==null)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Wx(n){const t=n.result;t.createObjectStore(hi,{keyPath:"modelPath"}),t.createObjectStore(ya,{keyPath:"modelPath"})}class Mi{constructor(t){if(this.indexedDB=mR(),t==null||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)}async load(){return this.databaseAction(this.modelPath)}databaseAction(t,e){return new Promise((s,r)=>{const o=this.indexedDB.open(zx,Vx);o.onupgradeneeded=()=>Wx(o),o.onsuccess=()=>{const a=o.result;if(e==null){const i=a.transaction(hi,"readonly"),c=i.objectStore(hi).get(this.modelPath);c.onsuccess=()=>{if(c.result==null)return a.close(),r(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));s(c.result.modelArtifacts)},c.onerror=l=>(a.close(),r(c.error)),i.oncomplete=()=>a.close()}else{const i=ef(e),u=a.transaction(ya,"readwrite");let c=u.objectStore(ya);const l=c.put({modelPath:this.modelPath,modelArtifactsInfo:i});let d;l.onsuccess=()=>{d=a.transaction(hi,"readwrite");const p=d.objectStore(hi).put({modelPath:this.modelPath,modelArtifacts:e,modelArtifactsInfo:i});p.onsuccess=()=>s({modelArtifactsInfo:i}),p.onerror=f=>{c=u.objectStore(ya);const m=c.delete(this.modelPath);m.onsuccess=()=>(a.close(),r(p.error)),m.onerror=g=>(a.close(),r(p.error))}},l.onerror=h=>(a.close(),r(l.error)),u.oncomplete=()=>{d==null?a.close():d.oncomplete=()=>a.close()}}},o.onerror=a=>r(o.error)})}}Mi.URL_SCHEME="indexeddb://";const gR=n=>he().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(Mi.URL_SCHEME)?nbt(n.slice(Mi.URL_SCHEME.length)):null;Xe.registerSaveRouter(gR);Xe.registerLoadRouter(gR);function nbt(n){return new Mi(n)}function sbt(n){return n.startsWith(Mi.URL_SCHEME)?n.slice(Mi.URL_SCHEME.length):n}class rbt{constructor(){this.indexedDB=mR()}async listModels(){return new Promise((t,e)=>{const s=this.indexedDB.open(zx,Vx);s.onupgradeneeded=()=>Wx(s),s.onsuccess=()=>{const r=s.result,o=r.transaction(ya,"readonly"),i=o.objectStore(ya).getAll();i.onsuccess=()=>{const u={};for(const c of i.result)u[c.modelPath]=c.modelArtifactsInfo;t(u)},i.onerror=u=>(r.close(),e(i.error)),o.oncomplete=()=>r.close()},s.onerror=r=>e(s.error)})}async removeModel(t){return t=sbt(t),new Promise((e,s)=>{const r=this.indexedDB.open(zx,Vx);r.onupgradeneeded=()=>Wx(r),r.onsuccess=()=>{const o=r.result,a=o.transaction(ya,"readwrite"),i=a.objectStore(ya),u=i.get(t);let c;u.onsuccess=()=>{if(u.result==null)return o.close(),s(new Error(`Cannot find model with path '${t}' in IndexedDB.`));{const l=i.delete(t),d=()=>{c=o.transaction(hi,"readwrite");const p=c.objectStore(hi).delete(t);p.onsuccess=()=>e(u.result.modelArtifactsInfo),p.onerror=f=>s(u.error)};l.onsuccess=d,l.onerror=h=>(d(),o.close(),s(u.error))}},u.onerror=l=>(o.close(),s(u.error)),a.oncomplete=()=>{c==null?o.close():c.oncomplete=()=>o.close()}},r.onerror=o=>s(r.error)})}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oo="/",Eu="tensorflowjs_models",yR="info",obt="model_topology",abt="weight_specs",ibt="weight_data",ubt="model_metadata";function bR(n){return{info:[Eu,n,yR].join(Oo),topology:[Eu,n,obt].join(Oo),weightSpecs:[Eu,n,abt].join(Oo),weightData:[Eu,n,ibt].join(Oo),modelMetadata:[Eu,n,ubt].join(Oo)}}function xR(n){for(const t of Object.values(n))window.localStorage.removeItem(t)}function lbt(n){const t=n.split(Oo);if(t.length<3)throw new Error(`Invalid key format: ${n}`);return t.slice(1,t.length-1).join(Oo)}function cbt(n){return n.startsWith(Bi.URL_SCHEME)?n.slice(Bi.URL_SCHEME.length):n}class Bi{constructor(t){if(!he().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,t==null||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=bR(this.modelPath)}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const e=JSON.stringify(t.modelTopology),s=JSON.stringify(t.weightSpecs),r=ef(t);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,e),this.LS.setItem(this.keys.weightSpecs,s),this.LS.setItem(this.keys.weightData,jyt(t.weightData));const o={format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,signature:t.signature!=null?t.signature:void 0,userDefinedMetadata:t.userDefinedMetadata!=null?t.userDefinedMetadata:void 0,modelInitializer:t.modelInitializer!=null?t.modelInitializer:void 0,trainingConfig:t.trainingConfig!=null?t.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(o)),{modelArtifactsInfo:r}}catch{throw xR(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const t=JSON.parse(this.LS.getItem(this.keys.info));if(t==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(t.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const e={},s=JSON.parse(this.LS.getItem(this.keys.topology));if(s==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);e.modelTopology=s;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(r==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);e.weightSpecs=r;const o=this.LS.getItem(this.keys.modelMetadata);if(o!=null){const i=JSON.parse(o);e.format=i.format,e.generatedBy=i.generatedBy,e.convertedBy=i.convertedBy,i.signature!=null&&(e.signature=i.signature),i.userDefinedMetadata!=null&&(e.userDefinedMetadata=i.userDefinedMetadata),i.modelInitializer!=null&&(e.modelInitializer=i.modelInitializer),i.trainingConfig!=null&&(e.trainingConfig=i.trainingConfig)}const a=this.LS.getItem(this.keys.weightData);if(a==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return e.weightData=qyt(a),e}}Bi.URL_SCHEME="localstorage://";const wR=n=>he().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(Bi.URL_SCHEME)?dbt(n.slice(Bi.URL_SCHEME.length)):null;Xe.registerSaveRouter(wR);Xe.registerLoadRouter(wR);function dbt(n){return new Bi(n)}class hbt{constructor(){L(he().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),L(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const t={},e=Eu+Oo,s=Oo+yR;for(let r=0;r<this.LS.length;++r){const o=this.LS.key(r);if(o.startsWith(e)&&o.endsWith(s)){const a=lbt(o);t[a]=JSON.parse(this.LS.getItem(o))}}return t}async removeModel(t){t=cbt(t);const e=bR(t);if(this.LS.getItem(e.info)==null)throw new Error(`Cannot find model at path '${t}'`);const s=JSON.parse(this.LS.getItem(e.info));return xR(e),s}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lu="://";class ns{constructor(){this.managers={}}static getInstance(){return ns.instance==null&&(ns.instance=new ns),ns.instance}static registerManager(t,e){L(t!=null,()=>"scheme must not be undefined or null."),t.endsWith(Lu)&&(t=t.slice(0,t.indexOf(Lu))),L(t.length>0,()=>"scheme must not be an empty string.");const s=ns.getInstance();L(s.managers[t]==null,()=>`A model store manager is already registered for scheme '${t}'.`),s.managers[t]=e}static getManager(t){const e=ns.getInstance().managers[t];if(e==null)throw new Error(`Cannot find model manager for scheme '${t}'`);return e}static getSchemes(){return Object.keys(ns.getInstance().managers)}}function Hf(n){if(n.indexOf(Lu)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${ns.getSchemes().join(",")}`);return{scheme:n.split(Lu)[0],path:n.split(Lu)[1]}}async function vR(n,t,e=!1){L(n!==t,()=>`Old path and new path are the same: '${n}'`);const s=Xe.getLoadHandlers(n);L(s.length>0,()=>`Copying failed because no load handler is found for source URL ${n}.`),L(s.length<2,()=>`Copying failed because more than one (${s.length}) load handlers for source URL ${n}.`);const r=s[0],o=Xe.getSaveHandlers(t);L(o.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),L(o.length<2,()=>`Copying failed because more than one (${s.length}) save handlers for destination URL ${t}.`);const a=o[0],i=Hf(n).scheme,u=Hf(n).path,c=i===Hf(n).scheme,l=await r.load();e&&c&&await ns.getManager(i).removeModel(u);const d=await a.save(l);return e&&!c&&await ns.getManager(i).removeModel(u),d.modelArtifactsInfo}async function pbt(){const n=ns.getSchemes(),t={};for(const e of n){const s=await ns.getManager(e).listModels();for(const r in s){const o=e+Lu+r;t[o]=s[r]}}return t}async function fbt(n){const t=Hf(n);return ns.getManager(t.scheme).removeModel(t.path)}async function mbt(n,t){return vR(n,t,!1)}async function gbt(n,t){return vR(n,t,!0)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ybt{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if(e!=="utf-8"&&e!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${e}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}setTimeoutCustom(t,e){if(!window||!he().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(t,e);return}this.functionRefs.push(t),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},e),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",s=>{if(s.source===window&&s.data.name===this.messageName){s.stopPropagation();const r=this.functionRefs[s.data.index];r(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}}if(he().get("IS_BROWSER")){he().setPlatform("browser",new ybt);try{ns.registerManager(Bi.URL_SCHEME,new hbt)}catch{}try{ns.registerManager(Mi.URL_SCHEME,new rbt)}catch{}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bbt={importFetch:()=>require("node-fetch")};let Db;class xbt{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(t,e){return he().global.fetch!=null?he().global.fetch(t,e):(Db==null&&(Db=bbt.importFetch()),Db(t,e))}now(){const t=process.hrtime();return t[0]*1e3+t[1]/1e6}encode(t,e){if(e!=="utf-8"&&e!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${e}`);return this.textEncoder.encode(t)}decode(t,e){return t.length===0?"":new this.util.TextDecoder(e).decode(t)}}he().get("IS_NODE")&&!he().get("IS_BROWSER")&&he().setPlatform("node",new xbt);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xo(n,t="float32",e){return t=t||"float32",YD(n),new Rx(n,t,e)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wbt(n,t){const e=E(n,"x","cast");if(!Nft(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if(t==="string"&&e.dtype!=="string"||t!=="string"&&e.dtype==="string")throw new Error("Only strings can be casted to strings");const s={x:e},r={dtype:t};return q.runKernel(tR,s,r)}const Tn=B({cast_:wbt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vbt(n){const e={x:E(n,"x","clone","string_or_numeric")};return q.runKernel(eR,e)}const Sa=B({clone_:vbt});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IR(n,t=!1){console.log(n.toString(t))}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */uR();const Ibt={buffer:Xo,cast:Tn,clone:Sa,print:IR};Fyt(Ibt);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kbt="model",$bt=".json",Sbt=".weights.bin";function B$(n){return new Promise(t=>setTimeout(t)).then(n)}class zi{constructor(t){if(!he().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(zi.URL_SCHEME)&&(t=t.slice(zi.URL_SCHEME.length)),(t==null||t.length===0)&&(t=kbt),this.modelJsonFileName=t+$bt,this.weightDataFileName=t+Sbt}async save(t){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");const e=window.URL.createObjectURL(new Blob([t.weightData],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const s=[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}],r=hR(t,s),o=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),a=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=o,await B$(()=>a.dispatchEvent(new MouseEvent("click"))),t.weightData!=null){const i=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;i.download=this.weightDataFileName,i.href=e,await B$(()=>i.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:ef(t)}}}}zi.URL_SCHEME="downloads://";class Nbt{constructor(t){if(t==null||t.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${t}`);this.jsonFile=t[0],this.weightsFiles=t.slice(1)}async load(){return new Promise((t,e)=>{const s=new FileReader;s.onload=r=>{const o=JSON.parse(r.target.result),a=o.modelTopology;if(a==null){e(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(o.weightsManifest==null){e(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){t({modelTopology:a});return}const u=hv(o,c=>this.loadWeights(c));t(u)},s.onerror=r=>e(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),s.readAsText(this.jsonFile)})}loadWeights(t){const e=[],s=[];for(const a of t)e.push(...a.weights),s.push(...a.paths);const r=this.checkManifestAndWeightFiles(t),o=s.map(a=>this.loadWeightsFile(a,r[a]));return Promise.all(o).then(a=>[e,dv(a)])}loadWeightsFile(t,e){return new Promise((s,r)=>{const o=new FileReader;o.onload=a=>{const i=a.target.result;s(i)},o.onerror=a=>r(`Failed to weights data from file of path '${t}'.`),o.readAsArrayBuffer(e)})}checkManifestAndWeightFiles(t){const e=[],s=this.weightsFiles.map(o=>M$(o.name)),r={};for(const o of t)o.paths.forEach(a=>{const i=M$(a);if(e.indexOf(i)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${i}'`);if(e.push(i),s.indexOf(i)===-1)throw new Error(`Weight file with basename '${i}' is not provided.`);r[a]=this.weightsFiles[s.indexOf(i)]});if(e.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${e.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}const Cbt=n=>he().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(zi.URL_SCHEME)?_bt(n.slice(zi.URL_SCHEME.length)):null;Xe.registerSaveRouter(Cbt);function _bt(n="model"){return new zi(n)}function Tbt(n){return new Nbt(n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z$(n,t,e,s){a(n),e=e??0,s=s??1,i(e,s);let r=0;const o=u=>(u.then(c=>{const l=e+ ++r/n.length*(s-e);return t(l),c}),u);function a(u){L(u!=null&&Array.isArray(u)&&u.length>0,()=>"promises must be a none empty array")}function i(u,c){L(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${u}`),L(c>=0&&c<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${c}`),L(c>=u,()=>`startFraction must be no more than endFraction, but got startFraction ${u} and endFraction ${c}`)}return Promise.all(n.map(o))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function kR(n,t){t==null&&(t={});const e=t.fetchFunc==null?he().platform.fetch:t.fetchFunc,s=n.map(d=>e(d,t.requestInit,{isBinary:!0})),i=(t.onProgress==null?await Promise.all(s):await z$(s,t.onProgress,0,.5)).map(d=>d.arrayBuffer());return t.onProgress==null?await Promise.all(i):await z$(i,t.onProgress,.5,1)}async function Ebt(n,t="",e,s){return $R(a=>kR(a,{requestInit:s}))(n,t,e)}function $R(n){return async(t,e="",s)=>{const r=t.map(()=>!1),o={},a=s!=null?s.map(()=>!1):[],i=[];if(t.forEach((p,f)=>{let m=0;p.weights.forEach(g=>{const y="quantization"in g?g.quantization.dtype:g.dtype,b=Bx[y]*Ln(g.shape),x=()=>{r[f]=!0,o[f]==null&&(o[f]=[]),o[f].push({manifestEntry:g,groupOffset:m,sizeBytes:b})};s!=null?s.forEach((w,v)=>{w===g.name&&(x(),a[v]=!0)}):x(),i.push(g.name),m+=b})}),!a.every(p=>p)){const p=s.filter((f,m)=>!a[m]);throw new Error(`Could not find weights in manifest with names: ${p.join(", ")}. 
Manifest JSON has weights with names: ${i.join(", ")}.`)}const u=r.reduce((p,f,m)=>(f&&p.push(m),p),[]),c=[];u.forEach(p=>{t[p].paths.forEach(f=>{const m=e+(e.endsWith("/")?"":"/")+f;c.push(m)})});const l=await n(c),d={};let h=0;return u.forEach(p=>{const f=t[p].paths.length;let m=0;for(let w=0;w<f;w++)m+=l[h+w].byteLength;const g=new ArrayBuffer(m),y=new Uint8Array(g);let b=0;for(let w=0;w<f;w++){const v=new Uint8Array(l[h+w]);y.set(v,b),b+=v.byteLength}o[p].forEach(w=>{const v=g.slice(w.groupOffset,w.groupOffset+w.sizeBytes),k=dR(v,[w.manifestEntry]);for(const S in k)d[S]=k[S]}),h+=f}),d}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Abt="application/octet-stream",Dbt="application/json";class pv{constructor(t,e){if(this.DEFAULT_METHOD="POST",e==null&&(e={}),this.weightPathPrefix=e.weightPathPrefix,this.onProgress=e.onProgress,this.weightUrlConverter=e.weightUrlConverter,e.fetchFunc!=null?(L(typeof e.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=e.fetchFunc):this.fetch=he().platform.fetch,L(t!=null&&t.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(t)&&L(t.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${t.length}).`),this.path=t,e.requestInit!=null&&e.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=e.requestInit||{}}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const e=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);e.body=new FormData;const s=[{paths:["./model.weights.bin"],weights:t.weightSpecs}],r=hR(t,s);e.body.append("model.json",new Blob([JSON.stringify(r)],{type:Dbt}),"model.json"),t.weightData!=null&&e.body.append("model.weights.bin",new Blob([t.weightData],{type:Abt}),"model.weights.bin");const o=await this.fetch(this.path,e);if(o.ok)return{modelArtifactsInfo:ef(t),responses:[o]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${o.status}.`)}async load(){const t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);let e;try{e=await t.json()}catch{let a=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?a+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":a+=" Please make sure the server is serving valid JSON for this request.",new Error(a)}const s=e.modelTopology,r=e.weightsManifest;if(s==null&&r==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return hv(e,o=>this.loadWeights(o))}async loadWeights(t){const e=Array.isArray(this.path)?this.path[1]:this.path,[s,r]=Rbt(e),o=this.weightPathPrefix||s,a=fR(t),i=[],u=[];for(const l of t)for(const d of l.paths)this.weightUrlConverter!=null?u.push(this.weightUrlConverter(d)):i.push(o+d+r);this.weightUrlConverter&&i.push(...await Promise.all(u));const c=await kR(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[a,dv(c)]}}pv.URL_SCHEME_REGEX=/^https?:\/\//;function Rbt(n){const t=n.lastIndexOf("/"),e=n.lastIndexOf("?"),s=n.substring(0,t),r=e>t?n.substring(e):"";return[s+"/",r]}function Ux(n){return n.match(pv.URL_SCHEME_REGEX)!=null}const SR=(n,t)=>{if(typeof fetch>"u"&&(t==null||t.fetchFunc==null))return null;{let e=!0;if(Array.isArray(n)?e=n.every(s=>Ux(s)):e=Ux(n),e)return fv(n,t)}return null};Xe.registerSaveRouter(SR);Xe.registerLoadRouter(SR);function fv(n,t){return new pv(n,t)}function Fbt(n,t){return fv(n,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Rb{constructor(t){this.modelArtifacts=t}load(){return this.modelArtifacts}}class NR{constructor(t){this.saveHandler=t}save(t){return this.saveHandler(t)}}class Obt{constructor(t){t.load&&(this.load=()=>Promise.resolve(t.load())),t.save&&(this.save=e=>Promise.resolve(t.save(e)))}}function Pbt(n,t,e,s){const r=arguments;return new Obt(CR(...r))}function CR(n,t,e,s){return arguments.length===1?n.modelTopology!=null||n.weightSpecs!=null?new Rb(n):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Rb({modelTopology:n})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Rb({modelTopology:n,weightSpecs:t,weightData:e,trainingConfig:s}))}function Lbt(n){return new NR(n)}function Mbt(n){return new NR(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _R=Object.freeze(Object.defineProperty({__proto__:null,browserFiles:Tbt,browserHTTPRequest:Fbt,concatenateArrayBuffers:dv,copyModel:mbt,decodeWeights:dR,encodeWeights:Gyt,fromMemory:Pbt,fromMemorySync:CR,getLoadHandlers:ebt,getModelArtifactsForJSON:hv,getModelArtifactsForJSONSync:pR,getModelArtifactsInfoForJSON:ef,getSaveHandlers:tbt,getWeightSpecs:fR,http:fv,isHTTPScheme:Ux,listModels:pbt,loadWeights:Ebt,moveModel:gbt,registerLoadRouter:Qyt,registerSaveRouter:Zyt,removeModel:fbt,weightsLoaderFactory:$R,withSaveHandler:Lbt,withSaveHandlerSync:Mbt},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bbt(n,t,e=!1,s=!1){let r=E(n,"a","matMul"),o=E(t,"b","matMul");[r,o]=Je(r,o);const a={a:r,b:o},i={transposeA:e,transposeB:s};return q.runKernel(Jft,a,i)}const _e=B({matMul_:Bbt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zbt(n,t,e=1,s=0,r="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const a={indices:E(n,"indices","oneHot","int32")},i={dtype:r,depth:t,onValue:e,offValue:s};return q.runKernel(wgt,a,i)}const Vbt=B({oneHot_:zbt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rr(n,t){return q.tidy(n,t)}function Wbt(n){aR(n).forEach(e=>e.dispose())}function ba(n){return q.keep(n)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ubt(n){const e={input:E(n,"input","imag")};return q.runKernel(Wmt,e)}const Oy=B({imag_:Ubt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gbt(n){const e={x:E(n,"x","neg")};return q.runKernel(fgt,e)}const zo=B({neg_:Gbt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hbt(n){const e={input:E(n,"input","real")};return q.runKernel(Tgt,e)}const Zd=B({real_:Hbt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jbt(n,t,e){const s=E(n,"x","transpose");if(t==null&&(t=s.shape.map((a,i)=>i).reverse()),L(s.rank===t.length,()=>`Error in transpose: rank of input ${s.rank} must match length of perm ${t}.`),t.forEach(a=>{L(a>=0&&a<s.rank,()=>`All entries in 'perm' must be between 0 and ${s.rank-1} but got ${t}`)}),s.rank<=1)return s.clone();const r={x:s},o={perm:t};return s.dtype==="complex64"?Rr(()=>{let a=Zd(s),i=Oy(s);return a=q.runKernel(Tb,{x:a},o),i=q.runKernel(Tb,{x:i},o),e&&(i=zo(i)),Ma(a,i)}):q.runKernel(Tb,r,o)}const Gx=B({transpose_:jbt});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qbt(n,t){const e=[];for(let s=0;s<t.length;s++){const r=n[n.length-s-1],o=t.length-s-1,a=t[o];(r==null||r===1&&a>1)&&e.unshift(o)}return e}function An(n,t){const e=[],s=Math.max(n.length,t.length);for(let r=0;r<s;r++){let o=n[n.length-r-1];o==null&&(o=1);let a=t[t.length-r-1];if(a==null&&(a=1),o===1)e.unshift(a);else if(a===1)e.unshift(o);else if(o!==a){const i=`Operands could not be broadcast together with shapes ${n} and ${t}.`;throw Error(i)}else e.unshift(o)}return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kbt(n,t,e){if(Yc(n),t!=null&&t.length!==3)throw new Error("tensor3d() requires shape to have three numbers");const s=Ja(n,e);if(s.length!==3&&s.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Za(n,t,s,e)}function Xbt(n,t,e){const s=t.rank>1?t.shape[t.rank-1]:1,r=t.rank>1?t.rank-1:1,o=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${e.shape}, indices.shape: ${t.shape}, shape: ${n}, sliceDim: ${s}, and batchDim: ${r}.`;if(e.rank<r)throw new Error(o+` update.rank < ${r}. `);if(n.length<s+(e.rank-r))throw new Error(o+` Output shape length < ${s+(e.rank-r)}`);if(e.rank!==r+n.length-s)throw new Error(o+` update.rank != ${r+n.length-s}`);for(let a=0;a<r;++a)if(e.shape[a]!==t.shape[a])throw new Error(o+` updates.shape[${a}] (${e.shape[a]}) != indices.shape[${a}] (${t.shape[a]}).`);for(let a=0;a<e.rank-r;++a)if(e.shape[a+r]!==n[a+s])throw new Error(o+` updates.shape[${a+r}] (${e.shape[a+r]}) != shape[${a+r}] (${n[a+r]})`)}function Ybt(n,t,e){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(n.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${n.rank}.`);if(t.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(e.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${e}`);if(e.length===0){if(t.size===0)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(n.size===0)throw new Error(`Updates specified for empty output. updates shape: ${n.shape}`)}Xbt(e,t,n)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jbt(n,t){let e=E(n,"a","add"),s=E(t,"b","add");[e,s]=Je(e,s);const r={a:e,b:s};return q.runKernel(QD,r)}const En=B({add_:Jbt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zbt(n,t){let e=E(n,"a","floorDiv"),s=E(t,"b","floorDiv");[e,s]=Je(e,s);const r={a:e,b:s};return q.runKernel(Omt,r)}const TR=B({floorDiv_:Zbt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qbt(n,t){let e=E(n,"a","div"),s=E(t,"b","div");if([e,s]=Je(e,s),e.dtype==="int32"&&s.dtype==="int32")return TR(e,s);const r={a:e,b:s},o={};return q.runKernel(kmt,r,o)}const as=B({div_:Qbt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function txt(n,t){let e=E(n,"a","mul"),s=E(t,"b","mul");[e,s]=Je(e,s);const r={a:e,b:s};return q.runKernel(pgt,r)}const Yt=B({mul_:txt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ext(n){const t=E(n,"x","abs");if(t.dtype==="complex64"){const e={x:t};return q.runKernel(rmt,e)}else{const e={x:t};return q.runKernel(Pft,e)}}const ir=B({abs_:ext});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nxt(n){const e={x:E(n,"x","acos")};return q.runKernel(Lft,e)}const sxt=B({acos_:nxt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rxt(n){const e={x:E(n,"x","acosh")};return q.runKernel(Mft,e)}const oxt=B({acosh_:rxt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function axt(n){L(Array.isArray(n),()=>"The argument passed to tf.addN() must be a list of tensors"),L(n.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${n.length}`);const t=n.map((r,o)=>E(r,`tensors${o}`,"addN")),e=t[0];t.forEach(r=>{if(r.dtype!==e.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(r=>{if(!La(r.shape,e.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const s=t;return q.runKernel(Bft,s)}const ixt=B({addN_:axt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uxt(n,t=null,e=!1){const r={x:E(n,"x","all","bool")},o={axis:t,keepDims:e};return q.runKernel(zft,r,o)}const lxt=B({all_:uxt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cxt(n,t=null,e=!1){const r={x:E(n,"x","any","bool")},o={axis:t,keepDims:e};return q.runKernel(Vft,r,o)}const dxt=B({any_:cxt});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hxt(n,t=0){const s={x:E(n,"x","argMax")},r={axis:t};return q.runKernel(Wft,s,r)}const pxt=B({argMax_:hxt});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fxt(n,t=0){const s={x:E(n,"x","argMin")},r={axis:t};return q.runKernel(Uft,s,r)}const mxt=B({argMin_:fxt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gxt(n){const e={x:E(n,"x","asin")};return q.runKernel(Gft,e)}const yxt=B({asin_:gxt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bxt(n){const e={x:E(n,"x","asinh")};return q.runKernel(Hft,e)}const xxt=B({asinh_:bxt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wxt(n){const e={x:E(n,"x","atan")};return q.runKernel(jft,e)}const vxt=B({atan_:wxt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ixt(n,t){let e=E(n,"a","atan2"),s=E(t,"b","atan2");[e,s]=Je(e,s);const r={a:e,b:s};return q.runKernel(Kft,r)}const kxt=B({atan2_:Ixt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $xt(n){const e={x:E(n,"x","atanh")};return q.runKernel(qft,e)}const Sxt=B({atanh_:$xt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nxt(n,t,e,s,r,o,a="channelsLast"){const[i,u]=Pm(t);let c;if(a==="channelsLast")c=[i,u,n[3],n[3]];else if(a==="channelsFirst")c=[i,u,n[1],n[1]];else throw new Error(`Unknown dataFormat ${a}`);return mv(n,c,e,s,r,o,!1,a)}function mv(n,t,e,s,r,o,a=!1,i="channelsLast"){let[u,c,l,d]=[-1,-1,-1,-1];if(i==="channelsLast")[u,c,l,d]=n;else if(i==="channelsFirst")[u,d,c,l]=n;else throw new Error(`Unknown dataFormat ${i}`);const[h,p,,f]=t,[m,g]=Pm(e),[y,b]=Pm(s),x=Hx(h,y),w=Hx(p,b),{padInfo:v,outHeight:k,outWidth:S}=Txt(r,c,l,m,g,x,w,o,i),_=a?f*d:f;let C;return i==="channelsFirst"?C=[u,_,k,S]:i==="channelsLast"&&(C=[u,k,S,_]),{batchSize:u,dataFormat:i,inHeight:c,inWidth:l,inChannels:d,outHeight:k,outWidth:S,outChannels:_,padInfo:v,strideHeight:m,strideWidth:g,filterHeight:h,filterWidth:p,effectiveFilterHeight:x,effectiveFilterWidth:w,dilationHeight:y,dilationWidth:b,inShape:n,outShape:C,filterShape:t}}function Cxt(n,t,e,s,r){s==null&&(s=_xt(n,t,e));const o=n[0],a=n[1],i=Lm((o-t+2*s)/e+1,r),u=Lm((a-t+2*s)/e+1,r);return[i,u]}function _xt(n,t,e,s=1){const r=Hx(t,s);return Math.floor((n[0]*(e-1)-e+r)/2)}function Pm(n){return typeof n=="number"?[n,n,n]:n.length===2?[n[0],n[1],1]:n}function Hx(n,t){return t<=1?n:n+(n-1)*(t-1)}function Txt(n,t,e,s,r,o,a,i,u){let c,l,d;if(typeof n=="number"){c={top:n,bottom:n,left:n,right:n,type:n===0?"VALID":"NUMBER"};const p=Cxt([t,e],o,s,n,i);l=p[0],d=p[1]}else if(n==="same"){l=Math.ceil(t/s),d=Math.ceil(e/r);const h=Math.max(0,(l-1)*s+o-t),p=Math.max(0,(d-1)*r+a-e),f=Math.floor(h/2),m=h-f,g=Math.floor(p/2),y=p-g;c={top:f,bottom:m,left:g,right:y,type:"SAME"}}else if(n==="valid")c={top:0,bottom:0,left:0,right:0,type:"VALID"},l=Math.ceil((t-o+1)/s),d=Math.ceil((e-a+1)/r);else if(typeof n=="object"){const h=u==="channelsLast"?n[1][0]:n[2][0],p=u==="channelsLast"?n[1][1]:n[2][1],f=u==="channelsLast"?n[2][0]:n[3][0],m=u==="channelsLast"?n[2][1]:n[3][1];c={top:h,bottom:p,left:f,right:m,type:h===0&&p===0&&f===0&&m===0?"VALID":"EXPLICIT"},l=Lm((t-o+h+p)/s+1,i),d=Lm((e-a+f+m)/r+1,i)}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:c,outHeight:l,outWidth:d}}function Lm(n,t){if(!t)return Math.trunc(n);switch(t){case"round":return Math.round(n);case"ceil":return Math.ceil(n);case"floor":return Math.floor(n);default:throw new Error(`Unknown roundingMode ${t}`)}}function Mm(n){const[t,e,s]=Pm(n);return t===1&&e===1&&s===1}function Qa(n,t){return Mm(n)||Mm(t)}function Hr(n,t,e){if(e!=null){if(typeof t=="string")throw Error(`Error in ${n}: pad must be an integer when using dimRoundingMode ${e} but got pad ${t}.`);if(typeof t=="number")L(Jd(t),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${e} but got pad ${t}.`);else if(typeof t=="object")t.forEach(s=>{s.forEach(r=>{L(Jd(r),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${e} but got pad ${r}.`)})});else throw Error(`Error in ${n}: Unknown padding parameter: ${t}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ext(n,t){const s={x:E(n,"x","reshape","string_or_numeric")},r={shape:t};return q.runKernel(Dgt,s,r)}const it=B({reshape_:Ext});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Axt(n,t,e,s,r){const o=E(n,"x","avgPool","float32"),a=1;L(Qa(e,a),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${e} and dilations '${a}'`);let i=o,u=!1;o.rank===3&&(u=!0,i=it(o,[1,o.shape[0],o.shape[1],o.shape[2]])),L(i.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`),Hr("avgPool",s,r);const c={x:i},l={filterSize:t,strides:e,pad:s,dimRoundingMode:r};let d=q.runKernel(Xft,c,l);return d=Tn(d,o.dtype),u?it(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const ER=B({avgPool_:Axt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dxt(n,t,e,s,r,o="NDHWC"){const a=E(n,"x","avgPool3d","float32");let i=a,u=!1;a.rank===4&&(u=!0,i=it(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),L(i.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${i.rank}.`),L(o==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${o}`),Hr("avgPool3d",s,r);const c={x:i},l={filterSize:t,strides:e,pad:s,dimRoundingMode:r,dataFormat:o};let d=q.runKernel(Yft,c,l);return d=Tn(d,i.dtype),u?it(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const Rxt=B({avgPool3d_:Dxt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fxt(n,t=0){L(n.length>=1,()=>"Pass at least one tensor to concat");const e=Fm(n,"tensors","concat","string_or_numeric");if(e[0].dtype==="complex64"&&e.forEach(o=>{if(o.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${o.dtype}. `)}),e.length===1)return Sa(e[0]);const s=e,r={axis:t};return q.runKernel(omt,s,r)}const us=B({concat_:Fxt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oxt(n){const e={x:E(n,"x","sigmoid","float32")};return q.runKernel(qgt,e)}const Mu=B({sigmoid_:Oxt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pxt(n,t,e){const s=E(n,"x","slice","string_or_numeric");if(s.rank===0)throw new Error("Slicing scalar is not possible");const r={x:s},o={begin:t,size:e};return q.runKernel(Ugt,r,o)}const Le=B({slice_:Pxt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lxt(n){const e={x:E(n,"x","tanh","float32")};return q.runKernel(hyt,e)}const jx=B({tanh_:Lxt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mxt(n,t,e,s,r,o){const a=E(n,"forgetBias","basicLSTMCell"),i=E(t,"lstmKernel","basicLSTMCell"),u=E(e,"lstmBias","basicLSTMCell"),c=E(s,"data","basicLSTMCell"),l=E(r,"c","basicLSTMCell"),d=E(o,"h","basicLSTMCell"),h=us([c,d],1),p=_e(h,i),f=En(p,u),m=f.shape[0],g=f.shape[1]/4,y=[m,g],b=Le(f,[0,0],y),x=Le(f,[0,g],y),w=Le(f,[0,g*2],y),v=Le(f,[0,g*3],y),k=En(Yt(Mu(b),jx(x)),Yt(l,Mu(En(a,w)))),S=Yt(jx(k),Mu(v));return[k,S]}const Bxt=B({basicLSTMCell_:Mxt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zxt(n,t,e){const s=E(n,"x","batchToSpaceND"),r=t.reduce((i,u)=>i*u);L(s.rank>=1+t.length,()=>`input rank is ${s.rank} but should be > than blockShape.length ${t.length}`),L(e.length===t.length,()=>`crops.length is ${e.length} but should be equal to blockShape.length  ${t.length}`),L(s.shape[0]%r===0,()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${r}`);const o={x:s},a={blockShape:t,crops:e};return q.runKernel(Zft,o,a)}const AR=B({batchToSpaceND_:zxt});function Vxt(n){let t;return n.rank===0||n.rank===1?t=it(n,[1,1,1,n.size]):n.rank===2?t=it(n,[1,1,n.shape[0],n.shape[1]]):n.rank===3?t=it(n,[1,n.shape[0],n.shape[1],n.shape[2]]):t=n,t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wxt(n,t,e,s,r,o){o==null&&(o=.001);const a=E(n,"x","batchNorm"),i=E(t,"mean","batchNorm"),u=E(e,"variance","batchNorm");let c;r!=null&&(c=E(r,"scale","batchNorm"));let l;s!=null&&(l=E(s,"offset","batchNorm")),L(i.rank===u.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),L(l==null||i.rank===l.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),L(c==null||i.rank===c.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const h={x:Vxt(a),scale:c,offset:l,mean:i,variance:u},p={varianceEpsilon:o},f=q.runKernel(Pmt,h,p);return it(f,a.shape)}const Py=B({batchNorm_:Wxt});function Uxt(n,t,e,s,r,o){const a=E(n,"x","batchNorm"),i=E(t,"mean","batchNorm"),u=E(e,"variance","batchNorm");let c;r!=null&&(c=E(r,"scale","batchNorm"));let l;return s!=null&&(l=E(s,"offset","batchNorm")),L(a.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${a.rank}.`),L(i.rank===2||i.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${i.rank}.`),L(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`),c!=null&&L(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${c.rank}.`),l!=null&&L(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${l.rank}.`),Py(a,i,u,l,c,o)}const Gxt=B({batchNorm2d_:Uxt});function Hxt(n,t,e,s,r,o){const a=E(n,"x","batchNorm"),i=E(t,"mean","batchNorm"),u=E(e,"variance","batchNorm");let c;r!=null&&(c=E(r,"scale","batchNorm"));let l;return s!=null&&(l=E(s,"offset","batchNorm")),L(a.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${a.rank}.`),L(i.rank===3||i.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${i.rank}.`),L(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`),c!=null&&L(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${c.rank}.`),l!=null&&L(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${l.rank}.`),Py(a,i,u,l,c,o)}const jxt=B({batchNorm3d_:Hxt});function qxt(n,t,e,s,r,o){const a=E(n,"x","batchNorm"),i=E(t,"mean","batchNorm"),u=E(e,"variance","batchNorm");let c;r!=null&&(c=E(r,"scale","batchNorm"));let l;return s!=null&&(l=E(s,"offset","batchNorm")),L(a.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${a.rank}.`),L(i.rank===4||i.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${i.rank}.`),L(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`),c!=null&&L(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${c.rank}.`),l!=null&&L(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${l.rank}.`),Py(a,i,u,l,c,o)}const Kxt=B({batchNorm4d_:qxt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xxt(n,t,e){const s=E(n,"x","bincount"),r=E(t,"weights","bincount");L(s.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`),L(e>=0,()=>`size must be non-negative, but got ${e}.`),L(r.size===s.size||r.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${r.shape}.`);const o={x:s,weights:r},a={size:e};return q.runKernel(Qft,o,a)}const DR=B({bincount_:Xxt});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yxt(n,t){const e=E(n,"s0","broadcastArgs","int32"),s=E(t,"s1","broadcastArgs","int32");if(e.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${e.rank}`);if(s.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${s.rank}`);const r={s0:e,s1:s};return q.runKernel(tmt,r)}const Jxt=B({broadcastArgs_:Yxt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zxt(n,t){let e=E(n,"broadcastTo","x");const s=e.shape;if(t.some(c=>!(c>0)||c%1!==0))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<e.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${e.rank}.`);if(t.length>e.rank){const c=e.shape.slice();for(;c.length<t.length;)c.unshift(1);e=it(e,c)}const r=e.shape,o=Array.from(t);for(let c=t.length-1;c>=0;c--)if(r[c]===t[c])o[c]=1;else if(e.shape[c]!==1)throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${t}].`);if(o.map((c,l)=>c>1?l:-1).filter(c=>c>=0).length===0)return Sa(e);const i={x:e},u={reps:o};return q.runKernel(nR,i,u)}const jf=B({broadcastTo_:Zxt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qxt(n){const e={x:E(n,"x","ceil","float32")};return q.runKernel(emt,e)}const twt=B({ceil_:Qxt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ly(n,t,e){const s={shape:n,value:t,dtype:e};return q.runKernel(Dmt,{},s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ewt(n,t,e){const s=E(n,"x","clipByValue");if(L(t<=e,()=>`Error in clip: min (${t}) must be less than or equal to max (${e}).`),t===e)return Ly(s.shape,t,s.dtype);const r={x:s},o={clipValueMin:t,clipValueMax:e};return q.runKernel(nmt,r,o)}const nwt=B({clipByValue_:ewt});function swt(n){return us(n,0)}const rwt=B({concat1d_:swt});function owt(n,t){return us(n,t)}const awt=B({concat2d_:owt});function iwt(n,t){return us(n,t)}const uwt=B({concat3d_:iwt});function lwt(n,t){return us(n,t)}const cwt=B({concat4d_:lwt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dwt(n,t,e,s,r="NHWC",o=[1,1],a){const i=E(n,"x","conv2d","float32"),u=E(t,"filter","conv2d","float32");let c=i,l=!1;i.rank===3&&(l=!0,c=it(i,[1,i.shape[0],i.shape[1],i.shape[2]])),L(c.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${c.rank}.`),L(u.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`),Hr("conv2d",s,a);const d=r==="NHWC"?c.shape[3]:c.shape[1];L(d===u.shape[2],()=>`Error in conv2d: depth of input (${d}) must match input depth for filter ${u.shape[2]}.`),L(Qa(e,o),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${o}'`);const h={x:c,filter:u},p={strides:e,pad:s,dataFormat:r,dilations:o,dimRoundingMode:a},f=q.runKernel(amt,h,p);return l?it(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const My=B({conv2d_:dwt});function hwt(n,t,e,s,r="NWC",o=1,a){const i=E(n,"x","conv1d"),u=E(t,"filter","conv1d");let c=i,l=!1;i.rank===2&&(l=!0,c=it(i,[1,i.shape[0],i.shape[1]])),L(c.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${c.rank}.`),L(u.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`),Hr("conv1d",s,a),L(c.shape[2]===u.shape[1],()=>`Error in conv1d: depth of input (${c.shape[2]}) must match input depth for filter ${u.shape[1]}.`),L(Qa(e,o),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${e} and dilation '${o}'`),L(r==="NWC",()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`);const d=it(u,[1,u.shape[0],u.shape[1],u.shape[2]]),h=it(c,[c.shape[0],1,c.shape[1],c.shape[2]]),g=My(h,d,[1,e],s,"NHWC",[1,o],a);return l?it(g,[g.shape[2],g.shape[3]]):it(g,[g.shape[0],g.shape[2],g.shape[3]])}const pwt=B({conv1d_:hwt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fwt(n,t,e,s,r,o="NHWC",a){L(n.length===t.rank,()=>`Length of inShape (${n.length}) and rank of dy (${t.rank}) must match`);let i=n,u=t,c=!1;t.rank===3&&(c=!0,u=it(t,[1,t.shape[0],t.shape[1],t.shape[2]]),i=[1,n[0],n[1],n[2]]),L(i.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${i.length}.`),L(u.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`),L(e.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${e.rank}`);const l=o==="NHWC"?i[3]:i[1],d=o==="NHWC"?u.shape[3]:u.shape[1];L(l===e.shape[2],()=>`Error in conv2dDerInput: depth of input (${l}) must match input depth for filter ${e.shape[2]}.`),L(d===e.shape[3],()=>`Error in conv2dDerInput: depth of output (${d}) must match output depth for filter ${e.shape[3]}.`),Hr("conv2dDerInput",r,a);const h={dy:u,filter:e},p={strides:s,pad:r,dataFormat:o,dimRoundingMode:a,inputShape:i},f=q.runKernel(umt,h,p);return c?it(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const RR=B({conv2DBackpropInput_:fwt});function mwt(n,t,e,s,r,o){const a=E(n,"x","conv2dTranspose"),i=E(t,"filter","conv2dTranspose");return RR(e,a,i,s,r,"NHWC",o)}const gwt=B({conv2dTranspose_:mwt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ywt(n,t,e,s,r="NDHWC",o=[1,1,1]){const a=E(n,"x","conv3d"),i=E(t,"filter","conv3d");let u=a,c=!1;a.rank===4&&(c=!0,u=it(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),L(u.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`),L(i.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${i.rank}.`),L(u.shape[4]===i.shape[3],()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${i.shape[3]}.`),L(Qa(e,o),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${e} and dilations '${o}'`),L(r==="NDHWC",()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`);const l={x:u,filter:i},d={strides:e,pad:s,dataFormat:r,dilations:o},h=q.runKernel(lmt,l,d);return c?it(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const bwt=B({conv3d_:ywt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xwt(n,t,e,s,r){L(n.length===t.rank,()=>`Length of inShape (${n.length}) and rank of dy (${t.rank}) must match`);let o=n,a=t,i=!1;t.rank===4&&(i=!0,a=it(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),o=[1,n[0],n[1],n[2],n[3]]);const u=o[4],c=a.shape[4];L(o.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${o.length}.`),L(a.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${a.rank}`),L(e.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${e.rank}`),L(u===e.shape[3],()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${e.shape[3]}.`),L(c===e.shape[4],()=>`Error in conv3dDerInput: depth of output (${c}) must match output depth for filter ${e.shape[4]}.`);const l={dy:a,filter:e},d={pad:r,strides:s,inputShape:o},h=q.runKernel(cmt,l,d);return i?it(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const wwt=B({conv3DBackpropInput_:xwt});function vwt(n,t,e,s,r){const o=E(n,"x","conv3dTranspose"),a=E(t,"filter","conv3dTranspose");return wwt(e,o,a,s,r)}const Iwt=B({conv3dTranspose_:vwt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kwt(n){const e={x:E(n,"x","cos","float32")};return q.runKernel(dmt,e)}const $wt=B({cos_:kwt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Swt(n){const e={x:E(n,"x","cosh","float32")};return q.runKernel(hmt,e)}const Nwt=B({cosh_:Swt});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cwt(n,t=0,e=!1,s=!1){const o={x:E(n,"x","cumprod")},a={axis:t,exclusive:e,reverse:s};return q.runKernel(pmt,o,a)}const _wt=B({cumprod_:Cwt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Twt(n,t=0,e=!1,s=!1){const o={x:E(n,"x","cumsum")},a={axis:t,exclusive:e,reverse:s};return q.runKernel(fmt,o,a)}const Ewt=B({cumsum_:Twt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Awt(n,t,e,s=!1){const r=E(n,"x","denseBincount"),o=E(t,"weights","denseBincount");L(r.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${r.dtype}`),L(r.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${r.rank}.`),L(e>=0,()=>`size must be non-negative, but got ${e}.`),L(o.size===r.size||o.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${r.shape}, weights shape: ${o.shape}.`);const a={x:r,weights:o},i={size:e,binaryOutput:s};return q.runKernel(gmt,a,i)}const Dwt=B({denseBincount_:Awt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rwt(n,t,e="NHWC"){const s=E(n,"x","depthToSpace","float32"),r=e==="NHWC"?s.shape[1]:s.shape[2],o=e==="NHWC"?s.shape[2]:s.shape[3],a=e==="NHWC"?s.shape[3]:s.shape[1];L(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),L(r*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${r} and ${t}  for depthToSpace with input shape
    ${s.shape}`),L(o*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${o} and ${t} for depthToSpace with input shape
        ${s.shape}`),L(a%(t*t)===0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${a} for depthToSpace with input shape ${s.shape}`);const i={x:s},u={blockSize:t,dataFormat:e};return q.runKernel(ymt,i,u)}const Fwt=B({depthToSpace_:Rwt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Owt(n,t,e,s,r="NHWC",o=[1,1],a){const i=E(n,"x","depthwiseConv2d","float32"),u=E(t,"filter","depthwiseConv2d","float32");let c=i,l=!1;i.rank===3&&(l=!0,c=it(i,[1,i.shape[0],i.shape[1],i.shape[2]])),L(c.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`),L(u.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`);const d=r==="NHWC"?c.shape[3]:c.shape[1];L(d===u.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${d}) must match the inChannels dimension in filter ${u.shape[2]}.`),Hr("depthwiseConv2d",s,a);const h={x:c,filter:u},p={strides:e,pad:s,dataFormat:r,dilations:o,dimRoundingMode:a},f=q.runKernel(bmt,h,p);return l?it(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const gv=B({depthwiseConv2d_:Owt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pwt(n){const e={x:E(n,"x","diag")};return q.runKernel(vmt,e)}const Lwt=B({diag_:Pwt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mwt(n,t,e,s,r=[1,1],o="NHWC"){const a=E(n,"x","dilation2d"),i=E(t,"filter","dilation2d");L(a.rank===3||a.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${a.rank}.`),L(i.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${i.rank}.`),L(o==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${o}`);let u=a,c=!1;a.rank===3&&(u=it(a,[1,a.shape[0],a.shape[1],a.shape[2]]),c=!0);const l={x:u,filter:i},d={strides:e,pad:s,dilations:r},h=q.runKernel(Imt,l,d);return c?it(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const Bwt=B({dilation2d_:Mwt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zwt(n,t){let e=E(n,"a","equal","string_or_numeric"),s=E(t,"b","equal","string_or_numeric");[e,s]=Je(e,s),An(e.shape,s.shape);const r={a:e,b:s};return q.runKernel(Cmt,r)}const FR=B({equal_:zwt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vwt(n,t,e){const s=E(t,"a","where"),r=E(e,"b","where"),o=E(n,"condition","where","bool"),a=An(An(o.shape,s.shape),r.shape),i=jf(o,a),u=jf(s,a),c=jf(r,a),l={condition:i,t:u,e:c};return q.runKernel(Vgt,l)}const dl=B({where_:Vwt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wwt(n){const e={x:E(n,"x","zerosLike")};return q.runKernel(byt,e)}const yv=B({zerosLike_:Wwt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uwt(n,t){let e=E(n,"a","div"),s=E(t,"b","div");[e,s]=Je(e,s);const r=as(e,s),o=yv(r),a=FR(s,o);return dl(a,o,r)}const Gwt=B({divNoNan_:Uwt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hwt(n,t){const e=E(n,"t1","dot"),s=E(t,"t2","dot");L((e.rank===1||e.rank===2)&&(s.rank===1||s.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${e.rank} and ${s.rank}.`);const r=e.rank===1?e.size:e.shape[1],o=s.rank===1?s.size:s.shape[0];if(L(r===o,()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${o}.`),e.rank===1&&s.rank===1){const a=it(e,[1,-1]),i=it(s,[-1,1]),u=_e(a,i);return it(u,[])}else if(e.rank===1&&s.rank===2){const a=it(e,[1,-1]),i=it(s,[s.shape[0],s.shape[1]]),u=_e(a,i);return it(u,[u.size])}else if(e.rank===2&&s.rank===1){const a=it(s,[-1,1]),i=_e(e,a);return it(i,[i.size])}else{const a=it(s,[s.shape[0],s.shape[1]]);return _e(e,a)}}const jwt=B({dot_:Hwt});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qwt(n,...t){const e=t.map((r,o)=>E(r,`tensors${o}`,"einsum")),s={equation:n};return q.runKernel($mt,e,s)}const Kwt=B({einsum_:qwt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xwt(n){const e={x:E(n,"x","elu","float32")};return q.runKernel(Smt,e)}const OR=B({elu_:Xwt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ywt(n){let t=E(n,"x","erf");L(t.dtype==="int32"||t.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),t.dtype==="int32"&&(t=Tn(t,"float32"));const e={x:t};return q.runKernel(Nmt,e)}const Jwt=B({erf_:Ywt});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zwt(n,t,e){const s=n.length+t.length,r=[];let o=0,a=0;for(let i=0;i<s;i++)e.indexOf(i)===-1?r.push(n[o++]):r.push(t[a++]);return r}function By(n,t){const e=t.map(s=>1);return Zwt(n,e,t)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qwt(n,t=null,e=!1){const r={x:E(n,"x","max")},o={reductionIndices:t,keepDims:e};return q.runKernel(ngt,r,o)}const Bu=B({max_:Qwt});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t1t(n,t=null,e=!1){const r={x:E(n,"x","min")},o={axis:t,keepDims:e};return q.runKernel(ugt,r,o)}const qx=B({min_:t1t});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e1t(n,t){let e=E(n,"base","pow"),s=E(t,"exp","pow");[e,s]=Je(e,s);const r={a:e,b:s};return q.runKernel(kgt,r)}const bv=B({pow_:e1t});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ne(n,t){if((xo(n)&&t!=="string"||Array.isArray(n))&&t!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(t==="string"&&xo(n)&&!(n instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Za(n,[],[],t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n1t(n){const e={x:E(n,"x","sqrt","float32")};return q.runKernel(Xgt,e)}const Kx=B({sqrt_:n1t});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s1t(n){const t=E(n,"x","square"),e={};return q.runKernel("Square",{x:t},e)}const zy=B({square_:s1t});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r1t(n,t=null,e=!1){let s=E(n,"x","sum");s.dtype==="bool"&&(s=Tn(s,"int32"));const r={x:s},o={axis:t,keepDims:e};return q.runKernel(Ygt,r,o)}const We=B({sum_:r1t});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o1t(n,t="euclidean",e=null,s=!1){n=E(n,"x","norm");const r=PR(n,t,e);let o=r.shape;if(s){const a=Fy(e,n.shape);o=By(r.shape,a)}return it(r,o)}function PR(n,t,e=null){if(n.rank===0)return ir(n);if(n.rank!==1&&e===null)return PR(it(n,[-1]),t,e);if(n.rank===1||typeof e=="number"||Array.isArray(e)&&e.length===1){if(t===1)return We(ir(n),e);if(t===1/0)return Bu(ir(n),e);if(t===-1/0)return qx(ir(n),e);if(t==="euclidean"||t===2)return Kx(We(bv(ir(n),Ne(2,"int32")),e));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(e)&&e.length===2){if(t===1)return Bu(We(ir(n),e[0]),e[1]-1);if(t===1/0)return Bu(We(ir(n),e[1]),e[0]);if(t===-1/0)return qx(We(ir(n),e[1]),e[0]);if(t==="fro"||t==="euclidean")return Kx(We(zy(n),e));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${e}`)}const Vy=B({norm_:o1t});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a1t(n,t=null,e=!1){return Vy(n,"euclidean",t,e)}const i1t=B({euclideanNorm_:a1t});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u1t(n){const e={x:E(n,"x","exp")};return q.runKernel(_mt,e)}const Vi=B({exp_:u1t});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l1t(n,t=0){const e=E(n,"x","expandDims","string_or_numeric");L(t<=e.rank,()=>"Axis must be <= rank of the tensor");const s={input:e},r={dim:t};return q.runKernel(Tmt,s,r)}const ai=B({expandDims_:l1t});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c1t(n){const e={x:E(n,"x","expm1")};return q.runKernel(Emt,e)}const d1t=B({expm1_:c1t});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h1t(n,t){const e=E(n,"x","tile","string_or_numeric");L(e.rank===t.length,()=>`Error in transpose: rank of input ${e.rank} must match length of reps ${t}.`);const s={x:e},r={reps:t};return q.runKernel(nR,s,r)}const $d=B({tile_:h1t});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p1t(n,t,e,s="float32"){t==null&&(t=n);const r=Xo([n,t],s),o=n<=t?n:t;for(let i=0;i<o;++i)r.set(1,i,i);const a=it(r.toTensor(),[n,t]);if(e==null)return a;if(e.length===1)return $d(ai(a,0),[e[0],1,1]);if(e.length===2)return $d(ai(ai(a,0),0),[e[0],e[1],1,1]);if(e.length===3)return $d(ai(ai(ai(a,0),0),0),[e[0],e[1],e[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${e.length}D.`)}const LR=B({eye_:p1t});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f1t(n){const e={x:E(n,"x","floor","float32")};return q.runKernel(Fmt,e)}const MR=B({floor_:f1t});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m1t(n,t,e=0,s=0){const r=E(n,"x","gather"),o=E(t,"indices","gather","int32"),a={x:r,indices:o},i={axis:e,batchDims:s};return q.runKernel(Lmt,a,i)}const BR=B({gather_:m1t});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g1t(n,t){let e=E(n,"a","greater","string_or_numeric"),s=E(t,"b","greater","string_or_numeric");[e,s]=Je(e,s),An(e.shape,s.shape);const r={a:e,b:s};return q.runKernel(Bmt,r)}const Wy=B({greater_:g1t});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y1t(n,t){let e=E(n,"a","greaterEqual","string_or_numeric"),s=E(t,"b","greaterEqual","string_or_numeric");[e,s]=Je(e,s),An(e.shape,s.shape);const r={a:e,b:s};return q.runKernel(zmt,r)}const zR=B({greaterEqual_:y1t});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b1t(n){const e={x:E(n,"x","isFinite")};return q.runKernel(Umt,e)}const x1t=B({isFinite_:b1t});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w1t(n){const e={x:E(n,"x","isInf")};return q.runKernel(Gmt,e)}const v1t=B({isInf_:w1t});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I1t(n){const e={x:E(n,"x","isNaN")};return q.runKernel(Hmt,e)}const k1t=B({isNaN_:I1t});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $1t(n,t=.2){const s={x:E(n,"x","leakyRelu")},r={alpha:t};return q.runKernel(jmt,s,r)}const VR=B({leakyRelu_:$1t});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S1t(n,t){let e=E(n,"a","less","string_or_numeric"),s=E(t,"b","less","string_or_numeric");[e,s]=Je(e,s),An(e.shape,s.shape);const r={a:e,b:s};return q.runKernel(qmt,r)}const N1t=B({less_:S1t});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C1t(n,t){let e=E(n,"a","lessEqual","string_or_numeric"),s=E(t,"b","lessEqual","string_or_numeric");[e,s]=Je(e,s),An(e.shape,s.shape);const r={a:e,b:s};return q.runKernel(Kmt,r)}const xv=B({lessEqual_:C1t});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _1t(n,t,e){if(e<=0)throw new Error("The number of values should be positive.");const s={start:n,stop:t,num:e};return q.runKernel(Xmt,{},s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T1t(n,t=5,e=1,s=1,r=.5){const o=E(n,"x","localResponseNormalization");L(o.rank===4||o.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${o.rank}.`),L(Jd(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let a=o,i=!1;o.rank===3&&(i=!0,a=it(o,[1,o.shape[0],o.shape[1],o.shape[2]]));const u={x:a},c={depthRadius:t,bias:e,alpha:s,beta:r},l=q.runKernel(egt,u,c);return i?it(l,[l.shape[1],l.shape[2],l.shape[3]]):l}const E1t=B({localResponseNormalization_:T1t});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A1t(n){const e={x:E(n,"x","log","float32")};return q.runKernel(Ymt,e)}const Qd=B({log_:A1t});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D1t(n){const e={x:E(n,"x","log1p")};return q.runKernel(Jmt,e)}const WR=B({log1p_:D1t});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yo(n){return q.customGrad(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R1t(n){const e={x:E(n,"x","softplus")};return q.runKernel(Kgt,e)}const UR=B({softplus_:R1t});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F1t(n){const t=E(n,"x","logSigmoid");return Yo(s=>({value:zo(UR(zo(s))),gradFunc:a=>Yt(a,Mu(zo(s)))}))(t)}const O1t=B({logSigmoid_:F1t});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P1t(n,t){let e=E(n,"a","sub"),s=E(t,"b","sub");[e,s]=Je(e,s);const r={a:e,b:s};return q.runKernel(cyt,r)}const be=B({sub_:P1t});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L1t(n,t=-1){const e=E(n,"logits","logSoftmax");if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and axis was ${t}`);return Yo((r,o)=>{const i=Bu(r,t,!0),u=be(r,i),c=be(Tn(u,"float32"),Qd(We(Vi(u),t,!0)));return o([c]),{value:c,gradFunc:(d,h)=>{const[p]=h,f=!0,m=Vi(p);return be(d,Yt(We(d,t,f),m))}}})(e)}const M1t=B({logSoftmax_:L1t});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B1t(n,t=null,e=!1){const s=E(n,"x","logSumExp"),r=Fy(t,s.shape),o=Bu(s,r,!0),a=be(s,o),i=Vi(a),u=We(i,r),c=Qd(u),l=En(it(o,c.shape),c);if(e){const d=By(l.shape,r);return it(l,d)}return l}const GR=B({logSumExp_:B1t});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z1t(n,t){const e=E(n,"a","logicalAnd","bool"),s=E(t,"b","logicalAnd","bool");An(e.shape,s.shape);const r={a:e,b:s};return q.runKernel(Zmt,r)}const Bm=B({logicalAnd_:z1t});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V1t(n){const e={x:E(n,"x","logicalNot","bool")};return q.runKernel(Qmt,e)}const HR=B({logicalNot_:V1t});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W1t(n,t){const e=E(n,"a","logicalOr","bool"),s=E(t,"b","logicalOr","bool");An(e.shape,s.shape);const r={a:e,b:s};return q.runKernel(tgt,r)}const jR=B({logicalOr_:W1t});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U1t(n,t){const e=E(n,"a","logicalXor","bool"),s=E(t,"b","logicalXor","bool");return An(e.shape,s.shape),Bm(jR(n,t),HR(Bm(n,t)))}const G1t=B({logicalXor_:U1t});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tf=2147483648;function H1t(n,t,e="left"){const s=E(n,"sortedSequence","searchSorted"),r=E(t,"values","searchSorted"),o=s.shape[s.shape.length-1],a=r.shape[r.shape.length-1],i=it(s,[-1,o]),u=it(r,[-1,a]);if(i.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(i.shape[0]!==u.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(Ln(u.shape)>=Tf)throw new Error(`values tensor size must less than ${Tf}`);if(i.shape[1]>=Tf)throw new Error(`trailing dim_size must less than ${Tf} for int32 output type, was ${i.shape[1]}`);const c={sortedSequence:i,values:u},l={side:e};return q.runKernel(zgt,c,l)}const wv=B({searchSorted_:H1t});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j1t(n,t){return wv(n,t,"left")}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q1t(n,t,e,s,r){const o=E(n,"x","maxPool"),a=1;let i=o,u=!1;o.rank===3&&(u=!0,i=it(o,[1,o.shape[0],o.shape[1],o.shape[2]])),L(i.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`),L(Qa(e,a),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${e} and dilations '${a}'`),Hr("maxPool",s,r);const c={x:i},l={filterSize:t,strides:e,pad:s,dimRoundingMode:r},d=q.runKernel(rgt,c,l);return u?it(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const qR=B({maxPool_:q1t});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K1t(n,t=[1,1,1],e,s,r,o="NDHWC"){const a=E(n,"x","maxPool3d");let i=a,u=!1;a.rank===4&&(u=!0,i=it(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),L(i.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${i.rank}.`),L(o==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${o}`),Hr("maxPool3d",s,r);const c={x:i},l={filterSize:t,strides:e,pad:s,dimRoundingMode:r,dataFormat:o},d=q.runKernel(ogt,c,l);return u?it(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const X1t=B({maxPool3d_:K1t});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y1t(n,t,e,s,r=!1){const a={x:E(n,"x","maxPoolWithArgmax")},i={filterSize:t,strides:e,pad:s,includeBatchInIndex:r},u=q.runKernel(agt,a,i);return{result:u[0],indexes:u[1]}}const J1t=B({maxPoolWithArgmax_:Y1t});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z1t(n,t){let e=E(n,"a","maximum"),s=E(t,"b","maximum");[e,s]=Je(e,s),e.dtype==="bool"&&(e=Tn(e,"int32"),s=Tn(s,"int32")),An(e.shape,s.shape);const r={a:e,b:s};return q.runKernel(sgt,r)}const Q1t=B({maximum_:Z1t});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t0t(n,t=null,e=!1){const r={x:E(n,"x","mean")},o={axis:t,keepDims:e};return q.runKernel(igt,r,o)}const zm=B({mean_:t0t});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hl(n,t="float32"){if(t==="complex64"){const s=hl(n,"float32"),r=hl(n,"float32");return Ma(s,r)}const e=uv(Ln(n),t);return q.makeTensor(e,n,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pi(n,t="float32"){if(t==="complex64"){const s=pi(n,"float32"),r=hl(n,"float32");return Ma(s,r)}const e=XD(Ln(n),t);return q.makeTensor(e,n,t)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e0t(n,t,{indexing:e="xy"}={}){if(e!=="xy"&&e!=="ij")throw new TypeError(`${e} is not a valid third argument to meshgrid`);if(n===void 0)return[];let s=E(n,"x","meshgrid",n instanceof Gn?n.dtype:"float32");if(t===void 0)return[s];let r=E(t,"y","meshgrid",t instanceof Gn?t.dtype:"float32");const o=Ln(s.shape),a=Ln(r.shape);return e==="xy"?(s=it(s,[1,-1]),r=it(r,[-1,1]),[_e(pi([a,1],s.dtype),s),_e(r,pi([1,o],r.dtype))]):(s=it(s,[-1,1]),r=it(r,[1,-1]),[_e(s,pi([1,a],s.dtype)),_e(pi([o,1],r.dtype),r)])}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n0t(n,t){let e=E(n,"a","minimum"),s=E(t,"b","minimum");[e,s]=Je(e,s),e.dtype==="bool"&&(e=Tn(e,"int32"),s=Tn(s,"int32")),An(e.shape,s.shape);const r={a:e,b:s};return q.runKernel(lgt,r)}const KR=B({minimum_:n0t});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s0t(n,t,e){L(e==="reflect"||e==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${e}.`);const s=E(n,"x","mirrorPad");if(s.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");L(t.length===s.rank,()=>`Padding doesn't match input. Must be ${s.rank}. Got ${t.length}.`);const r=e==="reflect"?1:0;for(let i=0;i<s.rank;i++)L(t[i].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),L(t[i][0]>=0&&t[i][0]<=s.shape[i]-r&&t[i][1]>=0&&t[i][1]<=s.shape[i]-r,()=>`Padding in dimension ${i} cannot be greater than or equal to ${s.shape[i]-r} or less than 0 for input of shape ${s.shape}`);const o={paddings:t,mode:e},a={x:s};return q.runKernel(cgt,a,o)}const r0t=B({mirrorPad_:s0t});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o0t(n,t){let e=E(n,"a","mod"),s=E(t,"b","mod");[e,s]=Je(e,s);const r={a:e,b:s};return q.runKernel(dgt,r)}const a0t=B({mod_:o0t});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i0t(n,t=null,e=!1){n=E(n,"x","moments");const s=Fy(t,n.shape),r=zm(n,s,e);let o=r.shape;e||(o=By(r.shape,s));const a=zy(be(Tn(n,"float32"),it(r,o))),i=zm(a,s,e);return{mean:r,variance:i}}const u0t=B({moments_:i0t});function l0t(n,t,e,s){const r=E(t,"data","multiRNNCell"),o=Fm(e,"c","multiRNNCell"),a=Fm(s,"h","multiRNNCell");let i=r;const u=[];for(let d=0;d<n.length;d++){const h=n[d](i,o[d],a[d]);u.push(h[0]),u.push(h[1]),i=h[1]}const c=[],l=[];for(let d=0;d<u.length;d+=2)c.push(u[d]),l.push(u[d+1]);return[c,l]}const c0t=B({multiRNNCell_:l0t});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d0t(n,t,e,s=!1){const r=E(n,"logits","multinomial"),o=r.size,a=r.rank;if(o<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${o}.`);if(a>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${a}`);e=e||Math.random();const u={logits:a===1?it(r,[1,-1]):r},c={numSamples:t,seed:e,normalized:s},l=q.runKernel(hgt,u,c);return a===1?it(l,[l.size]):l}const h0t=B({multinomial_:d0t});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p0t(n,t){let e=E(n,"a","notEqual","string_or_numeric"),s=E(t,"b","notEqual","string_or_numeric");[e,s]=Je(e,s),An(e.shape,s.shape);const r={a:e,b:s};return q.runKernel(mgt,r)}const XR=B({notEqual_:p0t});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f0t(n){const e={x:E(n,"x","onesLike")};return q.runKernel(xgt,e)}const m0t=B({onesLike_:f0t});function g0t(n,t){const e=E(n,"v1","outerProduct"),s=E(t,"v2","outerProduct");L(e.rank===1&&s.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${e.rank} and ${s.rank}.`);const r=it(e,[-1,1]),o=it(s,[1,-1]);return _e(r,o)}const y0t=B({outerProduct_:g0t});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b0t(n,t,e=0){const s=E(n,"x","pad");if(s.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const r={paddings:t,constantValue:e},o={x:s};return q.runKernel(Igt,o,r)}const nf=B({pad_:b0t});function x0t(n,t,e=0){return L(t.length===2,()=>"Invalid number of paddings. Must be length of 2."),nf(n,[t],e)}const w0t=B({pad1d_:x0t});function v0t(n,t,e=0){return L(t.length===2&&t[0].length===2&&t[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),nf(n,t,e)}const I0t=B({pad2d_:v0t});function k0t(n,t,e=0){return L(t.length===3&&t[0].length===2&&t[1].length===2&&t[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),nf(n,t,e)}const $0t=B({pad3d_:k0t});function S0t(n,t,e=0){return L(t.length===4&&t[0].length===2&&t[1].length===2&&t[2].length===2&&t[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),nf(n,t,e)}const N0t=B({pad4d_:S0t});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C0t(n,t,e){const s=E(n,"x","spaceToBatchND");L(s.rank>=1+t.length,()=>`input rank ${s.rank} should be > than [blockShape] ${t.length}`),L(e.length===t.length,()=>`paddings.shape[0] ${e.length} must be equal to [blockShape] ${t.length}`),L(s.shape.reduce((a,i,u)=>u>0&&u<=t.length?a&&(i+e[u-1][0]+e[u-1][1])%t[u-1]===0:a,!0),()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${e.toString()} must be divisible by blockShapes ${t.toString()}`);const r={x:s},o={blockShape:t,paddings:e};return q.runKernel(Jgt,r,o)}const YR=B({spaceToBatchND_:C0t});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _0t(n,t,e,s,r,o,a){r==null&&(r=[1,1]),o==null&&(o=1),s===0&&(s="valid");const i=E(n,"x","maxPool");let u=i,c=!1;i.rank===3&&(c=!0,u=it(i,[1,i.shape[0],i.shape[1],i.shape[2]])),L(Qa(o,r),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${o} and dilations '${r}'`);const l=Nxt(u.shape,t,o,r,s),d=[l.dilationHeight,l.dilationWidth];let h;s==="same"?h=E0t([l.filterHeight,l.filterWidth],d):h=[[0,0],[0,0]];const p=d[0]===1&&d[1]===1,[f,m]=T0t([l.inHeight,l.inWidth],d,h),g=p?s:"valid",y=p?u:YR(u,d,f),x=(e==="avg"?()=>ER(y,t,o,g,a):()=>qR(y,t,o,g,a))(),w=p?x:AR(x,d,m);return c?it(w,[w.shape[1],w.shape[2],w.shape[3]]):w}function T0t(n,t,e){const s=e.map(l=>l[0]),r=e.map(l=>l[1]),o=n.concat(s,r),a=t.map((l,d)=>(l-o[d]%l)%l),i=r.map((l,d)=>l+a[d]),u=t.map((l,d)=>[s[d],i[d]]),c=t.map((l,d)=>[0,a[d]]);return[u,c]}function E0t(n,t){const s=n.map((a,i)=>a+(a-1)*(t[i]-1)).map(a=>a-1),r=s.map(a=>Math.floor(a/2)),o=s.map((a,i)=>a-r[i]);return s.map((a,i)=>[r[i],o[i]])}const A0t=B({pool_:_0t});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D0t(n,t){const e=E(n,"x","prelu"),s=E(t,"alpha","prelu"),r={x:e,alpha:s};return q.runKernel($gt,r)}const JR=B({prelu_:D0t});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R0t(n,t=null,e=!1){let s=E(n,"x","prod");s.dtype==="bool"&&(s=Tn(s,"int32"));const r={x:s},o={axis:t,keepDims:e};return q.runKernel(Sgt,r,o)}const F0t=B({prod_:R0t});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O0t(n,t,e,s){const r=n.map((l,d)=>E(l,`tensors${d}`,"raggedGather","int32")),o=E(t,"paramsDenseValues","raggedGather"),a=E(e,"indices","raggedGather","int32"),i={paramsNestedSplits:r,paramsDenseValues:o,indices:a},u={outputRaggedRank:s},c=q.runKernel(Ngt,i,u);return{outputNestedSplits:c.slice(0,c.length-1),outputDenseValues:c[c.length-1]}}const P0t=B({raggedGather_:O0t});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L0t(n,t,e,s,r){const o=E(n,"shape","raggedTensorToTensor","int32"),a=E(t,"values","raggedTensorToTensor"),i=E(e,"defaultValue","raggedTensorToTensor",a.dtype),u=s.map((d,h)=>E(d,`tensors${h}`,"raggedTensorToTensor","int32")),c={shape:o,values:a,defaultValue:i,rowPartitionTensors:u},l={rowPartitionTypes:r};return q.runKernel(Cgt,c,l)}const M0t=B({raggedTensorToTensor_:L0t});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B0t(n,t,e){const s=Ln(n);let r=null;if(e==null||e==="float32")r=new Float32Array(s);else if(e==="int32")r=new Int32Array(s);else if(e==="bool")r=new Uint8Array(s);else throw new Error(`Unknown data type ${e}`);for(let o=0;o<s;o++)r[o]=t();return q.makeTensor(r,n,e)}const z0t=B({rand_:B0t});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vv{constructor(t,e,s,r,o){this.mean=t,this.stdDev=e,this.dtype=s,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);const a=o||Math.random();this.random=Mc.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const r=this.nextVal;return this.nextVal=NaN,r}let t,e,s=!1;for(;!s;){let r,o,a;do r=2*this.random()-1,o=2*this.random()-1,a=r*r+o*o;while(a>=1||a===0);const i=Math.sqrt(-2*Math.log(a)/a);t=this.mean+this.stdDev*r*i,e=this.mean+this.stdDev*o*i,(!this.truncated||this.isValidTruncated(t))&&(s=!0)}return(!this.truncated||this.isValidTruncated(e))&&(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return this.dtype==null||this.dtype==="float32"?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}}class V0t{constructor(t,e,s,r){this.alpha=t,this.beta=1/e,this.dtype=s;const o=r||Math.random();this.randu=Mc.alea(o.toString()),this.randn=new vv(0,1,s,!1,this.randu()),t<1?this.d=t+2/3:this.d=t-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let t,e,s,r,o,a;for(;;){do r=this.randn.nextValue(),a=1+this.c*r;while(a<=0);if(a*=a*a,t=r*r,e=1-.331*t*t,s=.5*t+this.d*(1-a+Math.log(a)),o=this.randu(),o<e||Math.log(o)<s)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(t){return this.dtype==="float32"?t:Math.round(t)}}class W0t{constructor(t=0,e=1,s,r){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=t,this.range=e-t,this.dtype=s,r==null&&(r=Math.random()),typeof r=="number"&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${t} - ${e} <= 1 and dtype is not float`);this.random=Mc.alea(r)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U0t(n,t,e=1,s="float32",r){if(e==null&&(e=1),s==null&&(s="float32"),s!=="float32"&&s!=="int32")throw new Error(`Unsupported data type ${s}`);const o=new V0t(t,e,s,r),a=Xo(n,s);for(let i=0;i<a.values.length;i++)a.values[i]=o.nextValue();return a.toTensor()}const G0t=B({randomGamma_:U0t});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H0t(n,t=0,e=1,s,r){if(s!=null&&s==="bool")throw new Error(`Unsupported data type ${s}`);const o=new vv(t,e,s,!1,r),a=Xo(n,s);for(let i=0;i<a.values.length;i++)a.values[i]=o.nextValue();return a.toTensor()}const ZR=B({randomNormal_:H0t});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j0t(n,t,e){if(t!=null&&t==="bool")throw new Error(`Unsupported data type ${t}`);return ZR(n,0,1,t,e)}const q0t=B({randomStandardNormal_:j0t});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K0t(n,t=0,e=1,s="float32",r){const o=Xo(n,s),a=new W0t(t,e,null,r);for(let i=0;i<o.values.length;i++)o.values[i]=a.nextValue();return o.toTensor()}const QR=B({randomUniform_:K0t});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function th(n,t,e=1,s="float32"){if(e===0)throw new Error("Cannot have a step of zero");const r={start:n,stop:t,step:e,dtype:s};return q.runKernel(_gt,{},r)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X0t(n){const e={x:E(n,"x","reciprocal")};return q.runKernel(Egt,e)}const Y0t=B({reciprocal_:X0t});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J0t(n){const e={x:E(n,"x","relu")};return q.runKernel(Agt,e)}const Uy=B({relu_:J0t});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z0t(n){const e={x:E(n,"x","relu6")};return q.runKernel(Ogt,e)}const tF=B({relu6_:Z0t});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q0t(n,t){const s={x:E(n,"x","reverse")},r={dims:t};return q.runKernel(Pgt,s,r)}const Wi=B({reverse_:Q0t});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tvt(n){const t=E(n,"x","reverse");return L(t.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),Wi(t,0)}const evt=B({reverse1d_:tvt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nvt(n,t){const e=E(n,"x","reverse");return L(e.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${e.rank}.`),Wi(e,t)}const svt=B({reverse2d_:nvt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rvt(n,t){const e=E(n,"x","reverse");return L(e.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${e.rank}.`),Wi(e,t)}const ovt=B({reverse3d_:rvt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function avt(n,t){const e=E(n,"x","reverse");return L(e.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${e.rank}.`),Wi(e,t)}const ivt=B({reverse4d_:avt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uvt(n){const e={x:E(n,"x","round")};return q.runKernel(Lgt,e)}const eF=B({round_:uvt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lvt(n){const e={x:E(n,"x","rsqrt","float32")};return q.runKernel(Mgt,e)}const cvt=B({rsqrt_:lvt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dvt(n){const e={x:E(n,"x","selu")};return q.runKernel(Wgt,e)}const hvt=B({selu_:dvt});function pvt(n,t,e,s,r,o=[1,1],a="NHWC"){const i=E(n,"x","separableConv2d"),u=E(t,"depthwiseFilter","separableConv2d"),c=E(e,"pointwiseFilter","separableConv2d");let l=i,d=!1;if(i.rank===3&&(d=!0,l=it(i,[1,i.shape[0],i.shape[1],i.shape[2]])),a==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");L(l.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${l.rank}.`),L(u.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`),L(c.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`),L(c.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${c.shape[0]}.`),L(c.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${c.shape[1]}.`);const h=u.shape[2],p=u.shape[3];L(c.shape[2]===h*p,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${h*p}, but got ${c.shape[2]}.`);const f=gv(l,u,s,r,a,o),g=My(f,c,1,"valid",a);return d?it(g,[g.shape[1],g.shape[2],g.shape[3]]):g}const fvt=B({separableConv2d_:pvt});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function mvt(n,t){const e=E(n,"x","setdiff1d"),s=E(t,"y","setdiff1d");L(e.dtype===s.dtype,()=>`x and y should have the same dtype, but got x (${e.dtype}) and y (${s.dtype}).`),L(e.rank===1,()=>`x should be 1D tensor, but got x (${e.shape}).`),L(s.rank===1,()=>`y should be 1D tensor, but got y (${s.shape}).`);const r=await e.data(),o=await s.data(),a=new Set(o);let i=0;for(let l=0;l<r.length;l++)a.has(r[l])||i++;const u=new Rx([i],e.dtype),c=new Rx([i],"int32");for(let l=0,d=0;l<r.length;l++)a.has(r[l])||(u.values[d]=r[l],c.values[d]=l,d++);return[u.toTensor(),c.toTensor()]}const gvt=mvt;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yvt(n){const e={x:E(n,"x","sign")};return q.runKernel(jgt,e)}const bvt=B({sign_:yvt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xvt(n){const e={x:E(n,"x","sin","float32")};return q.runKernel(Ggt,e)}const wvt=B({sin_:xvt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vvt(n){const e={x:E(n,"x","sinh")};return q.runKernel(Hgt,e)}const Ivt=B({sinh_:vvt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kvt(n,t,e){const s=E(n,"x","slice1d");return L(s.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`),Le(s,[t],[e])}const $vt=B({slice1d_:kvt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Svt(n,t,e){const s=E(n,"x","slice2d");return L(s.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`),Le(s,t,e)}const Nvt=B({slice2d_:Svt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cvt(n,t,e){const s=E(n,"x","slice3d");return L(s.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`),Le(s,t,e)}const _vt=B({slice3d_:Cvt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tvt(n,t,e){const s=E(n,"x","slice4d");return L(s.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`),Le(s,t,e)}const Evt=B({slice4d_:Tvt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Avt(n,t=-1){const e=E(n,"logits","softmax","float32");if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and dim was ${t}`);const s={logits:e},r={dim:t};return q.runKernel(Qgt,s,r)}const Dvt=B({softmax_:Avt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rvt(n){L(n.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${n.dtype}.`);const t={input:n};return q.runKernel(Amt,t)}const Iv=B({fft_:Rvt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fvt(n){L(n.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${n.dtype}.`);const t={input:n};return q.runKernel(Vmt,t)}const Vm=B({ifft_:Fvt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ovt(n){const t=n.shape[n.shape.length-1],e=n.size/t;let s;if(t<=2){const r=it(n,[e,t]);s=Vm(r)}else{const r=[e,2*(t-1)],o=it(Zd(n),[e,t]),a=it(Oy(n),[e,t]),i=Wi(Le(o,[0,1],[e,t-2]),1),u=Yt(Wi(Le(a,[0,1],[e,t-2]),1),Ne(-1)),c=us([o,i],1),l=us([a,u],1),d=it(Ma(c,l),[r[0],r[1]]);s=Vm(d)}if(s=Zd(s),n.rank===3&&n.shape[0]!==0){const r=s,o=n.shape[0];s=it(s,[o,s.shape[0]/o,s.shape[1]]),r.dispose()}return s}const nF=B({irfft_:Ovt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pvt(n,t,e=0){const r={x:E(n,"x","split")},o={numOrSizeSplits:t,axis:e};return q.runKernel(Zgt,r,o)}const eh=B({split_:Pvt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lvt(n,t){L(n.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${n.dtype}`);let e=n.shape[n.shape.length-1];const s=n.size/e;let r;if(t!=null&&t<e){const f=n.shape.map(g=>0),m=n.shape.map(g=>g);m[n.shape.length-1]=t,r=Le(n,f,m),e=t}else if(t!=null&&t>e){const f=n.shape.map(m=>m);f[n.shape.length-1]=t-e,r=us([n,hl(f)],n.shape.length-1),e=t}else r=n;const o=yv(r),a=it(Ma(r,o),[s,e]),i=Iv(a),u=Math.floor(e/2)+1,c=Zd(i),l=Oy(i),d=eh(c,[u,e-u],c.shape.length-1),h=eh(l,[u,e-u],l.shape.length-1),p=r.shape.slice();return p[r.shape.length-1]=u,it(Ma(d[0],h[0]),p)}const kv=B({rfft_:Lvt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mvt(n,t){let e=E(n,"a","squaredDifference"),s=E(t,"b","squaredDifference");[e,s]=Je(e,s),An(e.shape,s.shape);const r={a:e,b:s},o={};return q.runKernel(oyt,r,o)}const sF=B({squaredDifference_:Mvt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bvt(n,t){const e=E(n,"x","squeeze","string_or_numeric");return it(e,Ift(e.shape,t).newShape)}const $v=B({squeeze_:Bvt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zvt(n,t=0){const e=Fm(n,"tensors","stack","string_or_numeric");L(e.length>=1,()=>"Pass at least one tensor to tf.stack"),e.length>0&&L(t<=e[0].rank,()=>"Axis must be <= rank of the tensor");const s=e,r={axis:t};return q.runKernel(vgt,s,r)}const Jo=B({stack_:zvt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vvt(n,t=0){const s={x:E(n,"x","step")},r={alpha:t};return q.runKernel(xyt,s,r)}const rF=B({step_:Vvt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wvt(n,t,e,s,r=0,o=0,a=0,i=0,u=0){const l={x:E(n,"x","stridedSlice","string_or_numeric")},d={begin:t,end:e,strides:s,beginMask:r,endMask:o,ellipsisMask:a,newAxisMask:i,shrinkAxisMask:u};return q.runKernel(ayt,l,d)}const Uvt=B({stridedSlice_:Wvt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gvt(n){const e={x:E(n,"x","tan","float32")};return q.runKernel(dyt,e)}const Hvt=B({tan_:Gvt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hr(n,t){Yc(n);const e=Ja(n,t);if(e.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Za(n,null,e,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zu(n,t,e){if(Yc(n),t!=null&&t.length!==2)throw new Error("tensor2d() requires shape to have two numbers");const s=Ja(n,e);if(s.length!==2&&s.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Za(n,t,s,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jvt(n,t,e){if(Yc(n),t!=null&&t.length!==4)throw new Error("tensor4d() requires shape to have four numbers");const s=Ja(n,e);if(s.length!==4&&s.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Za(n,t,s,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qvt(n,t,e){if(Yc(n),t!=null&&t.length!==5)throw new Error("tensor5d() requires shape to have five numbers");const s=Ja(n,e);if(s.length!==5&&s.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Za(n,t,s,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kvt(n,t,e){if(Yc(n),t!=null&&t.length!==6)throw new Error("tensor6d() requires shape to have six numbers");const s=Ja(n,e);if(s.length!==6&&s.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||s,Za(n,t,s,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xvt(n,t=1,e=!0){const s=E(n,"x","topk");if(s.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");const r=s.shape[s.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>r)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${t}`);const o={x:s},a={k:t,sorted:e},[i,u]=q.runKernel(pyt,o,a);return{values:i,indices:u}}const Yvt=B({topk_:Xvt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jvt(n,t=0,e=1,s,r){if(s!=null&&s==="bool")throw new Error("Unsupported data type $ { dtype }");const o=new vv(t,e,s,!0,r),a=Xo(n,s);for(let i=0;i<a.values.length;i++)a.values[i]=o.nextValue();return a.toTensor()}const Zvt=B({truncatedNormal_:Jvt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qvt(n,t=0){const e=E(n,"x","unique","string_or_numeric");L(e.rank>0,()=>"The input tensor must be at least 1D");const s={x:e},r={axis:t},[o,a]=q.runKernel(myt,s,r);return{values:o,indices:a}}const tIt=B({unique_:Qvt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eIt(n,t,e){const s=E(n,"x","unsortedSegmentSum"),r=E(t,"segmentIds","unsortedSegmentSum","int32");L(Jd(e),()=>"numSegments must be of dtype int");const o={x:s,segmentIds:r},a={numSegments:e};return q.runKernel(yyt,o,a)}const nIt=B({unsortedSegmentSum_:eIt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sIt(n,t=0){const e=E(n,"x","unstack","string_or_numeric");L(t>=-e.shape.length&&t<e.shape.length,()=>`Axis = ${t} is not in [-${e.shape.length}, ${e.shape.length})`);const s={value:e},r={axis:t};return q.runKernel(gyt,s,r)}const du=B({unstack_:sIt});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rIt(n,t){return wv(n,t,"right")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oIt(n,t=!0,e,s){return q.makeVariable(n,t,e,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aIt(n,t){const e=[];for(let o=0;o<t.length;o++)t[o]&&e.push(o);const s=Xo(n,"int32"),r=Xo([e.length,n.length],"int32");for(let o=0;o<e.length;o++){const a=s.indexToLoc(e[o]),i=o*n.length;r.values.set(a,i)}return r.toTensor()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function iIt(n){const t=E(n,"condition","whereAsync","bool"),e=await t.data(),s=aIt(t.shape,e);return n!==t&&t.dispose(),s}const oF=iIt;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function uIt(n,t,e){const s=E(n,"tensor","boolMask"),r=E(t,"mask","boolMask","bool"),o=e??0,a=r.rank,i=s.shape;L(a>0,()=>"mask cannot be scalar"),br(i.slice(o,o+a),r.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let m=o;m<o+a;m++)u*=i[m];const c=i.slice(0,o).concat([u],i.slice(o+a)),l=it(s,c),d=it(r,[-1]),h=await oF(d),p=$v(h,[1]),f=BR(l,p,o);return n!==s&&s.dispose(),t!==r&&r.dispose(),p.dispose(),l.dispose(),d.dispose(),h.dispose(),f}const lIt=uIt;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cIt(n,t,e,s,r=!0){const o=E(n,"v","movingAverage"),a=E(t,"x","movingAverage"),i=E(e,"decay","movingAverage");Myt(o,a),L(La(o.shape,a.shape),()=>"Shape mismatch in v and x");const u=Ne(1),c=be(u,i);let l=Yt(be(a,o),c);if(r){L(s!=null,()=>"When using zeroDebias: true, step is required.");const d=E(s,"step","movingAverage");l=as(l,be(u,bv(i,d)))}return En(o,l)}const dIt=B({movingAverage_:cIt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hIt(n,t,e){const s=E(n,"indices","scatterND","int32"),r=E(t,"updates","scatterND");Ybt(r,s,e);const o={indices:s,updates:r},a={shape:e};return q.runKernel(Bgt,o,a)}const pIt=B({scatterND_:hIt});function fIt(n,t,e,s){if(n.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${n.dtype}.`);if(n.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${n.shape}.`);const r=n.rank>0?n.shape[0]:1,o=n.rank>1?n.shape[1]:1;if(e.length!==o)throw new Error(`outputShape has incorrect number of elements:, ${e.length}, should be: ${o}.`);const a=t.size;if(!(t.rank===0||t.rank===1&&a===r))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${r}]`);if(t.dtype!==s.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mIt(n,t,e,s=0){const r=E(n,"sparseIndices","sparseToDense","int32"),o=E(t,"sparseValues","sparseToDense","string_or_numeric"),a=E(s,"defaultValue","sparseToDense",o.dtype);fIt(r,o,e,a);const i={sparseIndices:r,sparseValues:o,defaultValue:a},u={outputShape:e};return q.runKernel(ryt,i,u)}const gIt=B({sparseToDense_:mIt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yIt(n,t){const e=E(t,"indices","gatherND","int32"),r={params:E(n,"x","gatherND","string_or_numeric"),indices:e};return q.runKernel(Mmt,r)}const bIt=B({gatherND_:yIt});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xIt(n,t){if(t==null)return n.shape.slice();if(La(n.shape,t))return t;if(n.shape.length===t.length){const e=[];for(let s=0;s<n.shape.length;s++)t[s]==null&&n.shape[s]!=null?e.push(n.shape[s]):e.push(t[s]);return e}return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wIt(n,t,e,s){const r=E(n,"x","dropout");if(L(r.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`),L(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),t===0)return n instanceof Gn?r.clone():r;const o=xIt(r,e),a=1-t,i=as(MR(En(QR(o,0,1,"float32",s),a)),a);return Yt(r,i)}const vIt=B({dropout_:wIt});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aF(n){return Math.floor(Math.pow(2,Math.ceil(Math.log(n)/Math.log(2))))}function Sv(n,t,e){const s=1-n%2,r=new Float32Array(n);for(let o=0;o<n;++o){const a=2*Math.PI*o/(n+s-1);r[o]=t-e*Math.cos(a)}return hr(r,"float32")}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function IIt(n,t,e=1){const s=E(n,"predictions","inTopK"),r=E(t,"targets","inTopK");L(s.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${s.rank}`),L(s.rank-1===r.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${s.rank} and targets rank ${r.rank}`),br(s.shape.slice(0,s.shape.length-1),r.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const o=s.shape[s.shape.length-1];L(e>0&&e<=o,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${o}), but got ${e}`);const a=await s.data(),i=await r.data(),[u,c]=[a.length/o,o],l=kft("bool",u);for(let d=0;d<u;d++){const h=d*c,p=a.subarray(h,h+c),f=[];for(let m=0;m<p.length;m++)f.push({value:p[m],index:m});f.sort((m,g)=>g.value-m.value),l[d]=0;for(let m=0;m<e;m++)if(f[m].index===i[d]){l[d]=1;break}}return n!==s&&s.dispose(),t!==r&&r.dispose(),uo(l,r.shape,"bool")}const kIt=IIt;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $It(n,t,e,s,r,o="NHWC",a){let i=n;n.rank===3&&(i=it(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let u=t;u.rank===3&&(u=it(t,[1,t.shape[0],t.shape[1],t.shape[2]])),L(i.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${i.shape}.`),L(u.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`),L(e.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${e}.`);const c=o==="NHWC"?i.shape[3]:i.shape[1],l=o==="NHWC"?u.shape[3]:u.shape[1];L(c===e[2],()=>`Error in conv2dDerFilter: depth of input ${c}) must match input depth in filter (${e[2]}.`),L(l===e[3],()=>`Error in conv2dDerFilter: depth of dy (${l}) must match output depth for filter (${e[3]}).`),Hr("conv2dDerFilter",r,a);const d={x:i,dy:u},h={strides:s,pad:r,dataFormat:o,dimRoundingMode:a,filterShape:e};return q.runKernel(imt,d,h)}const SIt=B({conv2DBackpropFilter_:$It});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nv(n,t,e){if(e==null||e==="linear")return n;if(e==="relu")return Yt(n,rF(t));throw new Error(`Cannot compute gradient for fused activation ${e}.`)}function Cv(n,t){let e=t;const s=qbt(n.shape,t.shape);return s.length>0&&(e=We(e,s)),it(e,n.shape)}function _v(n,t,e,s){if(t==="linear")return n;if(t==="relu")return Uy(n);if(t==="elu")return OR(n);if(t==="relu6")return tF(n);if(t==="prelu")return JR(n,e);if(t==="leakyrelu")return VR(n,s);if(t==="sigmoid")return Mu(n);throw new Error(`Unknown fused activation ${t}.`)}const Tv=(n,t)=>!(n>0)||t==="linear";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NIt({x:n,filter:t,strides:e,pad:s,dataFormat:r="NHWC",dilations:o=[1,1],dimRoundingMode:a,bias:i,activation:u="linear",preluActivationWeights:c,leakyreluAlpha:l}){if(u=u||"linear",Tv(q.state.gradientDepth,u)===!1){L(r==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${r} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let k=My(n,t,e,s,r,o,a);return i!=null&&(k=En(k,i)),_v(k,u,c,l)}const d=E(n,"x","conv2d","float32"),h=E(t,"filter","conv2d","float32");let p=d,f=!1;d.rank===3&&(f=!0,p=it(d,[1,d.shape[0],d.shape[1],d.shape[2]])),L(p.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`),L(h.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${h.rank}.`),Hr("fused conv2d",s,a);const m=r==="NHWC"?p.shape[3]:p.shape[1];L(h.shape[2]===m,()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${h.shape[2]}.`),L(Qa(e,o),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${o}'`);const g=mv(p.shape,h.shape,e,o,s,a);let y;i!=null&&(y=E(i,"bias","fused conv2d"),[y]=Je(y,d),r==="NHWC"?An(g.outShape,y.shape):(L(y.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${y.shape.length}.`),L(y.shape.length===0||y.shape[0]===g.outChannels||y.shape[0]===1,()=>`Error in fused conv2d: bias shape (${y.shape}) is not compatible with the number of output channels (${g.outChannels})`)));let b;if(c!=null){const k=c.shape;if(L(k.length<=1||k.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${k.length}.`),k.length===1)L(k[0]===1||k[0]===g.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${k}) is not compatible with the number of output channels (${g.outChannels}).`);else if(k.length===3)try{An(k,g.outShape)}catch{const _=`Error in fused conv2d: PReLU activation weights (${k}) is not compatible with the output shape of the conv2d (${g.outShape}).`;throw Error(_)}b=E(c,"prelu weights","fused conv2d")}const x=(k,S)=>{L(r==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${r} but only NHWC is currently supported.`);const[_,C,N,$]=S,A=Nv(k,N,u);L(Mm(o),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${o}'`);const D=RR(C.shape,A,_,e,s),R=SIt(C,A,_.shape,e,s),F=[D,R];if($!=null){const z=Cv($,A);F.push(z)}return F},w={x:p,filter:h,bias:y,preluActivationWeights:b},v={strides:e,pad:s,dataFormat:r,dilations:o,dimRoundingMode:a,activation:u,leakyreluAlpha:l};return i==null?Yo((S,_,C)=>{let N=q.runKernel(C$,w,v);return C([_,S,N]),f&&(N=it(N,[N.shape[1],N.shape[2],N.shape[3]])),{value:N,gradFunc:x}})(p,h):Yo((S,_,C,N)=>{let $=q.runKernel(C$,w,v);return N([_,S,$,C]),f&&($=it($,[$.shape[1],$.shape[2],$.shape[3]])),{value:$,gradFunc:x}})(p,h,y)}const CIt=B({fusedConv2d_:NIt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _It(n,t,e,s,r,o=[1,1],a){let i=n;n.rank===3&&(i=it(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let u=t;u.rank===3&&(u=it(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const c={x:i,dy:u},l={strides:s,pad:r,dimRoundingMode:a,dilations:o,filterShape:e};return q.runKernel(xmt,c,l)}const TIt=B({depthwiseConv2dNativeBackpropFilter_:_It});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EIt(n,t,e,s,r,o=[1,1],a){let i=t,u=!1;t.rank===3&&(u=!0,i=it(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const c={dy:i,filter:e},l={strides:s,pad:r,dimRoundingMode:a,dilations:o,inputShape:n},d=q.runKernel(wmt,c,l);return u?it(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const AIt=B({depthwiseConv2dNativeBackpropInput_:EIt});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DIt({x:n,filter:t,strides:e,pad:s,dataFormat:r="NHWC",dilations:o=[1,1],dimRoundingMode:a,bias:i,activation:u="linear",preluActivationWeights:c,leakyreluAlpha:l}){if(Tv(q.state.gradientDepth,u)===!1){let v=gv(n,t,e,s,r,o,a);return i!=null&&(v=En(v,i)),_v(v,u,c,l)}const d=E(n,"x","depthwiseConv2d","float32"),h=E(t,"filter","depthwiseConv2d","float32");let p=d,f=!1;d.rank===3&&(f=!0,p=it(d,[1,d.shape[0],d.shape[1],d.shape[2]])),L(p.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${p.rank}.`),L(h.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${h.rank}.`),L(p.shape[3]===h.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${p.shape[3]}) must match the inChannels dimension in filter ${h.shape[2]}.`),o==null&&(o=[1,1]),L(Qa(e,o),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${e} and dilations '${o}'`),Hr("fused depthwiseConv2d",s,a);const m=mv(p.shape,h.shape,e,o,s,a,!0);let g;i!=null&&(g=E(i,"bias","fused conv2d"),[g]=Je(g,d),An(m.outShape,g.shape));let y;c!=null&&(y=E(c,"prelu weights","fused depthwiseConv2d"));const b=(v,k)=>{L(Mm(o),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);const[S,_,C,N]=k,$=Nv(v,C,u),A=AIt(_.shape,$,S,e,s,o,a),D=TIt(_,$,S.shape,e,s,o,a);if(N!=null){const R=Cv(g,$);return[A,D,R]}return[A,D]},x={x:p,filter:h,bias:g,preluActivationWeights:y},w={strides:e,pad:s,dataFormat:r,dilations:o,dimRoundingMode:a,activation:u,leakyreluAlpha:l};return i==null?Yo((k,S,_)=>{let C=q.runKernel(_$,x,w);return _([S,k,C]),f&&(C=it(C,[C.shape[1],C.shape[2],C.shape[3]])),{value:C,gradFunc:b}})(p,h):Yo((k,S,_,C)=>{let N=q.runKernel(_$,x,w);return C([S,k,N,_]),f&&(N=it(N,[N.shape[1],N.shape[2],N.shape[3]])),{value:N,gradFunc:b}})(p,h,g)}const RIt=B({fusedDepthwiseConv2d_:DIt});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FIt({a:n,b:t,transposeA:e=!1,transposeB:s=!1,bias:r,activation:o="linear",preluActivationWeights:a,leakyreluAlpha:i=.2}){if(Tv(q.state.gradientDepth,o)===!1){let $=_e(n,t,e,s);return r!=null&&($=En($,r)),_v($,o,a,i)}let u=E(n,"a","fused matMul"),c=E(t,"b","fused matMul");[u,c]=Je(u,c);const l=e?u.shape[u.rank-2]:u.shape[u.rank-1],d=s?c.shape[c.rank-1]:c.shape[c.rank-2],h=e?u.shape[u.rank-1]:u.shape[u.rank-2],p=s?c.shape[c.rank-2]:c.shape[c.rank-1],f=u.shape.slice(0,-2),m=c.shape.slice(0,-2),g=Ln(f),y=Ln(m);L(l===d,()=>`Error in fused matMul: inner shapes (${l}) and (${d}) of Tensors with shapes ${u.shape} and ${c.shape} and transposeA=${e} and transposeB=${s} must match.`);const x=An(u.shape.slice(0,-2),c.shape.slice(0,-2)).concat([h,p]),w=e?it(u,[g,l,h]):it(u,[g,h,l]),v=s?it(c,[y,p,d]):it(c,[y,d,p]);let k;r!=null&&(k=E(r,"bias","fused matMul"),[k]=Je(k,u),An(x,k.shape));let S;a!=null&&(S=E(a,"prelu weights","fused matMul"));const _=($,A)=>{const[D,R,F,z]=A,H=Nv(it($,F.shape),F,o);let P,U;if(!e&&!s?(P=_e(H,R,!1,!0),U=_e(D,H,!0,!1)):!e&&s?(P=_e(H,R,!1,!1),U=_e(H,D,!0,!1)):e&&!s?(P=_e(R,H,!1,!0),U=_e(D,H,!1,!1)):(P=_e(R,H,!0,!0),U=_e(H,D,!0,!0)),r!=null){const Z=Cv(z,H);return[P,U,Z]}else return[P,U]},C={a:w,b:v,bias:k,preluActivationWeights:S},N={transposeA:e,transposeB:s,activation:o,leakyreluAlpha:i};return r==null?Yo((A,D,R)=>{const F=q.runKernel(N$,C,N);return R([A,D,F]),{value:it(F,x),gradFunc:_}})(w,v):Yo((A,D,R,F)=>{const z=q.runKernel(N$,C,N);return F([A,D,z,R]),{value:it(z,x),gradFunc:_}})(w,v,k)}const OIt=B({fusedMatMul_:FIt});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PIt=Object.freeze(Object.defineProperty({__proto__:null,conv2d:CIt,depthwiseConv2d:RIt,matMul:OIt},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LIt(n){return Sv(n,.54,.46)}const MIt=B({hammingWindow_:LIt});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BIt(n){return Sv(n,.5,.5)}const iF=B({hannWindow_:BIt});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zIt(n,t,e,s=!1,r=0){let o=0;const a=[];for(;o+t<=n.size;)a.push(Le(n,o,t)),o+=e;if(s)for(;o<n.size;){const i=o+t-n.size,u=us([Le(n,o,t-i),Ly([i],r)]);a.push(u),o+=e}return a.length===0?zu([],[0,t]):it(us(a),[a.length,t])}const uF=B({frame_:zIt});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VIt(n,t,e,s,r=iF){s==null&&(s=aF(t));const o=uF(n,t,e),a=Yt(o,r(t));return kv(a,s)}const WIt=B({stft_:VIt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UIt(n,t,e,s,r="bilinear",o=0){const a=E(n,"image","cropAndResize"),i=E(t,"boxes","cropAndResize","float32"),u=E(e,"boxInd","cropAndResize","int32"),c=i.shape[0];L(a.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${a.rank}.`),L(i.rank===2&&i.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${c},4] but had shape ${i.shape}.`),L(u.rank===1&&u.shape[0]===c,()=>`Error in cropAndResize: boxInd must be have size [${c}] but had shape ${i.shape}.`),L(s.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`),L(s[0]>=1&&s[1]>=1,()=>`cropSize must be atleast [1,1], but was ${s}`),L(r==="bilinear"||r==="nearest",()=>`method must be bilinear or nearest, but was ${r}`);const l={image:a,boxes:i,boxInd:u},d={method:r,extrapolationValue:o,cropSize:s};return q.runKernel(mmt,l,d)}const GIt=B({cropAndResize_:UIt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HIt(n){const t=E(n,"image","flipLeftRight","float32");L(t.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);const e={image:t};return q.runKernel(Rmt,e,{})}const jIt=B({flipLeftRight_:HIt});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qIt(n){const t=E(n,"image","grayscaleToRGB"),e=t.rank-1,s=t.shape[e];L(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),L(s===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${s}.`);const r=new Array(t.rank);return r.fill(1,0,e),r[e]=3,$d(t,r)}const KIt=B({grayscaleToRGB_:qIt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XIt(n,t,e=0,s=.5){const r=E(n,"image","rotateWithOffset","float32");L(r.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`);const o={image:r},a={radians:t,fillValue:e,center:s};return q.runKernel(wyt,o,a)}const YIt=B({rotateWithOffset_:XIt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jc(n,t,e,s,r,o){s==null&&(s=.5),r==null&&(r=Number.NEGATIVE_INFINITY),o==null&&(o=0);const a=n.shape[0];return e=Math.min(e,a),L(0<=s&&s<=1,()=>`iouThreshold must be in [0, 1], but was '${s}'`),L(n.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${n.rank}'`),L(n.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${n.shape[1]}`),L(t.rank===1,()=>"scores must be a 1D tensor"),L(t.shape[0]===a,()=>`scores has incompatible shape with boxes. Expected ${a}, but was ${t.shape[0]}`),L(0<=o&&o<=1,()=>`softNmsSigma must be in [0, 1], but was '${o}'`),{maxOutputSize:e,iouThreshold:s,scoreThreshold:r,softNmsSigma:o}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JIt(n,t,e,s=.5,r=Number.NEGATIVE_INFINITY){const o=E(n,"boxes","nonMaxSuppression","float32"),a=E(t,"scores","nonMaxSuppression","float32"),i=Jc(o,a,e,s,r);e=i.maxOutputSize,s=i.iouThreshold,r=i.scoreThreshold;const u={maxOutputSize:e,iouThreshold:s,scoreThreshold:r};return q.runKernel(ggt,{boxes:o,scores:a},u)}const ZIt=B({nonMaxSuppression_:JIt});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QIt(n,t,e){const s=tkt(n,t,e),r=s<0?-(s+1):s;n.splice(r,0,t)}function tkt(n,t,e){return nkt(n,t,e||ekt)}function ekt(n,t){return n>t?1:n<t?-1:0}function nkt(n,t,e){let s=0,r=n.length,o=0,a=!1;for(;s<r;){o=s+(r-s>>>1);const i=e(t,n[o]);i>0?s=o+1:(r=o,a=!i)}return a?s:-s-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function skt(n,t,e,s,r){return Ev(n,t,e,s,r,0)}function rkt(n,t,e,s,r,o){return Ev(n,t,e,s,r,0,!1,o,!0)}function okt(n,t,e,s,r,o){return Ev(n,t,e,s,r,o,!0)}function Ev(n,t,e,s,r,o,a=!1,i=!1,u=!1){const c=[];for(let g=0;g<t.length;g++)t[g]>r&&c.push({score:t[g],boxIndex:g,suppressBeginIndex:0});c.sort(V$);const l=o>0?-.5/o:0,d=[],h=[];for(;d.length<e&&c.length>0;){const g=c.pop(),{score:y,boxIndex:b,suppressBeginIndex:x}=g;if(y<r)break;let w=!1;for(let v=d.length-1;v>=x;--v){const k=akt(n,b,d[v]);if(k>=s){w=!0;break}if(g.score=g.score*ikt(s,l,k),g.score<=r)break}g.suppressBeginIndex=d.length,w||(g.score===y?(d.push(b),h.push(g.score)):g.score>r&&QIt(c,g,V$))}const p=d.length,f=e-p;i&&f>0&&(d.push(...new Array(f).fill(0)),h.push(...new Array(f).fill(0)));const m={selectedIndices:d};return a&&(m.selectedScores=h),u&&(m.validOutputs=p),m}function akt(n,t,e){const s=n.subarray(t*4,t*4+4),r=n.subarray(e*4,e*4+4),o=Math.min(s[0],s[2]),a=Math.min(s[1],s[3]),i=Math.max(s[0],s[2]),u=Math.max(s[1],s[3]),c=Math.min(r[0],r[2]),l=Math.min(r[1],r[3]),d=Math.max(r[0],r[2]),h=Math.max(r[1],r[3]),p=(i-o)*(u-a),f=(d-c)*(h-l);if(p<=0||f<=0)return 0;const m=Math.max(o,c),g=Math.max(a,l),y=Math.min(i,d),b=Math.min(u,h),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(p+f-x)}function ikt(n,t,e){const s=Math.exp(t*e*e);return e<=n?s:0}function V$(n,t){return n.score-t.score||n.score===t.score&&t.boxIndex-n.boxIndex}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function ukt(n,t,e,s=.5,r=Number.NEGATIVE_INFINITY){const o=E(n,"boxes","nonMaxSuppressionAsync"),a=E(t,"scores","nonMaxSuppressionAsync"),i=Jc(o,a,e,s,r);e=i.maxOutputSize,s=i.iouThreshold,r=i.scoreThreshold;const u=await Promise.all([o.data(),a.data()]),c=u[0],l=u[1],{selectedIndices:d}=skt(c,l,e,s,r);return o!==n&&o.dispose(),a!==t&&a.dispose(),hr(d,"int32")}const lkt=ukt;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ckt(n,t,e,s=.5,r=Number.NEGATIVE_INFINITY,o=0){const a=E(n,"boxes","nonMaxSuppression"),i=E(t,"scores","nonMaxSuppression"),u=Jc(a,i,e,s,r,o);e=u.maxOutputSize,s=u.iouThreshold,r=u.scoreThreshold,o=u.softNmsSigma;const c={boxes:a,scores:i},l={maxOutputSize:e,iouThreshold:s,scoreThreshold:r,softNmsSigma:o},d=q.runKernel(bgt,c,l);return{selectedIndices:d[0],selectedScores:d[1]}}const dkt=B({nonMaxSuppressionWithScore_:ckt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function hkt(n,t,e,s=.5,r=Number.NEGATIVE_INFINITY,o=0){const a=E(n,"boxes","nonMaxSuppressionAsync"),i=E(t,"scores","nonMaxSuppressionAsync"),u=Jc(a,i,e,s,r,o);e=u.maxOutputSize,s=u.iouThreshold,r=u.scoreThreshold,o=u.softNmsSigma;const c=await Promise.all([a.data(),i.data()]),l=c[0],d=c[1],{selectedIndices:h,selectedScores:p}=okt(l,d,e,s,r,o);return a!==n&&a.dispose(),i!==t&&i.dispose(),{selectedIndices:hr(h,"int32"),selectedScores:hr(p)}}const pkt=hkt;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fkt(n,t,e,s=.5,r=Number.NEGATIVE_INFINITY,o=!1){const a=E(n,"boxes","nonMaxSuppression"),i=E(t,"scores","nonMaxSuppression"),u=Jc(a,i,e,s,r,null),c=u.maxOutputSize,l=u.iouThreshold,d=u.scoreThreshold,h={boxes:a,scores:i},p={maxOutputSize:c,iouThreshold:l,scoreThreshold:d,padToMaxOutputSize:o},f=q.runKernel(ygt,h,p);return{selectedIndices:f[0],validOutputs:f[1]}}const mkt=B({nonMaxSuppressionPadded_:fkt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function gkt(n,t,e,s=.5,r=Number.NEGATIVE_INFINITY,o=!1){const a=E(n,"boxes","nonMaxSuppressionAsync"),i=E(t,"scores","nonMaxSuppressionAsync"),u=Jc(a,i,e,s,r,null),c=u.maxOutputSize,l=u.iouThreshold,d=u.scoreThreshold,[h,p]=await Promise.all([a.data(),i.data()]),{selectedIndices:f,validOutputs:m}=rkt(h,p,c,l,d,o);return a!==n&&a.dispose(),i!==t&&i.dispose(),{selectedIndices:hr(f,"int32"),validOutputs:Ne(m,"int32")}}const ykt=gkt;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bkt(n,t,e=!1,s=!1){const r=E(n,"images","resizeBilinear");L(r.rank===3||r.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`),L(t.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),L(s===!1||e===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let o=r,a=!1;r.rank===3&&(a=!0,o=it(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const i={images:o},u={alignCorners:e,halfPixelCenters:s,size:t},c=q.runKernel(Fgt,i,u);return a?it(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const xkt=B({resizeBilinear_:bkt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wkt(n,t,e=!1,s=!1){const r=E(n,"images","resizeNearestNeighbor");L(r.rank===3||r.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`),L(t.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),L(r.dtype==="float32"||r.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),L(s===!1||e===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let o=r,a=!1;r.rank===3&&(a=!0,o=it(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const i={images:o},u={alignCorners:e,halfPixelCenters:s,size:t},c=q.runKernel(Rgt,i,u);return a?it(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const vkt=B({resizeNearestNeighbor_:wkt});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ikt(n,t="binary",e=!1,s=.5){const r=E(n,"image","threshold"),o=.2989,a=.587,i=.114,u=r.shape[0]*r.shape[1];let c=Yt(hr([s]),255),l,d,h,p;if(L(r.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${r.rank}.`),L(r.shape[2]===3||r.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${r.shape[2]}.`),L(r.dtype==="int32"||r.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${r.dtype}.`),L(t==="otsu"||t==="binary",()=>`Method must be binary or otsu, but was ${t}`),r.shape[2]===3){[l,d,h]=eh(r,[1,1,1],-1);const g=Yt(l,o),y=Yt(d,a),b=Yt(h,i);p=En(En(g,y),b)}else p=n;if(t==="otsu"){const g=DR(Tn(eF(p),"int32"),uo([]),256);c=kkt(g,u)}const f=e?xv(p,c):Wy(p,c);return Tn(Yt(f,255),"int32")}function kkt(n,t){let e=hr([-1]),s=hr([0]),r=hr([0]),o,a,i,u,c,l;for(let d=0;d<n.size-1;d++){o=Le(n,0,d+1),a=Le(n,d+1),c=as(We(o),t),l=as(We(a),t);const h=We(Yt(o,th(0,o.size)));i=as(h,We(o));const p=Ly(a.shape,o.size),f=En(th(0,a.size),p),m=Yt(a,f);u=as(We(m),We(a));const g=be(i,u),y=be(i,u),b=Yt(c,l);r=Yt(Yt(b,g),y);const x=Wy(r,s);s=dl(x,r,s),e=dl(x,hr([d]),e)}return e}const $kt=B({threshold_:Ikt});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Skt(n,t,e="nearest",s="constant",r=0,o){const a=E(n,"image","transform","float32"),i=E(t,"transforms","transform","float32");L(a.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${a.rank}.`),L(i.rank===2&&(i.shape[0]===a.shape[0]||i.shape[0]===1)&&i.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),L(o==null||o.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${o}.`);const u={image:a,transforms:i},c={interpolation:e,fillMode:s,fillValue:r,outputShape:o};return q.runKernel(fyt,u,c)}const Nkt=B({transform_:Skt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ckt(n,t,e){L(t%1===0,()=>`bandPart(): numLower must be an integer, got ${t}.`),L(e%1===0,()=>`bandPart(): numUpper must be an integer, got ${e}.`);const s=E(n,"a","bandPart");L(s.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`);const r=s.shape,[o,a]=s.shape.slice(-2);if(!(t<=o))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${o}).`);if(!(e<=a))throw new Error(`bandPart(): numUpper (${e}) must not be greater than the number of columns (${a}).`);t<0&&(t=o),e<0&&(e=a);const i=it(th(0,o,1,"int32"),[-1,1]),u=th(0,a,1,"int32"),c=be(i,u),l=Bm(xv(c,Ne(+t,"int32")),zR(c,Ne(-e,"int32"))),d=hl([o,a],s.dtype);return it(Jo(du(it(s,[-1,o,a])).map(h=>dl(l,h,d))),r)}const _kt=B({bandPart_:Ckt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tkt(n){let t;if(Array.isArray(n)){t=!1,L(n!=null&&n.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const r=n[0].shape[0];for(let o=1;o<n.length;++o)L(n[o].shape[0]===r,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${n[o].shape[0]} vs. ${r})`)}else t=!0,n=eh(n,n.shape[0],0).map(r=>$v(r,[0]));L(n.length<=n[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${n.length}) exceeds number of dimensions (${n[0].shape[0]}).`);const e=[],s=n;for(let r=0;r<n.length;++r)e.push(q.tidy(()=>{let o=s[r];if(r>0)for(let a=0;a<r;++a){const i=Yt(We(Yt(e[a],o)),e[a]);o=be(o,i)}return as(o,Vy(o,"euclidean"))}));return t?Jo(e,0):e}const Ekt=B({gramSchmidt_:Tkt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Akt(n,t=!1){if(L(n.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${n.rank}`),n.rank===2)return W$(n,t);{const e=n.shape.slice(0,n.shape.length-2).reduce((u,c)=>u*c),s=du(it(n,[e,n.shape[n.shape.length-2],n.shape[n.shape.length-1]]),0),r=[],o=[];s.forEach(u=>{const[c,l]=W$(u,t);r.push(c),o.push(l)});const a=it(Jo(r,0),n.shape),i=it(Jo(o,0),n.shape);return[a,i]}}function W$(n,t=!1){return q.tidy(()=>{L(n.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${n.shape.length}D Tensor.`);const e=n.shape[0],s=n.shape[1];let r=LR(e),o=Sa(n);const a=zu([[1]],[1,1]);let i=Sa(a);const u=e>=s?s:e;for(let c=0;c<u;++c){const l=o,d=i,h=r;[i,o,r]=q.tidy(()=>{const p=Le(o,[c,c],[e-c,1]),f=Vy(p),m=Le(o,[c,c],[1,1]),g=dl(Wy(m,0),zu([[-1]]),zu([[1]])),y=be(m,Yt(g,f)),b=as(p,y);b.shape[0]===1?i=Sa(a):i=us([a,Le(b,[1,0],[b.shape[0]-1,b.shape[1]])],0);const x=zo(as(_e(g,y),f)),w=Le(o,[c,0],[e-c,s]),v=Yt(x,i),k=Gx(i);if(c===0)o=be(w,_e(v,_e(k,w)));else{const C=be(w,_e(v,_e(k,w)));o=us([Le(o,[0,0],[c,s]),C],0)}const S=Gx(v),_=Le(r,[0,c],[e,r.shape[1]-c]);if(c===0)r=be(_,_e(_e(_,i),S));else{const C=be(_,_e(_e(_,i),S));r=us([Le(r,[0,0],[e,c]),C],1)}return[i,o,r]}),Wbt([l,d,h])}return!t&&e>s&&(r=Le(r,[0,0],[e,s]),o=Le(o,[0,0],[s,s])),[r,o]})}const Dkt=B({qr_:Akt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var bs;(function(n){n[n.NONE=0]="NONE",n[n.MEAN=1]="MEAN",n[n.SUM=2]="SUM",n[n.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(bs||(bs={}));function Rkt(n,t,e=bs.SUM_BY_NONZERO_WEIGHTS){const s=E(n,"losses","computeWeightedLoss");let r=null;t!=null&&(r=E(t,"weights","computeWeightedLoss"));const o=r==null?s:Yt(s,r);if(e===bs.NONE)return o;if(e===bs.SUM)return We(o);if(e===bs.MEAN){if(r==null)return zm(o);{const a=s.size/r.size,i=as(We(o),We(r));return a>1?as(i,Ne(a)):i}}if(e===bs.SUM_BY_NONZERO_WEIGHTS){if(r==null)return as(We(o),Ne(s.size));{const a=Yt(r,pi(s.shape)),i=Tn(We(XR(a,Ne(0))),"float32");return as(We(o),i)}}throw Error(`Unknown reduction: ${e}`)}const ea=B({computeWeightedLoss_:Rkt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fkt(n,t,e,s=bs.SUM_BY_NONZERO_WEIGHTS){const r=E(n,"labels","absoluteDifference"),o=E(t,"predictions","absoluteDifference");let a=null;e!=null&&(a=E(e,"weights","absoluteDifference")),br(r.shape,o.shape,"Error in absoluteDifference: ");const i=ir(be(r,o));return ea(i,a,s)}const Okt=B({absoluteDifference_:Fkt});function Pkt(n,t,e,s,r=bs.SUM_BY_NONZERO_WEIGHTS){const o=E(n,"labels","cosineDistance"),a=E(t,"predictions","cosineDistance");let i=null;s!=null&&(i=E(s,"weights","cosineDistance")),br(o.shape,a.shape,"Error in cosineDistance: ");const u=Ne(1),c=be(u,We(Yt(o,a),e,!0));return ea(c,i,r)}const Lkt=B({cosineDistance_:Pkt});function Mkt(n,t,e,s=bs.SUM_BY_NONZERO_WEIGHTS){let r=E(n,"labels","hingeLoss");const o=E(t,"predictions","hingeLoss");let a=null;e!=null&&(a=E(e,"weights","hingeLoss")),br(r.shape,o.shape,"Error in hingeLoss: ");const i=Ne(1);r=be(Yt(Ne(2),r),i);const u=Uy(be(i,Yt(r,o)));return ea(u,a,s)}const Bkt=B({hingeLoss_:Mkt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zkt(n,t,e,s=1,r=bs.SUM_BY_NONZERO_WEIGHTS){const o=E(n,"labels","huberLoss"),a=E(t,"predictions","huberLoss");let i=null;e!=null&&(i=E(e,"weights","huberLoss")),br(o.shape,a.shape,"Error in huberLoss: ");const u=Ne(s),c=ir(be(a,o)),l=KR(c,u),d=be(c,l),h=En(Yt(Ne(.5),zy(l)),Yt(u,d));return ea(h,i,r)}const Vkt=B({huberLoss_:zkt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wkt(n,t,e,s=1e-7,r=bs.SUM_BY_NONZERO_WEIGHTS){const o=E(n,"labels","logLoss"),a=E(t,"predictions","logLoss");let i=null;e!=null&&(i=E(e,"weights","logLoss")),br(o.shape,a.shape,"Error in logLoss: ");const u=Ne(1),c=Ne(s),l=zo(Yt(o,Qd(En(a,c)))),d=Yt(be(u,o),Qd(En(be(u,a),c))),h=be(l,d);return ea(h,i,r)}const Ukt=B({logLoss_:Wkt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gkt(n,t,e,s=bs.SUM_BY_NONZERO_WEIGHTS){const r=E(n,"labels","meanSquaredError"),o=E(t,"predictions","meanSquaredError");let a=null;e!=null&&(a=E(e,"weights","meanSquaredError")),br(r.shape,o.shape,"Error in meanSquaredError: ");const i=sF(r,o);return ea(i,a,s)}const Hkt=B({meanSquaredError_:Gkt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jkt(n,t){const e=E(n,"labels","sigmoidCrossEntropyWithLogits"),s=E(t,"logits","sigmoidCrossEntropyWithLogits");br(e.shape,s.shape,"Error in sigmoidCrossEntropyWithLogits: ");const r=Uy(s),o=Yt(s,e),a=WR(Vi(zo(ir(s))));return En(be(r,o),a)}function qkt(n,t,e,s=0,r=bs.SUM_BY_NONZERO_WEIGHTS){let o=E(n,"multiClassLabels","sigmoidCrossEntropy");const a=E(t,"logits","sigmoidCrossEntropy");let i=null;if(e!=null&&(i=E(e,"weights","sigmoidCrossEntropy")),br(o.shape,a.shape,"Error in sigmoidCrossEntropy: "),s>0){const c=Ne(s),l=Ne(1),d=Ne(.5);o=En(Yt(o,be(l,c)),Yt(d,c))}const u=jkt(o,a);return ea(u,i,r)}const Kkt=B({sigmoidCrossEntropy_:qkt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xkt(n,t,e=-1){if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${e}`);return Yo((r,o,a)=>{const u=GR(o,[e],!0),c=be(Tn(o,"float32"),u);a([r,c]);const l=zo(Yt(c,r));return{value:We(l,[e]),gradFunc:(p,f)=>{const[m,g]=f,y=By(p.shape,[e]);return[Yt(it(p,y),be(Tn(m,"float32"),Vi(g))),Yt(it(p,y),be(Vi(g),Tn(m,"float32")))]}}})(n,t)}function Ykt(n,t,e,s=0,r=bs.SUM_BY_NONZERO_WEIGHTS){let o=E(n,"onehotLabels","softmaxCrossEntropy");const a=E(t,"logits","softmaxCrossEntropy");let i=null;if(e!=null&&(i=E(e,"weights","softmaxCrossEntropy")),br(o.shape,a.shape,"Error in softmaxCrossEntropy: "),s>0){const c=Ne(s),l=Ne(1),d=Ne(o.shape[1]);o=En(Yt(o,be(l,c)),as(c,d))}const u=Xkt(o,a);return ea(u,i,r)}const Jkt=B({softmaxCrossEntropy_:Ykt});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zkt(n,t,e,s){const r=E(n,"indices","sparseFillEmptyRows","int32"),o=E(t,"values","sparseFillEmptyRows"),a=E(e,"denseShape","sparseFillEmptyRows","int32"),i=E(s,"defaultValue","sparseFillEmptyRows",o.dtype);if(r.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${r.shape}`);if(o.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${o.shape}`);if(a.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${a.shape}`);if(i.rank!==0)throw new Error(`Default value should be a scalar but received shape ${i.shape}`);const u={indices:r,values:o,denseShape:a,defaultValue:i},c=q.runKernel(tyt,u);return{outputIndices:c[0],outputValues:c[1],emptyRowIndicator:c[2],reverseIndexMap:c[3]}}const Qkt=B({sparseFillEmptyRows_:Zkt});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t$t(n,t,e){const s=E(n,"inputIndices","sparseReshape","int32"),r=E(t,"inputShape","sparseReshape","int32"),o=E(e,"newShape","sparseReshape","int32");if(s.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${s.shape}`);if(r.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${r.shape}`);if(o.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${o.shape}`);const a={inputIndices:s,inputShape:r,newShape:o},i=q.runKernel(eyt,a);return{outputIndices:i[0],outputShape:i[1]}}const e$t=B({sparseReshape_:t$t});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n$t(n,t,e){const s=E(n,"data","sparseSegmentMean"),r=E(t,"indices","sparseSegmentMean","int32"),o=E(e,"segmentIds","sparseSegmentMean","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${r.shape}`);if(o.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${o.shape}`);const a={data:s,indices:r,segmentIds:o};return q.runKernel(nyt,a)}const s$t=B({sparseSegmentMean_:n$t});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r$t(n,t,e){const s=E(n,"data","sparseSegmentSum"),r=E(t,"indices","sparseSegmentSum","int32"),o=E(e,"segmentIds","sparseSegmentSum","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${r.shape}`);if(o.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${o.shape}`);const a={data:s,indices:r,segmentIds:o};return q.runKernel(syt,a)}const o$t=B({sparseSegmentSum_:r$t});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a$t(n,t,e,s,r,o,a,i){const u=E(n,"data","stringNGrams","string");if(u.dtype!=="string")throw new Error("Data must be of datatype string");if(u.shape.length!==1)throw new Error(`Data must be a vector, saw: ${u.shape}`);const c=E(t,"dataSplits","stringNGrams");if(c.dtype!=="int32")throw new Error("Data splits must be of datatype int32");const l={separator:e,nGramWidths:s,leftPad:r,rightPad:o,padWidth:a,preserveShortSequences:i},d={data:u,dataSplits:c},h=q.runKernel(iyt,d,l);return{nGrams:h[0],nGramsSplits:h[1]}}const i$t=B({stringNGrams_:a$t});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u$t(n,t,e=!0){const s=E(n,"input","stringSplit","string"),r=E(t,"delimiter","stringSplit","string");if(s.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${s.shape}`);if(r.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${r.shape}`);const o={skipEmpty:e},a={input:s,delimiter:r},i=q.runKernel(uyt,a,o);return{indices:i[0],values:i[1],shape:i[2]}}const l$t=B({stringSplit_:u$t});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c$t(n,t){const e=E(n,"input","stringToHashBucketFast","string"),s={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const r={input:e};return q.runKernel(lyt,r,s)}const d$t=B({stringToHashBucketFast_:c$t});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h$t={fft:Iv,ifft:Vm,rfft:kv,irfft:nF},p$t={hammingWindow:MIt,hannWindow:iF,frame:uF,stft:WIt},f$t={flipLeftRight:jIt,grayscaleToRGB:KIt,resizeNearestNeighbor:vkt,resizeBilinear:xkt,rotateWithOffset:YIt,cropAndResize:GIt,nonMaxSuppression:ZIt,nonMaxSuppressionAsync:lkt,nonMaxSuppressionWithScore:dkt,nonMaxSuppressionWithScoreAsync:pkt,nonMaxSuppressionPadded:mkt,nonMaxSuppressionPaddedAsync:ykt,threshold:$kt,transform:Nkt},m$t={bandPart:_kt,gramSchmidt:Ekt,qr:Dkt},g$t={absoluteDifference:Okt,computeWeightedLoss:ea,cosineDistance:Lkt,hingeLoss:Bkt,huberLoss:Vkt,logLoss:Ukt,meanSquaredError:Hkt,sigmoidCrossEntropy:Kkt,softmaxCrossEntropy:Jkt},y$t={sparseFillEmptyRows:Qkt,sparseReshape:e$t,sparseSegmentMean:s$t,sparseSegmentSum:o$t},b$t={stringNGrams:i$t,stringSplit:l$t,stringToHashBucketFast:d$t};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x$t=he();x$t.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,n=>{n&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var rr;(function(n){n[n.DT_INVALID=0]="DT_INVALID",n[n.DT_FLOAT=1]="DT_FLOAT",n[n.DT_DOUBLE=2]="DT_DOUBLE",n[n.DT_INT32=3]="DT_INT32",n[n.DT_UINT8=4]="DT_UINT8",n[n.DT_INT16=5]="DT_INT16",n[n.DT_INT8=6]="DT_INT8",n[n.DT_STRING=7]="DT_STRING",n[n.DT_COMPLEX64=8]="DT_COMPLEX64",n[n.DT_INT64=9]="DT_INT64",n[n.DT_BOOL=10]="DT_BOOL",n[n.DT_QINT8=11]="DT_QINT8",n[n.DT_QUINT8=12]="DT_QUINT8",n[n.DT_QINT32=13]="DT_QINT32",n[n.DT_BFLOAT16=14]="DT_BFLOAT16",n[n.DT_QINT16=15]="DT_QINT16",n[n.DT_QUINT16=16]="DT_QUINT16",n[n.DT_UINT16=17]="DT_UINT16",n[n.DT_COMPLEX128=18]="DT_COMPLEX128",n[n.DT_HALF=19]="DT_HALF",n[n.DT_RESOURCE=20]="DT_RESOURCE",n[n.DT_VARIANT=21]="DT_VARIANT",n[n.DT_UINT32=22]="DT_UINT32",n[n.DT_UINT64=23]="DT_UINT64",n[n.DT_FLOAT_REF=101]="DT_FLOAT_REF",n[n.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",n[n.DT_INT32_REF=103]="DT_INT32_REF",n[n.DT_UINT8_REF=104]="DT_UINT8_REF",n[n.DT_INT16_REF=105]="DT_INT16_REF",n[n.DT_INT8_REF=106]="DT_INT8_REF",n[n.DT_STRING_REF=107]="DT_STRING_REF",n[n.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",n[n.DT_INT64_REF=109]="DT_INT64_REF",n[n.DT_BOOL_REF=110]="DT_BOOL_REF",n[n.DT_QINT8_REF=111]="DT_QINT8_REF",n[n.DT_QUINT8_REF=112]="DT_QUINT8_REF",n[n.DT_QINT32_REF=113]="DT_QINT32_REF",n[n.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",n[n.DT_QINT16_REF=115]="DT_QINT16_REF",n[n.DT_QUINT16_REF=116]="DT_QUINT16_REF",n[n.DT_UINT16_REF=117]="DT_UINT16_REF",n[n.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",n[n.DT_HALF_REF=119]="DT_HALF_REF",n[n.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",n[n.DT_VARIANT_REF=121]="DT_VARIANT_REF",n[n.DT_UINT32_REF=122]="DT_UINT32_REF",n[n.DT_UINT64_REF=123]="DT_UINT64_REF"})(rr||(rr={}));var U$;(function(n){(function(t){t[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"})(n.CheckpointFormatVersion||(n.CheckpointFormatVersion={}))})(U$||(U$={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w$t={};function lF(n){return w$t[n]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I(n,t,e,s,r){const o=t.inputParams[n];if(o&&o.inputIndexStart!==void 0){const i=o.inputIndexStart,u=o.inputIndexEnd===0?void 0:o.inputIndexEnd===void 0?i+1:o.inputIndexEnd;if(o.type==="tensor")return os(t.inputNames[o.inputIndexStart],e,s,r);if(o.type==="tensors")return t.inputNames.slice(i,u).map(h=>os(h,e,s,r));const c=os(t.inputNames.slice(i)[0],e,s,r),l=c.dataSync();return o.type==="number"?l[0]:Dx(c.shape,l)}const a=t.attrParams[n];return a&&a.value}function os(n,t,e,s){const[r,o]=Es(n);if(s!=null){const i=s.getHashTableHandleByName(r);if(i!=null)return i}const a=e.currentContextIds.find(i=>!!t[Wm(r,i)]);return a!==void 0?t[Wm(r,a)][o]:void 0}function v$t(n,t,e){return t[Wm(n,e.currentContextId)]}function eo(n,t){const[e,s,r]=Es(n);return[Wm(e,t&&t.currentContextId),s,r]}function Wm(n,t){return t?`${n}-${t}`:n}function Es(n){const t=n.split(":");if(t.length===1)return[n,0,void 0];const e=t[0],s=t.length===3?t[1]:void 0,r=Number(t[t.length-1]);return[e,r,s]}function qf(n,t,e){let s=I("pad",n,t,e);if(s==="explicit"){s=I("explicitPaddings",n,t,e);const r=[[0,0],[0,0],[0,0],[0,0]];for(let o=0;o<4;o++)r[o][0]=s[o*2],r[o][1]=s[o*2+1];return r}return s}function To(n){return n.kept?n:Sa(n)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I$t=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],k$t=Object.freeze(Object.defineProperty({__proto__:null,json:I$t},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $$t=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],S$t=Object.freeze(Object.defineProperty({__proto__:null,json:$$t},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N$t=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],C$t=Object.freeze(Object.defineProperty({__proto__:null,json:N$t},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _$t=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],T$t=Object.freeze(Object.defineProperty({__proto__:null,json:_$t},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E$t=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],A$t=Object.freeze(Object.defineProperty({__proto__:null,json:E$t},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D$t=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],R$t=Object.freeze(Object.defineProperty({__proto__:null,json:D$t},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F$t=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],O$t=Object.freeze(Object.defineProperty({__proto__:null,json:F$t},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P$t=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],L$t=Object.freeze(Object.defineProperty({__proto__:null,json:P$t},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M$t=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],B$t=Object.freeze(Object.defineProperty({__proto__:null,json:M$t},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z$t=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],V$t=Object.freeze(Object.defineProperty({__proto__:null,json:z$t},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W$t=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],U$t=Object.freeze(Object.defineProperty({__proto__:null,json:W$t},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const G$t=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],H$t=Object.freeze(Object.defineProperty({__proto__:null,json:G$t},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const j$t=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],q$t=Object.freeze(Object.defineProperty({__proto__:null,json:j$t},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const K$t=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],X$t=Object.freeze(Object.defineProperty({__proto__:null,json:K$t},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y$t=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],J$t=Object.freeze(Object.defineProperty({__proto__:null,json:Y$t},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z$t=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],Q$t=Object.freeze(Object.defineProperty({__proto__:null,json:Z$t},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tSt=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],eSt=Object.freeze(Object.defineProperty({__proto__:null,json:tSt},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nSt=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],sSt=Object.freeze(Object.defineProperty({__proto__:null,json:nSt},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rSt=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],oSt=Object.freeze(Object.defineProperty({__proto__:null,json:rSt},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class G${static get Instance(){return this._instance||(this._instance=new this)}constructor(){const t=[k$t,S$t,C$t,T$t,A$t,R$t,O$t,L$t,B$t,V$t,U$t,H$t,q$t,X$t,J$t,Q$t,eSt,sSt,oSt],e=[].concat(...t.map(s=>s.json));this.opMappers=e.reduce((s,r)=>(s[r.tfOpName]=r,s),{})}transformGraph(t,e={}){const s=t.node,r=[],o=[],a=[],i=s.reduce((m,g)=>(m[g.name]=this.mapNode(g),g.op.startsWith("Placeholder")?r.push(m[g.name]):g.op==="Const"?o.push(m[g.name]):(g.input==null||g.input.length===0)&&a.push(m[g.name]),m),{});let u=[];const c=[];let l={},d={};e!=null&&(l=this.mapSignatureEntries(e.inputs),d=this.mapSignatureEntries(e.outputs));const h=Object.keys(i);h.forEach(m=>{const g=i[m];g.inputNames.forEach((y,b)=>{const[x,,w]=eo(y),v=i[x];if(v.outputs!=null){const k=v.outputs.indexOf(w);if(k!==-1){const S=`${x}:${k}`;g.inputNames[b]=S}}g.inputs.push(v),v.children.push(g)})}),Object.keys(d).length===0?h.forEach(m=>{const g=i[m];g.children.length===0&&c.push(g)}):Object.keys(d).forEach(m=>{const[g]=eo(m),y=i[g];y!=null&&(y.signatureKey=d[m],c.push(y))}),Object.keys(l).length>0?Object.keys(l).forEach(m=>{const[g]=eo(m),y=i[g];y&&(y.signatureKey=l[m],u.push(y))}):u=r;let p={};t.library!=null&&t.library.function!=null&&(p=t.library.function.reduce((m,g)=>(m[g.signature.name]=this.mapFunction(g),m),{}));const f={nodes:i,inputs:u,outputs:c,weights:o,placeholders:r,signature:e,functions:p};return a.length>0&&(f.initNodes=a),f}mapSignatureEntries(t){return Object.keys(t||{}).reduce((e,s)=>(e[t[s].name]=s,e),{})}mapNode(t){const e=lF(t.op)||this.opMappers[t.op]||{};t.attr==null&&(t.attr={});const s={name:t.name,op:t.op,category:e.category,inputNames:(t.input||[]).map(r=>r.startsWith("^")?r.slice(1):r),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:t.attr,outputs:e.outputs};return e.inputs!=null&&(s.inputParams=e.inputs.reduce((r,o)=>(r[o.name]={type:o.type,inputIndexStart:o.start,inputIndexEnd:o.end},r),{})),e.attrs!=null&&(s.attrParams=e.attrs.reduce((r,o)=>{const a=o.type;let i;switch(o.type){case"string":i=Xx(t.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=Xx(t.attr,o.tfDeprecatedName,o.defaultValue));break;case"string[]":i=nw(t.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=nw(t.attr,o.tfDeprecatedName,o.defaultValue));break;case"number":i=Jx(t.attr,o.tfName,o.defaultValue||0),i===void 0&&o.tfDeprecatedName&&(i=Jx(t.attr,o.tfDeprecatedName,o.defaultValue));break;case"number[]":i=ew(t.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=ew(t.attr,o.tfDeprecatedName,o.defaultValue));break;case"bool":i=Yx(t.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=Yx(t.attr,o.tfDeprecatedName,o.defaultValue));break;case"bool[]":i=rw(t.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=rw(t.attr,o.tfDeprecatedName,o.defaultValue));break;case"shape":i=tw(t.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=tw(t.attr,o.tfDeprecatedName,o.defaultValue));break;case"shape[]":i=sw(t.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=sw(t.attr,o.tfDeprecatedName,o.defaultValue));break;case"dtype":i=Zx(t.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=Zx(t.attr,o.tfDeprecatedName,o.defaultValue));break;case"dtype[]":i=Qx(t.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=Qx(t.attr,o.tfDeprecatedName,o.defaultValue));break;case"func":i=H$(t.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=H$(t.attr,o.tfDeprecatedName,o.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${o.type} for op: ${t.op}`)}return r[o.name]={value:i,type:a},r},{})),s}mapFunction(t){const e=t.nodeDef,s=[],r=[];let o={};e!=null&&(o=e.reduce((d,h)=>(d[h.name]=this.mapNode(h),h.op==="Const"&&r.push(d[h.name]),d),{}));const a=[],i=[];t.signature.inputArg.forEach(d=>{const[h]=eo(d.name),p={name:h,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:Av(d.type),type:"dtype"}},children:[]};p.signatureKey=d.name,a.push(p),o[h]=p}),Object.keys(o).forEach(d=>{const h=o[d];h.inputNames.forEach((p,f)=>{const[m,,g]=eo(p),y=o[m];if(y.outputs!=null){const b=y.outputs.indexOf(g);if(b!==-1){const x=`${m}:${b}`;h.inputNames[f]=x}}h.inputs.push(y),y.children.push(h)})});const c=t.ret;t.signature.outputArg.forEach(d=>{const[h,p]=eo(c[d.name]),f=o[h];f!=null&&(f.defaultOutput=p,i.push(f))});const l=this.mapArgsToSignature(t);return{nodes:o,inputs:a,outputs:i,weights:r,placeholders:s,signature:l}}mapArgsToSignature(t){return{methodName:t.signature.name,inputs:t.signature.inputArg.reduce((e,s)=>(e[s.name]=this.mapArgToTensorInfo(s),e),{}),outputs:t.signature.outputArg.reduce((e,s)=>(e[s.name]=this.mapArgToTensorInfo(s,t.ret),e),{})}}mapArgToTensorInfo(t,e){let s=t.name;return e!=null&&(s=e[s]),{name:s,dtype:t.type}}}function aSt(n){const t=he().global;if(typeof t.atob<"u")return t.atob(n);if(typeof Buffer<"u")return new Buffer(n,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function cF(n,t){const e=Array.isArray(n)?String.fromCharCode.apply(null,n):aSt(n);return t?e:e.toLowerCase()}function Xx(n,t,e,s=!1){const r=n[t];return r!=null?cF(r.s,s):e}function Yx(n,t,e){const s=n[t];return s?s.b:e}function Jx(n,t,e){const s=n[t]||{},r=s.i!=null?s.i:s.f!=null?s.f:e;return typeof r=="number"?r:parseInt(r,10)}function Av(n){switch(typeof n=="string"&&(n=rr[n]),n){case rr.DT_FLOAT:case rr.DT_HALF:return"float32";case rr.DT_INT32:case rr.DT_INT64:case rr.DT_INT8:case rr.DT_UINT8:return"int32";case rr.DT_BOOL:return"bool";case rr.DT_DOUBLE:return"float32";case rr.DT_STRING:return"string";default:return null}}function H$(n,t,e){const s=n[t];return s&&s.func?s.func.name:e}function Zx(n,t,e){const s=n[t];return s&&s.type?Av(s.type):e}function Qx(n,t,e){const s=n[t];return s&&s.list&&s.list.type?s.list.type.map(r=>Av(r)):e}function dF(n){if(!n.unknownRank)return n.dim!=null?n.dim.map(t=>typeof t.size=="number"?t.size:parseInt(t.size,10)):[]}function tw(n,t,e){const s=n[t];return s&&s.shape?dF(s.shape):e}function ew(n,t,e){const s=n[t];return s?((s.list.f&&s.list.f.length?s.list.f:s.list.i)||[]).map(r=>typeof r=="number"?r:parseInt(r,10)):e}function nw(n,t,e,s=!1){const r=n[t];return r&&r.list&&r.list.s?r.list.s.map(o=>cF(o,s)):e}function sw(n,t,e){const s=n[t];return s&&s.list&&s.list.shape?s.list.shape.map(r=>dF(r)):e}function rw(n,t,e){const s=n[t];return s&&s.list&&s.list.b?s.list.b:e}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class iSt{constructor(t,e,s){this.node=t,this.tensorMap=e,this.context=s,this.inputs=[],this.attrs={},this.inputs=t.inputNames.map(r=>this.getInput(r)),t.rawAttrs!=null&&(this.attrs=Object.keys(t.rawAttrs).reduce((r,o)=>(r[o]=this.getAttr(o),r),{}))}getInput(t){return os(t,this.tensorMap,this.context)}getAttr(t,e){const s=this.node.rawAttrs[t];if(s.tensor!=null)return os(t,this.tensorMap,this.context);if(s.i!=null||s.f!=null)return Jx(this.node.rawAttrs,t,e);if(s.s!=null)return Xx(this.node.rawAttrs,t,e);if(s.b!=null)return Yx(this.node.rawAttrs,t,e);if(s.shape!=null)return tw(this.node.rawAttrs,t,e);if(s.type!=null)return Zx(this.node.rawAttrs,t,e);if(s.list!=null){if(s.list.i!=null||s.list.f!=null)return ew(this.node.rawAttrs,t,e);if(s.list.s!=null)return nw(this.node.rawAttrs,t,e);if(s.list.shape!=null)return sw(this.node.rawAttrs,t,e);if(s.list.b!=null)return rw(this.node.rawAttrs,t,e);if(s.list.type!=null)return Qx(this.node.rawAttrs,t,e)}return e}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zn=Object.freeze(Object.defineProperty({__proto__:null,OP_SCOPE_SUFFIX:cR,abs:ir,acos:sxt,acosh:oxt,add:En,addN:ixt,all:lxt,any:dxt,argMax:pxt,argMin:mxt,asin:yxt,asinh:xxt,atan:vxt,atan2:kxt,atanh:Sxt,avgPool:ER,avgPool3d:Rxt,basicLSTMCell:Bxt,batchNorm:Py,batchNorm2d:Gxt,batchNorm3d:jxt,batchNorm4d:Kxt,batchToSpaceND:AR,bincount:DR,booleanMaskAsync:lIt,broadcastArgs:Jxt,broadcastTo:jf,buffer:Xo,cast:Tn,ceil:twt,clipByValue:nwt,clone:Sa,complex:Ma,concat:us,concat1d:rwt,concat2d:awt,concat3d:uwt,concat4d:cwt,conv1d:pwt,conv2d:My,conv2dTranspose:gwt,conv3d:bwt,conv3dTranspose:Iwt,cos:$wt,cosh:Nwt,cosineWindow:Sv,cumprod:_wt,cumsum:Ewt,denseBincount:Dwt,depthToSpace:Fwt,depthwiseConv2d:gv,diag:Lwt,dilation2d:Bwt,div:as,divNoNan:Gwt,dot:jwt,dropout:vIt,einsum:Kwt,elu:OR,enclosingPowerOfTwo:aF,equal:FR,erf:Jwt,euclideanNorm:i1t,exp:Vi,expandDims:ai,expm1:d1t,eye:LR,fft:Iv,fill:Ly,floor:MR,floorDiv:TR,fused:PIt,gather:BR,gatherND:bIt,greater:Wy,greaterEqual:zR,ifft:Vm,imag:Oy,image:f$t,inTopKAsync:kIt,irfft:nF,isFinite:x1t,isInf:v1t,isNaN:k1t,leakyRelu:VR,less:N1t,lessEqual:xv,linalg:m$t,linspace:_1t,localResponseNormalization:E1t,log:Qd,log1p:WR,logSigmoid:O1t,logSoftmax:M1t,logSumExp:GR,logicalAnd:Bm,logicalNot:HR,logicalOr:jR,logicalXor:G1t,losses:g$t,lowerBound:j1t,matMul:_e,max:Bu,maxPool:qR,maxPool3d:X1t,maxPoolWithArgmax:J1t,maximum:Q1t,mean:zm,meshgrid:e0t,min:qx,minimum:KR,mirrorPad:r0t,mod:a0t,moments:u0t,movingAverage:dIt,mul:Yt,multiRNNCell:c0t,multinomial:h0t,neg:zo,norm:Vy,notEqual:XR,oneHot:Vbt,ones:pi,onesLike:m0t,op:B,outerProduct:y0t,pad:nf,pad1d:w0t,pad2d:I0t,pad3d:$0t,pad4d:N0t,pool:A0t,pow:bv,prelu:JR,print:IR,prod:F0t,raggedGather:P0t,raggedTensorToTensor:M0t,rand:z0t,randomGamma:G0t,randomNormal:ZR,randomStandardNormal:q0t,randomUniform:QR,range:th,real:Zd,reciprocal:Y0t,relu:Uy,relu6:tF,reshape:it,reverse:Wi,reverse1d:evt,reverse2d:svt,reverse3d:ovt,reverse4d:ivt,rfft:kv,round:eF,rsqrt:cvt,scalar:Ne,scatterND:pIt,searchSorted:wv,selu:hvt,separableConv2d:fvt,setdiff1dAsync:gvt,sigmoid:Mu,sign:bvt,signal:p$t,sin:wvt,sinh:Ivt,slice:Le,slice1d:$vt,slice2d:Nvt,slice3d:_vt,slice4d:Evt,softmax:Dvt,softplus:UR,spaceToBatchND:YR,sparse:y$t,sparseToDense:gIt,spectral:h$t,split:eh,sqrt:Kx,square:zy,squaredDifference:sF,squeeze:$v,stack:Jo,step:rF,stridedSlice:Uvt,string:b$t,sub:be,sum:We,tan:Hvt,tanh:jx,tensor:uo,tensor1d:hr,tensor2d:zu,tensor3d:Kbt,tensor4d:jvt,tensor5d:qvt,tensor6d:Kvt,tile:$d,topk:Yvt,transpose:Gx,truncatedNormal:Zvt,unique:tIt,unsortedSegmentSum:nIt,unstack:du,upperBound:rIt,variable:oIt,where:dl,whereAsync:oF,zeros:hl,zerosLike:yv},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uSt=(n,t,e,s=Zn)=>{switch(n.op){case"BiasAdd":case"AddV2":case"Add":return[s.add(I("a",n,t,e),I("b",n,t,e))];case"AddN":return[s.addN(I("tensors",n,t,e))];case"FloorMod":case"Mod":return[s.mod(I("a",n,t,e),I("b",n,t,e))];case"Mul":return[s.mul(I("a",n,t,e),I("b",n,t,e))];case"RealDiv":case"Div":return[s.div(I("a",n,t,e),I("b",n,t,e))];case"DivNoNan":return[s.divNoNan(I("a",n,t,e),I("b",n,t,e))];case"FloorDiv":return[s.floorDiv(I("a",n,t,e),I("b",n,t,e))];case"Sub":return[s.sub(I("a",n,t,e),I("b",n,t,e))];case"Minimum":return[s.minimum(I("a",n,t,e),I("b",n,t,e))];case"Maximum":return[s.maximum(I("a",n,t,e),I("b",n,t,e))];case"Pow":return[s.pow(I("a",n,t,e),I("b",n,t,e))];case"SquaredDifference":return[s.squaredDifference(I("a",n,t,e),I("b",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lSt=(n,t,e,s=Zn)=>{switch(n.op){case"Abs":case"ComplexAbs":return[s.abs(I("x",n,t,e))];case"Acos":return[s.acos(I("x",n,t,e))];case"Acosh":return[s.acosh(I("x",n,t,e))];case"Asin":return[s.asin(I("x",n,t,e))];case"Asinh":return[s.asinh(I("x",n,t,e))];case"Atan":return[s.atan(I("x",n,t,e))];case"Atan2":return[s.atan2(I("x",n,t,e),I("y",n,t,e))];case"Atanh":return[s.atanh(I("x",n,t,e))];case"Ceil":return[s.ceil(I("x",n,t,e))];case"Complex":return[s.complex(I("real",n,t,e),I("imag",n,t,e))];case"Cos":return[s.cos(I("x",n,t,e))];case"Cosh":return[s.cosh(I("x",n,t,e))];case"Elu":return[s.elu(I("x",n,t,e))];case"Erf":return[s.erf(I("x",n,t,e))];case"Exp":return[s.exp(I("x",n,t,e))];case"Expm1":return[s.expm1(I("x",n,t,e))];case"Floor":return[s.floor(I("x",n,t,e))];case"Log":return[s.log(I("x",n,t,e))];case"Log1p":return[s.log1p(I("x",n,t,e))];case"Imag":return[s.imag(I("x",n,t,e))];case"Neg":return[s.neg(I("x",n,t,e))];case"Reciprocal":return[s.reciprocal(I("x",n,t,e))];case"Real":return[s.real(I("x",n,t,e))];case"Relu":return[s.relu(I("x",n,t,e))];case"Round":return[s.round(I("x",n,t,e))];case"Selu":return[s.selu(I("x",n,t,e))];case"Sigmoid":return[s.sigmoid(I("x",n,t,e))];case"Sin":return[s.sin(I("x",n,t,e))];case"Sign":return[s.sign(I("x",n,t,e))];case"Sinh":return[s.sinh(I("x",n,t,e))];case"Softplus":return[s.softplus(I("x",n,t,e))];case"Sqrt":return[s.sqrt(I("x",n,t,e))];case"Square":return[s.square(I("x",n,t,e))];case"Tanh":return[s.tanh(I("x",n,t,e))];case"Tan":return[s.tan(I("x",n,t,e))];case"ClipByValue":return[s.clipByValue(I("x",n,t,e),I("clipValueMin",n,t,e),I("clipValueMax",n,t,e))];case"Relu6":return[s.relu6(I("x",n,t,e))];case"Rsqrt":return[s.rsqrt(os(n.inputNames[0],t,e))];case"Prod":return[s.prod(I("x",n,t,e),I("axes",n,t,e))];case"LeakyRelu":return[s.leakyRelu(I("x",n,t,e),I("alpha",n,t,e))];case"Prelu":return[s.prelu(I("x",n,t,e),I("alpha",n,t,e))];case"IsNan":return[s.isNaN(os(n.inputNames[0],t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ur(n,t,e=""){if(!(typeof n=="number"||typeof t=="number")){L(n.length===t.length,()=>e+` Shapes ${n} and ${t} must match`);for(let s=0;s<n.length;s++){const r=n[s],o=t[s];L(r<0||o<0||r===o,()=>e+` Shapes ${n} and ${t} must match`)}}}function j$(n){return!(typeof n=="number"||n.some(t=>t<0))}function cd(n,t,e){let s=ow(n,e);const r=!j$(s);if(r&&t.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${s}`);if(r&&t.forEach(o=>{s=ow(o.shape,s)}),!j$(s))throw new Error(`Non-fully-defined elementShape: ${s}`);return s}function ow(n,t){if(typeof n=="number")return t;if(typeof t=="number")return n;if(n.length!==t.length)throw new Error(`Incompatible ranks during merge: ${n} vs. ${t}`);const e=[];for(let s=0;s<n.length;++s){const r=n[s],o=t[s];if(r>=0&&o>=0&&r!==o)throw new Error(`Incompatible shape during merge: ${n} vs. ${t}`);e[s]=r>=0?r:o}return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cSt{constructor(t,e,s,r,o,a,i){this.name=t,this.dtype=e,this.maxSize=s,this.elementShape=r,this.identicalElementShapes=o,this.dynamicSize=a,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=Ne(0),ba(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(t){this.tensors.forEach(e=>{(t==null||!t.has(e.tensor.id))&&e.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||t>=this.size())throw new Error(`Tried to read from index ${t}, but array size is: ${this.size()}`);const e=this.tensors[t];if(e.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${t} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(e.cleared=!0),e.read=!0,e.tensor}readMany(t){return t.map(e=>this.read(e))}write(t,e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||!this.dynamicSize&&t>=this.maxSize)throw new Error(`Tried to write to index ${t}, but array is not resizeable and size is: ${this.maxSize}`);const s=this.tensors[t]||{};if(e.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t},
          because the value dtype is ${e.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=e.shape),ur(this.elementShape,e.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${t}.`),s.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been read.`);if(s.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been written.`);s.tensor=e,ba(e),s.written=!0,this.tensors[t]=s}writeMany(t,e){if(t.length!==e.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${t.length} is not the same as tensors size: ${e.length}.`);t.forEach((s,r)=>this.write(s,e[r]))}gather(t,e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${e}`);if(t)t=t.slice(0,this.size());else{t=[];for(let r=0;r<this.size();r++)t.push(r)}if(t.length===0)return uo([],[0].concat(this.elementShape));const s=this.readMany(t);return ur(this.elementShape,s[0].shape,"TensorArray shape mismatch: "),Jo(s,0)}concat(t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${t}`);if(this.size()===0)return uo([],[0].concat(this.elementShape));const e=[];for(let r=0;r<this.size();r++)e.push(r);const s=this.readMany(e);return ur(this.elementShape,s[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${s[0].shape})`),us(s,0)}scatter(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const s=Math.max(...t);if(!this.dynamicSize&&s>=this.maxSize)throw new Error(`Max index must be < array size (${s}  vs. ${this.maxSize})`);this.writeMany(t,du(e,0))}split(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);let s=0;const r=t.map(u=>(s+=u,s));if(s!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${s}, and tensor's shape is: ${e.shape}`);if(!this.dynamicSize&&t.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${t.length}), and the TensorArray is not marked as dynamically resizeable`);const o=s===0?0:e.size/s,a=[];Rr(()=>{e=it(e,[1,s,o]);for(let u=0;u<t.length;++u){const l=[0,u===0?0:r[u-1],0],d=[1,t[u],o];a[u]=it(Le(e,l,d),this.elementShape)}return a});const i=[];for(let u=0;u<t.length;u++)i[u]=u;this.writeMany(i,a)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ui{constructor(t,e,s,r=-1){this.tensors=t,this.elementShape=e,this.elementDtype=s,t!=null&&t.forEach(o=>{if(s!==o.dtype)throw new Error(`Invalid data types; op elements ${s}, but list elements ${o.dtype}`);ur(e,o.shape,"TensorList shape mismatch: "),ba(o)}),this.idTensor=Ne(0),this.maxNumElements=r,ba(this.idTensor)}get id(){return this.idTensor.id}copy(){return new Ui([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(t){this.tensors.forEach(e=>{(t==null||!t.has(e.id))&&e.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(t,e,s=-1){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(s!==-1&&this.tensors.length!==s)throw new Error(`Operation expected a list with ${s} elements but got a list with ${this.tensors.length} elements.`);ur(t,this.elementShape,"TensorList shape mismatch: ");const r=cd(this.elementShape,this.tensors,t);return Rr(()=>{const o=this.tensors.map(a=>it(a,r));return Jo(o,0)})}popBack(t,e){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");const s=cd(this.elementShape,this.tensors,t),r=this.tensors.pop();return r.kept=!1,ur(r.shape,t,"TensorList shape mismatch: "),it(r,s)}pushBack(t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(ur(t.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");ba(t),this.tensors.push(t)}resize(t){if(t<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${t}`);if(this.maxNumElements!==-1&&t>this.maxNumElements)throw new Error(`TensorListResize input size ${t} is greater maxNumElement ${this.maxNumElements}.`);const e=new Ui([],this.elementShape,this.elementDtype,this.maxNumElements);e.tensors.length=t;for(let s=0;s<Math.min(this.tensors.length,t);++s)e.tensors[s]=this.tensors[s];return e}getItem(t,e,s){if(s!==this.elementDtype)throw new Error(`Invalid data types; op elements ${s}, but list elements ${this.elementDtype}`);if(t<0||t>this.tensors.length)throw new Error(`Trying to access element ${t} in a list with ${this.tensors.length} elements.`);if(this.tensors[t]==null)throw new Error(`element at index ${t} is null.`);ur(this.tensors[t].shape,e,"TensorList shape mismatch: ");const r=cd(this.elementShape,this.tensors,e);return it(this.tensors[t],r)}setItem(t,e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(t<0||this.maxNumElements!==-1&&t>=this.maxNumElements)throw new Error(`Trying to set element ${t} in a list with max ${this.maxNumElements} elements.`);ur(this.elementShape,e.shape,"TensorList shape mismatch: "),ba(e),this.tensors[t]!=null&&(this.tensors[t].kept=!1),this.tensors[t]=e}gather(t,e,s){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);ur(this.elementShape,s,"TensorList shape mismatch: "),t=t.slice(0,this.size());const r=cd(this.elementShape,this.tensors,s);return t.length===0?uo([],[0].concat(r)):Rr(()=>{const o=t.map(a=>it(this.tensors[a],r));return Jo(o,0)})}concat(t,e){if(t&&t!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${t}`);ur(this.elementShape,e,"TensorList shape mismatch: ");const s=cd(this.elementShape,this.tensors,e);return this.size()===0?uo([],[0].concat(s)):Rr(()=>{const r=this.tensors.map(o=>it(o,s));return us(r,0)})}}function dSt(n,t,e){const s=n.dtype;if(n.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${n.shape}`);if(n.dtype!==e)throw new Error(`Invalid data types; op elements ${n.dtype}, but list elements ${e}`);const r=n.shape.slice(1);ur(r,t,"TensorList shape mismatch: ");const o=du(n);return new Ui(o,t,s)}function hSt(n,t,e,s){return new Ui([],n,t,s)}function pSt(n,t,e,s){if(t.length!==n.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${n.shape[0]}`);const r=Math.max(...t);if(s!=null&&s!==-1&&r>=s)throw new Error(`Max index must be < array size (${r}  vs. ${s})`);const o=new Ui([],e,n.dtype,s),a=du(n,0);return t.forEach((i,u)=>{o.setItem(i,a[u])}),o}function fSt(n,t,e){let s=0;const r=t.map(l=>(s+=l,s));if(s!==n.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${s}, and tensor's shape is: ${n.shape}`);const o=n.shape.slice(1),a=ow(o,e),i=s===0?0:n.size/s,u=Rr(()=>{const l=[];n=it(n,[1,s,i]);for(let d=0;d<t.length;++d){const p=[0,d===0?0:r[d-1],0],f=[1,t[d],i];l[d]=it(Le(n,p,f),a)}return n.dispose(),l}),c=new Ui([],e,n.dtype,t.length);for(let l=0;l<u.length;l++)c.setItem(l,u[l]);return c}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mSt=async(n,t,e)=>{switch(n.op){case"If":case"StatelessIf":{const s=I("thenBranch",n,t,e),r=I("elseBranch",n,t,e),o=I("cond",n,t,e),a=I("args",n,t,e);return(await o.data())[0]?e.functionMap[s].executeFunctionAsync(a,e.tensorArrayMap,e.tensorListMap):e.functionMap[r].executeFunctionAsync(a,e.tensorArrayMap,e.tensorListMap)}case"While":case"StatelessWhile":{const s=I("body",n,t,e),r=I("cond",n,t,e),o=I("args",n,t,e),a=await e.functionMap[r].executeFunctionAsync(o,e.tensorArrayMap,e.tensorListMap),i=o.map(l=>l.id);let u=await a[0].data();a.forEach(l=>{!l.kept&&i.indexOf(l.id)===-1&&l.dispose()});let c=o;for(;u[0];){const l=c;c=await e.functionMap[s].executeFunctionAsync(c,e.tensorArrayMap,e.tensorListMap);const d=c.map(p=>p.id);l.forEach(p=>{!p.kept&&i.indexOf(p.id)===-1&&d.indexOf(p.id)===-1&&p.dispose()});const h=await e.functionMap[r].executeFunctionAsync(c,e.tensorArrayMap,e.tensorListMap);u=await h[0].data(),h.forEach(p=>{!p.kept&&i.indexOf(p.id)===-1&&d.indexOf(p.id)===-1&&p.dispose()})}return c}case"LoopCond":{const s=I("pred",n,t,e);return[To(s)]}case"Switch":{const s=I("pred",n,t,e);let r=I("data",n,t,e);return r.kept||(r=To(r)),(await s.data())[0]?[void 0,r]:[r,void 0]}case"Merge":{const s=n.inputNames.find(r=>os(r,t,e)!==void 0);if(s){const r=os(s,t,e);return[To(r)]}return}case"Enter":{const s=I("frameName",n,t,e),r=I("tensor",n,t,e);return e.enterFrame(s),[To(r)]}case"Exit":{const s=I("tensor",n,t,e);return e.exitFrame(),[To(s)]}case"NextIteration":{const s=I("tensor",n,t,e);return e.nextIteration(),[To(s)]}case"TensorArrayV3":{const s=I("size",n,t,e),r=I("dtype",n,t,e),o=I("elementShape",n,t,e),a=I("dynamicSize",n,t,e),i=I("clearAfterRead",n,t,e),u=I("identicalElementShapes",n,t,e),c=I("name",n,t,e),l=new cSt(c,r,s,o,u,a,i);return e.addTensorArray(l),[l.idTensor,Ne(1)]}case"TensorArrayWriteV3":{const s=I("tensorArrayId",n,t,e),r=I("index",n,t,e),o=I("tensor",n,t,e),a=e.getTensorArray(s.id);return a.write(r,o),[a.idTensor]}case"TensorArrayReadV3":{const s=I("tensorArrayId",n,t,e),r=I("index",n,t,e);return[e.getTensorArray(s.id).read(r)]}case"TensorArrayGatherV3":{const s=I("tensorArrayId",n,t,e),r=I("indices",n,t,e),o=I("dtype",n,t,e);return[e.getTensorArray(s.id).gather(r,o)]}case"TensorArrayScatterV3":{const s=I("tensorArrayId",n,t,e),r=I("indices",n,t,e),o=I("tensor",n,t,e),a=e.getTensorArray(s.id);return a.scatter(r,o),[a.idTensor]}case"TensorArrayConcatV3":{const s=I("tensorArrayId",n,t,e),r=e.getTensorArray(s.id),o=I("dtype",n,t,e);return[r.concat(o)]}case"TensorArraySplitV3":{const s=I("tensorArrayId",n,t,e),r=I("tensor",n,t,e),o=I("lengths",n,t,e),a=e.getTensorArray(s.id);return a.split(o,r),[a.idTensor]}case"TensorArraySizeV3":{const s=I("tensorArrayId",n,t,e),r=e.getTensorArray(s.id);return[Ne(r.size(),"int32")]}case"TensorArrayCloseV3":{const s=I("tensorArrayId",n,t,e),r=e.getTensorArray(s.id);return r.clearAndClose(),[r.idTensor]}case"TensorListSetItem":{const s=I("tensorListId",n,t,e),r=I("index",n,t,e),o=I("tensor",n,t,e),a=e.getTensorList(s.id);return a.setItem(r,o),[a.idTensor]}case"TensorListGetItem":{const s=I("tensorListId",n,t,e),r=I("index",n,t,e),o=I("elementShape",n,t,e),a=I("elementDType",n,t,e);return[e.getTensorList(s.id).getItem(r,o,a)]}case"TensorListScatterV2":case"TensorListScatter":{const s=I("indices",n,t,e),r=I("tensor",n,t,e),o=I("elementShape",n,t,e),a=I("numElements",n,t,e),i=pSt(r,s,o,a);return e.addTensorList(i),[i.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const s=I("elementShape",n,t,e),r=I("elementDType",n,t,e);let o;n.op==="TensorListReserve"?o="numElements":o="maxNumElements";const a=I(o,n,t,e),i=n.op==="TensorListReserve"?-1:a,u=hSt(s,r,a,i);return e.addTensorList(u),[u.idTensor]}case"TensorListGather":{const s=I("tensorListId",n,t,e),r=I("indices",n,t,e),o=I("elementShape",n,t,e),a=I("elementDType",n,t,e);return[e.getTensorList(s.id).gather(r,a,o)]}case"TensorListStack":{const s=I("tensorListId",n,t,e),r=I("elementShape",n,t,e),o=I("elementDType",n,t,e),a=I("numElements",n,t,e);return[e.getTensorList(s.id).stack(r,o,a)]}case"TensorListFromTensor":{const s=I("tensor",n,t,e),r=I("elementShape",n,t,e),o=I("elementDType",n,t,e),a=dSt(s,r,o);return e.addTensorList(a),[a.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const s=I("tensorListId",n,t,e),r=e.getTensorList(s.id),o=I("dtype",n,t,e),a=I("elementShape",n,t,e);return[r.concat(o,a)]}case"TensorListPushBack":{const s=I("tensorListId",n,t,e),r=I("tensor",n,t,e),o=e.getTensorList(s.id);return o.pushBack(r),[o.idTensor]}case"TensorListPopBack":{const s=I("tensorListId",n,t,e),r=I("elementShape",n,t,e),o=I("elementDType",n,t,e);return[e.getTensorList(s.id).popBack(r,o)]}case"TensorListSplit":{const s=I("tensor",n,t,e),r=I("elementShape",n,t,e),o=I("lengths",n,t,e),a=fSt(s,o,r);return e.addTensorList(a),[a.idTensor]}case"TensorListLength":{const s=I("tensorListId",n,t,e),r=e.getTensorList(s.id);return[Ne(r.size(),"int32")]}case"TensorListResize":{const s=I("tensorListId",n,t,e),r=I("size",n,t,e),a=e.getTensorList(s.id).resize(r);return e.addTensorList(a),[a.idTensor]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q$(n,t,e){const[s,r]=I("fusedOps",n,t,e),o=s==="biasadd",a=!o,i=r==="prelu",u=s==="fusedbatchnorm",c=I("numArgs",n,t,e);if(o){if(i&&c!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&o&&c!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(u)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const l=I("strides",n,t,e),d=qf(n,t,e),h=I("dataFormat",n,t,e).toUpperCase(),p=I("dilations",n,t,e);let[f,m]=I("args",n,t,e);a&&(m=f,f=void 0);const g=I("leakyreluAlpha",n,t,e);return{stride:l,pad:d,dataFormat:h,dilations:p,biasArg:f,preluArg:m,activationFunc:r,leakyreluAlpha:g}}const gSt=(n,t,e,s=Zn)=>{switch(n.op){case"Conv1D":{const r=I("stride",n,t,e),o=I("pad",n,t,e),a=I("dataFormat",n,t,e).toUpperCase(),i=I("dilation",n,t,e);return[s.conv1d(I("x",n,t,e),I("filter",n,t,e),r,o,a,i)]}case"Conv2D":{const r=I("strides",n,t,e),o=qf(n,t,e),a=I("dataFormat",n,t,e).toUpperCase(),i=I("dilations",n,t,e);return[s.conv2d(I("x",n,t,e),I("filter",n,t,e),[r[1],r[2]],o,a,[i[1],i[2]])]}case"_FusedConv2D":{const{stride:r,pad:o,dataFormat:a,dilations:i,biasArg:u,preluArg:c,activationFunc:l,leakyreluAlpha:d}=q$(n,t,e);return[s.fused.conv2d({x:I("x",n,t,e),filter:I("filter",n,t,e),strides:[r[1],r[2]],pad:o,dataFormat:a,dilations:[i[1],i[2]],bias:u,activation:l,preluActivationWeights:c,leakyreluAlpha:d})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:o,dataFormat:a,dilations:i,biasArg:u,preluArg:c,activationFunc:l,leakyreluAlpha:d}=q$(n,t,e);return[s.fused.depthwiseConv2d({x:I("x",n,t,e),filter:I("filter",n,t,e),strides:[r[1],r[2]],pad:o,dataFormat:a,dilations:[i[1],i[2]],bias:u,activation:l,preluActivationWeights:c,leakyreluAlpha:d})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=I("outputShape",n,t,e),o=I("strides",n,t,e),a=qf(n,t,e);return[s.conv2dTranspose(I("x",n,t,e),I("filter",n,t,e),r,[o[1],o[2]],a)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=I("strides",n,t,e),o=qf(n,t,e),a=I("dilations",n,t,e),i=I("dataFormat",n,t,e).toUpperCase();return[s.depthwiseConv2d(I("input",n,t,e),I("filter",n,t,e),[r[1],r[2]],o,i,[a[1],a[2]])]}case"Conv3D":{const r=I("strides",n,t,e),o=I("pad",n,t,e),a=I("dataFormat",n,t,e).toUpperCase(),i=I("dilations",n,t,e);return[s.conv3d(I("x",n,t,e),I("filter",n,t,e),[r[1],r[2],r[3]],o,a,[i[1],i[2],i[3]])]}case"AvgPool":{const r=I("strides",n,t,e),o=I("pad",n,t,e),a=I("kernelSize",n,t,e);return[s.avgPool(I("x",n,t,e),[a[1],a[2]],[r[1],r[2]],o)]}case"MaxPool":{const r=I("strides",n,t,e),o=I("pad",n,t,e),a=I("kernelSize",n,t,e);return[s.maxPool(I("x",n,t,e),[a[1],a[2]],[r[1],r[2]],o)]}case"MaxPoolWithArgmax":{const r=I("strides",n,t,e),o=I("pad",n,t,e),a=I("kernelSize",n,t,e),i=I("includeBatchInIndex",n,t,e),{result:u,indexes:c}=s.maxPoolWithArgmax(I("x",n,t,e),[a[1],a[2]],[r[1],r[2]],o,i);return[u,c]}case"AvgPool3D":{const r=I("strides",n,t,e),o=I("pad",n,t,e),a=I("kernelSize",n,t,e);return[s.avgPool3d(I("x",n,t,e),[a[1],a[2],a[3]],[r[1],r[2],r[3]],o)]}case"MaxPool3D":{const r=I("strides",n,t,e),o=I("pad",n,t,e),a=I("kernelSize",n,t,e);return[s.maxPool3d(I("x",n,t,e),[a[1],a[2],a[3]],[r[1],r[2],r[3]],o)]}case"Dilation2D":{const r=I("strides",n,t,e),o=I("pad",n,t,e),a=I("dilations",n,t,e),i=r[1],u=r[2],c=a[1],l=a[2];return[s.dilation2d(I("x",n,t,e),I("filter",n,t,e),[i,u],o,[c,l],"NHWC")]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ySt=(n,t,e,s=Zn)=>{switch(n.op){case"Fill":{const r=I("shape",n,t,e),o=I("dtype",n,t,e),a=I("value",n,t,e);return[s.fill(r,a,o)]}case"LinSpace":{const r=I("start",n,t,e),o=I("stop",n,t,e),a=I("num",n,t,e);return[s.linspace(r,o,a)]}case"Multinomial":{const r=I("logits",n,t,e),o=I("numSamples",n,t,e),a=I("seed",n,t,e);return[s.multinomial(r,o,a)]}case"OneHot":{const r=I("indices",n,t,e),o=I("depth",n,t,e),a=I("onValue",n,t,e),i=I("offValue",n,t,e),u=I("dtype",n,t,e);return[s.oneHot(r,o,a,i,u)]}case"Ones":return[s.ones(I("shape",n,t,e),I("dtype",n,t,e))];case"OnesLike":return[s.onesLike(I("x",n,t,e))];case"RandomStandardNormal":return[s.randomStandardNormal(I("shape",n,t,e),I("dtype",n,t,e),I("seed",n,t,e))];case"RandomUniform":return[s.randomUniform(I("shape",n,t,e),I("minval",n,t,e),I("maxval",n,t,e),I("dtype",n,t,e))];case"Range":{const r=I("start",n,t,e),o=I("stop",n,t,e),a=I("step",n,t,e);return[s.range(r,o,a,I("dtype",n,t,e))]}case"TruncatedNormal":{const r=I("shape",n,t,e),o=I("mean",n,t,e),a=I("stdDev",n,t,e),i=I("seed",n,t,e);return[s.truncatedNormal(r,o,a,I("dtype",n,t,e),i)]}case"Zeros":return[s.zeros(I("shape",n,t,e),I("dtype",n,t,e))];case"ZerosLike":return[s.zerosLike(I("x",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fb(n,t,e){const s=I("boxes",n,t,e),r=I("scores",n,t,e),o=I("maxOutputSize",n,t,e),a=I("iouThreshold",n,t,e),i=I("scoreThreshold",n,t,e),u=I("softNmsSigma",n,t,e);return{boxes:s,scores:r,maxOutputSize:o,iouThreshold:a,scoreThreshold:i,softNmsSigma:u}}const bSt=async(n,t,e,s,r=Zn)=>{switch(n.op){case"NonMaxSuppressionV5":{const{boxes:o,scores:a,maxOutputSize:i,iouThreshold:u,scoreThreshold:c,softNmsSigma:l}=Fb(n,t,e),d=await r.image.nonMaxSuppressionWithScoreAsync(o,a,i,u,c,l);return[d.selectedIndices,d.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:o,scores:a,maxOutputSize:i,iouThreshold:u,scoreThreshold:c}=Fb(n,t,e),l=I("padToMaxOutputSize",n,t,e),d=await r.image.nonMaxSuppressionPaddedAsync(o,a,i,u,c,l);return[d.selectedIndices,d.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:o,scores:a,maxOutputSize:i,iouThreshold:u,scoreThreshold:c}=Fb(n,t,e);return[await r.image.nonMaxSuppressionAsync(o,a,i,u,c)]}case"Where":{const o=r.cast(I("condition",n,t,e),"bool"),a=[await r.whereAsync(o)];return o.dispose(),a}case"ListDiff":return r.setdiff1dAsync(I("x",n,t,e),I("y",n,t,e));default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xSt=(n,t,e,s=Zn)=>{switch(n.op){case"LowerBound":{const r=I("sortedSequence",n,t,e),o=I("values",n,t,e);return[s.lowerBound(r,o)]}case"TopKV2":{const r=I("x",n,t,e),o=I("k",n,t,e),a=I("sorted",n,t,e),i=s.topk(r,o,a);return[i.values,i.indices]}case"UpperBound":{const r=I("sortedSequence",n,t,e),o=I("values",n,t,e);return[s.upperBound(r,o)]}case"Unique":{const r=I("x",n,t,e),o=s.unique(r);return[o.values,o.indices]}case"UniqueV2":{const r=I("x",n,t,e),o=I("axis",n,t,e),a=s.unique(r,o);return[a.values,a.indices]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wSt=(n,t,e,s=Zn)=>{switch(n.op){case"Const":return t[n.name];case"PlaceholderWithDefault":const r=I("default",n,t,e);return[os(n.name,t,e)||r];case"Placeholder":return[os(n.name,t,e)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{const l=I("x",n,t,e);return[To(l)]}case"IdentityN":return I("x",n,t,e).map(l=>To(l));case"Snapshot":const o=I("x",n,t,e);return[To(o)];case"Shape":return[s.tensor1d(I("x",n,t,e).shape,"int32")];case"ShapeN":return I("x",n,t,e).map(l=>s.tensor1d(l.shape));case"Size":return[s.scalar(I("x",n,t,e).size,"int32")];case"Rank":return[s.scalar(I("x",n,t,e).rank,"int32")];case"NoOp":return[s.scalar(1)];case"Print":const a=I("x",n,t,e),i=I("data",n,t,e),u=I("message",n,t,e),c=I("summarize",n,t,e);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(u);for(let l=0;l<i.length;l++)console.log(Array.prototype.slice.call(i[l].dataSync()).slice(0,c));return[a];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vSt{constructor(t,e){this.keyDType=t,this.valueDType=e,this.handle=Ne(0),this.tensorMap=new Map,ba(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(t=>t.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Ne(this.size(),"int32")}async import(t,e){this.checkKeyAndValueTensor(t,e);const s=await t.data();return this.tensorMap.forEach(r=>r.dispose()),this.tensorMap.clear(),Rr(()=>{const r=du(e),o=s.length,a=r.length;L(o===a,()=>`The number of elements doesn't match, keys has ${o} elements, the values has ${a} elements.`);for(let i=0;i<o;i++){const u=s[i],c=r[i];ba(c),this.tensorMap.set(u,c)}return this.handle})}async find(t,e){this.checkKeyAndValueTensor(t,e);const s=await t.data();return Rr(()=>{const r=[];for(let o=0;o<s.length;o++){const a=s[o],i=this.findWithDefault(a,e);r.push(i)}return Jo(r)})}findWithDefault(t,e){const s=this.tensorMap.get(t);return s??e}checkKeyAndValueTensor(t,e){if(t.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${t.dtype}`);if(e.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${e.dtype}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ISt=async(n,t,e,s)=>{switch(n.op){case"HashTable":case"HashTableV2":{const r=I("keyDType",n,t,e),o=I("valueDType",n,t,e),a=new vSt(r,o);return s.addHashTable(n.name,a),[a.handle]}case"LookupTableImport":case"LookupTableImportV2":{const r=I("tableHandle",n,t,e,s),o=I("keys",n,t,e),a=I("values",n,t,e);return[await s.getHashTableById(r.id).import(o,a)]}case"LookupTableFind":case"LookupTableFindV2":{const r=I("tableHandle",n,t,e,s),o=I("keys",n,t,e),a=I("defaultValue",n,t,e);return[await s.getHashTableById(r.id).find(o,a)]}case"LookupTableSize":case"LookupTableSizeV2":{const r=I("tableHandle",n,t,e,s);return[s.getHashTableById(r.id).tensorSize()]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kSt=(n,t,e,s=Zn)=>{switch(n.op){case"ResizeBilinear":{const r=I("images",n,t,e),o=I("size",n,t,e),a=I("alignCorners",n,t,e),i=I("halfPixelCenters",n,t,e);return[s.image.resizeBilinear(r,[o[0],o[1]],a,i)]}case"ResizeNearestNeighbor":{const r=I("images",n,t,e),o=I("size",n,t,e),a=I("alignCorners",n,t,e),i=I("halfPixelCenters",n,t,e);return[s.image.resizeNearestNeighbor(r,[o[0],o[1]],a,i)]}case"CropAndResize":{const r=I("image",n,t,e),o=I("boxes",n,t,e),a=I("boxInd",n,t,e),i=I("cropSize",n,t,e),u=I("method",n,t,e),c=I("extrapolationValue",n,t,e);return[s.image.cropAndResize(r,o,a,i,u,c)]}case"ImageProjectiveTransformV3":{const r=I("images",n,t,e),o=I("transforms",n,t,e),a=I("outputShape",n,t,e),i=I("fillValue",n,t,e),u=I("interpolation",n,t,e),c=I("fillMode",n,t,e);return[s.image.transform(r,o,u.toLowerCase(),c.toLowerCase(),i,a)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $St=(n,t,e,s=Zn)=>{switch(n.op){case"Equal":return[s.equal(I("a",n,t,e),I("b",n,t,e))];case"NotEqual":return[s.notEqual(I("a",n,t,e),I("b",n,t,e))];case"Greater":return[s.greater(I("a",n,t,e),I("b",n,t,e))];case"GreaterEqual":return[s.greaterEqual(I("a",n,t,e),I("b",n,t,e))];case"Less":return[s.less(I("a",n,t,e),I("b",n,t,e))];case"LessEqual":return[s.lessEqual(I("a",n,t,e),I("b",n,t,e))];case"LogicalAnd":return[s.logicalAnd(I("a",n,t,e),I("b",n,t,e))];case"LogicalNot":return[s.logicalNot(I("a",n,t,e))];case"LogicalOr":return[s.logicalOr(I("a",n,t,e),I("b",n,t,e))];case"Select":case"SelectV2":return[s.where(I("condition",n,t,e),I("a",n,t,e),I("b",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SSt=(n,t,e,s=Zn)=>{switch(n.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[s.matMul(I("a",n,t,e),I("b",n,t,e),I("transposeA",n,t,e),I("transposeB",n,t,e))];case"Einsum":return[s.einsum(I("equation",n,t,e),...I("tensors",n,t,e))];case"Transpose":return[s.transpose(I("x",n,t,e),I("perm",n,t,e))];case"_FusedMatMul":const[r,o]=I("fusedOps",n,t,e),a=r==="biasadd",i=o==="prelu",u=I("numArgs",n,t,e),c=I("leakyreluAlpha",n,t,e);if(a){if(i&&u!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&u!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[l,d]=I("args",n,t,e);return[s.fused.matMul({a:I("a",n,t,e),b:I("b",n,t,e),transposeA:I("transposeA",n,t,e),transposeB:I("transposeB",n,t,e),bias:l,activation:o,preluActivationWeights:d,leakyreluAlpha:c})];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NSt=(n,t,e,s=Zn)=>{switch(n.op){case"EuclideanNorm":return[s.euclideanNorm(I("x",n,t,e),I("axis",n,t,e),I("keepDims",n,t,e))];case"FusedBatchNorm":case"FusedBatchNormV2":return[s.batchNorm(I("x",n,t,e),I("mean",n,t,e),I("variance",n,t,e),I("offset",n,t,e),I("scale",n,t,e),I("epsilon",n,t,e))];case"FusedBatchNormV3":return[s.batchNorm(I("x",n,t,e),I("mean",n,t,e),I("variance",n,t,e),I("offset",n,t,e),I("scale",n,t,e),I("epsilon",n,t,e))];case"LRN":return[s.localResponseNormalization(I("x",n,t,e),I("radius",n,t,e),I("bias",n,t,e),I("alpha",n,t,e),I("beta",n,t,e))];case"Softmax":return[s.softmax(I("x",n,t,e))];case"LogSoftmax":return[s.logSoftmax(I("x",n,t,e))];case"SparseToDense":return[s.sparseToDense(I("sparseIndices",n,t,e),I("outputShape",n,t,e),I("sparseValues",n,t,e),I("defaultValue",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CSt=(n,t,e,s=Zn)=>{switch(n.op){case"Max":{const i=I("axis",n,t,e),u=I("keepDims",n,t,e);return[s.max(I("x",n,t,e),i,u)]}case"Mean":{const i=I("axis",n,t,e),u=I("keepDims",n,t,e);return[s.mean(I("x",n,t,e),i,u)]}case"Min":{const i=I("axis",n,t,e),u=I("keepDims",n,t,e);return[s.min(I("x",n,t,e),i,u)]}case"Sum":{const i=I("axis",n,t,e),u=I("keepDims",n,t,e);return[s.sum(I("x",n,t,e),i,u)]}case"All":{const i=I("axis",n,t,e),u=I("keepDims",n,t,e);return[s.all(I("x",n,t,e),i,u)]}case"Any":{const i=I("axis",n,t,e),u=I("keepDims",n,t,e);return[s.any(I("x",n,t,e),i,u)]}case"ArgMax":{const i=I("axis",n,t,e);return[s.argMax(I("x",n,t,e),i)]}case"ArgMin":{const i=I("axis",n,t,e);return[s.argMin(I("x",n,t,e),i)]}case"Prod":{const i=I("axis",n,t,e),u=I("keepDims",n,t,e);return[s.prod(I("x",n,t,e),i,u)]}case"Cumprod":{const i=I("axis",n,t,e),u=I("exclusive",n,t,e),c=I("reverse",n,t,e);return[s.cumprod(I("x",n,t,e),i,u,c)]}case"Cumsum":{const i=I("axis",n,t,e),u=I("exclusive",n,t,e),c=I("reverse",n,t,e);return[s.cumsum(I("x",n,t,e),i,u,c)]}case"Bincount":const r=I("x",n,t,e),o=I("weights",n,t,e),a=I("size",n,t,e);return[s.bincount(r,o,a)];case"DenseBincount":{const i=I("x",n,t,e),u=I("weights",n,t,e),c=I("size",n,t,e),l=I("binaryOutput",n,t,e);return[s.denseBincount(i,u,c,l)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _St=(n,t,e,s=Zn)=>{switch(n.op){case"ConcatV2":case"Concat":{const r=I("n",n,t,e),o=I("axis",n,t,e);let a=I("tensors",n,t,e);return a=a.slice(0,r),[s.concat(a,o)]}case"Gather":{const r=I("x",n,t,e),o=I("indices",n,t,e);return[s.gather(r,s.cast(o,"int32"),0)]}case"GatherV2":{const r=I("axis",n,t,e),o=I("batchDims",n,t,e),a=I("x",n,t,e),i=I("indices",n,t,e);return[s.gather(a,s.cast(i,"int32"),r,o)]}case"Reverse":{const r=I("dims",n,t,e),o=[];for(let i=0;i<r.length;i++)r[i]&&o.push(i);const a=I("x",n,t,e);return[s.reverse(a,o)]}case"ReverseV2":{const r=I("axis",n,t,e),o=I("x",n,t,e);return[s.reverse(o,r)]}case"Slice":{const r=I("begin",n,t,e),o=I("size",n,t,e);return[s.slice(I("x",n,t,e),r,o)]}case"StridedSlice":{const r=I("begin",n,t,e),o=I("end",n,t,e),a=I("strides",n,t,e),i=I("beginMask",n,t,e),u=I("endMask",n,t,e),c=I("ellipsisMask",n,t,e),l=I("newAxisMask",n,t,e),d=I("shrinkAxisMask",n,t,e),h=I("x",n,t,e);return[s.stridedSlice(h,r,o,a,i,u,c,l,d)]}case"Pack":return Rr(()=>{const r=I("axis",n,t,e),o=I("tensors",n,t,e),a=o[0].shape,i=s.squeeze(o[0]).shape,u=o.map(c=>{const l=La(c.shape,a);if(!l&&!La(s.squeeze(c).shape,i))throw new Error("the input tensors shape does not match");return l?c:s.reshape(c,a)});return[s.stack(u,r)]});case"Unpack":{const r=I("axis",n,t,e),o=I("tensor",n,t,e);return s.unstack(o,r)}case"Tile":{const r=I("reps",n,t,e);return[s.tile(I("x",n,t,e),r)]}case"Split":case"SplitV":{const r=I("axis",n,t,e),o=I("numOrSizeSplits",n,t,e),a=I("x",n,t,e);return s.split(a,o,r)}case"ScatterNd":{const r=I("indices",n,t,e),o=I("values",n,t,e),a=I("shape",n,t,e);return[s.scatterND(r,o,a)]}case"GatherNd":{const r=I("x",n,t,e),o=I("indices",n,t,e);return[s.gatherND(r,o)]}case"SparseToDense":{const r=I("sparseIndices",n,t,e),o=I("outputShape",n,t,e),a=I("sparseValues",n,t,e),i=I("defaultValue",n,t,e);return[s.sparseToDense(r,a,o,a.dtype===i.dtype?i:s.cast(i,a.dtype))]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TSt=(n,t,e,s=Zn)=>{switch(n.op){case"SparseFillEmptyRows":{const{outputIndices:r,outputValues:o,emptyRowIndicator:a,reverseIndexMap:i}=s.sparse.sparseFillEmptyRows(I("indices",n,t,e),I("values",n,t,e),I("denseShape",n,t,e),I("defaultValue",n,t,e));return[r,o,a,i]}case"SparseReshape":{const{outputIndices:r,outputShape:o}=s.sparse.sparseReshape(I("inputIndices",n,t,e),I("inputShape",n,t,e),I("newShape",n,t,e));return[r,o]}case"SparseSegmentMean":return[s.sparse.sparseSegmentMean(I("data",n,t,e),I("indices",n,t,e),I("segmentIds",n,t,e))];case"SparseSegmentSum":return[s.sparse.sparseSegmentSum(I("data",n,t,e),I("indices",n,t,e),I("segmentIds",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ESt=(n,t,e,s=Zn)=>{switch(n.op){case"FFT":return[s.fft(I("x",n,t,e))];case"IFFT":return[s.ifft(I("x",n,t,e))];case"RFFT":return[s.rfft(I("x",n,t,e))];case"IRFFT":return[s.irfft(I("x",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ASt=(n,t,e,s=Zn)=>{switch(n.op){case"StringNGrams":{const{nGrams:r,nGramsSplits:o}=s.string.stringNGrams(I("data",n,t,e),I("dataSplits",n,t,e),I("separator",n,t,e),I("nGramWidths",n,t,e),I("leftPad",n,t,e),I("rightPad",n,t,e),I("padWidth",n,t,e),I("preserveShortSequences",n,t,e));return[r,o]}case"StringSplit":{const{indices:r,values:o,shape:a}=s.string.stringSplit(I("input",n,t,e),I("delimiter",n,t,e),I("skipEmpty",n,t,e));return[r,o,a]}case"StringToHashBucketFast":return[s.string.stringToHashBucketFast(I("input",n,t,e),I("numBuckets",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DSt=(n,t,e,s=Zn)=>{switch(n.op){case"Cast":return[s.cast(I("x",n,t,e),I("dtype",n,t,e))];case"ExpandDims":{const r=I("axis",n,t,e);return[s.expandDims(I("x",n,t,e),r)]}case"Squeeze":{const r=I("axis",n,t,e);return[s.squeeze(I("x",n,t,e),r)]}case"Reshape":return[s.reshape(I("x",n,t,e),I("shape",n,t,e))];case"MirrorPad":return[s.mirrorPad(I("x",n,t,e),I("padding",n,t,e),I("mode",n,t,e))];case"PadV2":case"Pad":return[s.pad(I("x",n,t,e),I("padding",n,t,e),I("constantValue",n,t,e))];case"SpaceToBatchND":{const r=I("blockShape",n,t,e),o=I("paddings",n,t,e);return[s.spaceToBatchND(I("x",n,t,e),r,o)]}case"BatchToSpaceND":{const r=I("blockShape",n,t,e),o=I("crops",n,t,e);return[s.batchToSpaceND(I("x",n,t,e),r,o)]}case"DepthToSpace":{const r=I("blockSize",n,t,e),o=I("dataFormat",n,t,e).toUpperCase();return[s.depthToSpace(I("x",n,t,e),r,o)]}case"BroadcastTo":return[s.broadcastTo(I("x",n,t,e),I("shape",n,t,e))];case"BroadcastArgs":return[s.broadcastArgs(I("s0",n,t,e),I("s1",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K$(n,t,e,s,r=Rr){const o=((a,i,u)=>{switch(a.category){case"arithmetic":return r(()=>uSt(a,i,u));case"basic_math":return r(()=>lSt(a,i,u));case"control":return mSt(a,i,u);case"convolution":return r(()=>gSt(a,i,u));case"creation":return r(()=>ySt(a,i,u));case"dynamic":return bSt(a,i,u);case"evaluation":return r(()=>xSt(a,i,u));case"image":return r(()=>kSt(a,i,u));case"graph":return r(()=>wSt(a,i,u));case"logical":return r(()=>$St(a,i,u));case"matrices":return r(()=>SSt(a,i,u));case"normalization":return r(()=>NSt(a,i,u));case"reduction":return r(()=>CSt(a,i,u));case"slice_join":return r(()=>_St(a,i,u));case"sparse":return r(()=>TSt(a,i,u));case"spectral":return r(()=>ESt(a,i,u));case"string":return r(()=>ASt(a,i,u));case"transformation":return r(()=>DSt(a,i,u));case"hash_table":return ISt(a,i,u,s);case"custom":const c=lF(a.op);if(c&&c.customExecutor)return c.customExecutor(new iSt(a,i,u));throw TypeError(`Custom op ${a.op} is not registered.`);default:throw TypeError(`Unknown op '${a.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(n,t,e);return ll(o)?o.then(a=>[].concat(a)):[].concat(o)}class X${constructor(t={},e={},s={},r={}){this.weightMap=t,this.tensorArrayMap=e,this.tensorListMap=s,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(t,e){return{id:t,frameName:e,iterationId:0}}set currentContext(t){this.contexts!==t&&(this.contexts=t,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const t=[];for(let e=0;e<this.contexts.length-1;e++){const s=this.contexts.slice(0,this.contexts.length-e);t.push(this.contextIdforContexts(s))}t.push(""),this._currentContextIds=t}contextIdforContexts(t){return t?t.map(e=>e.id===0&&e.iterationId===0?"":`${e.frameName}-${e.iterationId}`).join("/"):""}enterFrame(t){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,t)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;const t=Object.assign({},this.contexts[this.contexts.length-1]);t.iterationId+=1,t.id=this.lastId,this.contexts.splice(-1,1,t),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(t){return this.weightMap[t]}addTensorArray(t){this.tensorArrayMap[t.id]=t}getTensorArray(t){return this.tensorArrayMap[t]}addTensorList(t){this.tensorListMap[t.id]=t}getTensorList(t){return this.tensorListMap[t]}dispose(t){for(const e in this.tensorArrayMap)this.tensorArrayMap[e].clearAndClose(t);for(const e in this.tensorListMap)this.tensorListMap[e].clearAndClose(t)}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y$(n,t,e,s){const r=new Set,o=[];let a=null,i=null;const u=new Set,c=Object.keys(n).map(h=>Es(h)[0]);let l=[];s!=null&&(l=s.map(h=>Es(h.name)[0]));const d=[...t];for(;d.length>0;){const h=d.pop();if((hF(h)||LSt(h)||MSt(h))&&a==null&&(a=h,i=a.children.map(p=>p.name).filter(p=>r.has(p))),r.add(h.name),e[h.name]==null&&c.indexOf(h.name)===-1&&l.indexOf(h.name)===-1){if(h.inputs.length===0){o.push(h.name);continue}h.inputs.forEach(p=>{u.has(p.name)||(u.add(p.name),d.push(p))})}}return{inputs:n,outputs:t,usedNodes:r,missingInputs:o,dynamicNode:a,syncInputs:i}}function RSt(n,t,e){const{usedNodes:s,inputs:r}=e,o=[],a=Object.keys(r).map(l=>Es(l)[0]).map(l=>n.nodes[l]),i=n.initNodes;a.forEach(l=>{s.has(l.name)&&o.push(l)}),n.weights.forEach(l=>{s.has(l.name)&&o.push(l)}),i!=null&&i.forEach(l=>{s.has(l.name)&&o.push(l)});const u=new Set,c=[];for(;o.length>0;){const l=o.pop();u.add(l.name),t[l.name]||c.push(l),l.children.forEach(d=>{!u.has(d.name)&&s.has(d.name)&&d.inputs.every(h=>u.has(h.name))&&o.push(d)})}return c}const FSt=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],OSt=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],PSt=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function hF(n){return FSt.indexOf(n.op)>=0}function LSt(n){return OSt.indexOf(n.op)>=0}function MSt(n){return PSt.indexOf(n.op)>=0}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Um{constructor(t,e){this.graph=t,this.parent=e,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this.intermediateTensors={},this.keepTensorForDebug=!1,this._outputs=t.outputs,this._inputs=t.inputs,this._initNodes=t.initNodes,this._signature=t.signature,this._functions=t.functions,t.functions!=null&&Object.keys(t.functions).forEach(s=>{this._functionExecutorMap[s]=new Um(t.functions[s],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(t){const e=Object.keys(t).map(s=>t[s].map(r=>r.id));this._weightIds=[].concat(...e),this._weightMap=t}set resourceManager(t){this._resourceManager=t}get inputs(){return this._inputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(t=>t.signatureKey||t.name)}get outputNodes(){return this._outputs.map(t=>{const e=t.signatureKey||t.name;return t.defaultOutput?`${e}:${t.defaultOutput}`:e})}get functions(){return Object.keys(this._functions).reduce((t,e)=>(t[e]=this._functions[e].signature,t),{})}getCompilationKey(t,e){const s=t.map(o=>o.name).sort(),r=e.map(o=>o.name).sort();return s.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(t,e){const s=Y$(t,e,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:o,syncInputs:a}=s;if(o!=null)throw new Error(`This execution contains the node '${o.name}', which has the dynamic op '${o.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(r.length>0){const i=e.map(c=>c.name),u=Object.keys(t);throw new Error(`Cannot compute the outputs [${i}] from the provided inputs [${u}]. Missing the following inputs: [${r}]`)}return RSt(this.graph,this.weightMap,s)}execute(t,e){t=this.mapInputs(t);const s=Object.keys(t).sort();this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e);const r=s.map(d=>this.graph.nodes[Es(d)[0]]),o=e.map(d=>Es(d)[0]);let a=o.map(d=>this.graph.nodes[d]);this.resetIntermediateTensors(),a.length===0&&(a=this._outputs);const i=this.getCompilationKey(r,a);let u=this.compiledMap.get(i);u==null&&(u=this.compile(t,a),this.compiledMap.set(i,u));const c={},l={};return Rr(()=>{const d=new X$(this.weightMap,c,l,this.functionExecutorMap),h=Object.assign({},this.weightMap);Object.keys(t).forEach(m=>{const[g,y]=Es(m),b=[];b[y]=t[m],h[g]=b});const p=this.getFrozenTensorIds(h),f={};for(let m=0;m<u.length;m++){const g=u[m];if(!h[g.name]){const y=K$(g,h,d,this._resourceManager);if(ll(y))throw new Error(`The execution of the op '${g.op}' returned a promise. Please use model.executeAsync() instead.`);h[g.name]=y,this.checkTensorForDisposal(g.name,g,h,d,p,o,f)}}return this.parent==null&&d.dispose(p),e.map(m=>os(m,h,d))})}getFrozenTensorIds(t){const e=[].concat.apply([],Object.keys(t).map(s=>t[s]).map(s=>s.map(r=>r.id)));return new Set(e)}checkTensorForDisposal(t,e,s,r,o,a,i){e.category==="control"||a.indexOf(t)!==-1||(s[t].forEach(u=>{u!=null&&(i[u.id]=(i[u.id]||0)+e.children.length)}),e.inputs.forEach(u=>{if(u.category!=="control"){const c=v$t(u.name,s,r);c!=null&&c.forEach(l=>{if(l&&!l.kept&&!o.has(l.id)){const d=i[l.id];if(d===1){if(!this.keepTensorForDebug)l.dispose();else{const[h,p]=eo(e.name,r);this.intermediateTensors[h]?this.intermediateTensors[h][p]=l:(this.intermediateTensors[h]=[],this.intermediateTensors[h][p]=l)}delete i[l.id]}else d!=null&&i[l.id]--}})}}))}async executeAsync(t,e){return this._executeAsync(t,e)}disposeIntermediateTensors(){this.intermediateTensors&&(Object.keys(this.intermediateTensors).forEach(t=>this.intermediateTensors[t].forEach(e=>e.dispose())),this.disposeTensorsMap())}disposeTensorsMap(){this.tensorsMap&&Object.keys(this.tensorsMap).forEach(t=>{this.tensorsMap[t].forEach(s=>{s&&!s.kept&&!s.isDisposed&&!this.keepIds.has(s.id)&&s.dispose()})})}getIntermediateTensors(){return this.tensorsMap}resetIntermediateTensors(){for(const t in this.intermediateTensors)this.intermediateTensors[t].forEach(e=>e.dispose()),delete this.intermediateTensors[t]}async _executeAsync(t,e,s=!1,r={},o={}){s||(t=this.mapInputs(t),this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e));try{this.keepTensorForDebug=he().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(l){console.warn(l.message)}this.resetIntermediateTensors();const a=new X$(this.weightMap,r,o,this.functionExecutorMap);this.tensorsMap=await this.executeWithControlFlow(t,a,e,s);const i=e.map(l=>os(l,this.tensorsMap,a)),u=i.map(l=>l.id),c=Object.keys(t).map(l=>t[l].id);return this.keepIds=new Set([...u,...c,...this.weightIds]),this.keepTensorForDebug||this.disposeTensorsMap(),this.parent==null&&a.dispose(this.keepIds),i}async executeFunctionAsync(t,e,s){const r=t.reduce((o,a,i)=>(o[this.inputs[i].name]=a,o),{});return this._executeAsync(r,this.outputNodes,!0,e,s)}async executeWithControlFlow(t,e,s,r){const o=Object.keys(t),a=o.map(x=>this.graph.nodes[Es(x)[0]]),i=s.map(x=>Es(x)[0]);let u=i.map(x=>this.graph.nodes[x]);u.length===0&&(u=this._outputs);const{usedNodes:c,missingInputs:l,dynamicNode:d,syncInputs:h}=Y$(t,u,this.weightMap,this._initNodes),p=[...a,...this.graph.weights,...this._initNodes||[]].map(x=>({node:x,contexts:e.currentContext})),f=Object.assign({},this.weightMap);Object.keys(t).forEach(x=>{const[w,v]=Es(x),k=[];k[v]=t[x],f[w]=k});const m={},g=this.getFrozenTensorIds(f),y={};for(;p.length>0;){const x=this.processStack(a,p,e,f,y,g,i,m,c);await Promise.all(x)}d==null&&!r&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const b=u.filter(x=>!hF(x)&&!os(x.name,f,e)).map(x=>x.name);if(b.length>0){let x="";throw d!=null&&(x=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${h}]`),new Error(`Cannot compute the outputs [${b}] from the provided inputs [${o}]. Consider providing the following inputs: [${l}]. ${x}`)}return f}processStack(t,e,s,r,o,a,i,u,c){const l=[];for(;e.length>0;){const d=e.pop();s.currentContext=d.contexts;let h="";if(d.node.op==="Enter"&&I("isConstant",d.node,r,s)&&([h]=eo(d.node.name,s)),r[d.node.name]==null){const p=K$(d.node,r,s,this._resourceManager);h||([h]=eo(d.node.name,s));const f=s.currentContext;ll(p)?l.push(p.then(m=>(r[h]=m,s.currentContext=f,this.checkTensorForDisposal(h,d.node,r,s,a,i,u),this.processChildNodes(d.node,e,s,r,o,c),m))):(r[h]=p,this.checkTensorForDisposal(h,d.node,r,s,a,i,u),this.processChildNodes(d.node,e,s,r,o,c))}else this.processChildNodes(d.node,e,s,r,o,c)}return l}processChildNodes(t,e,s,r,o,a){t.children.forEach(i=>{const[u]=eo(i.name,s);o[u]||!a.has(i.name)||(i.op==="Merge"?i.inputNames.some(c=>!!os(c,r,s))&&(o[u]=!0,e.push({contexts:s.currentContext,node:i})):i.inputNames.every(c=>!!os(c,r,s))&&(o[u]=!0,e.push({contexts:s.currentContext,node:i})))})}dispose(){Object.keys(this.weightMap).forEach(t=>this.weightMap[t].forEach(e=>e.dispose()))}checkInputShapeAndType(t){Object.keys(t).forEach(e=>{const s=t[e],[r]=Es(e),o=this.graph.nodes[r];if(o.attrParams.shape&&o.attrParams.shape.value){const a=o.attrParams.shape.value,i=a.length===s.shape.length&&s.shape.every((u,c)=>a[c]===-1||a[c]===u);L(i,()=>`The shape of dict['${o.name}'] provided in model.execute(dict) must be [${a}], but was [${s.shape}]`)}o.attrParams.dtype&&o.attrParams.dtype.value&&L(s.dtype===o.attrParams.dtype.value,()=>`The dtype of dict['${o.name}'] provided in model.execute(dict) must be ${o.attrParams.dtype.value}, but was ${s.dtype}`)})}mapInputs(t){const e={};for(const s in t)if(this._signature!=null&&this._signature.inputs!=null&&this._signature.inputs[s]!=null){const r=this._signature.inputs[s];e[r.name]=t[s]}else e[s]=t[s];return e}checkInputs(t){const e=Object.keys(t).filter(s=>{const[r]=Es(s);return this.graph.nodes[r]==null});if(e.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${e}] that are not part of graph`)}mapOutputs(t){return t.map(e=>this._signature!=null&&this._signature.outputs!=null&&this._signature.outputs[e]!=null?this._signature.outputs[e].name:e,{})}checkOutputs(t){t.forEach(e=>{const[s]=Es(e);if(!this.graph.nodes[s])throw new Error(`The output '${e}' is not found in the graph`)})}}class BSt{constructor(t={},e={}){this.hashTableNameToHandle=t,this.hashTableMap=e}addHashTable(t,e){this.hashTableNameToHandle[t]=e.handle,this.hashTableMap[e.id]=e}getHashTableHandleByName(t){return this.hashTableNameToHandle[t]}getHashTableById(t){return this.hashTableMap[t]}dispose(){for(const t in this.hashTableMap)this.hashTableMap[t].clearAndClose(),delete this.hashTableMap[t];for(const t in this.hashTableNameToHandle)this.hashTableNameToHandle[t].dispose(),delete this.hashTableNameToHandle[t]}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zSt="?tfjs-format=file",VSt="model.json";class WSt{constructor(t,e={},s=_R){this.modelUrl=t,this.loadOptions=e,this.version="n/a",this.io=s,e==null&&(this.loadOptions={}),this.resourceManager=new BSt}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}findIOHandler(){const t=this.modelUrl;if(t.load!=null)this.handler=t;else if(this.loadOptions.requestInit!=null)this.handler=this.io.browserHTTPRequest(t,this.loadOptions);else{const e=this.io.getLoadHandlers(t,this.loadOptions);if(e.length===0)e.push(this.io.browserHTTPRequest(t,this.loadOptions));else if(e.length>1)throw new Error(`Found more than one (${e.length}) load handlers for URL '${[t]}'`);this.handler=e[0]}}load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const t=this.handler.load();return ll(t)?t.then(e=>this.loadSync(e)):this.loadSync(t)}loadSync(t){this.artifacts=t;const e=this.artifacts.modelTopology;let s=this.artifacts.signature;if(this.artifacts.userDefinedMetadata!=null){const o=this.artifacts.userDefinedMetadata;o.signature!=null&&(s=o.signature),o.structuredOutputKeys!=null&&(this.structuredOutputKeys=o.structuredOutputKeys)}this.signature=s,this.version=`${e.versions.producer}.${e.versions.minConsumer}`;const r=this.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new Um(G$.Instance.transformGraph(e,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,t.modelInitializer!=null&&t.modelInitializer.node!=null){const o=G$.Instance.transformGraph(t.modelInitializer);this.initializer=new Um(o),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(t,e){if(typeof t=="string"){const s=this.io.getSaveHandlers(t);if(s.length===0)throw new Error(`Cannot find any save handlers for URL '${t}'`);if(s.length>1)throw new Error(`Found more than one (${s.length}) save handlers for URL '${t}'`);t=s[0]}if(t.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return t.save(this.artifacts)}predict(t,e){const s=this.execute(t,this.outputNodes);if(this.structuredOutputKeys){const r=s instanceof Gn?[s]:s,o={};return r.forEach((a,i)=>o[this.structuredOutputKeys[i]]=a),o}return s}normalizeInputs(t){if(!(t instanceof Gn)&&!Array.isArray(t))return t;if(t=Array.isArray(t)?t:[t],t.length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${t.length} input tensors.`);return this.inputNodes.reduce((e,s,r)=>(e[s]=t[r],e),{})}normalizeOutputs(t){return t=t||this.outputNodes,Array.isArray(t)?t:[t]}execute(t,e){t=this.normalizeInputs(t),e=this.normalizeOutputs(e);const s=this.executor.execute(t,e);return s.length>1?s:s[0]}async executeAsync(t,e){t=this.normalizeInputs(t),e=this.normalizeOutputs(e);const s=await this.executor.executeAsync(t,e);return s.length>1?s:s[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(t){return Object.keys(t).reduce((e,s)=>(e[s]=[t[s]],e),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}async function J$(n,t={},e=_R){if(n==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");t==null&&(t={}),t.fromTFHub&&typeof n=="string"&&(n=USt(n));const s=new WSt(n,t,e);return await s.load(),s}function USt(n){return n.endsWith("/")||(n=n+"/"),`${n}${VSt}${zSt}`}/**
    * @license
    * Copyright 2021 Google LLC. All Rights Reserved.
    * Licensed under the Apache License, Version 2.0 (the "License");
    * you may not use this file except in compliance with the License.
    * You may obtain a copy of the License at
    *
    * http://www.apache.org/licenses/LICENSE-2.0
    *
    * Unless required by applicable law or agreed to in writing, software
    * distributed under the License is distributed on an "AS IS" BASIS,
    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    * See the License for the specific language governing permissions and
    * limitations under the License.
    * =============================================================================
    */function Sd(n,t,e,s){return new(e||(e=Promise))(function(r,o){function a(c){try{u(s.next(c))}catch(l){o(l)}}function i(c){try{u(s.throw(c))}catch(l){o(l)}}function u(c){var l;c.done?r(c.value):(l=c.value,l instanceof e?l:new e(function(d){d(l)})).then(a,i)}u((s=s.apply(n,[])).next())})}function Nd(n,t){var e,s,r,o,a={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return o={next:i(0),throw:i(1),return:i(2)},typeof Symbol=="function"&&(o[Symbol.iterator]=function(){return this}),o;function i(u){return function(c){return function(l){if(e)throw new TypeError("Generator is already executing.");for(;a;)try{if(e=1,s&&(r=2&l[0]?s.return:l[0]?s.throw||((r=s.return)&&r.call(s),0):s.next)&&!(r=r.call(s,l[1])).done)return r;switch(s=0,r&&(l=[2&l[0],r.value]),l[0]){case 0:case 1:r=l;break;case 4:return a.label++,{value:l[1],done:!1};case 5:a.label++,s=l[1],l=[0];continue;case 7:l=a.ops.pop(),a.trys.pop();continue;default:if(!(r=(r=a.trys).length>0&&r[r.length-1])&&(l[0]===6||l[0]===2)){a=0;continue}if(l[0]===3&&(!r||l[1]>r[0]&&l[1]<r[3])){a.label=l[1];break}if(l[0]===6&&a.label<r[1]){a.label=r[1],r=l;break}if(r&&a.label<r[2]){a.label=r[2],a.ops.push(l);break}r[2]&&a.ops.pop(),a.trys.pop();continue}l=t.call(n,a)}catch(d){l=[6,d],s=0}finally{e=r=0}if(5&l[0])throw l[1];return{value:l[0]?l[1]:void 0,done:!0}}([u,c])}}}var pF=function(n){for(var t=[],e=0,s=n;e<s.length;e++){var r=s[e];t.push(r)}return t},Z$=function(){return function(){this.parent=null,this.children={},this.end=!1,this.word=[[],0,0]}}(),GSt=function(){function n(){this.root=new Z$}return n.prototype.insert=function(t,e,s){for(var r=this.root,o=pF(t),a=0;a<o.length;a++)r.children[o[a]]||(r.children[o[a]]=new Z$,r.children[o[a]].parent=r,r.children[o[a]].word[0]=r.word[0].concat(o[a])),r=r.children[o[a]],a===o.length-1&&(r.end=!0,r.word[1]=e,r.word[2]=s)},n.prototype.commonPrefixSearch=function(t){for(var e=[],s=this.root.children[t[0]],r=0;r<t.length&&s;r++)s.end&&e.push(s.word),s=s.children[t[r+1]];return e.length||e.push([[t[0]],0,0]),e},n}(),Q$="▁";function HSt(n){var t=n.normalize("NFKC");return t.length>0?Q$+t.replace(/ /g,Q$):t}var jSt=6,qSt=function(){function n(t,e){e===void 0&&(e=jSt),this.vocabulary=t,this.reservedSymbolsCount=e,this.trie=new GSt;for(var s=this.reservedSymbolsCount;s<this.vocabulary.length;s++)this.trie.insert(this.vocabulary[s][0],this.vocabulary[s][1],s)}return n.prototype.encode=function(t){var e=[],s=[],r=[];t=HSt(t);for(var o=pF(t),a=0;a<=o.length;a++)e.push({}),s.push(0),r.push(0);for(a=0;a<o.length;a++)for(var i=this.trie.commonPrefixSearch(o.slice(a)),u=0;u<i.length;u++){var c=i[u],l={key:c[0],score:c[1],index:c[2]};e[a+(d=c[0].length)][a]==null&&(e[a+d][a]=[]),e[a+d][a].push(l)}for(var d=0;d<=o.length;d++)for(var h in e[d]){var p=e[d][h];for(u=0;u<p.length;u++){var f=p[u],m=f.score+r[d-f.key.length];(r[d]===0||m>=r[d])&&(r[d]=m,s[d]=p[u].index)}}for(var g=[],y=s.length-1;y>0;)g.push(s[y]),y-=this.vocabulary[s[y]][0].length;var b=[],x=!1;for(a=0;a<g.length;a++){var w=g[a];x&&w===0||b.push(w),x=w===0}return b.reverse()},n}();function KSt(n){return Sd(this,void 0,void 0,function(){return Nd(this,function(t){switch(t.label){case 0:return[4,$yt(n)];case 1:return[2,t.sent().json()]}})})}var XSt="https://storage.googleapis.com/tfjs-models/savedmodel/universal_sentence_encoder";function YSt(n){return Sd(this,void 0,void 0,function(){var t;return Nd(this,function(e){switch(e.label){case 0:return[4,(t=new JSt).load(n)];case 1:return e.sent(),[2,t]}})})}var JSt=function(){function n(){}return n.prototype.loadModel=function(t){return Sd(this,void 0,void 0,function(){return Nd(this,function(e){return[2,t?J$(t):J$("https://tfhub.dev/tensorflow/tfjs-model/universal-sentence-encoder-lite/1/default/1",{fromTFHub:!0})]})})},n.prototype.load=function(t){return t===void 0&&(t={}),Sd(this,void 0,void 0,function(){var e,s,r;return Nd(this,function(o){switch(o.label){case 0:return[4,Promise.all([this.loadModel(t.modelUrl),KSt(t.vocabUrl||XSt+"/vocab.json")])];case 1:return e=o.sent(),s=e[0],r=e[1],this.model=s,this.tokenizer=new qSt(r),[2]}})})},n.prototype.embed=function(t){return Sd(this,void 0,void 0,function(){var e,s,r,o,a,i,u,c,l=this;return Nd(this,function(d){switch(d.label){case 0:for(typeof t=="string"&&(t=[t]),e=t.map(function(h){return l.tokenizer.encode(h)}),s=e.map(function(h,p){return h.map(function(f,m){return[p,m]})}),r=[],o=0;o<s.length;o++)r=r.concat(s[o]);return a=zu(r,[r.length,2],"int32"),i=hr(tf(e),"int32"),u={indices:a,values:i},[4,this.model.executeAsync(u)];case 1:return c=d.sent(),a.dispose(),i.dispose(),[2,c]}})})},n}();function ZSt(n,t){let e;return function(...r){const o=()=>{clearTimeout(e),n(...r)};clearTimeout(e),e=setTimeout(o,t)}}var QSt=(n,t)=>gt(t,""),tNt=$n('<button class="absolute inset-y-0 right-2 flex items-center"><!></button>'),eNt=$n('<div class="flex items-center space-x-2 text-xs text-blue-500 dark:text-blue-400 mt-1"><div class="animate-spin h-3 w-3 border border-blue-500 dark:border-blue-400 rounded-full border-t-transparent"></div> <span> </span></div>'),nNt=(n,t,e)=>gt(t,J(e),!0),sNt=$n("<button> </button>"),rNt=$n('<div class="flex space-x-1 overflow-x-auto mb-2 pb-1 no-scrollbar svelte-w672m3"></div>'),oNt=(n,t,e)=>t(J(e)),aNt=$n('<button class="w-8 h-8 text-lg rounded hover:bg-gray-200 dark:hover:bg-gray-600 hover:scale-110 active:scale-95 transition"> </button>'),iNt=$n('<div class="grid grid-cols-6 sm:grid-cols-8 gap-1"></div>'),uNt=$n('<div class="flex justify-center items-center h-full"><div class="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-500 dark:border-blue-400"></div></div>'),lNt=(n,t,e)=>t(e),cNt=$n('<button class="w-8 h-8 text-lg rounded hover:bg-gray-200 dark:hover:bg-gray-600 hover:scale-110 active:scale-95 transition"> </button>'),dNt=$n('<div class="text-center py-6"><p class="text-sm text-gray-500 dark:text-gray-400"> </p> <div class="mt-3 grid grid-cols-8 gap-1 max-w-xs mx-auto"></div> <p class="text-xs text-gray-500 dark:text-gray-400 mt-2">Try these popular emojis instead</p></div>'),hNt=(n,t,e)=>t(J(e)),pNt=$n('<button class="w-8 h-8 text-lg rounded hover:bg-gray-200 dark:hover:bg-gray-600 hover:scale-110 active:scale-95 transition"> </button>'),fNt=$n('<div class="mb-3"><p class="text-xs font-medium text-gray-500 dark:text-gray-400 uppercase mb-1">Recent</p> <div class="grid grid-cols-6 sm:grid-cols-8 gap-1"></div></div>'),mNt=(n,t,e)=>t(J(e)),gNt=$n('<button class="w-8 h-8 text-lg rounded hover:bg-gray-200 dark:hover:bg-gray-600 hover:scale-110 active:scale-95 transition"> </button>'),yNt=$n('<!> <div><p class="text-xs font-medium text-gray-500 dark:text-gray-400 uppercase mb-1"> </p> <div class="grid grid-cols-6 sm:grid-cols-8 gap-1"></div></div>',1),bNt=$n('<div class="flex items-center mb-4"><div class="flex items-center justify-center w-12 h-12 rounded-full bg-gray-100 dark:bg-gray-800 mr-3"><!></div> <div class="flex flex-col"><h4 class="text-base font-semibold text-gray-900 dark:text-white">Pick an emoji</h4> <p class="text-sm text-gray-500 dark:text-gray-400"> </p></div></div> <!> <div class="relative mb-3"><div class="relative"><input type="text" class="w-full px-3 py-2 pl-9 text-sm bg-gray-100 dark:bg-gray-700 text-gray-900 dark:text-white rounded-lg focus:ring-2 focus:ring-blue-500 outline-none placeholder:text-gray-400 dark:placeholder:text-gray-400"/> <div class="absolute inset-y-0 left-2 flex items-center pointer-events-none"><!></div> <!></div> <!></div> <!> <div class="h-56 overflow-y-auto custom-scrollbar svelte-w672m3"><!></div> <div class="mt-3 pt-2 border-t border-gray-200 dark:border-gray-700 text-center"><p class="text-xs text-gray-500 dark:text-gray-400"> </p></div>',1),xNt=$n("<!> <!>",1);function wNt(n,t){rn(t,!0);const e=w3();vt(t,"className",3,"");let s=Xt(ys(["😀","👍","❤️","😂","🎉","👋","🔥","💯"])),r=Xt("Smileys & People"),o=Xt(""),a=Xt(""),i=Xt(ys([])),u,c=null,l=Xt(!0),d=Xt(!1),h=Xt(!1),p=null,f=new Map,m=Xt(!1);async function g(){try{await VI("wasm"),await WI(),gt(m,!0),console.log("WASM backend initialized")}catch(P){console.warn("WASM backend failed, falling back to default:",P),await VI("webgl"),await WI()}}const y=Object.values(mf).flat(),b={};y.forEach(P=>{b[P]=WM[P]||[P]});const x={happy:["😀","😃","😄","😁","🙂","😊"],sad:["😢","😭","😞","😔","😟","🥺"],angry:["😠","😡","🤬","👿","💢"],love:["❤️","💕","😍","🥰","💗","💓"],laugh:["😂","🤣","😆","😅","😹"],cool:["😎","🆒","👍","🤙"],party:["🎉","🎊","🥳","🎈","🎆"],food:["🍕","🍔","🍟","🌮","🍣","🍩"],animal:["🐶","🐱","🦁","🐼","🦊","🐢"]},w={"Smileys & People":"😀","Animals & Nature":"🐶","Food & Drink":"🍎",Activity:"⚽","Travel & Places":"🚗",Objects:"💻",Symbols:"❤️",Flags:"🏁"},v=Object.entries(b).map(([P,U])=>({emoji:P,terms:U.join(" ").toLowerCase()})),k=new Map;v.forEach(({emoji:P,terms:U})=>{U.split(/\s+/).forEach(tt=>{k.has(tt)||k.set(tt,[]),k.get(tt).push(P)})});async function S(){try{await g(),c=await YSt(),await _(),gt(l,!1)}catch(P){console.error("Error loading TensorFlow model:",P),gt(l,!1)}}async function _(){const U=[];for(let tt=0;tt<v.length;tt+=100)U.push(v.slice(tt,tt+100));const Z=[];for(const tt of U){const at=tt.map(ct=>ct.terms),ot=await c.embed(at),lt=await ot.array();Z.push(...lt),ot.dispose()}p=Vf(Z)}function C(P){if(!P)return[];P=P.toLowerCase().trim();for(const[Z,tt]of Object.entries(x))if(Z.includes(P)||P.includes(Z))return tt;const U=new Set;return k.forEach((Z,tt)=>{(tt.startsWith(P)||P.startsWith(tt))&&Z.forEach(at=>U.add(at))}),Array.from(U).slice(0,24)}const N=ZSt(async()=>{await $(J(o))},300);On(()=>{if(gt(a,J(o),!0),!J(o).trim()){gt(i,[],!0);return}if(f.has(J(o))){gt(i,f.get(J(o)),!0);return}const P=C(J(o));P.length>0&&gt(i,P,!0),N()});async function $(P){if(!P.trim()){gt(i,[],!0);return}const U=P.toLowerCase().trim();if(f.has(U)){gt(i,f.get(U),!0);return}if(gt(h,!0),c&&p)try{const Z=await c.embed(U),tt=Q(()=>ge(Z,p.transpose()).dataSync()),ot=v.map((lt,ct)=>({emoji:lt.emoji,score:tt[ct]})).sort((lt,ct)=>ct.score-lt.score).filter(lt=>lt.score>.15).slice(0,30).map(lt=>lt.emoji);ot.length===0?A(U):(gt(i,ot,!0),f.set(U,ot))}catch(Z){console.error("Error during NLP search:",Z),A(U)}finally{gt(h,!1)}else A(U)}function A(P){const U=new Set;Object.entries(b).forEach(([Z,tt])=>{tt.some(at=>at.toLowerCase().includes(P)||P.includes(at.toLowerCase()))&&U.add(Z)}),U.size===0&&Object.entries(b).forEach(([Z,tt])=>{for(const at of tt)at.toLowerCase().split(" ").some(lt=>lt.includes(P)||P.includes(lt))&&U.add(Z)}),U.size===0&&["😀","👍","❤️","🎉","👋","💪","🙏","🤔"].forEach(tt=>U.add(tt)),gt(i,Array.from(U),!0),gt(h,!1),f.set(P,J(i))}function D(P){gt(s,[P,...J(s).filter(U=>U!==P)].slice(0,8),!0),e("emoji",P)}function R(P){P.key==="Escape"&&(gt(o,""),u==null||u.blur())}function F(){gt(d,window.innerWidth<640)}US(()=>(S(),u==null||u.focus(),F(),window.addEventListener("resize",F),()=>{window.removeEventListener("resize",F),p&&p.dispose()}));var z=ye();JO("keydown",Lb,R);var H=ne(z);td(H,()=>LM,(P,U)=>{U(P,{children:(Z,tt)=>{var at=xNt(),ot=ne(at);td(ot,()=>PM,(ct,bt)=>{bt(ct,{class:"inline-flex items-center justify-center p-2 text-2xl text-gray-600 dark:text-gray-300 bg-white/40 dark:bg-gray-800/40 rounded-full shadow hover:bg-white/60 hover:dark:bg-gray-700/60 backdrop-blur transition-all",children:(Nt,xt)=>{_I(Nt,{class:"w-5 h-5"})},$$slots:{default:!0}})});var lt=Dn(ot,2);td(lt,()=>yP,(ct,bt)=>{bt(ct,{children:(Nt,xt)=>{var Ct=ye(),zt=ne(Ct);const Wt=qt(()=>J(d)?"bottom":"right"),Jt=qt(()=>J(d)?5:12),ue=qt(()=>J(d)?"center":"start");td(zt,()=>FM,(se,ee)=>{ee(se,{class:"z-50 w-[90vw] max-w-[420px] sm:w-[320px] rounded-xl p-4 border border-gray-200 dark:border-gray-700 shadow-lg bg-white/60 dark:bg-gray-900/60 backdrop-blur-xl",get side(){return J(Wt)},get sideOffset(){return J(Jt)},get align(){return J(ue)},children:(Vt,ve)=>{var me=bNt(),zn=ne(me),Ee=$e(zn),Qn=$e(Ee);_I(Qn,{class:"w-6 h-6 text-gray-600 dark:text-gray-200"});var mn=Dn(Ee,2),Ns=Dn($e(mn),2),Vn=$e(Ns),ts=Dn(zn,2);td(ts,()=>vM,(le,Qe)=>{Qe(le,{class:"h-px bg-gray-300 dark:bg-gray-700 mb-3"})});var ds=Dn(ts,2),ln=$e(ds),cn=$e(ln);m3(cn,le=>u=le,()=>u);var tr=Dn(cn,2),$o=$e(tr);zM($o,{class:"w-4 h-4 text-gray-400 dark:text-gray-500"});var Bs=Dn(tr,2);{var ti=le=>{var Qe=tNt();Qe.__click=[QSt,o];var nt=$e(Qe);VM(nt,{class:"w-4 h-4 text-gray-400 dark:text-gray-500 hover:text-gray-600 dark:hover:text-gray-300"}),Ot(le,Qe)};Rn(Bs,le=>{J(o)&&le(ti)})}var er=Dn(ln,2);{var jr=le=>{var Qe=eNt(),nt=Dn($e(Qe),2),dt=$e(nt);ps(()=>Xr(dt,J(l)?"Loading intelligent search...":"Finding more emojis...")),Ot(le,Qe)};Rn(er,le=>{(J(l)||J(h))&&J(o)&&le(jr)})}var dn=Dn(ds,2);{var hu=le=>{var Qe=rNt();$u(Qe,21,()=>Object.keys(mf),ku,(nt,dt)=>{var _t=sNt();_t.__click=[nNt,r,dt];var ft=$e(_t);ps(()=>{MS(_t,1,`flex items-center justify-center min-w-10 h-10 text-lg rounded-md hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors
              ${J(r)===J(dt)?"bg-blue-100 dark:bg-blue-800/40 text-blue-700 dark:text-blue-300":"text-gray-700 dark:text-gray-300"}`),em(_t,"title",J(dt)),Xr(ft,w[J(dt)])}),Ot(nt,_t)}),Ot(le,Qe)};Rn(dn,le=>{J(o).trim()||le(hu)})}var ei=Dn(dn,2),pu=$e(ei);{var fu=le=>{var Qe=ye(),nt=ne(Qe);{var dt=ft=>{var ce=iNt();$u(ce,21,()=>J(i),ku,(Ie,Pt)=>{var At=aNt();At.__click=[oNt,D,Pt];var de=$e(At);ps(()=>Xr(de,J(Pt))),Ot(Ie,At)}),Ot(ft,ce)},_t=(ft,ce)=>{{var Ie=At=>{var de=uNt();Ot(At,de)},Pt=At=>{var de=dNt(),gn=$e(de),Cs=$e(gn),qr=Dn(gn,2);$u(qr,20,()=>["😀","👍","❤️","😂","🎉","👋","🔥","💯"],ku,(No,ni)=>{var hn=cNt();hn.__click=[lNt,D,ni];var Kr=$e(hn);ps(()=>Xr(Kr,ni)),Ot(No,hn)}),ps(()=>Xr(Cs,`No matches found for "${J(o)??""}"`)),Ot(At,de)};Rn(ft,At=>{J(h)||J(l)?At(Ie):At(Pt,!1)},ce)}};Rn(nt,ft=>{J(i).length>0?ft(dt):ft(_t,!1)})}Ot(le,Qe)},xr=le=>{var Qe=yNt(),nt=ne(Qe);{var dt=Pt=>{var At=fNt(),de=Dn($e(At),2);$u(de,21,()=>J(s),ku,(gn,Cs)=>{var qr=pNt();qr.__click=[hNt,D,Cs];var No=$e(qr);ps(()=>Xr(No,J(Cs))),Ot(gn,qr)}),Ot(Pt,At)};Rn(nt,Pt=>{J(s).length>0&&Pt(dt)})}var _t=Dn(nt,2),ft=$e(_t),ce=$e(ft),Ie=Dn(ft,2);$u(Ie,21,()=>mf[J(r)],ku,(Pt,At)=>{var de=gNt();de.__click=[mNt,D,At];var gn=$e(de);ps(()=>Xr(gn,J(At))),Ot(Pt,de)}),ps(()=>Xr(ce,J(r))),Ot(le,Qe)};Rn(pu,le=>{J(o).trim()?le(fu):le(xr,!1)})}var na=Dn(ei,2),mu=$e(na),So=$e(mu);ps(le=>{Xr(Vn,J(m)?"Supercharged TBM AI with WASM":"Make it expressive"),em(cn,"placeholder",J(l)?"Loading smart search...":"Search emojis by description..."),Xr(So,le)},[()=>J(o).trim()?`${J(i).length} emojis found`:`${mf[J(r)].length} emojis`]),f3(cn,()=>J(o),le=>gt(o,le)),Ot(Vt,me)},$$slots:{default:!0}})}),Ot(Nt,Ct)},$$slots:{default:!0}})}),Ot(Z,at)},$$slots:{default:!0}})}),Ot(n,z),on()}FS(["click"]);PS(wNt,{target:document.getElementById("app")});
